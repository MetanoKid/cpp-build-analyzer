Decorated function name;Undecorated function name;Average elapsed time (nanoseconds);Minimum elapsed time (nanoseconds);Maximum elapsed time (nanoseconds);Standard deviation (nanoseconds);Occurrences
??$_Emplace_reallocate@AEBQEAVTimelineEntry@@@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAAPEAPEAVTimelineEntry@@QEAPEAV2@AEBQEAV2@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Emplace_reallocate<class TimelineEntry * __ptr64 const & __ptr64>(class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 const & __ptr64) __ptr64;139687250;1609300;277765200;138077950;2
??0?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@rapidjson@@QEAA@W4Type@1@PEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@_KPEAVCrtAllocator@1@@Z;__cdecl rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>(enum rapidjson::Type,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> * __ptr64,unsigned __int64,class rapidjson::CrtAllocator * __ptr64) __ptr64;110817000;110817000;110817000;0;1
?ExportTo@FileInclusionTimesExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl FileInclusionTimesExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;85890100;85890100;85890100;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ;class std::allocator<wchar_t> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<wchar_t>,class std::_String_val<struct std::_Simple_types<wchar_t> >,1>::_Get_first(void) __ptr64;83478900;83478900;83478900;0;1
?do_max_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_max_length(void)const __ptr64;72220900;72220900;72220900;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_;61669000;61669000;61669000;0;1
?ExportTo@FileInclusionGraphExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl FileInclusionGraphExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;59931400;59931400;59931400;0;1
?ScanWriteUnescapedString@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NAEAU?$GenericStringStream@U?$UTF8@D@rapidjson@@@2@_K@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::ScanWriteUnescapedString(struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > & __ptr64,unsigned __int64) __ptr64;57326000;57326000;57326000;0;1
?Peek@?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@QEBADXZ;char __cdecl rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >::Peek(void)const __ptr64;56475700;56475700;56475700;0;1
?dtoa@internal@rapidjson@@YAPEADNPEADH@Z;char * __ptr64 __cdecl rapidjson::internal::dtoa(double,char * __ptr64,int);54181800;54181800;54181800;0;1
_vfprintf_l;_vfprintf_l;44944900;44944900;44944900;0;1
__local_stdio_printf_options;__local_stdio_printf_options;44789500;44789500;44789500;0;1
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z;void __cdecl std::time_get<char,class std::istreambuf_iterator<char,struct std::char_traits<char> > >::_Getvals<wchar_t>(wchar_t,class std::_Locinfo const & __ptr64) __ptr64;44414300;1326100;87502500;43088200;2
main;main;43282100;43282100;43282100;0;1
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z;char & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned __int64) __ptr64;37939100;564800;75313400;37374300;2
?UndecorateFunction@CppBuildInsightsDataConversion@Utilities@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl Utilities::CppBuildInsightsDataConversion::UndecorateFunction(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);33001000;33001000;33001000;0;1
?WideStringToString@CppBuildInsightsDataConversion@Utilities@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_W@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl Utilities::CppBuildInsightsDataConversion::WideStringToString(wchar_t const * __ptr64);32387400;32387400;32387400;0;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildI;29574000;29574000;29574000;0;1
??$get@$0A@$$QEAPEBD@std@@YA$$QEAPEBD$$QEAV?$tuple@$$QEAPEBD@0@@Z;??$get@$0A@$$QEAPEBD@std@@YA$$QEAPEBD$$QEAV?$tuple@$$QEAPEBD@0@@Z;25983650;249700;51717600;25733950;2
?parse@ParseResult@cxxopts@@AEAAXAEAHAEAPEAPEAD@Z;void __cdecl cxxopts::ParseResult::parse(int & __ptr64,char * __ptr64 * __ptr64 & __ptr64) __ptr64;25014700;25014700;25014700;0;1
??DDiyFp@internal@rapidjson@@QEBA?AU012@AEBU012@@Z;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::DiyFp::operator*(struct rapidjson::internal::DiyFp const & __ptr64)const __ptr64;20617200;20617200;20617200;0;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Forced_rehash(unsigned __int64) __ptr64;20033200;20033200;20033200;0;1
??$forward@AEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64);19483150;231600;38734700;19251550;2
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;__cdecl std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,0>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;17963225;327600;70784900;30496613;4
??0?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@QEAA@_K@Z;__cdecl std::codecvt_utf8<wchar_t,1114111,0>::codecvt_utf8<wchar_t,1114111,0>(unsigned __int64) __ptr64;17378000;17378000;17378000;0;1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const * __ptr64 const,unsigned __int64) __ptr64;13717185;554800;92559700;32187332;7
?AddChild@TimelineEntry@@QEAAXPEAV1@@Z;void __cdecl TimelineEntry::AddChild(class TimelineEntry * __ptr64) __ptr64;13660800;13660800;13660800;0;1
?AddEntry@?A0x9a8b7bf0@@YAXPEBVTimelineEntry@@AEAV?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAV?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@4@AEBV?$unordered_map@_KUProcessThreadRemap@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@@std@@AEBV?$unordered_set@_KU?$hash@_K@std@@U?$equal_to@_K@2@V?$allocator@_K@2@@7@@Z;void __cdecl `anonymous namespace'::AddEntry(class TimelineEntry const * __ptr64,class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,class rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator> & __ptr64,class std::unordered_map<unsigned __int64,struct ProcessThreadRemap,struct std::hash<unsigned __int64>,struct std::equa;13116300;13116300;13116300;0;1
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ;char const * __ptr64 __cdecl std::_String_val<struct std::_Simple_types<char> >::_Myptr(void)const __ptr64;13085700;302700;92202400;31150836;14
?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z;unsigned __int64 * __ptr64 __cdecl std::allocator<unsigned __int64>::allocate(unsigned __int64) __ptr64;11918700;11918700;11918700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vect;11561700;11561700;11561700;0;1
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Construct_lv_contents(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;11280562;734800;84533500;27687054;8
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,str;10921100;412000;21430200;10509100;2
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z;static class std::allocator<char> __cdecl std::_Default_allocator_traits<class std::allocator<char> >::select_on_container_copy_construction(class std::allocator<char> const & __ptr64);10739962;174500;84478000;27870362;8
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z;wchar_t * __ptr64 __cdecl std::_Maklocstr<wchar_t>(char const * __ptr64,wchar_t * __ptr64,struct _Cvtvec const & __ptr64);10595500;1243100;19947900;9352400;2
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Forced_rehash(unsigned __int64) __ptr64;10571450;2443500;18699400;8127950;2
?_Do_rep0@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NPEAV_Node_rep@2@_N@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Do_rep0(class std::_Node_rep * __ptr64,bool) __ptr64;10360600;10360600;10360600;0;1
?_Match_pat@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NPEAV_Node_base@2@@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Match_pat(class std::_Node_base * __ptr64) __ptr64;10103100;10103100;10103100;0;1
?format_description@?A0xe8409837@cxxopts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBUHelpOptionDetails@2@_K1@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::`anonymous namespace'::format_description(struct cxxopts::HelpOptionDetails const & __ptr64,unsigned __int64,unsigned __int64);9898500;9898500;9898500;0;1
??2@YAPEAX_KPEAX@Z;void * __ptr64 __cdecl operator new(unsigned __int64,void * __ptr64);9886794;207600;89488000;27283727;18
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<wchar_t> >::_Bxty::~_Bxty(void) __ptr64;9489200;9489200;9489200;0;1
??0?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@QEAA@XZ;__cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >(void) __ptr64;9415900;9415900;9415900;0;1
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z;void __cdecl std::time_get<wchar_t,class std::istreambuf_iterator<wchar_t,struct std::char_traits<wchar_t> > >::_Getvals<wchar_t>(wchar_t,class std::_Locinfo const & __ptr64) __ptr64;9384000;810300;17957700;8573700;2
??$?0V?$allocator@PEAVTimelineEntry@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVTimelineEntry@@@1@@Z;??$?0V?$allocator@PEAVTimelineEntry@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVTimelineEntry@@@1@@Z;9283100;9283100;9283100;0;1
??$construct@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@@?$_Default_allocator_traits@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@SAXAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@$$QEAPEBU31@@Z;??$construct@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@@?$_Default_allocator_traits@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@SAXAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationDat;9226200;9226200;9226200;0;1
??$forward@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@AEAV10@@Z;9158200;237300;18079100;8920900;2
??0locale@std@@QEAA@XZ;__cdecl std::locale::locale(void) __ptr64;9150100;277600;18022600;8872500;2
?format_option@?A0xe8409837@cxxopts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBUHelpOptionDetails@2@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::`anonymous namespace'::format_option(struct cxxopts::HelpOptionDetails const & __ptr64);9058000;9058000;9058000;0;1
??$_Partition_by_median_guess_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YA?AU?$pair@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@0@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;struct std::pair<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64> __cdecl std::_Partition_by_median_guess_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cons;8877100;8877100;8877100;0;1
?ExportTo@FileCompilationsExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl FileCompilationsExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;8737400;8737400;8737400;0;1
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ;__cdecl std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >(void) __ptr64;8434900;8434900;8434900;0;1
?help_one_group@Options@cxxopts@@AEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::Options::help_one_group(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;8162100;8162100;8162100;0;1
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<16>(unsigned __int64);8058894;263000;69892400;21849490;18
?_Maklocwcs@std@@YAPEA_WPEB_W@Z;wchar_t * __ptr64 __cdecl std::_Maklocwcs(wchar_t const * __ptr64);8019950;547600;15492300;7472350;2
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z;char * __ptr64 __cdecl std::_Maklocstr<char>(char const * __ptr64,char * __ptr64,struct _Cvtvec const & __ptr64);7957000;657800;15256200;7299200;2
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;7623200;7623200;7623200;0;1
?__empty_global_delete@@YAXPEAX@Z;void __cdecl __empty_global_delete(void * __ptr64);6950257;176400;87354100;22314880;14
?_Match_pat@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NPEAV_Node_base@2@@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Match_pat(class std::_Node_base * __ptr64) __ptr64;6833100;6833100;6833100;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::_Orphan_non_end(void) __ptr64;6672200;6672200;6672200;0;1
?ExportTo@TemplateInstantiationsExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl TemplateInstantiationsExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;6584000;6584000;6584000;0;1
?__empty_global_delete@@YAXPEAX_K@Z;void __cdecl __empty_global_delete(void * __ptr64,unsigned __int64);6571407;182500;87362200;22411168;14
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::_List_node_emplace_op2<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > ><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::allocator<struct std::_List_no;6487000;6487000;6487000;0;1
??$_Emplace_back_with_unused_capacity@AEBK@?$vector@KV?$allocator@K@std@@@std@@AEAA@AEBK@Z;__cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Emplace_back_with_unused_capacity<unsigned long const & __ptr64>(unsigned long const & __ptr64) __ptr64;6482300;6482300;6482300;0;1
??0BuildAnalyzer@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBUAnalysisOptions@0@@Z;__cdecl BuildAnalyzer::BuildAnalyzer(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,struct BuildAnalyzer::AnalysisOptions const & __ptr64) __ptr64;6274800;6274800;6274800;0;1
??0BuildTimelineExporter@@QEAA@AEBVBuildTimeline@@AEBV?$unordered_set@_KU?$hash@_K@std@@U?$equal_to@_K@2@V?$allocator@_K@2@@std@@@Z;__cdecl BuildTimelineExporter::BuildTimelineExporter(class BuildTimeline const & __ptr64,class std::unordered_set<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<unsigned __int64> > const & __ptr64) __ptr64;5940500;5940500;5940500;0;1
??$get@$0A@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@YAAEAULocalThreadData@PackedProcessThreadRemapper@@$$QEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@0@@Z;??$get@$0A@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@YAAEAULocalThreadData@PackedProcessThreadRemapper@@$$QEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@0@@Z;5937800;5937800;5937800;0;1
??0?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(void) __ptr64;5752900;5752900;5752900;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ;class std::allocator<char> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<char>,class std::_String_val<struct std::_Simple_types<char> >,1>::_Get_first(void) __ptr64;5655831;220200;80785600;19453009;16
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::_Allocate(void) __ptr64;5483600;304400;10662800;5179200;2
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@XZ;class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> >,class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >,1>::_Get_first(void) __;5428400;5428400;5428400;0;1
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ;bool __cdecl std::_String_val<struct std::_Simple_types<char> >::_Large_string_engaged(void)const __ptr64;5222106;213300;79857500;19270805;16
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;5023007;280000;56428600;14904342;13
?_Get_first@?$_Compressed_pair@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UDataPerFile@?A0x120c265a@@@2@XZ;class std::allocator<struct `anonymous namespace'::DataPerFile> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct `anonymous namespace'::DataPerFile>,class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> >,1>::_Get_first(void)const __ptr64;4859700;4859700;4859700;0;1
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_trait;4742700;4742700;4742700;0;1
?u32toa@internal@rapidjson@@YAPEADIPEAD@Z;char * __ptr64 __cdecl rapidjson::internal::u32toa(unsigned int,char * __ptr64);4700800;4700800;4700800;0;1
?CalculateChildrenRawLocalThreadId@PackedProcessThreadRemapper@@AEAAXPEBVTimelineEntry@@@Z;void __cdecl PackedProcessThreadRemapper::CalculateChildrenRawLocalThreadId(class TimelineEntry const * __ptr64) __ptr64;4622600;4622600;4622600;0;1
?CalculateChildrenRequiredThreadIdToFitHierarchy@PackedProcessThreadRemapper@@AEAAXPEBVTimelineEntry@@@Z;void __cdecl PackedProcessThreadRemapper::CalculateChildrenRequiredThreadIdToFitHierarchy(class TimelineEntry const * __ptr64) __ptr64;4567300;4567300;4567300;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > >(void) __ptr64;4461700;4461700;4461700;0;1
?CalculateRootProcessIdRemappings@PackedProcessThreadRemapper@@AEAAXPEBVBuildTimeline@@@Z;void __cdecl PackedProcessThreadRemapper::CalculateRootProcessIdRemappings(class BuildTimeline const * __ptr64) __ptr64;4422500;4422500;4422500;0;1
?ExportTo@FunctionCompilationsExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl FunctionCompilationsExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;4381800;4381800;4381800;0;1
??0BuildTimelineAnalyzer@@QEAA@XZ;__cdecl BuildTimelineAnalyzer::BuildTimelineAnalyzer(void) __ptr64;4301800;4301800;4301800;0;1
?u64toa@internal@rapidjson@@YAPEAD_KPEAD@Z;char * __ptr64 __cdecl rapidjson::internal::u64toa(unsigned __int64,char * __ptr64);4240500;4240500;4240500;0;1
?ExportTemplateInstantiationsData@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportTemplateInstantiationsData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;4230400;4230400;4230400;0;1
__JustMyCode_Default;__JustMyCode_Default;4202895;312500;69617100;14284284;22
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z;void __cdecl std::_Deallocate<16,0>(void * __ptr64,unsigned __int64);4164733;279800;69553600;15859163;18
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<c;4142800;4142800;4142800;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<cha;4097150;271900;7922400;3825250;2
??0_Iterator_base12@std@@QEAA@AEBU01@@Z;__cdecl std::_Iterator_base12::_Iterator_base12(struct std::_Iterator_base12 const & __ptr64) __ptr64;4043645;236900;41593000;11874260;11
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<uns;3962450;259000;7665900;3703450;2
?ExportTo@BuildTimelineExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildTimelineExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;3916700;3916700;3916700;0;1
??0_Iterator_base12@std@@QEAA@XZ;__cdecl std::_Iterator_base12::_Iterator_base12(void) __ptr64;3868726;214500;54677500;13579230;15
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z;struct std::_Container_proxy * __ptr64 __cdecl std::addressof<struct std::_Container_proxy>(struct std::_Container_proxy & __ptr64);3867472;197100;65395400;14922954;18
??$forward@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;3756850;213400;14335400;6107540;4
??$exchange@_KAEB_K@std@@YA_KAEA_KAEB_K@Z;unsigned __int64 __cdecl std::exchange<unsigned __int64,unsigned __int64 const & __ptr64>(unsigned __int64 & __ptr64,unsigned __int64 const & __ptr64);3729850;268900;7190800;3460950;2
??$_Partition_by_median_guess_unchecked@PEAUDataPerFile@?A0x120c265a@@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YA?AU?$pair@PEAUDataPerFile@?A0x120c265a@@PEAU12@@0@PEAUDataPerFile@?A0x120c265a@@0V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;struct std::pair<struct `anonymous namespace'::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64> __cdecl std::_Partition_by_median_guess_unchecked<struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44> >(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44>);3702000;3702000;3702000;0;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::_Allocate(void) __ptr64;3587350;415800;6758900;3171550;2
?_Get_max_bucket_size@?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAMXZ;float & __ptr64 __cdecl std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Get_max_bucket_size(void) __ptr64;3582900;212800;20307700;7479574;6
??$TranscodeUnsafe@U?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@2@@?$Transcoder@U?$UTF8@D@rapidjson@@U12@@rapidjson@@SA_NAEAU?$GenericStringStream@U?$UTF8@D@rapidjson@@@1@AEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@1@@Z;static bool __cdecl rapidjson::Transcoder<struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char> >::TranscodeUnsafe<struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > >(struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > & __ptr64,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64);3525800;3525800;3525800;0;1
?_Do_class@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NPEAV_Node_base@2@@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Do_class(class std::_Node_base * __ptr64) __ptr64;3432800;3432800;3432800;0;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::cha;3398200;2716700;4079700;681500;2
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Forced_rehash(unsigned __int64) __ptr64;3332000;3332000;3332000;0;1
??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z;__cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000000> >::duration<__int64,struct std::ratio<1,1000000000> ><__int64,0>(__int64 const & __ptr64) __ptr64;3312940;249900;30477000;9054958;10
?OnFrontEndFile@BuildTimelineAnalyzer@@AEAAXAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnFrontEndFile(class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile const & __ptr64) __ptr64;3294700;3294700;3294700;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cl;3253400;3253400;3253400;0;1
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ;__cdecl std::_Compressed_pair<class std::allocator<char>,class std::_String_val<struct std::_Simple_types<char> >,1>::~_Compressed_pair<class std::allocator<char>,class std::_String_val<struct std::_Simple_types<char> >,1>(void) __ptr64;3245531;187500;48549900;11697565;16
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z;class std::codecvt<char,char,struct _Mbstatet> const & __ptr64 __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class std::locale const & __ptr64);3220716;1235900;12320200;4077654;6
??$_Compare@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@V?$regex_traits@D@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@000AEBV?$regex_traits@D@0@W4syntax_option_type@regex_constants@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Compare<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::regex_traits<char> >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<;3207200;3207200;3207200;0;1
??$Decode@U?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@@?$UTF8@D@rapidjson@@SA_NAEAU?$GenericStringStream@U?$UTF8@D@rapidjson@@@1@PEAI@Z;static bool __cdecl rapidjson::UTF8<char>::Decode<struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > >(struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > & __ptr64,unsigned int * __ptr64);3187200;3187200;3187200;0;1
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct s;3182650;476600;5888700;2706050;2
?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z;unsigned __int64 __cdecl std::vector<bool,class std::allocator<bool> >::_Insert_x(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,unsigned __int64) __ptr64;3157700;3157700;3157700;0;1
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z;class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64);3111233;2628400;4302300;549572;6
??1FileInclusionTimesExporter@@QEAA@XZ;__cdecl FileInclusionTimesExporter::~FileInclusionTimesExporter(void) __ptr64;3100500;3100500;3100500;0;1
??0FileInclusionTimesExporter@@QEAA@AEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@@Z;__cdecl FileInclusionTimesExporter::FileInclusionTimesExporter(class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string;3085900;3085900;3085900;0;1
??1FileInclusionsAnalyzer@@UEAA@XZ;virtual __cdecl FileInclusionsAnalyzer::~FileInclusionsAnalyzer(void) __ptr64;3065900;3065900;3065900;0;1
?_Add_rep@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXHH_N@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_rep(int,int,bool) __ptr64;3020600;3020600;3020600;0;1
?add_option@Options@cxxopts@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00V34@V?$shared_ptr@$$CBVValue@cxxopts@@@4@1@Z;void __cdecl cxxopts::Options::add_option(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::Value const >,class std::basic_;3013200;3013200;3013200;0;1
?AddRootEntry@BuildTimeline@@QEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimeline::AddRootEntry(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;3005400;3005400;3005400;0;1
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z;class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64 const,unsigned __int64);2983250;2641900;4401400;635029;6
??$_Emplace_reallocate@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@QEAV231@$$QEAV231@@Z;??$_Emplace_reallocate@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@QEAV231@$$QEAV231@@Z;2977850;1628900;4326800;1348950;2
??$Accept@V?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NAEAV?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@1@@Z;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::Accept<class rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0> >(class rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapi;2972300;2972300;2972300;0;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAUProcessThreadRemap@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAUProcessThreadRemap@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAUProcessThreadRemap@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAUProcessThreadRemap@@@1@@Z;2931300;2931300;2931300;0;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<cl;2919700;2919700;2919700;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Unchecked_erase(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct Pro;2913000;2913000;2913000;0;1
??$_Lookup_equiv@DV?$regex_traits@D@std@@@std@@YA_NEPEBU?$_Sequence@D@0@AEBV?$regex_traits@D@0@@Z;bool __cdecl std::_Lookup_equiv<char,class std::regex_traits<char> >(unsigned char,struct std::_Sequence<char> const * __ptr64,class std::regex_traits<char> const & __ptr64);2864800;2864800;2864800;0;1
?consume_positional@ParseResult@cxxopts@@AEAA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl cxxopts::ParseResult::consume_positional(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;2851400;2851400;2851400;0;1
??$Validate@U?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@2@@?$UTF8@D@rapidjson@@SA_NAEAU?$GenericStringStream@U?$UTF8@D@rapidjson@@@1@AEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@1@@Z;static bool __cdecl rapidjson::UTF8<char>::Validate<struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > >(struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > & __ptr64,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64);2842400;2842400;2842400;0;1
??$_Compare@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEBDV?$regex_traits@D@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0PEBD1AEBV?$regex_traits@D@0@W4syntax_option_type@regex_constants@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Compare<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,class std::regex_traits<char> >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,char const * __ptr64,class std::regex_tra;2826000;2826000;2826000;0;1
??$emplace@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@_N@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;struct std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >,bool> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std:;2728200;2728200;2728200;0;1
?_Better_match@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NXZ;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Better_match(void) __ptr64;2716800;2716800;2716800;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;2684900;2684900;2684900;0;1
??$get@$0A@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;??$get@$0A@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;2680700;284100;7459100;3378844;3
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;2672000;2672000;2672000;0;1
?_Getal@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64 __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Getal(void) __ptr64;2666550;226800;5106300;2439750;2
??$_Partition_by_median_guess_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YA?AU?$pair@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAU12@@0@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@0V<lambda_b91a942b4070954e66476ae297366993>@@@Z;struct std::pair<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64> __cdecl std::_Partition_by_median_guess_unchecked<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae297366993> >(struct std::p;2650600;2650600;2650600;0;1
??1?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::~vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >(void) __ptr64;2645600;479700;4811500;2165900;2
?to_bytes@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEB_W0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::to_bytes(wchar_t const * __ptr64,wchar_t const * __ptr64) __ptr64;2644000;2644000;2644000;0;1
??1FileCompilationsExporter@@QEAA@XZ;__cdecl FileCompilationsExporter::~FileCompilationsExporter(void) __ptr64;2641100;2641100;2641100;0;1
??$?R$$V@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$?R$$V@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$Mater;2633600;2633600;2633600;0;1
??$integer_parser@I@values@cxxopts@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAI@Z;void __cdecl cxxopts::values::integer_parser<unsigned int>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,unsigned int & __ptr64);2624100;2624100;2624100;0;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;2618000;2618000;2618000;0;1
??$_Match@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@QEAA_NPEAV?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@1@_N@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Match<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(class std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<cha;2616800;2616800;2616800;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;2610450;350500;4870400;2259950;2
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;2609600;2609600;2609600;0;1
?_Do_rep0@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NPEAV_Node_rep@2@_N@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Do_rep0(class std::_Node_rep * __ptr64,bool) __ptr64;2609000;2609000;2609000;0;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;2573800;2472000;2675600;101800;2
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;2573600;2573600;2573600;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;2564200;2564200;2564200;0;1
??0FileCompilationsExporter@@QEAA@AEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@@Z;__cdecl FileCompilationsExporter::FileCompilationsExporter(class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<ch;2563400;2563400;2563400;0;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;2532900;2532900;2532900;0;1
?_Is_wbound@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEBA_NXZ;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Is_wbound(void)const __ptr64;2527000;2527000;2527000;0;1
?_Calculate_growth@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Calculate_growth(unsigned __int64)const __ptr64;2511600;2511600;2511600;0;1
??ROptionAdder@cxxopts@@QEAAAEAV01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0V?$shared_ptr@$$CBVValue@cxxopts@@@3@V23@@Z;class cxxopts::OptionAdder & __ptr64 __cdecl cxxopts::OptionAdder::operator()(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::shared_ptr<class cxxopts::Value const >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;2509300;2509300;2509300;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::bas;2508100;1903600;3112600;604500;2
??$_Codecvt_do_length@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@DU_Mbstatet@@@std@@YAHAEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@0@AEAU_Mbstatet@@PEBD2_K@Z;int __cdecl std::_Codecvt_do_length<class std::codecvt_utf8<wchar_t,1114111,0>,char,struct _Mbstatet>(class std::codecvt_utf8<wchar_t,1114111,0> const & __ptr64,struct _Mbstatet & __ptr64,char const * __ptr64,char const * __ptr64,unsigned __int64);2501600;2501600;2501600;0;1
??0FileInclusionsAnalyzer@@QEAA@XZ;__cdecl FileInclusionsAnalyzer::FileInclusionsAnalyzer(void) __ptr64;2499800;2499800;2499800;0;1
?clear@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::cha;2499750;588500;4411000;1911250;2
??0FileInclusionGraphExporter@@QEAA@AEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@@Z;__cdecl FileInclusionGraphExporter::FileInclusionGraphExporter(class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,cla;2490200;2490200;2490200;0;1
??1FileInclusionGraphExporter@@QEAA@XZ;__cdecl FileInclusionGraphExporter::~FileInclusionGraphExporter(void) __ptr64;2490100;2490100;2490100;0;1
?WriteString@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NPEBDI@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteString(char const * __ptr64,unsigned int) __ptr64;2486500;2486500;2486500;0;1
?_Do_rep@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NPEAV_Node_rep@2@_NH@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Do_rep(class std::_Node_rep * __ptr64,bool,int) __ptr64;2479200;2479200;2479200;0;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@U?$_Cmp_cs@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@000U?$_Cmp_cs@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,struct std::_Cmp_cs<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<;2478600;2478600;2478600;0;1
?OnSymbolNameEvent@BuildTimelineAnalyzer@@AEAAXAEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnSymbolNameEvent(class Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName const & __ptr64) __ptr64;2468600;2468600;2468600;0;1
?OnTraceInfo@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVTraceInfo@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnTraceIn;2467800;2467800;2467800;0;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Forced_rehash(unsigned __int64) __ptr64;2446900;2446900;2446900;0;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Forced_rehash(unsigned __int64) __ptr64;2445800;2445800;2445800;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_Alloc_sentinel_and_proxy(void) __ptr64;2419800;2419800;2419800;0;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@U?$_Cmp_icase@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@000U?$_Cmp_icase@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,struct std::_Cmp_icase<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_v;2414100;2414100;2414100;0;1
??1BuildTimelineExporter@@QEAA@XZ;__cdecl BuildTimelineExporter::~BuildTimelineExporter(void) __ptr64;2393600;2393600;2393600;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Unchecked_erase(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * ;2383500;2383500;2383500;0;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Forced_rehash(unsigned __int64) __ptr64;2382800;2382800;2382800;0;1
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ;virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::uflow(void) __ptr64;2377050;2309500;2475600;56513;6
??$forward@UFileCompilationData@@@std@@YA$$QEAUFileCompilationData@@AEAU1@@Z;??$forward@UFileCompilationData@@@std@@YA$$QEAUFileCompilationData@@AEAU1@@Z;2366400;2366400;2366400;0;1
?_Better_match@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NXZ;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Better_match(void) __ptr64;2362100;2362100;2362100;0;1
?_Forced_rehash@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Forced_rehash(unsigned __int64) __ptr64;2345900;2345900;2345900;0;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@U?$_Cmp_collate@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@000U?$_Cmp_collate@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,struct std::_Cmp_collate<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String;2342000;2342000;2342000;0;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Forced_rehash(unsigned ;2332100;2332100;2332100;0;1
?erase@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@0@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::erase(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >) __ptr64;2329500;2329500;2329500;0;1
?OnFrontEndPassCompleted@FileCompilationsAnalyzer@@AEAAXAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl FileCompilationsAnalyzer::OnFrontEndPassCompleted(class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass const & __ptr64) __ptr64;2319200;2319200;2319200;0;1
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::cha;2317000;2317000;2317000;0;1
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Swap_proxy_and_iterators(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64) __ptr64;2298120;265100;6108900;2514054;5
??$EntityCanMaterializeId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile>(unsigned int);2278900;196800;4361000;2082100;2
??$copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::copy_backward<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_all;2263600;2263600;2263600;0;1
??$_Unfancy@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@PEAPEBU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Unfancy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64;2263600;2263600;2263600;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigne;2263500;2263500;2263500;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > const & __ptr64);2262900;2262900;2262900;0;1
?_Do_rep@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NPEAV_Node_rep@2@_NH@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Do_rep(class std::_Node_rep * __ptr64,bool,int) __ptr64;2258900;2258900;2258900;0;1
??0?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAA@_KPEAVCrtAllocator@1@@Z;__cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::MemoryPoolAllocator<class rapidjson::CrtAllocator>(unsigned __int64,class rapidjson::CrtAllocator * __ptr64) __ptr64;2256600;2256600;2256600;0;1
??$_Match@V?$allocator@V?$sub_match@PEBD@std@@@std@@@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@QEAA_NPEAV?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@1@_N@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Match<class std::allocator<class std::sub_match<char const * __ptr64> > >(class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > * __ptr64,bool) __ptr64;2250800;2250800;2250800;0;1
?_Alternative@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Alternative(void) __ptr64;2244700;2244700;2244700;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;2237400;2237400;2237400;0;1
??$_Make_heap_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Make_heap_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;2228000;2228000;2228000;0;1
?_Forced_rehash@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;2226400;2226400;2226400;0;1
??0FunctionCompilationsAnalyzer@@QEAA@XZ;__cdecl FunctionCompilationsAnalyzer::FunctionCompilationsAnalyzer(void) __ptr64;2222400;2222400;2222400;0;1
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ;__cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::~sentry(void) __ptr64;2217566;347400;11409100;4110668;6
??$_Partition_by_median_guess_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YA?AU?$pair@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAPEBU12@@0@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@0V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;struct std::pair<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64> __cdecl std::_Partition_by_median_guess_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<c;2211700;2211700;2211700;0;1
??0TimelineEntry@@QEAA@AEB_KPEBDV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@2AEBK3G@Z;__cdecl TimelineEntry::TimelineEntry(unsigned __int64 const & __ptr64,char const * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,unsigned long const & __ptr64,unsigned long const & __ptr64,unsigned short) __ptr64;2203200;2203200;2203200;0;1
??$_Uninitialized_move@PEAUDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@YAPEAUDataPerFile@?A0x120c265a@@QEAU12@0PEAU12@AEAV?$allocator@UDataPerFile@?A0x120c265a@@@0@@Z;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::_Uninitialized_move<struct `anonymous namespace'::DataPerFile * __ptr64,class std::allocator<struct `anonymous namespace'::DataPerFile> >(struct A0x120c265a::DataPerFile * __ptr64 const,struct A0x120c265a::DataPerFile * __ptr64 const,struct A0x120c265a::DataPerFile * __ptr64,class std::allocator<struct `anonymous namespace'::DataPerFile> & __ptr64);2172200;2172200;2172200;0;1
??0BuildTimeline@@QEAA@XZ;__cdecl BuildTimeline::BuildTimeline(void) __ptr64;2171600;2171600;2171600;0;1
??$_Partition_by_median_guess_unchecked@PEAUDataPerFunction@?A0x5f10505a@@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YA?AU?$pair@PEAUDataPerFunction@?A0x5f10505a@@PEAU12@@0@PEAUDataPerFunction@?A0x5f10505a@@0V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;struct std::pair<struct `anonymous namespace'::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64> __cdecl std::_Partition_by_median_guess_unchecked<struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb> >(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb>);2153000;2153000;2153000;0;1
?CalculateLocalChildrenData@PackedProcessThreadRemapper@@QEAAXPEBVTimelineEntry@@@Z;void __cdecl PackedProcessThreadRemapper::CalculateLocalChildrenData(class TimelineEntry const * __ptr64) __ptr64;2150500;2150500;2150500;0;1
?_Take_contents@?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Take_contents(class std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > & __ptr64) __ptr64;2149500;2149500;2149500;0;1
?_Umove_if_noexcept1@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAXPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Umove_if_noexcept1(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::sub_match<class std::_String_const_iterator<class std::_String_val<str;2145300;2145300;2145300;0;1
?CalculateThreadIdRemap@PackedProcessThreadRemapper@@AEAAXPEBVTimelineEntry@@AEBK1@Z;void __cdecl PackedProcessThreadRemapper::CalculateThreadIdRemap(class TimelineEntry const * __ptr64,unsigned long const & __ptr64,unsigned long const & __ptr64) __ptr64;2123800;2123800;2123800;0;1
??0FileCompilationsAnalyzer@@QEAA@XZ;__cdecl FileCompilationsAnalyzer::FileCompilationsAnalyzer(void) __ptr64;2122200;2122200;2122200;0;1
?checked_parse_arg@ParseResult@cxxopts@@AEAAXHQEAPEADAEAHV?$shared_ptr@VOptionDetails@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z;void __cdecl cxxopts::ParseResult::checked_parse_arg(int,char * __ptr64 * __ptr64 const,int & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails>,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;2097400;2097400;2097400;0;1
?_Do_if@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NPEAV_Node_if@2@@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Do_if(class std::_Node_if * __ptr64) __ptr64;2095700;2095700;2095700;0;1
??$move@AEAPEAULocalThreadData@PackedProcessThreadRemapper@@@std@@YA$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@AEAPEAU12@@Z;??$move@AEAPEAULocalThreadData@PackedProcessThreadRemapper@@@std@@YA$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@AEAPEAU12@@Z;2081000;2081000;2081000;0;1
?OnFileParsed@FileInclusionsAnalyzer@@AEAAXAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl FileInclusionsAnalyzer::OnFileParsed(class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile const & __ptr64,class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile const & __ptr64) __ptr64;2071300;2071300;2071300;0;1
?_Unchecked_erase@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_Unchecked_erase(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,v;2066900;2066900;2066900;0;1
?_Getal@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEBAAEBV?$allocator@PEAVTimelineEntry@@@2@XZ;class std::allocator<class TimelineEntry * __ptr64> const & __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Getal(void)const __ptr64;2036550;1360400;2712700;676150;2
?_Unchecked_erase@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<;2034800;2034800;2034800;0;1
??$copy@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::copy<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class ;2034100;2034100;2034100;0;1
??$try_emplace@UFileCompilationData@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUFileCompilationData@@@Z;??$try_emplace@UFileCompilationData@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?;2029200;2029200;2029200;0;1
??$transform_primary@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$_Regex_traits@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_Regex_traits<char>::transform_primary<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >)const __ptr64;2027400;2027400;2027400;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;2018000;270900;3765100;1747100;2
?_Unchecked_erase@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@_KPEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Unchecked_erase(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const) __ptr64;2014900;2014900;2014900;0;1
?OnStopActivity@FileCompilationsAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl FileCompilationsAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;2003400;2003400;2003400;0;1
?FinishEntry@BuildTimeline@@QEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimeline::FinishEntry(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;1993800;1993800;1993800;0;1
??$_Lookup_coll@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@D@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0PEBU?$_Sequence@D@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Lookup_coll<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char>(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,struct std::_Sequence<char> const * __ptr64);1984700;1984700;1984700;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Unchecked_er;1981400;1981400;1981400;0;1
??0?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@QEAA@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$regex_traits@D@1@PEAV_Root_node@1@IW4syntax_option_type@regex_constants@1@W4match_flag_type@61@@Z;__cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterato;1963400;1963400;1963400;0;1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const * __ptr64 const) __ptr64;1949428;898400;7409500;2233973;7
?Prettify@internal@rapidjson@@YAPEADPEADHHH@Z;char * __ptr64 __cdecl rapidjson::internal::Prettify(char * __ptr64,int,int,int);1947500;1947500;1947500;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,c;1944350;1898400;1990300;45950;2
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator++(void) __ptr64;1942900;1942900;1942900;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;1941800;1941800;1941800;0;1
?_Destroy@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAXPEAPEAVTimelineEntry@@0@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Destroy(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64) __ptr64;1940250;228700;3651800;1711550;2
?_Unchecked_erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<c;1940100;1338500;2541700;601600;2
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chro;1935950;1934300;1937600;1650;2
?help@Options@cxxopts@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::Options::help(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64)const __ptr64;1935600;1935600;1935600;0;1
??0?$allocator@K@std@@QEAA@XZ;__cdecl std::allocator<unsigned long>::allocator<unsigned long>(void) __ptr64;1910600;1910600;1910600;0;1
??0FilterTimelineAnalyzer@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@0@Z;__cdecl FilterTimelineAnalyzer::FilterTimelineAnalyzer(class std::chrono::duration<__int64,struct std::ratio<1,1000> > const & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000> > const & __ptr64) __ptr64;1906700;1906700;1906700;0;1
??$Forward@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$HandlerForwarder@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SAX$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVActivity@Activities@345@1@Z;??$Forward@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$HandlerForwarder@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V;1882200;1882200;1882200;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std:;1880100;1880100;1880100;0;1
?_Unchecked_erase@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Unchecked_erase(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessT;1861100;1861100;1861100;0;1
?_Do_class@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NPEAV_Node_base@2@@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Do_class(class std::_Node_base * __ptr64) __ptr64;1854100;1854100;1854100;0;1
??0ParseResult@cxxopts@@QEAA@V?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@_NAEAHAEAPEAPEAD@Z;__cdecl cxxopts::ParseResult::ParseResult(class std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<c;1852300;1852300;1852300;0;1
??0Options@cxxopts@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;__cdecl cxxopts::Options::Options(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;1849900;1849900;1849900;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std;1842800;1842800;1842800;0;1
?DigitGen@internal@rapidjson@@YAXAEBUDiyFp@12@0_KPEADPEAH3@Z;void __cdecl rapidjson::internal::DigitGen(struct rapidjson::internal::DiyFp const & __ptr64,struct rapidjson::internal::DiyFp const & __ptr64,unsigned __int64,char * __ptr64,int * __ptr64,int * __ptr64);1835400;1835400;1835400;0;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Unchecked_erase(struct std::_List_node<struct std::pair<unsigned __in;1835200;1835200;1835200;0;1
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z;virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::overflow(int) __ptr64;1828250;1643900;2091200;149153;6
??$emplace@AEB_K@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@_N@1@AEB_K@Z;struct std::pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >,bool> __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::emplace<unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64) __ptr64;1828200;1828200;1828200;0;1
??$emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;struct std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >,bool> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<cha;1826000;1826000;1826000;0;1
??$_Kfn@$$CB_KVTimelineEntry@@@?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KVTimelineEntry@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0>::_Kfn<unsigned __int64 const ,class TimelineEntry>(struct std::pair<unsigned __int64 const ,class TimelineEntry> const & __ptr64);1808200;1808200;1808200;0;1
?_Do_if@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NPEAV_Node_if@2@@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Do_if(class std::_Node_if * __ptr64) __ptr64;1807800;1807800;1807800;0;1
?OnInvocation@BuildTimelineAnalyzer@@AEAAXAEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnInvocation(class Microsoft::Cpp::BuildInsights::Activities::Invocation const & __ptr64) __ptr64;1791300;1791300;1791300;0;1
??$emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;struct std::pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,bool> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_;1791100;1791100;1791100;0;1
??0PackedProcessThreadRemapper@@QEAA@XZ;__cdecl PackedProcessThreadRemapper::PackedProcessThreadRemapper(void) __ptr64;1777100;1777100;1777100;0;1
?Analyze@BuildAnalyzer@@QEAA_NXZ;bool __cdecl BuildAnalyzer::Analyze(void) __ptr64;1755900;1755900;1755900;0;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEBDU?$_Cmp_icase@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0PEBD1U?$_Cmp_icase@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,struct std::_Cmp_icase<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,char const *;1750900;1750900;1750900;0;1
?OnStopActivity@FilterTimelineAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl FilterTimelineAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;1750000;1750000;1750000;0;1
??1BuildTimeline@@QEAA@XZ;__cdecl BuildTimeline::~BuildTimeline(void) __ptr64;1742700;1742700;1742700;0;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEBDU?$_Cmp_collate@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0PEBD1U?$_Cmp_collate@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,struct std::_Cmp_collate<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,char const;1742600;1742600;1742600;0;1
??1FilterTimelineAnalyzer@@UEAA@XZ;virtual __cdecl FilterTimelineAnalyzer::~FilterTimelineAnalyzer(void) __ptr64;1728500;1728500;1728500;0;1
??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU;1725900;1725900;1725900;0;1
?Timestamp@CppBuildInsightsDataConversion@Utilities@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_J0@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > __cdecl Utilities::CppBuildInsightsDataConversion::Timestamp(__int64,__int64);1705400;1705400;1705400;0;1
??$_Try_emplace@AEB_KV?$vector@_KV?$allocator@_K@std@@@std@@@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;??$_Try_emplace@AEB_KV?$vector@_KV?$allocator@_K@std@@@std@@@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;1696700;1696700;1696700;0;1
?_Unchecked_erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;1695200;1695200;1695200;0;1
??0?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@QEAA@AEBV?$regex_traits@D@1@PEBD1W4syntax_option_type@regex_constants@1@@Z;__cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Parser<char const * __ptr64,char,class std::regex_traits<char> >(class std::regex_traits<char> const & __ptr64,char const * __ptr64,char const * __ptr64,enum std::regex_constants::syntax_option_type) __ptr64;1687800;1687800;1687800;0;1
??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z;class std::basic_filebuf<char,struct std::char_traits<char> > * __ptr64 __cdecl std::addressof<class std::basic_filebuf<char,struct std::char_traits<char> > >(class std::basic_filebuf<char,struct std::char_traits<char> > & __ptr64);1683183;207500;8876400;3217215;6
??1FileCompilationsAnalyzer@@UEAA@XZ;virtual __cdecl FileCompilationsAnalyzer::~FileCompilationsAnalyzer(void) __ptr64;1680700;1680700;1680700;0;1
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ;class std::allocator<char> & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Getal(void) __ptr64;1677656;233200;16446900;4007497;16
?GenerateMiniDump@@YAJPEAU_EXCEPTION_POINTERS@@@Z;long __cdecl GenerateMiniDump(struct _EXCEPTION_POINTERS * __ptr64);1668600;1668600;1668600;0;1
??1BuildTimelineAnalyzer@@UEAA@XZ;virtual __cdecl BuildTimelineAnalyzer::~BuildTimelineAnalyzer(void) __ptr64;1665900;1665900;1665900;0;1
??0?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@QEAA@AEBV012@@Z;__cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64) __ptr64;1650600;1650600;1650600;0;1
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$;1644900;1644900;1644900;0;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEBDU?$_Cmp_cs@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0PEBD1U?$_Cmp_cs@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,struct std::_Cmp_cs<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,char const * __;1644500;1644500;1644500;0;1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void) __ptr64;1640275;465600;9661100;3031616;8
?AddMember@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@AEAV12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & ;1638300;1638300;1638300;0;1
?OnTemplateInstantiation@BuildTimelineAnalyzer@@AEAAXAEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnTemplateInstantiation(class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation const & __ptr64) __ptr64;1626700;1626700;1626700;0;1
??1TimelineEntry@@QEAA@XZ;__cdecl TimelineEntry::~TimelineEntry(void) __ptr64;1626100;1626100;1626100;0;1
??$_Emplace_reallocate@AEAPEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@QEAU21@AEAPEBVTimelineEntry@@$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@@Z;??$_Emplace_reallocate@AEAPEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@QEAU21@AEAPEBVTimelineEntry@@$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@@Z;1621900;1621900;1621900;0;1
??$_Try_emplace@AEB_KAEAVTimelineEntry@@@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N@1@AEB_KAEAVTimelineEntry@@@Z;struct std::pair<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,bool> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Try_emplace<unsigned __int64 const & __ptr64,class TimelineEntry & __ptr64>(unsigned;1621600;1621600;1621600;0;1
??0?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >(class std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> > const & __ptr64) __ptr64;1599100;1599100;1599100;0;1
??$use_facet@V?$collate@D@std@@@std@@YAAEBV?$collate@D@0@AEBVlocale@0@@Z;class std::collate<char> const & __ptr64 __cdecl std::use_facet<class std::collate<char> >(class std::locale const & __ptr64);1580500;1580500;1580500;0;1
?_Verify_offset@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAX_J@Z;void __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_Verify_offset(__int64)const __ptr64;1566300;1566300;1566300;0;1
??$_Emplace_reallocate@AEB_K@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KQEA_KAEB_K@Z;unsigned __int64 * __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Emplace_reallocate<unsigned __int64 const & __ptr64>(unsigned __int64 * __ptr64 const,unsigned __int64 const & __ptr64) __ptr64;1562300;1562300;1562300;0;1
??0?$abstract_value@I@values@cxxopts@@QEAA@AEBV012@@Z;__cdecl cxxopts::values::abstract_value<unsigned int>::abstract_value<unsigned int>(class cxxopts::values::abstract_value<unsigned int> const & __ptr64) __ptr64;1557100;1557100;1557100;0;1
?OnTemplateInstantiation@TemplateInstantiationsAnalyzer@@AEAAXAEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl TemplateInstantiationsAnalyzer::OnTemplateInstantiation(class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation const & __ptr64) __ptr64;1555700;1555700;1555700;0;1
??$_Try_emplace@AEB_KAEAUTemplateInstantiationData@@@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@_N@1@AEB_KAEAUTemplateInstantiationData@@@Z;struct std::pair<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64,bool> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Try_emplace<unsigned __int64 const & __ptr64,;1555200;1555200;1555200;0;1
?_Unchecked_erase@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_erase(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64;1551900;1551900;1551900;0;1
??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$all;1550300;1550300;1550300;0;1
??1?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@XZ;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::~GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(void) __ptr64;1540100;1540100;1540100;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,str;1534000;1534000;1534000;0;1
??Y?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator+=(__int64) __ptr64;1525000;1525000;1525000;0;1
?_Trans@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Trans(void) __ptr64;1524400;1524400;1524400;0;1
??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUFileCompilationData@@@Z;??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$a;1523800;1523800;1523800;0;1
??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Emplace_reallocate<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class ;1513600;1513600;1513600;0;1
??0FrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::FrontEndFile::FrontEndFile(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;1512900;303100;2722700;1209800;2
?AddEntry@BuildTimeline@@AEAAPEAVTimelineEntry@@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Z;class TimelineEntry * __ptr64 __cdecl BuildTimeline::AddEntry(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;1511600;1511600;1511600;0;1
?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<bool,class std::allocator<bool> >::_Trim(unsigned __int64) __ptr64;1511100;1511100;1511100;0;1
?resize@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K_N@Z;void __cdecl std::vector<bool,class std::allocator<bool> >::resize(unsigned __int64,bool) __ptr64;1509500;1509500;1509500;0;1
?_Add_range@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXDD@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_range(char,char) __ptr64;1503300;1503300;1503300;0;1
??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAAPEAVKeyValue@cxxopts@@QEAV23@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1@Z;class cxxopts::KeyValue * __ptr64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Emplace_reallocate<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class cxxopts::KeyValue * __ptr64 const,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std:;1499500;1499500;1499500;0;1
??$_Emplace_reallocate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@QEAU21@$$QEAU21@@Z;??$_Emplace_reallocate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@QEAU21@$$QEAU21@@Z;1495300;1495300;1495300;0;1
??$_Try_emplace@AEB_KAEAULocalThreadData@PackedProcessThreadRemapper@@@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@_N@1@AEB_KAEAULocalThreadData@PackedProcessThreadRemapper@@@Z;struct std::pair<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64,bool> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadDat;1494600;1494600;1494600;0;1
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;1492100;1492100;1492100;0;1
??$_Try_emplace@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@$$V@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;??$_Try_emplace@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@$$V@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@V;1489200;1489200;1489200;0;1
??$_Emplace_reallocate@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@QEAV231@AEBV231@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Emplace_reallocate<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,class std::chrono::duration<__int64,struct std::rat;1487900;1487900;1487900;0;1
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;struct std::pair<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64,bool> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhas;1487100;1487100;1487100;0;1
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<char> >::_Bxty::_Bxty(void) __ptr64;1485493;167600;20781200;4982193;16
?_Unchecked_erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > ;1481700;1481700;1481700;0;1
??$_Regex_match1@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@DV?$regex_traits@D@2@V12@@std@@YA_NV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PEAV?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@0@AEBV?$basic_regex@DV?$regex_traits@D@std@@@0@W4match_flag_type@regex_constants@0@_N@Z;bool __cdecl std::_Regex_match1<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_cons;1473900;1473900;1473900;0;1
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@QEAU32@@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Insert_node(struct std::_Tree_id<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct ;1473200;1473200;1473200;0;1
?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::_Insert_n(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,unsigned __int64,bool const & __ptr64) __ptr64;1468400;1468400;1468400;0;1
??$_Try_emplace@AEB_KPEBD@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAPEBD@Z;??$_Try_emplace@AEB_KPEBD@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAPEBD@Z;1452950;1426200;1479700;26750;2
??$_Emplace_reallocate@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@QEAPEBU21@$$QEAPEAU21@@Z;??$_Emplace_reallocate@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a;1446800;1446800;1446800;0;1
?WriteDouble@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NN@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteDouble(double) __ptr64;1445600;1445600;1445600;0;1
??$_Try_emplace@AEB_KAEAUProcessThreadRemap@@@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@_N@1@AEB_KAEAUProcessThreadRemap@@@Z;struct std::pair<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64,bool> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Try_emplace<unsigned __int64 const & __ptr64,struct ProcessThreadR;1444800;1444800;1444800;0;1
??0?$abstract_value@_N@values@cxxopts@@QEAA@AEBV012@@Z;__cdecl cxxopts::values::abstract_value<bool>::abstract_value<bool>(class cxxopts::values::abstract_value<bool> const & __ptr64) __ptr64;1444000;1444000;1444000;0;1
??$_Emplace_reallocate@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@QEAPEBU21@$$QEAPEBU21@@Z;??$_Emplace_reallocate@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@QEAPEBU21@$$QEAPEBU21@@Z;1440400;1440400;1440400;0;1
?_Unchecked_erase@?$list@_KV?$allocator@_K@std@@@std@@AEAAPEAU?$_List_node@_KPEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::_Unchecked_erase(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const) __ptr64;1436900;1436900;1436900;0;1
??$?0U?$pair@$$CB_KVTimelineEntry@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > ><struct std::pair<unsigned __int64 const ,class TimelineEntry> >(class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __p;1430200;1430200;1430200;0;1
??$transform_primary@PEBD@?$_Regex_traits@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBD0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_Regex_traits<char>::transform_primary<char const * __ptr64>(char const * __ptr64,char const * __ptr64)const __ptr64;1430000;1430000;1430000;0;1
??$_Emplace_reallocate@AEAUDataPerFunction@?A0x5f10505a@@@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAAPEAUDataPerFunction@?A0x5f10505a@@QEAU23@AEAU23@@Z;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Emplace_reallocate<struct `anonymous namespace'::DataPerFunction & __ptr64>(struct A0x5f10505a::DataPerFunction * __ptr64 const,struct A0x5f10505a::DataPerFunction & __ptr64) __ptr64;1429900;1429900;1429900;0;1
??$_Emplace_reallocate@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAPEAUHelpOptionDetails@cxxopts@@QEAU23@$$QEAU23@@Z;??$_Emplace_reallocate@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAPEAUHelpOptionDetails@cxxopts@@QEAU23@$$QEAU23@@Z;1423100;1423100;1423100;0;1
??$make_shared@VOptionDetails@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@AEAV34@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@4@@std@@YA?AV?$shared_ptr@VOptionDetails@cxxopts@@@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AEAV20@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@0@@Z;class std::shared_ptr<class cxxopts::OptionDetails> __cdecl std::make_shared<class cxxopts::OptionDetails,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::shared_ptr<class cxxopts::Value const > & __ptr64>(class std::basic_string<char,struct;1419300;1419300;1419300;0;1
??$_Emplace_reallocate@AEBK@?$vector@KV?$allocator@K@std@@@std@@QEAAPEAKQEAKAEBK@Z;unsigned long * __ptr64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Emplace_reallocate<unsigned long const & __ptr64>(unsigned long * __ptr64 const,unsigned long const & __ptr64) __ptr64;1410800;1410800;1410800;0;1
?_Tidy@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Tidy(void) __ptr64;1409700;1409700;1409700;0;1
??$_Emplace_reallocate@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAV23456@$$QEAPEAVIAnalyzer@456@@Z;??$_Emplace_reallocate@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAV23456@$$QEAPEAVIAnalyzer@456@@Z;1407600;1407600;1407600;0;1
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z;__cdecl std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >(char const * __ptr64,int,int) __ptr64;1402533;1189400;1616200;136489;6
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUDataPerTemplate@?A0x5cdd232a@@@Z;??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$ch;1400200;1400200;1400200;0;1
?CalculateThreadIdRemappings@PackedProcessThreadRemapper@@AEAAXPEBVBuildTimeline@@@Z;void __cdecl PackedProcessThreadRemapper::CalculateThreadIdRemappings(class BuildTimeline const * __ptr64) __ptr64;1399900;1399900;1399900;0;1
?_Unchecked_erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chron;1399850;1387200;1412500;12650;2
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class <lambda_319d5e083f45f90dcdce5dce53cbb275>,char>(unsigned __int64,class <lambda_319d5e083f45f90dcdce5dce53cbb275>,char) __ptr64;1399187;1033600;3220400;689864;8
??$_Emplace_reallocate@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@QEAPEAV2345@$$QEAPEAV2345@@Z;??$_Emplace_reallocate@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@QEAPEAV2345@$$QEAPEAV2345@@Z;1396900;1396900;1396900;0;1
?OnSymbolName@TemplateInstantiationsAnalyzer@@AEAAXAEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl TemplateInstantiationsAnalyzer::OnSymbolName(class Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName const & __ptr64) __ptr64;1393100;1393100;1393100;0;1
??$_Emplace_reallocate@AEAUDataPerFile@?A0x120c265a@@@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAAPEAUDataPerFile@?A0x120c265a@@QEAU23@AEAU23@@Z;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Emplace_reallocate<struct `anonymous namespace'::DataPerFile & __ptr64>(struct A0x120c265a::DataPerFile * __ptr64 const,struct A0x120c265a::DataPerFile & __ptr64) __ptr64;1389600;1389600;1389600;0;1
?_ClassAtom@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA?AW4_Prs_ret@2@XZ;enum std::_Prs_ret __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_ClassAtom(void) __ptr64;1386900;1386900;1386900;0;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;1385600;1385600;1385600;0;1
?PrettyPrefix@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAAXW4Type@2@@Z;void __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::PrettyPrefix(enum rapidjson::Type) __ptr64;1383000;1383000;1383000;0;1
??$?0V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAA@AEBV01@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tra;1381800;1381800;1381800;0;1
?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ;char & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void) __ptr64;1380316;527600;4842200;1555928;6
?_Unchecked_erase@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Unchecked_erase(struct ;1379500;1333600;1425400;45900;2
?_Unchecked_erase@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Unchecked_erase(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetai;1376900;1376900;1376900;0;1
?_Add_equiv@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXPEBD0_J@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_equiv(char const * __ptr64,char const * __ptr64,__int64) __ptr64;1375700;1375700;1375700;0;1
??1PackedProcessThreadRemapper@@QEAA@XZ;__cdecl PackedProcessThreadRemapper::~PackedProcessThreadRemapper(void) __ptr64;1366400;1366400;1366400;0;1
?OnBackEndPassCompleted@FileCompilationsAnalyzer@@AEAAXAEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl FileCompilationsAnalyzer::OnBackEndPassCompleted(class Microsoft::Cpp::BuildInsights::Activities::BackEndPass const & __ptr64) __ptr64;1364200;1364200;1364200;0;1
?end@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > > __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char;1361400;1361400;1361400;0;1
??$_Construct_n_copies_of_ty@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Construct_n_copies_of_ty<unsigned int>(unsigned __int64,unsigned int const & __ptr64) __ptr64;1354500;1354500;1354500;0;1
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z;virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::pbackfail(int) __ptr64;1342766;1281400;1417300;50408;6
??0_Container_base12@std@@QEAA@XZ;__cdecl std::_Container_base12::_Container_base12(void) __ptr64;1341883;204700;20171300;4566873;18
?_Unchecked_erase@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Unchecked_erase(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __;1339900;1339900;1339900;0;1
??0?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAA@$$QEAV01@@Z;??0?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAA@$$QEAV01@@Z;1335050;1280400;1389700;54650;2
??$fill@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0AEB_N@Z;void __cdecl std::fill<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,bool>(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,bool const & __ptr64);1329100;1329100;1329100;0;1
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Resize_reallocate<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1328200;1328200;1328200;0;1
??0option_not_exists_exception@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::option_not_exists_exception::option_not_exists_exception(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1323300;1323300;1323300;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >::_Release(void) __ptr64;1318900;1318900;1318900;0;1
?_Unchecked_erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::all;1317300;1317300;1317300;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > ;1317000;1317000;1317000;0;1
??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z;class std::ctype<char> const & __ptr64 __cdecl std::use_facet<class std::ctype<char> >(class std::locale const & __ptr64);1316400;1316400;1316400;0;1
??$transform_primary@PEAD@?$_Regex_traits@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEAD0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_Regex_traits<char>::transform_primary<char * __ptr64>(char * __ptr64,char * __ptr64)const __ptr64;1313400;1313400;1313400;0;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::;1312300;278300;2346300;1034000;2
?count@ParseResult@cxxopts@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;unsigned __int64 __cdecl cxxopts::ParseResult::count(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;1312000;1312000;1312000;0;1
?_Unchecked_erase@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Unchecked_erase(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * ;1305700;1305700;1305700;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;1303100;1303100;1303100;0;1
??$_Insertion_sort_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@PEAU10@QEAU10@V<lambda_b91a942b4070954e66476ae297366993>@@@Z;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::_Insertion_sort_unchecked<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae297366993> >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const ;1300200;1300200;1300200;0;1
??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::_Copy_unchecked<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_a;1295100;1295100;1295100;0;1
??0?$vector@IV?$allocator@I@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::vector<unsigned int,class std::allocator<unsigned int> >(class std::vector<unsigned int,class std::allocator<unsigned int> > const & __ptr64) __ptr64;1290100;1290100;1290100;0;1
??R<lambda_4bb6aed2334c12b27f73b7e46d64fdf0>@@QEBA?AV?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@AEBV?$sub_match@PEBD@2@0@Z;class std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > __cdecl <lambda_4bb6aed2334c12b27f73b7e46d64fdf0>::operator()(class std::sub_match<char const * __ptr64> const & __ptr64,class std::sub_match<char const * __ptr64> const & __ptr64)const __ptr64;1288300;1288300;1288300;0;1
?_Begin_assert_group@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Node_base@2@_N@Z;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Begin_assert_group(bool) __ptr64;1283200;1283200;1283200;0;1
??$_Regex_match1@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@DV?$regex_traits@D@2@PEBD@std@@YA_NPEBD0PEAV?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@0@AEBV?$basic_regex@DV?$regex_traits@D@std@@@0@W4match_flag_type@regex_constants@0@_N@Z;bool __cdecl std::_Regex_match1<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> >,char,class std::regex_traits<char>,char const * __ptr64>(char const * __ptr64,char const * __ptr64,class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > * __ptr64,class std::basic_regex<char,class std::regex_traits<char> > const & __ptr64,enum std::regex_constants::match_flag_type,bool);1282900;1282900;1282900;0;1
?ExportFileInclusionTimesData@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportFileInclusionTimesData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;1281400;1281400;1281400;0;1
?_Unchecked_erase@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Unchecked_erase(struct std::_List_node<struct std::pair<uns;1280300;1280300;1280300;0;1
??0exception@std@@QEAA@AEBV01@@Z;__cdecl std::exception::exception(class std::exception const & __ptr64) __ptr64;1276677;310900;9394400;2303133;18
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::vector<class std::basic_string<char,struct std::char_traits<char>,cla;1274900;1274900;1274900;0;1
?_CharacterEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_CharacterEscape(void) __ptr64;1270500;1270500;1270500;0;1
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z;virtual __int64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::xsgetn(char * __ptr64,__int64) __ptr64;1264466;1146800;1380000;85968;6
?_Unchecked_erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;1261200;1261200;1261200;0;1
??0?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const & __ptr64) __ptr64;1258400;1258400;1258400;0;1
?end@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::end(void) __ptr64;1255800;1255800;1255800;0;1
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z;??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z;1255000;1255000;1255000;0;1
??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unord;1254900;1254900;1254900;0;1
?_Do_ex_class@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXW4_Meta_type@2@@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_ex_class(enum std::_Meta_type) __ptr64;1254800;1254800;1254800;0;1
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;1237200;1180600;1293800;56600;2
?BuildAnalyzerList@BuildAnalyzer@@AEAA?AV?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBUAnalysisOptions@1@@Z;class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > __cdecl BuildAnalyzer::BuildAnalyzerList(struct BuildAnalyzer::AnalysisOptions const & __ptr64) __ptr64;1235100;1235100;1235100;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Alloc_sentinel_and_proxy(void) __ptr64;1232900;886200;1579600;346700;2
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Resize_reallocate<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1232300;1232300;1232300;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::max_size(class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > const & __ptr64);1228600;1228600;1228600;0;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;1227700;1227700;1227700;0;1
?_AtomEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_AtomEscape(void) __ptr64;1227300;1227300;1227300;0;1
??0?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_ite;1224400;1224400;1224400;0;1
??0?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAA@$$QEAV01@@Z;??0?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAA@$$QEAV01@@Z;1219500;1219500;1219500;0;1
??0?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@QEAA@AEBV012@@Z;__cdecl cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64) __ptr64;1216000;1216000;1216000;0;1
??0option_requires_argument_exception@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::option_requires_argument_exception::option_requires_argument_exception(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1212500;1212500;1212500;0;1
??0?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > const & __ptr64) __ptr64;1205600;1205600;1205600;0;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Insert_new_node_before(unsigned __int64,struct std::_List_node<struct std::pair<unsigned _;1203500;1203500;1203500;0;1
?do_in@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEA_W3AEAPEA_W@Z;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_in(struct _Mbstatet & __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64 & __ptr64,wchar_t * __ptr64,wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64)const __ptr64;1199200;1199200;1199200;0;1
??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z;bool __cdecl std::_Fputc<char>(char,struct _iobuf * __ptr64);1198000;229900;5988000;2142170;6
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tra;1196100;1196100;1196100;0;1
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class <lambda_65e615be2a453ca0576c979606f46740>,char const * __ptr64,unsigned __int64>(unsigned __int64,class <lambda_65e615be2a453ca0576c979606f46740>,char const * __ptr64,unsigned __int64) __ptr64;1188350;1161600;1215100;26750;2
?_ClassRanges@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_ClassRanges(void) __ptr64;1187500;1187500;1187500;0;1
??F?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator--(void) __ptr64;1187000;1187000;1187000;0;1
?_Getcat@?$collate@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z;static unsigned __int64 __cdecl std::collate<char>::_Getcat(class std::locale::facet const * __ptr64 * __ptr64,class std::locale const * __ptr64);1186800;1186800;1186800;0;1
??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$vector@DV?$allocator@D@std@@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@D@1@@Z;__cdecl std::vector<char,class std::allocator<char> >::vector<char,class std::allocator<char> ><class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,0>(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<char> const & __ptr64) __ptr64;1184600;1184600;1184600;0;1
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEBDXZ;char const & __ptr64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator*(void)const __ptr64;1181600;1181600;1181600;0;1
??0option_syntax_exception@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::option_syntax_exception::option_syntax_exception(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1178100;1178100;1178100;0;1
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class <lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>(unsigned __int64,class <lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char) __ptr64;1174500;1139600;1209400;34900;2
?_Compile@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Root_node@2@XZ;class std::_Root_node * __ptr64 __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Compile(void) __ptr64;1166600;1166600;1166600;0;1
??0?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@QEAA@PEBD0AEBV?$regex_traits@D@1@PEAV_Root_node@1@IW4syntax_option_type@regex_constants@1@W4match_flag_type@51@@Z;__cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>(char const * __ptr64,char const * __ptr64,class std::regex_traits<char> const & __ptr64,class std::_Root_node * __ptr64,unsigned int,enum std::regex_constants::syntax_option_type,enum std::regex_constants::match_flag_type) __ptr64;1163100;1163100;1163100;0;1
?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::erase(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >) __ptr64;1160600;1160600;1160600;0;1
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >;1160500;1160500;1160500;0;1
??$lookup_classname@PEBD@?$_Regex_traits@D@std@@QEBAFPEBD0_N@Z;short __cdecl std::_Regex_traits<char>::lookup_classname<char const * __ptr64>(char const * __ptr64,char const * __ptr64,bool)const __ptr64;1153800;1153800;1153800;0;1
??$_Insertion_sort_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@PEAPEBU10@QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Insertion_sort_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;1147900;1147900;1147900;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr6;1145800;312000;1979600;833800;2
?_Xlength@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@CAXXZ;static void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Xlength(void);1142600;193700;2091500;948900;2
??0argument_incorrect_type@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::argument_incorrect_type::argument_incorrect_type(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1134900;1134900;1134900;0;1
?do_transform@?$collate@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEBD0@Z;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::collate<char>::do_transform(char const * __ptr64,char const * __ptr64)const __ptr64;1133400;1133400;1133400;0;1
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Resize_reallocate<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1132100;1132100;1132100;0;1
??0?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::ha;1121300;1121300;1121300;0;1
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z;virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::seekpos(class std::fpos<struct _Mbstatet>,int) __ptr64;1120750;633600;3177200;926257;6
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;1110400;1110400;1110400;0;1
??0TemplateInstantiationsAnalyzer@@QEAA@XZ;__cdecl TemplateInstantiationsAnalyzer::TemplateInstantiationsAnalyzer(void) __ptr64;1109000;1109000;1109000;0;1
??A?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEAAAEAV?$sub_match@PEBD@1@_K@Z;class std::sub_match<char const * __ptr64> & __ptr64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::operator[](unsigned __int64) __ptr64;1104700;1104700;1104700;0;1
??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2;1100000;1100000;1100000;0;1
??0option_exists_error@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::option_exists_error::option_exists_error(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1097000;1097000;1097000;0;1
?OnFunctionCompiled@FunctionCompilationsAnalyzer@@AEAAXAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl FunctionCompilationsAnalyzer::OnFunctionCompiled(class Microsoft::Cpp::BuildInsights::Activities::Function const & __ptr64) __ptr64;1096600;1096600;1096600;0;1
?add_to_option@ParseResult@cxxopts@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;void __cdecl cxxopts::ParseResult::add_to_option(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1089900;1089900;1089900;0;1
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;1088200;1088200;1088200;0;1
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBAX_J@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::_Verify_offset(__int64)const __ptr64;1085600;1085600;1085600;0;1
??0missing_argument_exception@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::missing_argument_exception::missing_argument_exception(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1085400;1085400;1085400;0;1
??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Resize_reallocate<unsigned int>(unsigned __int64,unsigned int const & __ptr64) __ptr64;1085200;1085200;1085200;0;1
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Resize_reallocate<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1082800;1082800;1082800;0;1
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Resize_reallocate<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1076500;1076500;1076500;0;1
??0?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(;1074900;1074900;1074900;0;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Insert_new_node_before(unsigned __int64,struct std::_List_node<struct std::pair<unsigned __int64 const ,clas;1072900;1072900;1072900;0;1
??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVCommandLine@SimpleEvents@234@@Z;??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VComman;1072400;1072400;1072400;0;1
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ;bool __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Endwrite(void) __ptr64;1071800;992800;1182900;59606;6
??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VFrontEndFile@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVFrontEndFile@Activities@234@@Z;??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@;1065000;1065000;1065000;0;1
??$make_shared@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@0@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;??$make_shared@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@0@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;1064700;1064700;1064700;0;1
?do_out@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_out(struct _Mbstatet & __ptr64,wchar_t const * __ptr64,wchar_t const * __ptr64,wchar_t const * __ptr64 & __ptr64,char * __ptr64,char * __ptr64,char * __ptr64 & __ptr64)const __ptr64;1062000;1062000;1062000;0;1
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxop;1056900;1056900;1056900;0;1
??0?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;1052650;1031100;1074200;21550;2
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1052050;900600;1347900;141915;8
??0?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int6;1050700;1050700;1050700;0;1
?OnStopActivity@FileInclusionsAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl FileInclusionsAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;1049700;1049700;1049700;0;1
??$?0PEBD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD0AEBV?$allocator@D@1@@Z;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ><char const * __ptr64,0>(char const * __ptr64,char const * __ptr64,class std::allocator<char> const & __ptr64) __ptr64;1047800;1047800;1047800;0;1
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><wchar_t>(class std::allocator<wchar_t> const & __ptr64) __ptr64;1047600;1047600;1047600;0;1
?AddMember@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@AEAV12@0AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllo;1043800;1043800;1043800;0;1
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy_deallocate(void) __ptr64;1043668;565100;4522000;1107618;16
??0?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@_K@1@@Z;__cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >(class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64;1042700;1042700;1042700;0;1
??0?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct ;1042200;1004100;1080300;38100;2
??$stringAppend@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@cxxopts@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV12@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl cxxopts::stringAppend<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >);1042200;1042200;1042200;0;1
?OnStartActivity@BuildTimelineAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl BuildTimelineAnalyzer::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;1040300;1040300;1040300;0;1
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;1039350;267200;1811500;772150;2
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Insert_new_n;1030800;1030800;1030800;0;1
??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VActivity@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVActivity@Activities@234@@Z;??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345;1029900;1029900;1029900;0;1
??$make_shared@V?$standard_value@_N@values@cxxopts@@PEA_N@std@@YA?AV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@$$QEAPEA_N@Z;??$make_shared@V?$standard_value@_N@values@cxxopts@@PEA_N@std@@YA?AV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@$$QEAPEA_N@Z;1024400;1024400;1024400;0;1
?_Insert_new_node_before@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<;1022100;1022100;1022100;0;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;1020200;1020200;1020200;0;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@XZ;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::operator*(void)const __ptr64;1016500;1016500;1016500;0;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chro;1011250;951300;1071200;59950;2
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;1010600;1010600;1010600;0;1
?_Begin_if@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Node_base@2@PEAV32@@Z;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Begin_if(class std::_Node_base * __ptr64) __ptr64;1002900;1002900;1002900;0;1
??$_Resize@U_Value_init_tag@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Resize<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1002300;1002300;1002300;0;1
??0invalid_option_format_error@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::invalid_option_format_error::invalid_option_format_error(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1001500;1001500;1001500;0;1
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ;void __cdecl std::_Iterator_base12::_Orphan_me(void) __ptr64;1001146;661600;5157400;1112060;15
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::bas;998700;949500;1047900;49200;2
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std:;993700;993700;993700;0;1
?WriteBool@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_N_N@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteBool(bool) __ptr64;992300;992300;992300;0;1
??0ParseResult@cxxopts@@QEAA@$$QEAV01@@Z;??0ParseResult@cxxopts@@QEAA@$$QEAV01@@Z;992200;992200;992200;0;1
??0exception@std@@QEAA@QEBDH@Z;__cdecl std::exception::exception(char const * __ptr64 const,int) __ptr64;991355;278200;12514800;2795047;18
?EndArray@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NI@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::EndArray(unsigned int) __ptr64;990300;990300;990300;0;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;989700;989700;989700;0;1
?GetEntry@BuildTimeline@@AEAAPEAVTimelineEntry@@AEB_K@Z;class TimelineEntry * __ptr64 __cdecl BuildTimeline::GetEntry(unsigned __int64 const & __ptr64) __ptr64;988500;988500;988500;0;1
??$make_shared@I$$V@std@@YA?AV?$shared_ptr@I@0@XZ;??$make_shared@I$$V@std@@YA?AV?$shared_ptr@I@0@XZ;987700;987700;987700;0;1
?_Quantifier@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Quantifier(void) __ptr64;986100;986100;986100;0;1
??0DataPerTemplate@?A0x5cdd232a@@QEAA@$$QEAU01@@Z;??0DataPerTemplate@?A0x5cdd232a@@QEAA@$$QEAU01@@Z;983700;983700;983700;0;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$cha;983000;983000;983000;0;1
??$make_shared@V?$standard_value@_N@values@cxxopts@@$$V@std@@YA?AV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@XZ;??$make_shared@V?$standard_value@_N@values@cxxopts@@$$V@std@@YA?AV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@XZ;977700;977700;977700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::cha;977300;272000;1682600;705300;2
??$AddMember@_J@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@U?$GenericStringRef@D@1@_JAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember<__int64>(struct rapidjson::GenericStringRef<char>,__int64,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;974500;974500;974500;0;1
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_for<class <lambda_66f57f934f28d61049862f64df852ff0>,char const * __ptr64>(unsigned __int64,class <lambda_66f57f934f28d61049862f64df852ff0>,char const * __ptr64) __ptr64;970842;882600;1089400;66568;7
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@std@@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@0@0V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;void __cdecl std::sort<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >,class <lambda_1fae86a0efb35da210a6f82844560f44> >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >,class <lambda_1fae86a0efb35da210a6f82844560f44>);970400;970400;970400;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,str;969650;939200;1000100;30450;2
?_Dec@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Dec(void) __ptr64;969200;969200;969200;0;1
??$_Uninitialized_move@PEAVKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@YAPEAVKeyValue@cxxopts@@QEAV12@0PEAV12@AEAV?$allocator@VKeyValue@cxxopts@@@0@@Z;class cxxopts::KeyValue * __ptr64 __cdecl std::_Uninitialized_move<class cxxopts::KeyValue * __ptr64,class std::allocator<class cxxopts::KeyValue> >(class cxxopts::KeyValue * __ptr64 const,class cxxopts::KeyValue * __ptr64 const,class cxxopts::KeyValue * __ptr64,class std::allocator<class cxxopts::KeyValue> & __ptr64);968900;968900;968900;0;1
??$_Insertion_sort_unchecked@PEAUDataPerFunction@?A0x5f10505a@@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAPEAUDataPerFunction@?A0x5f10505a@@PEAU12@QEAU12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::_Insertion_sort_unchecked<struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb> >(struct A0x5f10505a::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64 const,class <lambda_a33a5b45400f41721695e6a519a2a4eb>);965900;965900;965900;0;1
?_Is_wbound@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEBA_NXZ;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Is_wbound(void)const __ptr64;962000;962000;962000;0;1
??0?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Hash<class std::_Umap_traits;959400;959400;959400;0;1
??0?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::p;954700;954700;954700;0;1
??$?0V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >(class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > const & __ptr64) __ptr64;950266;217300;2388700;1017187;3
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std;949400;949400;949400;0;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DL;949300;949300;949300;0;1
??$_Uninitialized_move@PEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@YAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@QEAU10@0PEAU10@AEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@0@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::_Uninitialized_move<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,;948800;948800;948800;0;1
?parse_option@ParseResult@cxxopts@@AEAAXV?$shared_ptr@VOptionDetails@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@1@Z;void __cdecl cxxopts::ParseResult::parse_option(class std::shared_ptr<class cxxopts::OptionDetails>,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;948100;948100;948100;0;1
??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_for<class <lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char>(unsigned __int64,class <lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char) __ptr64;947900;947900;947900;0;1
??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@@Z@Z;945300;945300;945300;0;1
?_Do_capture_group@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_capture_group(void) __ptr64;941800;941800;941800;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator;940300;663400;1217200;276900;2
??0?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@$$QEAV?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@@Z;??0?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@$$QEAV?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@@Z;936200;936200;936200;0;1
?_Insert_new_node_before@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@_KPEAX@2@_KQEAU32@1@Z;struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Insert_new_node_before(unsigned __int64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const) __ptr64;934300;934300;934300;0;1
?generate_all_groups_help@Options@cxxopts@@AEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void __cdecl cxxopts::Options::generate_all_groups_help(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64)const __ptr64;933100;933100;933100;0;1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned __int64,char) __ptr64;930900;930900;930900;0;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationD;929900;929900;929900;0;1
??0?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::alloc;928900;928900;928900;0;1
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z;void __cdecl std::_Adjust_manually_vector_aligned(void * __ptr64 & __ptr64,unsigned __int64 & __ptr64);926694;804900;1439800;158305;18
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,c;925100;911700;938500;13400;2
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Alloc_sentinel_and_proxy(void) __ptr64;923300;923300;923300;0;1
??$make_shared@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@std@@YA?AV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@XZ;??$make_shared@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@std@@YA?AV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@XZ;921700;921700;921700;0;1
??$make_shared@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@AEBV123@@std@@YA?AV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@0@AEBV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@Z;class std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > __cdecl std::make_shared<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(class cxxopts::values::standard_value<class std::basic_stri;919900;919900;919900;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Alloc_sentinel_and_proxy(void) __ptr64;919700;919700;919700;0;1
??1FunctionCompilationsAnalyzer@@UEAA@XZ;virtual __cdecl FunctionCompilationsAnalyzer::~FunctionCompilationsAnalyzer(void) __ptr64;919200;919200;919200;0;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ;918350;888200;948500;30150;2
?_Else_if@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXPEAV_Node_base@2@0@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Else_if(class std::_Node_base * __ptr64,class std::_Node_base * __ptr64) __ptr64;917000;917000;917000;0;1
??$_Insertion_sort_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@PEAPEBU10@QEAPEBU10@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::_Insertion_sort_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,class <lambda_5b04ced4049247d028dd2b0acc74b1e0> >(struct std::pair<class std::basic_string<char,struc;916900;916900;916900;0;1
??$_Uninitialized_move@PEAV?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@YAPEAV?$sub_match@PEBD@0@QEAV10@0PEAV10@AEAV?$allocator@V?$sub_match@PEBD@std@@@0@@Z;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::_Uninitialized_move<class std::sub_match<char const * __ptr64> * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >(class std::sub_match<char const * __ptr64> * __ptr64 const,class std::sub_match<char const * __ptr64> * __ptr64 const,class std::sub_match<char const * __ptr64> * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64);916400;916400;916400;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits;916200;916200;916200;0;1
??0?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsi;915300;915300;915300;0;1
??1TemplateInstantiationsExporter@@QEAA@XZ;__cdecl TemplateInstantiationsExporter::~TemplateInstantiationsExporter(void) __ptr64;914000;914000;914000;0;1
??0?$basic_regex@DV?$regex_traits@D@std@@@std@@QEAA@PEBDW4syntax_option_type@regex_constants@1@@Z;__cdecl std::basic_regex<char,class std::regex_traits<char> >::basic_regex<char,class std::regex_traits<char> >(char const * __ptr64,enum std::regex_constants::syntax_option_type) __ptr64;913400;913400;913400;0;1
?_Inc@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Inc(void) __ptr64;912700;912700;912700;0;1
??$make_shared@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$$V@std@@YA?AV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@0@XZ;??$make_shared@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$$V@std@@YA?AV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@;912500;912500;912500;0;1
??$make_shared@V?$standard_value@I@values@cxxopts@@AEBV123@@std@@YA?AV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@0@AEBV?$standard_value@I@values@cxxopts@@@Z;class std::shared_ptr<class cxxopts::values::standard_value<unsigned int> > __cdecl std::make_shared<class cxxopts::values::standard_value<unsigned int>,class cxxopts::values::standard_value<unsigned int> const & __ptr64>(class cxxopts::values::standard_value<unsigned int> const & __ptr64);910800;910800;910800;0;1
??1FunctionCompilationsExporter@@QEAA@XZ;__cdecl FunctionCompilationsExporter::~FunctionCompilationsExporter(void) __ptr64;908700;908700;908700;0;1
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<char> >::~_String_val<struct std::_Simple_types<char> >(void) __ptr64;906268;189900;8243700;2004046;16
?OnFunction@BuildTimelineAnalyzer@@AEAAXAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnFunction(class Microsoft::Cpp::BuildInsights::Activities::Function const & __ptr64) __ptr64;903700;903700;903700;0;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigne;903100;903100;903100;0;1
??$_Uninitialized_move@PEAUHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@YAPEAUHelpOptionDetails@cxxopts@@QEAU12@0PEAU12@AEAV?$allocator@UHelpOptionDetails@cxxopts@@@0@@Z;struct cxxopts::HelpOptionDetails * __ptr64 __cdecl std::_Uninitialized_move<struct cxxopts::HelpOptionDetails * __ptr64,class std::allocator<struct cxxopts::HelpOptionDetails> >(struct cxxopts::HelpOptionDetails * __ptr64 const,struct cxxopts::HelpOptionDetails * __ptr64 const,struct cxxopts::HelpOptionDetails * __ptr64,class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64);899800;899800;899800;0;1
??0FunctionCompilationsExporter@@QEAA@AEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@@Z;__cdecl FunctionCompilationsExporter::FunctionCompilationsExporter(class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_st;898400;898400;898400;0;1
??$_Uninitialized_move@PEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@YAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAV12345@0PEAV12345@AEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@0@@Z;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::_Uninitialized_move<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyz;896100;896100;896100;0;1
??$make_shared@V?$standard_value@_N@values@cxxopts@@AEBV123@@std@@YA?AV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@AEBV?$standard_value@_N@values@cxxopts@@@Z;class std::shared_ptr<class cxxopts::values::standard_value<bool> > __cdecl std::make_shared<class cxxopts::values::standard_value<bool>,class cxxopts::values::standard_value<bool> const & __ptr64>(class cxxopts::values::standard_value<bool> const & __ptr64);894600;894600;894600;0;1
??$_Insertion_sort_unchecked@PEAUDataPerFile@?A0x120c265a@@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAPEAUDataPerFile@?A0x120c265a@@PEAU12@QEAU12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::_Insertion_sort_unchecked<struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44> >(struct A0x120c265a::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64 const,class <lambda_1fae86a0efb35da210a6f82844560f44>);894500;894500;894500;0;1
??D?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@XZ;class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator*(void)const __ptr64;894300;894300;894300;0;1
??0TemplateInstantiationsExporter@@QEAA@AEBV?$unordered_map@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AEBV?$unordered_map@_KUTemplateInstantiationData@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@@2@@Z;__cdecl TemplateInstantiationsExporter::TemplateInstantiationsExporter(class std::unordered_map<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64,class std::unordered_map<unsigned __int64,struct TemplateInstan;894000;894000;894000;0;1
??$_Uninitialized_move@PEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@YAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::_Uninitialized_move<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct;893000;893000;893000;0;1
??$_Uninitialized_move@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@QEAU120@0PEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Uninitialized_move<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(struct std::_Tgt_state_t<class std::_String_const;891700;891700;891700;0;1
??0?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAA@AEBV?$regex_traits@D@1@W4syntax_option_type@regex_constants@1@@Z;__cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Builder<char const * __ptr64,char,class std::regex_traits<char> >(class std::regex_traits<char> const & __ptr64,enum std::regex_constants::syntax_option_type) __ptr64;890900;890900;890900;0;1
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std;890200;890200;890200;0;1
??$find@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@K@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@V10@V10@AEBK@Z;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > __cdecl std::find<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >,unsigned long>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >,unsigned long const & __ptr64);889500;889500;889500;0;1
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::L;887100;887100;887100;0;1
??$_Range_construct_or_tidy@PEBD@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEBD0Uforward_iterator_tag@1@@Z;void __cdecl std::vector<char,class std::allocator<char> >::_Range_construct_or_tidy<char const * __ptr64>(char const * __ptr64,char const * __ptr64,struct std::forward_iterator_tag) __ptr64;886600;886600;886600;0;1
?_Alloc_sentinel_and_proxy@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Alloc_sentinel_and_proxy(void) __ptr64;881200;872100;890300;9100;2
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB;878700;878700;878700;0;1
??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::_Uninitialized_move<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,class std::basic_string<char,struct std::char_traits<char>,class;878700;878700;878700;0;1
?_Wrapped_disjunction@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Wrapped_disjunction(void) __ptr64;878500;878500;878500;0;1
??$_Uninitialized_copy@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@QEAU120@0PEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Uninitialized_copy<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(struct std::_Tgt_state_t<class std::_String_const;877200;877200;877200;0;1
?parse_value@values@cxxopts@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEA_N@Z;void __cdecl cxxopts::values::parse_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,bool & __ptr64);875800;875800;875800;0;1
??$forward@V?$allocator@PEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$allocator@PEAVTimelineEntry@@@0@AEAV10@@Z;??$forward@V?$allocator@PEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$allocator@PEAVTimelineEntry@@@0@AEAV10@@Z;875500;875500;875500;0;1
??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@Bu;875000;875000;875000;0;1
??$make_shared@V?$standard_value@I@values@cxxopts@@PEAI@std@@YA?AV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@0@$$QEAPEAI@Z;??$make_shared@V?$standard_value@I@values@cxxopts@@PEAI@std@@YA?AV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@0@$$QEAPEAI@Z;870500;870500;870500;0;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Insert_new_node_before(unsigned __int64,struct std::_List_node<struct;870100;870100;870100;0;1
?BuildFullFilePath@?A0x31623763@@YAXPEA_WH@Z;void __cdecl `anonymous namespace'::BuildFullFilePath(wchar_t * __ptr64,int);869100;869100;869100;0;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0;865000;865000;865000;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >::_Alloc_sentinel_and_proxy(void) __ptr64;863200;863200;863200;0;1
??A?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@_K@Z;class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::operator[](unsigned __int64) __ptr64;860900;860900;860900;0;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator*(void)const __ptr64;857900;857900;857900;0;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >::operator*(void)const __ptr64;856200;856200;856200;0;1
??0OptionDetails@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00V?$shared_ptr@$$CBVValue@cxxopts@@@3@@Z;__cdecl cxxopts::OptionDetails::OptionDetails(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::shared_ptr<class cxxopts::Value const >) __ptr64;856000;856000;856000;0;1
??$?0PEAD$0A@@?$vector@DV?$allocator@D@std@@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z;__cdecl std::vector<char,class std::allocator<char> >::vector<char,class std::allocator<char> ><char * __ptr64,0>(char * __ptr64,char * __ptr64,class std::allocator<char> const & __ptr64) __ptr64;855900;855900;855900;0;1
??$_Uninitialized_move@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@YAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@QEAU10@0PEAU10@AEAV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@0@@Z;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::_Uninitialized_move<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemap;855000;855000;855000;0;1
??$?R_K@?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >::operator()<unsigned __int64>(unsigned __int64 const & __ptr64)const __ptr64;852271;287100;4088200;1321319;7
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64);849100;810200;888000;38900;2
??$?0PEBD$0A@@?$vector@DV?$allocator@D@std@@@std@@QEAA@PEBD0AEBV?$allocator@D@1@@Z;__cdecl std::vector<char,class std::allocator<char> >::vector<char,class std::allocator<char> ><char const * __ptr64,0>(char const * __ptr64,char const * __ptr64,class std::allocator<char> const & __ptr64) __ptr64;848500;848500;848500;0;1
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::operator[](unsigned __int64)const __ptr64;848100;848100;848100;0;1
?generate_group_help@Options@cxxopts@@AEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z;void __cdecl cxxopts::Options::generate_group_help(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64)const __ptr64;841100;841100;841100;0;1
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ;virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::underflow(void) __ptr64;840233;750000;983000;77424;6
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allo;839650;768300;911000;71350;2
??0?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@_KAEB_NAEBV?$allocator@_N@1@@Z;__cdecl std::_Vb_val<class std::allocator<bool> >::_Vb_val<class std::allocator<bool> >(unsigned __int64,bool const & __ptr64,class std::allocator<bool> const & __ptr64) __ptr64;839300;839300;839300;0;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::operator*(void)const __ptr64;838900;838900;838900;0;1
?OnCommandLineEvent@BuildTimelineAnalyzer@@AEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@456@@Z;void __cdecl BuildTimelineAnalyzer::OnCommandLineEvent(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64,class Microsoft::Cpp::BuildInsights::SimpleEvents::CommandLine const & __ptr64) __ptr64;838800;838800;838800;0;1
??$_Uninitialized_move@PEAUDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@YAPEAUDataPerFunction@?A0x5f10505a@@QEAU12@0PEAU12@AEAV?$allocator@UDataPerFunction@?A0x5f10505a@@@0@@Z;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::_Uninitialized_move<struct `anonymous namespace'::DataPerFunction * __ptr64,class std::allocator<struct `anonymous namespace'::DataPerFunction> >(struct A0x5f10505a::DataPerFunction * __ptr64 const,struct A0x5f10505a::DataPerFunction * __ptr64 const,struct A0x5f10505a::DataPerFunction * __ptr64,class std::allocator<struct `anonymous namespace'::DataPerFunction> & __ptr64);838400;838400;838400;0;1
?_Incref_nz@_Ref_count_base@std@@QEAA_NXZ;bool __cdecl std::_Ref_count_base::_Incref_nz(void) __ptr64;835400;835400;835400;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> >;835100;835100;835100;0;1
??$make_shared@_N$$V@std@@YA?AV?$shared_ptr@_N@0@XZ;??$make_shared@_N$$V@std@@YA?AV?$shared_ptr@_N@0@XZ;831100;831100;831100;0;1
??$RunFindId@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@Buil;830900;830900;830900;0;1
??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000> > __cdecl std::chrono::duration_cast<class std::chrono::duration<__int64,struct std::ratio<1,1000000> >,__int64,struct std::ratio<1,1000000000>,0>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);830500;830500;830500;0;1
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z;__cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::sentry(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64) __ptr64;830483;764900;919600;50297;6
?parse@?$abstract_value@_N@values@cxxopts@@UEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;virtual void __cdecl cxxopts::values::abstract_value<bool>::parse(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;829400;829400;829400;0;1
??$find@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@PEAVTimelineEntry@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@V10@V10@AEBQEAVTimelineEntry@@@Z;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > __cdecl std::find<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >,class TimelineEntry * __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >,class Timeli;828100;827100;829100;1000;2
?EndObject@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NI@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::EndObject(unsigned int) __ptr64;827700;827700;827700;0;1
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z;void __cdecl std::_Iterator_base12::_Adopt(struct std::_Container_base12 const * __ptr64) __ptr64;824966;559500;3645800;756087;15
??$_Sort_unchecked@PEAUDataPerFunction@?A0x5f10505a@@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@0_JV<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;void __cdecl std::_Sort_unchecked<struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb> >(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,__int64,class <lambda_a33a5b45400f41721695e6a519a2a4eb>);824800;824800;824800;0;1
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z;class std::allocator<char> const & __ptr64 __cdecl std::forward<class std::allocator<char> const & __ptr64>(class std::allocator<char> const & __ptr64);823700;823700;823700;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >) __ptr64;821900;821900;821900;0;1
??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@;821700;821700;821700;0;1
??$_Uninitialized_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::_Uninitialized_copy<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,class std::basic_string<char,struct std::char_traits<char>,class;821500;821500;821500;0;1
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z;virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::seekoff(__int64,int,int) __ptr64;820683;782600;865600;29466;6
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Find_last<unsigned __int64>(unsigned __int64 const & ;820500;721700;919300;98800;2
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;820200;744700;895700;75500;2
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry>;819400;819400;819400;0;1
?AddNestedEntry@BuildTimeline@@QEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl BuildTimeline::AddNestedEntry(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64,class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;817600;817600;817600;0;1
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::operator+<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,char const * __ptr64 const);817000;817000;817000;0;1
??$append@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,0>(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >) __ptr64;816500;816500;816500;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_Li;816000;754400;877600;61600;2
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<ch;814600;297000;1332200;517600;2
??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const * __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::operator->(v;814000;814000;814000;0;1
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@std@@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@0@0V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;void __cdecl std::sort<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >,class <lambda_a33a5b45400f41721695e6a519a2a4eb> >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >,class <lambda_a33a5b45400f41721695e6a519a2a4eb>);813800;813800;813800;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > const & __ptr64>(class std::_List_unchecked_ite;812900;812900;812900;0;1
?_Orphan_range@?$vector@_NV?$allocator@_N@std@@@std@@QEBAX_K0@Z;void __cdecl std::vector<bool,class std::allocator<bool> >::_Orphan_range(unsigned __int64,unsigned __int64)const __ptr64;812200;812200;812200;0;1
??$_Sort_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@0_JV<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;void __cdecl std::_Sort_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,class <lambda_5b04ced4049247d028dd2b0acc74b1e0> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std;812000;812000;812000;0;1
??$RunFindId@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp;811800;811800;811800;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Alloc_sentinel_and_proxy(void) __ptr64;811800;811800;811800;0;1
?parse@Options@cxxopts@@QEAA?AVParseResult@2@AEAHAEAPEAPEAD@Z;class cxxopts::ParseResult __cdecl cxxopts::Options::parse(int & __ptr64,char * __ptr64 * __ptr64 & __ptr64) __ptr64;811600;811600;811600;0;1
?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64);810200;810200;810200;0;1
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator*(void)const __ptr64;808800;808800;808800;0;1
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > __cdecl std::chrono::duration_cast<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,__int64,struct std::ratio<1,1000>,0>(class std::chrono::duration<__int64,struct std::ratio<1,1000> > const & __ptr64);807500;807500;807500;0;1
??$_Sort_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0_JV<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Sort_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;807400;807400;807400;0;1
?_Make_iter@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Make_iter(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<cha;807300;807300;807300;0;1
?AddMember@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@U?$GenericStringRef@D@2@AEAV12@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember(struct rapidjson::GenericStringRef<char>,class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,class rapidjson::MemoryPoolAllocator<class rapidj;807000;807000;807000;0;1
??$make_unique@V_Node_assert@std@@W4_Node_type@2@$0A@@std@@YA?AV?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@0@$$QEAW4_Node_type@0@@Z;??$make_unique@V_Node_assert@std@@W4_Node_type@2@$0A@@std@@YA?AV?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@0@$$QEAW4_Node_type@0@@Z;806900;806900;806900;0;1
?_Getptr@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAPEBIXZ;unsigned int const * __ptr64 __cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Getptr(void)const __ptr64;805600;805600;805600;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Orphan_non_end(void) __ptr64;805250;566600;1043900;238650;2
?_Add_elts@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAXPEAV?$_Node_class@DV?$regex_traits@D@std@@@2@F_N@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_elts(class std::_Node_class<char,class std::regex_traits<char> > * __ptr64,short,bool) __ptr64;802800;802800;802800;0;1
?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Reallocate_exactly(unsigned __int64) __ptr64;801900;801900;801900;0;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator*(void)const __ptr64;801600;801600;801600;0;1
??H?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV01@_J@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator+(__int64)const __ptr64;801500;801500;801500;0;1
??$try_emplace@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;??$try_emplace@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@;801200;801200;801200;0;1
??$_Assign_range@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@0Uforward_iterator_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Assign_range<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64>(struct std::_Tgt_state_t<class std::_String_const_i;800800;800800;800800;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class ;799766;361400;1676500;619944;3
?_Calculate_loop_simplicity@std@@YAXPEAV_Node_base@1@0PEAV_Node_rep@1@@Z;void __cdecl std::_Calculate_loop_simplicity(class std::_Node_base * __ptr64,class std::_Node_base * __ptr64,class std::_Node_rep * __ptr64);799600;799600;799600;0;1
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@0V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;void __cdecl std::sort<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > >,class <lambda_5b04ced4049247d028dd2b0acc74b1e0> >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;797600;797600;797600;0;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,str;797550;710300;884800;87250;2
??1TemplateInstantiationsAnalyzer@@UEAA@XZ;virtual __cdecl TemplateInstantiationsAnalyzer::~TemplateInstantiationsAnalyzer(void) __ptr64;797400;797400;797400;0;1
??$_Sort_unchecked@PEAUDataPerFile@?A0x120c265a@@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@0_JV<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;void __cdecl std::_Sort_unchecked<struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44> >(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,__int64,class <lambda_1fae86a0efb35da210a6f82844560f44>);796500;796500;796500;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_typ;796300;796300;796300;0;1
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::operator++(void) __ptr64;795600;795600;795600;0;1
?_Add_str_node@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_str_node(void) __ptr64;793200;793200;793200;0;1
?ExportFileInclusionGraph@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportFileInclusionGraph(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;790400;790400;790400;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Alloc_sentinel_and_proxy(void) __ptr64;789900;737100;842700;52800;2
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void) __ptr64;789800;450900;4591500;986723;16
?_Add_char_to_bitmap@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAXD@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_char_to_bitmap(char) __ptr64;787900;787900;787900;0;1
?clear@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;787600;787600;787600;0;1
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const & __ptr64 __cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::operator*(void)const __ptr64;785600;785600;785600;0;1
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<ch;785300;785300;785300;0;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,c;784800;784800;784800;0;1
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ;__cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::~unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >(void) __ptr64;784371;301200;3499400;1108595;7
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;784000;784000;784000;0;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_trai;782900;342900;1222900;440000;2
?add_one_option@Options@cxxopts@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@4@@Z;void __cdecl cxxopts::Options::add_one_option(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails>) __ptr64;782700;782700;782700;0;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64);782600;782600;782600;0;1
?do_compare@?$collate@D@std@@MEBAHPEBD000@Z;virtual int __cdecl std::collate<char>::do_compare(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64)const __ptr64;781700;781700;781700;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cp;779700;779700;779700;0;1
??$_Pop_heap_hole_by_index@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@U12@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@_J1$$QEAU10@V<lambda_b91a942b4070954e66476ae297366993>@@@Z;??$_Pop_heap_hole_by_index@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@U12@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@_J1$$QEAU10@V<lambda_b91a942b4070954e66476ae297366993>@@@Z;779300;779300;779300;0;1
??F?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::operator--(void) __ptr64;779200;779200;779200;0;1
?_Char_to_elts@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAXPEBD0_JPEAPEAU?$_Sequence@D@2@@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Char_to_elts(char const * __ptr64,char const * __ptr64,__int64,struct std::_Sequence<char> * __ptr64 * __ptr64) __ptr64;778700;778700;778700;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::_Alloc_sentinel_and_proxy(void) __ptr64;778500;778500;778500;0;1
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z;class std::basic_filebuf<char,struct std::char_traits<char> > * __ptr64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::open(char const * __ptr64,int,int) __ptr64;777466;745600;833800;31323;6
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Alloc_sentinel_and_proxy(void) __ptr64;777000;777000;777000;0;1
?_Orphan_range@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEBAXPEAVKeyValue@cxxopts@@0@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Orphan_range(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64)const __ptr64;776100;776100;776100;0;1
?name@locale@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::locale::name(void)const __ptr64;775000;775000;775000;0;1
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@0V<lambda_b91a942b4070954e66476ae297366993>@@@Z;void __cdecl std::sort<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >,class <lambda_b91a942b4070954e66476ae297366993> >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >,class std::_Vector_iterator<class std::;774800;774800;774800;0;1
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,cla;774600;761200;788000;13400;2
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::sort<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >,class <lambda_9480883bff83c29d8fc89bed48609766> >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct Fil;772800;772800;772800;0;1
??$_Uninitialized_value_construct_n@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAU120@_KAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Uninitialized_value_construct_n<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,unsigned __int64,class std::allocato;772100;772100;772100;0;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator*(void)const __ptr64;770600;770600;770600;0;1
??$_Pop_heap_hole_by_index@PEAUDataPerFunction@?A0x5f10505a@@U12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@_J1$$QEAU12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;??$_Pop_heap_hole_by_index@PEAUDataPerFunction@?A0x5f10505a@@U12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@_J1$$QEAU12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;768200;768200;768200;0;1
??H?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA?AV01@_J@Z;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator+(__int64)const __ptr64;766500;766500;766500;0;1
??$AddMember@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@U?$GenericStringRef@D@1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(struct rapidjson::GenericStringRef<char>,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class rapi;765200;765200;765200;0;1
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator++(void) __ptr64;763300;763300;763300;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Alloc_sentinel_and_proxy(void) __ptr64;762300;762300;762300;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >(class std::_List_unchecked_iterator;761400;761400;761400;0;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@1@XZ;struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::operator*(void)const __ptr64;761100;761100;761100;0;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::_Alloc_sentinel_and_proxy(void) __ptr64;759800;759800;759800;0;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::operator*(void)const __ptr64;759800;759800;759800;0;1
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z;void __cdecl std::_Deallocate_plain<class std::allocator<struct std::_Container_proxy> >(class std::allocator<struct std::_Container_proxy> & __ptr64,struct std::_Container_proxy * __ptr64 const);759077;246000;5453700;1376982;18
?ExportFileCompilationsData@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportFileCompilationsData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;758500;758500;758500;0;1
?Realloc@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAAPEAXPEAX_K1@Z;void * __ptr64 __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::Realloc(void * __ptr64,unsigned __int64,unsigned __int64) __ptr64;758500;758500;758500;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;758200;758200;758200;0;1
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::operator+<char,struct std::char_traits<char>,class std::allocator<char> >(char const * __ptr64 const,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);758100;758100;758100;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<c;757850;699600;816100;58250;2
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@1@AEBU;757800;757800;757800;0;1
??4?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAAAEAV01@AEBV01@@Z;class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::operator=(class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const & __ptr64) __ptr64;756000;756000;756000;0;1
?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<bool,class std::allocator<bool> >::max_size(void)const __ptr64;755700;755700;755700;0;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CB_KVTimelineEntry@@@1@XZ;struct std::pair<unsigned __int64 const ,class TimelineEntry> const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator*(void)const __ptr64;755600;755600;755600;0;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CB_KUProcessThreadRemap@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::operator*(void)const __ptr64;755050;744400;765700;10650;2
??$_Resize@U_Value_init_tag@std@@@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Resize<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;755000;755000;755000;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >(class std::_List_unchecked_cons;753300;739900;766700;13400;2
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,cla;751900;751900;751900;0;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > > const & __ptr64);751200;751200;751200;0;1
??0TimelineEntry@@QEAA@AEBV0@@Z;__cdecl TimelineEntry::TimelineEntry(class TimelineEntry const & __ptr64) __ptr64;750200;750200;750200;0;1
??$_Sort_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@0_JV<lambda_b91a942b4070954e66476ae297366993>@@@Z;void __cdecl std::_Sort_unchecked<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae297366993> >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,__int64,class <lambda_b91a942b4070954e66476ae297;750100;750100;750100;0;1
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::_Alloc_sentinel_and_proxy(void) __ptr64;750100;750100;750100;0;1
?_End_group@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXPEAV_Node_base@2@@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_End_group(class std::_Node_base * __ptr64) __ptr64;749700;749700;749700;0;1
??$RunFindId@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@;749500;749500;749500;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<cl;749400;749400;749400;0;1
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEBAAEBQEAVTimelineEntry@@XZ;class TimelineEntry * __ptr64 const & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::operator*(void)const __ptr64;747400;747400;747400;0;1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z;??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z;747220;555700;1102700;196901;5
??$_Uninitialized_value_construct_n@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAV10@_KAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::_Uninitialized_value_construct_n<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,unsigned __int64,class std::allocator<class std::sub_match<class std::_;747100;747100;747100;0;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > > const & __ptr64);745700;745700;745700;0;1
??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z;unsigned int * __ptr64 __cdecl std::_Uninitialized_fill_n<class std::allocator<unsigned int> >(unsigned int * __ptr64,unsigned __int64,unsigned int const & __ptr64,class std::allocator<unsigned int> & __ptr64);744400;744400;744400;0;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;742500;742500;742500;0;1
??D?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@QEBAAEBQEAVTimelineEntry@@XZ;class TimelineEntry * __ptr64 const & __ptr64 __cdecl std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >::operator*(void)const __ptr64;742400;742400;742400;0;1
??$_Uninitialized_value_construct_n@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@YAPEAV?$sub_match@PEBD@0@PEAV10@_KAEAV?$allocator@V?$sub_match@PEBD@std@@@0@@Z;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::_Uninitialized_value_construct_n<class std::allocator<class std::sub_match<char const * __ptr64> > >(class std::sub_match<char const * __ptr64> * __ptr64,unsigned __int64,class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64);742400;742400;742400;0;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __p;740800;740800;740800;0;1
?_Tidy@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Tidy(void) __ptr64;739700;739700;739700;0;1
?_Orphan_range@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEBAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@0@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Orphan_range(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilation;739300;739300;739300;0;1
??$RunContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZV12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@1234@$$QEAVFrontEndFile@Activities@234@@Z;??$RunContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZV12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHan;735800;735800;735800;0;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;735000;735000;735000;0;1
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::;733800;733800;733800;0;1
??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$all;733000;733000;733000;0;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > > const & __ptr64);732900;732900;732900;0;1
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struc;732866;713300;745400;14016;3
??$_Pop_heap_hole_by_index@PEAUDataPerFile@?A0x120c265a@@U12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@_J1$$QEAU12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;??$_Pop_heap_hole_by_index@PEAUDataPerFile@?A0x120c265a@@U12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@_J1$$QEAU12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;732800;732800;732800;0;1
??$_Find_last@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class ;730800;730800;730800;0;1
?AddMember@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@U?$GenericStringRef@D@2@0AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember(struct rapidjson::GenericStringRef<char>,struct rapidjson::GenericStringRef<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;729400;729400;729400;0;1
?_Alloc_sentinel_and_proxy@?$list@_KV?$allocator@_K@std@@@std@@AEAAXXZ;void __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::_Alloc_sentinel_and_proxy(void) __ptr64;728300;728300;728300;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,cla;727200;687200;767200;40000;2
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;727100;727100;727100;0;1
?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z;virtual __int64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::xsputn(char const * __ptr64,__int64) __ptr64;726916;689000;826500;47505;6
??$_Lookup_coll@PEBDD@std@@YAPEBDPEBD0PEBU?$_Sequence@D@0@@Z;char const * __ptr64 __cdecl std::_Lookup_coll<char const * __ptr64,char>(char const * __ptr64,char const * __ptr64,struct std::_Sequence<char> const * __ptr64);726800;726800;726800;0;1
??$_Uninitialized_value_construct_n@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@PEAU120@_KAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Uninitialized_value_construct_n<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,unsigned __int64,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64);726700;726700;726700;0;1
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,cla;726300;726300;726300;0;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@2@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V21@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@;726200;726200;726200;0;1
??0IRelogger@BuildInsights@Cpp@Microsoft@@QEAA@XZ;__cdecl Microsoft::Cpp::BuildInsights::IRelogger::IRelogger(void) __ptr64;725557;177700;3737200;1230673;7
??$_Resize@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Resize<unsigned int>(unsigned __int64,unsigned int const & __ptr64) __ptr64;725400;725400;725400;0;1
??$insert@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAAXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@1@0@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::cha;723600;723600;723600;0;1
?ExportBuildTimeline@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportBuildTimeline(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;722600;722600;722600;0;1
??0?$_Tuple_val@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@AEBU01@@Z;__cdecl std::_Tuple_val<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::_Tuple_val<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::Buil;722400;722400;722400;0;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;721500;721500;721500;0;1
??$_Reset@PEBD@?$basic_regex@DV?$regex_traits@D@std@@@std@@AEAAXPEBD0W4syntax_option_type@regex_constants@1@Uforward_iterator_tag@1@@Z;void __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Reset<char const * __ptr64>(char const * __ptr64,char const * __ptr64,enum std::regex_constants::syntax_option_type,struct std::forward_iterator_tag) __ptr64;719500;719500;719500;0;1
??$_Resize@U_Value_init_tag@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Resize<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;717100;717100;717100;0;1
??$_Pop_heap_hole_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@_J1$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;??$_Pop_heap_hole_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@_J1$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;716400;716400;716400;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<c;715600;715600;715600;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>) __ptr64;715500;715500;715500;0;1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned __int64,char) __ptr64;714500;675500;753500;39000;2
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUFileCompilationData@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAUFileCompilationData@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUFileCompilationData@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$;713500;713500;713500;0;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAPEBD@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAPEBD@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAPEBD@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAPEBD@1@@Z;713200;694600;731800;18600;2
?NormalizedBoundaries@DiyFp@internal@rapidjson@@QEBAXPEAU123@0@Z;void __cdecl rapidjson::internal::DiyFp::NormalizedBoundaries(struct rapidjson::internal::DiyFp * __ptr64,struct rapidjson::internal::DiyFp * __ptr64)const __ptr64;712500;712500;712500;0;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,stru;712400;712400;712400;0;1
?ExportFunctionCompilationsData@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportFunctionCompilationsData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;710200;710200;710200;0;1
?_Begin_capture_group@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Node_base@2@I@Z;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Begin_capture_group(unsigned int) __ptr64;710200;710200;710200;0;1
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,s;708400;708400;708400;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Check_rehash_required_1(void)const __ptr64;708000;708000;708000;0;1
??0?$collate@D@std@@QEAA@AEBV_Locinfo@1@_K@Z;__cdecl std::collate<char>::collate<char>(class std::_Locinfo const & __ptr64,unsigned __int64) __ptr64;707800;707800;707800;0;1
??$_Pop_heap_hole_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEBU12@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@_J1$$QEAPEBU10@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;??$_Pop_heap_hole_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEBU12@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@_J1$$QEAPEBU10@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;707200;707200;707200;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;705500;705500;705500;0;1
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z;__cdecl std::_Container_proxy_ptr12<class std::allocator<struct std::_Container_proxy> >::_Container_proxy_ptr12<class std::allocator<struct std::_Container_proxy> >(class std::allocator<struct std::_Container_proxy> & __ptr64,struct std::_Container_base12 & __ptr64) __ptr64;705164;446900;3536400;786086;14
??0?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@$$QEAV01@@Z;??0?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@$$QEAV01@@Z;703866;582100;855000;113329;3
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA?AV01@H@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator++(int) __ptr64;703100;703100;703100;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::alloca;702750;417900;987600;284850;2
??$_Find_last@_K@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@_KPEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Find_last<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64)const __ptr64;702300;691900;712700;10400;2
??$_Uninitialized_copy@PEAPEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@YAPEAPEAVTimelineEntry@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVTimelineEntry@@@0@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Uninitialized_copy<class TimelineEntry * __ptr64 * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >(class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 * __ptr64,class std::allocator<class TimelineEntry * __ptr64> & __ptr64);701400;701400;701400;0;1
?length@?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEBA_JXZ;__int64 __cdecl std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::length(void)const __ptr64;701000;701000;701000;0;1
?clear@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;700500;700500;700500;0;1
?OnStopActivity@TemplateInstantiationsAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl TemplateInstantiationsAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;700500;700500;700500;0;1
??$_Compare@PEBDPEBDV?$regex_traits@D@std@@@std@@YAPEBDPEBD000AEBV?$regex_traits@D@0@W4syntax_option_type@regex_constants@0@@Z;char const * __ptr64 __cdecl std::_Compare<char const * __ptr64,char const * __ptr64,class std::regex_traits<char> >(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64,class std::regex_traits<char> const & __ptr64,enum std::regex_constants::syntax_option_type);699900;699900;699900;0;1
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __i;698900;698900;698900;0;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV01@AEAV01@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@1@@?$_Ref_count_obj2@VOptionDetails@cxxopts@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0AEAV21@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@1@@Z;__cdecl std::_Ref_count_obj2<class cxxopts::OptionDetails>::_Ref_count_obj2<class cxxopts::OptionDetails><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::shared_ptr<class cxxopts::Value const > & __ptr64>(class std::basic_string<char,struct ;698600;698600;698600;0;1
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_tra;698600;698600;698600;0;1
??$_Resize@U_Value_init_tag@std@@@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Resize<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;698500;698500;698500;0;1
??$_Verify_range@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXQEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const * __ptr64 const,class std::_List_uncheck;697650;494500;900800;203150;2
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@V?$tuple@$$V@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@$$QEAV?$tuple@$$V@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@V?$tuple@$$V@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@$$QEAV?$tuple@$$V;697400;697400;697400;0;1
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z;void * __ptr64 __cdecl std::_Allocate_manually_vector_aligned<struct std::_Default_allocate_traits>(unsigned __int64);697394;603400;1257400;142480;18
?_Orphan_range@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEBAXPEAUDataPerFile@?A0x120c265a@@0@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Orphan_range(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64)const __ptr64;696000;696000;696000;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >(class std::;693150;661000;725300;32150;2
?_Disjunction@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Disjunction(void) __ptr64;693100;693100;693100;0;1
?parse_default@OptionValue@cxxopts@@QEAAXV?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@@Z;void __cdecl cxxopts::OptionValue::parse_default(class std::shared_ptr<class cxxopts::OptionDetails const >) __ptr64;693000;693000;693000;0;1
??$construct@VKeyValue@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@?$_Default_allocator_traits@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@SAXAEAV?$allocator@VKeyValue@cxxopts@@@1@QEAVKeyValue@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@2@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class cxxopts::KeyValue> >::construct<class cxxopts::KeyValue,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::allocator<class cxxopts::KeyValue> & __ptr64,class cxxopts::KeyValue * __ptr64 const,class std::basic_string<char,struct std::char_traits<char>,class std::a;692900;692900;692900;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct s;691700;691700;691700;0;1
??$?8V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@V01@@std@@YA_NAEBV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@0@0@Z;bool __cdecl std::operator==<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >(class std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > > const & __ptr64,class std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vecto;691300;691300;691300;0;1
??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVFrontEndFile@Activities@345@@Z;??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft;690800;690800;690800;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::cha;690500;618500;762500;72000;2
??$try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;struct std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >,bool> __cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;690300;690300;690300;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct P;690000;690000;690000;0;1
??0KeyValue@cxxopts@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;__cdecl cxxopts::KeyValue::KeyValue(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;689300;689300;689300;0;1
??$_Uninitialized_value_construct_n@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@YAPEAU_Loop_vals_t@0@PEAU10@_KAEAV?$allocator@U_Loop_vals_t@std@@@0@@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::_Uninitialized_value_construct_n<class std::allocator<struct std::_Loop_vals_t> >(struct std::_Loop_vals_t * __ptr64,unsigned __int64,class std::allocator<struct std::_Loop_vals_t> & __ptr64);688900;688900;688900;0;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAVTimelineEntry@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAVTimelineEntry@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAVTimelineEntry@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAVTimelineEntry@@@1@@Z;688700;688700;688700;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::al;688500;680900;696100;7600;2
??$Analyze@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@YA?AW4RESULT_CODE@012@PEBDIV?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@012@@Z;enum Microsoft::Cpp::BuildInsights::RESULT_CODE __cdecl Microsoft::Cpp::BuildInsights::Analyze<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >(char const * __ptr64,unsigned int,;688100;688100;688100;0;1
??$_Resize@U_Value_init_tag@std@@@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Resize<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;688100;688100;688100;0;1
??A?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAAAEAU_Grp_t@?$_Tgt_state_t@PEBD@1@_K@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::operator[](unsigned __int64) __ptr64;687500;687500;687500;0;1
?Grisu2@internal@rapidjson@@YAXNPEADPEAH1@Z;void __cdecl rapidjson::internal::Grisu2(double,char * __ptr64,int * __ptr64,int * __ptr64);685500;685500;685500;0;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAUFileCompilationData@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAUFileCompilationData@@@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAUFileCompilationData@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char;685100;685100;685100;0;1
?push_back@?$vector@KV?$allocator@K@std@@@std@@QEAAXAEBK@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::push_back(unsigned long const & __ptr64) __ptr64;684800;684800;684800;0;1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const * __ptr64 const,unsigned __int64) __ptr64;683800;658100;709500;25700;2
??0?$vector@_NV?$allocator@_N@std@@@std@@QEAA@_KAEBV?$allocator@_N@1@@Z;__cdecl std::vector<bool,class std::allocator<bool> >::vector<bool,class std::allocator<bool> >(unsigned __int64,class std::allocator<bool> const & __ptr64) __ptr64;683800;683800;683800;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_str;683000;683000;683000;0;1
?_Change_array@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXQEAVKeyValue@cxxopts@@_K1@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Change_array(class cxxopts::KeyValue * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;682000;682000;682000;0;1
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;struct std::_Tree_find_result<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64> __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::a;681600;681600;681600;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >) __ptr64;681400;681400;681400;0;1
??$?0AEBV?$standard_value@I@values@cxxopts@@@?$_Ref_count_obj2@V?$standard_value@I@values@cxxopts@@@std@@QEAA@AEBV?$standard_value@I@values@cxxopts@@@Z;__cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<unsigned int> >::_Ref_count_obj2<class cxxopts::values::standard_value<unsigned int> ><class cxxopts::values::standard_value<unsigned int> const & __ptr64>(class cxxopts::values::standard_value<unsigned int> const & __ptr64) __ptr64;681300;681300;681300;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_;681100;681100;681100;0;1
?_Change_array@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXQEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@_K1@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Change_array(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;681000;526000;963500;200072;3
??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZV12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@1234@$$QEAVActivity@Activities@234@@Z;??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZV12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTi;680600;680600;680600;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >);680000;680000;680000;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __;678900;678900;678900;0;1
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Find_last<unsigned __int64>(unsi;678600;678600;678600;0;1
?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Tidy(void) __ptr64;678000;678000;678000;0;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@@Z;677900;677900;677900;0;1
?clear@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;676900;676900;676900;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Orphan_non_end(void) __ptr64;676800;599700;753900;77100;2
?FilterFunction@FilterTimelineAnalyzer@@AEAAXAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl FilterTimelineAnalyzer::FilterFunction(class Microsoft::Cpp::BuildInsights::Activities::Function const & __ptr64) __ptr64;674800;674800;674800;0;1
??$_Guess_median_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@00V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;void __cdecl std::_Guess_median_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,class <lambda_5b04ced4049247d028dd2b0acc74b1e0> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,st;674200;674200;674200;0;1
?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::_Make_iter(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >) __ptr64;674000;674000;674000;0;1
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Find_last<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned _;673900;673900;673900;0;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;673850;645500;702200;28350;2
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;672500;672500;672500;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >) __ptr64;671700;671700;671700;0;1
??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V21@$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1@Z;??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V21@$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1@Z;671200;671200;671200;0;1
??$_Unfancy@D@std@@YAPEADPEAD@Z;char * __ptr64 __cdecl std::_Unfancy<char>(char * __ptr64);671106;191500;6603500;1540711;16
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `an;670600;670600;670600;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >) __ptr64;669300;669300;669300;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std;668100;668100;668100;0;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAUTemplateInstantiationData@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAUTemplateInstantiationData@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAUTemplateInstantiationData@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAUTemplateInstantiationData@@@1@@Z;667500;667500;667500;0;1
?clear@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::clear(void) __ptr64;667450;595500;739400;71950;2
??$try_emplace@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$try_emplace@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allo;667300;667300;667300;0;1
?WriteExponent@internal@rapidjson@@YAPEADHPEAD@Z;char * __ptr64 __cdecl rapidjson::internal::WriteExponent(int,char * __ptr64);666100;666100;666100;0;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > > const & __ptr64)const __ptr64;665600;665600;665600;0;1
??$forward_as_tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;class std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64> __cdecl std::forward_as_tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);665600;313500;1660500;574629;4
??$_Cmp_chrange@PEBDPEBDU?$_Cmp_icase@V?$regex_traits@D@std@@@std@@@std@@YAPEBDPEBD000U?$_Cmp_icase@V?$regex_traits@D@std@@@0@@Z;char const * __ptr64 __cdecl std::_Cmp_chrange<char const * __ptr64,char const * __ptr64,struct std::_Cmp_icase<class std::regex_traits<char> > >(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64,struct std::_Cmp_icase<class std::regex_traits<char> >);665100;665100;665100;0;1
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;664833;362000;2050500;620036;6
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z;void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Init(struct _iobuf * __ptr64,enum std::basic_filebuf<char,struct std::char_traits<char> >::_Initfl) __ptr64;664050;601600;769900;62892;6
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;662500;662500;662500;0;1
?clear@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;661650;650400;672900;11250;2
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;661300;661300;661300;0;1
??A?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBAAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@_K@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::operator[](unsigned __int64)const __ptr64;660950;623200;698700;37750;2
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_bas;660550;653000;668100;7550;2
??$uninitialized_fill@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> >(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64 const,class std::_List;660000;660000;660000;0;1
??$_Range_construct_or_tidy@PEAD@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0Uforward_iterator_tag@1@@Z;void __cdecl std::vector<char,class std::allocator<char> >::_Range_construct_or_tidy<char * __ptr64>(char * __ptr64,char * __ptr64,struct std::forward_iterator_tag) __ptr64;659400;659400;659400;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::alloc;658900;549500;768300;109400;2
??A?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAAAEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@_K@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::operator[](unsigned __int64) __ptr64;658700;658700;658700;0;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64)const __ptr64;657000;657000;657000;0;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 c;655700;655700;655700;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class ;654600;654600;654600;0;1
?PushBack@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@AEAV12@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::PushBack(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;654400;654400;654400;0;1
?clear@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;654100;654100;654100;0;1
?_Add_char_to_array@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAXD@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_char_to_array(char) __ptr64;653300;653300;653300;0;1
??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@1234@AEBVEventStack@234@$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V123;653100;653100;653100;0;1
?SetName@TimelineEntry@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void __cdecl TimelineEntry::SetName(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;652400;652400;652400;0;1
??$_Prev_iter@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Prev_iter<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >);652200;652200;652200;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,cl;651800;651800;651800;0;1
?_IsIdentityEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEBA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_IsIdentityEscape(void)const __ptr64;651100;651100;651100;0;1
??$?0AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char;651000;651000;651000;0;1
?_Change_array@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAXQEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@_K1@Z;void __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Change_array(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;647600;647600;647600;0;1
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBA?AV01@_J@Z;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::operator+(__int64)const __ptr64;646800;646800;646800;0;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_tr;646700;556700;736700;90000;2
??0?$abstract_value@_N@values@cxxopts@@QEAA@XZ;__cdecl cxxopts::values::abstract_value<bool>::abstract_value<bool>(void) __ptr64;646300;646300;646300;0;1
??$?0$$V@?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@XZ;??$?0$$V@?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@XZ;644500;644500;644500;0;1
??$_Guess_median_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@00V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Guess_median_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std:;644000;644000;644000;0;1
??$_Push_heap_by_index@PEAUDataPerFile@?A0x120c265a@@U12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@_J1$$QEAU12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;??$_Push_heap_by_index@PEAUDataPerFile@?A0x120c265a@@U12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@_J1$$QEAU12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;643300;643300;643300;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;642250;620400;664100;21850;2
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@;640400;640400;640400;0;1
??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZVCommandLine@SimpleEvents@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@1234@$$QEAVCommandLine@SimpleEvents@234@@Z;??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZVCommandLine@SimpleEvents@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@C;640300;640300;640300;0;1
?clear@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::clear(void) __ptr64;640200;640200;640200;0;1
??$_Get_unwrapped@AEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA@AEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;__cdecl std::_Get_unwrapped<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const & __ptr64);638700;638700;638700;0;1
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned __int64) __ptr64;638400;638400;638400;0;1
?clear@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::clear(void) __ptr64;638000;638000;638000;0;1
??$_Guess_median_unchecked@PEAUDataPerFile@?A0x120c265a@@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@00V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;void __cdecl std::_Guess_median_unchecked<struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44> >(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44>);637500;637500;637500;0;1
?clear@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::clear(void) __ptr64;637500;637500;637500;0;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr6;637400;637400;637400;0;1
?_Orphan_range@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEBAXPEAPEAVTimelineEntry@@0@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Orphan_range(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64)const __ptr64;637300;625100;649500;12200;2
??$try_emplace@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$try_emplace@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allo;636200;636200;636200;0;1
??1BuildAnalyzer@@QEAA@XZ;__cdecl BuildAnalyzer::~BuildAnalyzer(void) __ptr64;635300;635300;635300;0;1
??0?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vb_val<class std::allocator<bool> >::_Vb_val<class std::allocator<bool> >(class std::_Vb_val<class std::allocator<bool> > const & __ptr64) __ptr64;635100;635100;635100;0;1
??$_Guess_median_unchecked@PEAUDataPerFunction@?A0x5f10505a@@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@00V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;void __cdecl std::_Guess_median_unchecked<struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb> >(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb>);634900;634900;634900;0;1
??$_Debug_lt_pred@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@$0A@@std@@YA_NAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1@Z;bool __cdecl std::_Debug_lt_pred<struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,0>(struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64,class std::basic_str;634800;634800;634800;0;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::Op;634700;634700;634700;0;1
??A?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEAAAEAU_Loop_vals_t@1@_K@Z;struct std::_Loop_vals_t & __ptr64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::operator[](unsigned __int64) __ptr64;633400;633400;633400;0;1
?OnStopActivity@BuildTimelineAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl BuildTimelineAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;632400;632400;632400;0;1
??$try_emplace@AEAUProcessThreadRemap@@@?$unordered_map@_KUProcessThreadRemap@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@_N@1@AEB_KAEAUProcessThreadRemap@@@Z;struct std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >,bool> __cdecl std::unordered_map<unsigned __int64,struct ProcessThreadRemap,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::try_emplace<struct ProcessThreadRemap & __ptr64>(unsigned __int64 const & __ptr64,struct Process;632000;632000;632000;0;1
?_Calculate_growth@?$vector@IV?$allocator@I@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Calculate_growth(unsigned __int64)const __ptr64;631900;631900;631900;0;1
?_ClassEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA?AW4_Prs_ret@2@_N@Z;enum std::_Prs_ret __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_ClassEscape(bool) __ptr64;630800;630800;630800;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct ;630500;630500;630500;0;1
??$equal@PEBDPEBDU?$_Cmp_icase@V?$_Regex_traits@D@std@@@std@@@std@@YA_NQEBD00U?$_Cmp_icase@V?$_Regex_traits@D@std@@@0@@Z;bool __cdecl std::equal<char const * __ptr64,char const * __ptr64,struct std::_Cmp_icase<class std::_Regex_traits<char> > >(char const * __ptr64 const,char const * __ptr64 const,char const * __ptr64 const,struct std::_Cmp_icase<class std::_Regex_traits<char> >);629700;629700;629700;0;1
??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_N@Z;class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator=(bool) __ptr64;629600;629600;629600;0;1
?_New_node@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAPEAV_Node_base@2@W4_Node_type@2@@Z;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_New_node(enum std::_Node_type) __ptr64;628700;628700;628700;0;1
?parse_default@ParseResult@cxxopts@@AEAAXV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@Z;void __cdecl cxxopts::ParseResult::parse_default(class std::shared_ptr<class cxxopts::OptionDetails>) __ptr64;628500;628500;628500;0;1
?_Change_array@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAXQEAPEAVTimelineEntry@@_K1@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Change_array(class TimelineEntry * __ptr64 * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;627500;541100;713900;86400;2
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z;char const & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned __int64)const __ptr64;627500;627500;627500;0;1
?_CharacterClassEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_N_N@Z;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_CharacterClassEscape(bool) __ptr64;626000;626000;626000;0;1
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z;static unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Calculate_growth(unsigned __int64,unsigned __int64,unsigned __int64);624253;524200;1057600;142573;13
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<cl;623950;525700;722200;98250;2
?_Check_rehash_required_1@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Check_rehash_required_1(void)const __ptr64;623800;623800;623800;0;1
?clear@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::clear(void) __ptr64;623300;623300;623300;0;1
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::operator==(class std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > > const & __ptr64)con;622400;622400;622400;0;1
?_Clear_and_reserve_geometric@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Clear_and_reserve_geometric(unsigned __int64) __ptr64;620900;620900;620900;0;1
??$_Assign_range@PEAI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0Uforward_iterator_tag@1@@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Assign_range<unsigned int * __ptr64>(unsigned int * __ptr64,unsigned int * __ptr64,struct std::forward_iterator_tag) __ptr64;620400;620400;620400;0;1
??$Expand@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@AEAAX_K@Z;void __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Expand<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level>(unsigned __int64) __ptr64;620000;620000;620000;0;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >) __ptr64;619000;619000;619000;0;1
?_Clear_and_reserve_geometric@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Clear_and_reserve_geometric(unsigned __int64) __ptr64;619000;619000;619000;0;1
??$AddMember@_K@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@AEAV01@_KAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember<unsigned __int64>(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,unsigned __int64,class rapidjson::MemoryPoolAllocator<class rapidjson::C;618700;618700;618700;0;1
??$AddMember@_K@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@U?$GenericStringRef@D@1@_KAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember<unsigned __int64>(struct rapidjson::GenericStringRef<char>,unsigned __int64,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;618400;618400;618400;0;1
?parse@OptionValue@cxxopts@@QEAAXV?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z;void __cdecl cxxopts::OptionValue::parse(class std::shared_ptr<class cxxopts::OptionDetails const >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;617000;617000;617000;0;1
??$?0V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@QEAA@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@123@@Z;__cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::Ana;616400;616400;616400;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;616400;616400;616400;0;1
?_Orphan_range@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEBAXPEAU_Loop_vals_t@2@0@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Orphan_range(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64)const __ptr64;615500;615500;615500;0;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64)const __ptr64;613900;613900;613900;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@1@$$QEA_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@1@$$QEA_N@Z;613800;613800;613800;0;1
?clear@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::clear(void) __ptr64;612900;612900;612900;0;1
??$_Guess_median_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@00V<lambda_b91a942b4070954e66476ae297366993>@@@Z;void __cdecl std::_Guess_median_unchecked<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae297366993> >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry con;612900;612900;612900;0;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allo;612700;612700;612700;0;1
?translate@?$_Regex_traits@D@std@@QEBADD@Z;char __cdecl std::_Regex_traits<char>::translate(char)const __ptr64;612700;612700;612700;0;1
?_Orphan_range@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEBAXPEAUDataPerFunction@?A0x5f10505a@@0@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Orphan_range(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64)const __ptr64;612300;612300;612300;0;1
??$try_emplace@V?$vector@_KV?$allocator@_K@std@@@std@@@?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;??$try_emplace@V?$vector@_KV?$allocator@_K@std@@@std@@@?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;612100;612100;612100;0;1
?_Orphan_range@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEBAXPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@0@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Orphan_range(struct std::pair<class std::basic_string<char,struct st;609900;609900;609900;0;1
??A?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAAAEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@_K@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > & __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::operator[](unsigned __int64) __ptr64;609100;609100;609100;0;1
?end@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::end(void) __ptr64;608700;608700;608700;0;1
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z;??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z;608700;608700;608700;0;1
?_Calculate_growth@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Calculate_growth(unsigned __int64)const __ptr64;606700;606700;606700;0;1
??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@$$QEAV01@@Z;??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@$$QEAV01@@Z;606200;606200;606200;0;1
??A?$vector@IV?$allocator@I@std@@@std@@QEAAAEAI_K@Z;unsigned int & __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::operator[](unsigned __int64) __ptr64;605600;605600;605600;0;1
??$distance@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA_JV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z;__int64 __cdecl std::distance<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >);603600;603600;603600;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class st;603200;603200;603200;0;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const & __ptr64)const __ptr64;603100;603100;603100;0;1
??$_Debug_lt_pred@AEAV<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@AEAPEBU23@$0A@@std@@YA_NAEAV<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@1@Z;bool __cdecl std::_Debug_lt_pred<class <lambda_5b04ced4049247d028dd2b0acc74b1e0> & __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 & __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 & __ptr64,0>(class <lambda_5b04ced4049247d028dd2b0acc74b1e0;602300;602300;602300;0;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KVTimelineEntry@@@1@XZ;struct std::pair<unsigned __int64 const ,class TimelineEntry> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator*(void)const __ptr64;602300;602300;602300;0;1
??$?0AEB_K@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@_KPEAX@std@@@1@AEB_K@Z;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >::_List_node_emplace_op2<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > ><unsigned __int64 const & __ptr64>(class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > & __ptr64,unsigned __int64 const & __ptr64) __ptr64;601900;601900;601900;0;1
??0?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@W4Type@1@@Z;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(enum rapidjson::Type) __ptr64;601600;601600;601600;0;1
??A?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEBAAEBV?$sub_match@PEBD@1@_K@Z;class std::sub_match<char const * __ptr64> const & __ptr64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::operator[](unsigned __int64)const __ptr64;601300;601300;601300;0;1
?FinishTimeline@BuildTimeline@@QEAAXXZ;void __cdecl BuildTimeline::FinishTimeline(void) __ptr64;601300;601300;601300;0;1
?_Orphan_range@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEBAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Orphan_range(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_it;601100;601100;601100;0;1
??$try_emplace@AEAVTimelineEntry@@@?$unordered_map@_KVTimelineEntry@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@_N@1@AEB_KAEAVTimelineEntry@@@Z;struct std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >,bool> __cdecl std::unordered_map<unsigned __int64,class TimelineEntry,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::try_emplace<class TimelineEntry & __ptr64>(unsigned __int64 const & __ptr64,class TimelineEntry & __ptr64) __ptr64;601000;601000;601000;0;1
?_Add_char@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXD@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_char(char) __ptr64;600200;600200;600200;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Orphan_non_end(void) __ptr64;600100;600100;600100;0;1
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z;__cdecl std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,int,int) __ptr64;599750;523200;766200;83931;6
??A?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAAEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@_K@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::operator[](unsigned __int64) __ptr64;599300;599300;599300;0;1
?clear@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;599000;599000;599000;0;1
??$_Debug_lt_pred@AEAV<lambda_9480883bff83c29d8fc89bed48609766>@@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@AEAPEBU23@$0A@@std@@YA_NAEAV<lambda_9480883bff83c29d8fc89bed48609766>@@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@1@Z;bool __cdecl std::_Debug_lt_pred<class <lambda_9480883bff83c29d8fc89bed48609766> & __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 & __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 & __ptr64,0>(class <lambda_9480883bff83c29d8fc89bed48609766> & __ptr64,struct std::pair<class std;598900;598900;598900;0;1
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;598600;598600;598600;0;1
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ;__cdecl std::vector<char,class std::allocator<char> >::~vector<char,class std::allocator<char> >(void) __ptr64;598400;598400;598400;0;1
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Compat(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64)const __ptr64;597200;597200;597200;0;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > const & __ptr64)const __ptr64;596900;596900;596900;0;1
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V01@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@0U?$integer_sequence@_K$0A@@1@1@Z;??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V01@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@0U?$integer_sequence@_K$0A@@1@1@Z;596600;596600;596600;0;1
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::`scalar deleting destructor'(unsigned int) __ptr64;596450;340700;852200;255750;2
??A?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBAAEBV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@_K@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::operator[](unsigned __int64)const __ptr64;596200;596200;596200;0;1
??$?0AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,;595600;595600;595600;0;1
?_Tidy@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Tidy(void) __ptr64;594800;594800;594800;0;1
??$construct@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@@Z;??$construct@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@1@AEB;594400;594400;594400;0;1
??$try_emplace@AEAULocalThreadData@PackedProcessThreadRemapper@@@?$unordered_map@_KULocalThreadData@PackedProcessThreadRemapper@@U?$hash@_K@std@@U?$equal_to@_K@4@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@_N@1@AEB_KAEAULocalThreadData@PackedProcessThreadRemapper@@@Z;struct std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >,bool> __cdecl std::unordered_map<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::try_emplace<struct;594400;594400;594400;0;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > const & __ptr64)const __ptr64;594266;551900;621000;30298;3
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;594100;594100;594100;0;1
?_Orphan_range@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEBAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@0@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::_Orphan_range(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;593200;593200;593200;0;1
??$_Make_heap_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@0V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;void __cdecl std::_Make_heap_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,class <lambda_5b04ced4049247d028dd2b0acc74b1e0> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struc;593200;593200;593200;0;1
?clear@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::clear(void) __ptr64;592000;592000;592000;0;1
?_Null@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAAEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@XZ;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Null(void) __ptr64;591600;591600;591600;0;1
??$equal@PEBDPEBDU?$_Cmp_icase@V?$_Regex_traits@D@std@@@std@@@std@@YA_NQEBD000U?$_Cmp_icase@V?$_Regex_traits@D@std@@@0@@Z;bool __cdecl std::equal<char const * __ptr64,char const * __ptr64,struct std::_Cmp_icase<class std::_Regex_traits<char> > >(char const * __ptr64 const,char const * __ptr64 const,char const * __ptr64 const,char const * __ptr64 const,struct std::_Cmp_icase<class std::_Regex_traits<char> >);591500;591500;591500;0;1
?_Tidy@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Tidy(void) __ptr64;591100;591100;591100;0;1
?_Orphan_range@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEBAXPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@0@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Orphan_range(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64)const __ptr64;591066;568500;631300;28519;3
??A?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAAAEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@_K@Z;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> & __ptr64 __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::operator[](unsigned __int64) __ptr64;590900;590900;590900;0;1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned __int64,char) __ptr64;590400;590400;590400;0;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > const & __ptr64)const __ptr64;590250;567300;613200;22950;2
?_Orphan_range@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBAXPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Orphan_range(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64)const __ptr64;590100;590100;590100;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >::_Orphan_non_end(void) __ptr64;590000;580000;600000;10000;2
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;589400;589400;589400;0;1
??$_Make_heap_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@0V<lambda_b91a942b4070954e66476ae297366993>@@@Z;void __cdecl std::_Make_heap_unchecked<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae297366993> >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae297366;589100;589100;589100;0;1
??$try_emplace@PEBD@?$unordered_map@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAPEBD@Z;??$try_emplace@PEBD@?$unordered_map@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAPEBD@Z;587950;579100;596800;8850;2
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Orphan_non_end(void) __ptr64;586500;586500;586500;0;1
?_Change_array@?$vector@IV?$allocator@I@std@@@std@@AEAAXQEAI_K1@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Change_array(unsigned int * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;586500;586500;586500;0;1
?_Clear_and_reserve_geometric@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Clear_and_reserve_geometric(unsigned __int64) __ptr64;586400;586400;586400;0;1
?_Orphan_range@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEBAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@0@Z;void __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Orphan_range(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper;586000;586000;586000;0;1
?clear@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::clear(void) __ptr64;586000;586000;586000;0;1
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAXAEBV12@@Z;void __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_Compat(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64)const __ptr64;585900;585900;585900;0;1
?add_options@Options@cxxopts@@QEAA?AVOptionAdder@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cxxopts::OptionAdder __cdecl cxxopts::Options::add_options(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;584500;584500;584500;0;1
?_Orphan_range@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEBAXPEAUHelpOptionDetails@cxxopts@@0@Z;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Orphan_range(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64)const __ptr64;584000;584000;584000;0;1
?_Tidy@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Tidy(void) __ptr64;584000;542600;625400;41400;2
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >::_Orphan_non_end(void) __ptr64;583900;583900;583900;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Orphan_non_end(void) __ptr64;583700;583700;583700;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::_Orphan_non_end(void) __ptr64;583500;583500;583500;0;1
??$RunFindId@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft;583200;583200;583200;0;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;582500;582500;582500;0;1
?_Tidy@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXXZ;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Tidy(void) __ptr64;581900;581900;581900;0;1
?ensure_value@OptionValue@cxxopts@@AEAAXV?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@@Z;void __cdecl cxxopts::OptionValue::ensure_value(class std::shared_ptr<class cxxopts::OptionDetails const >) __ptr64;581700;581700;581700;0;1
?SetStringRaw@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAXU?$GenericStringRef@D@2@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;void __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::SetStringRaw(struct rapidjson::GenericStringRef<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;581300;581300;581300;0;1
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z;??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z;581005;344900;4047900;841916;18
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z;struct std::_Iterator_base12 & __ptr64 __cdecl std::_Iterator_base12::operator=(struct std::_Iterator_base12 const & __ptr64) __ptr64;580836;522700;654900;38175;11
?_Orphan_range@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEBAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Orphan_range(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64)const __ptr64;580000;580000;580000;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct s;578900;578900;578900;0;1
??$try_emplace@UDataPerTemplate@?A0x5cdd232a@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUDataPerTemplate@?A0x5cdd232a@@@Z;??$try_emplace@UDataPerTemplate@?A0x5cdd232a@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$p;578600;578600;578600;0;1
?_Change_array@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAXQEAV?$sub_match@PEBD@2@_K1@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Change_array(class std::sub_match<char const * __ptr64> * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;578100;578100;578100;0;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Desired_gro;577900;577900;577900;0;1
??0?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@U?$GenericStringRef@D@1@@Z;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(struct rapidjson::GenericStringRef<char>) __ptr64;577400;577400;577400;0;1
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ;void __cdecl std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::_Tidy_deallocate(void) __ptr64;577400;577400;577400;0;1
?_Orphan_range@?$vector@_KV?$allocator@_K@std@@@std@@AEBAXPEA_K0@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Orphan_range(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64)const __ptr64;576900;576900;576900;0;1
?_Change_array@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAXQEAUHelpOptionDetails@cxxopts@@_K1@Z;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Change_array(struct cxxopts::HelpOptionDetails * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;575500;575500;575500;0;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@2@@?$_Defa;574900;574900;574900;0;1
??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z;??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxx;574800;574800;574800;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basi;574700;297200;852200;277500;2
?_Add_class@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_class(void) __ptr64;573800;573800;573800;0;1
?_Orphan_range@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBAXPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Orphan_range(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>;573200;573200;573200;0;1
??$_Debug_lt_pred@AEAV<lambda_a33a5b45400f41721695e6a519a2a4eb>@@AEAUDataPerFunction@?A0x5f10505a@@AEAU23@$0A@@std@@YA_NAEAV<lambda_a33a5b45400f41721695e6a519a2a4eb>@@AEAUDataPerFunction@?A0x5f10505a@@1@Z;bool __cdecl std::_Debug_lt_pred<class <lambda_a33a5b45400f41721695e6a519a2a4eb> & __ptr64,struct `anonymous namespace'::DataPerFunction & __ptr64,struct A0x5f10505a::DataPerFunction & __ptr64,0>(class <lambda_a33a5b45400f41721695e6a519a2a4eb> & __ptr64,struct `anonymous namespace'::DataPerFunction & __ptr64,struct `anonymous namespace'::DataPerFunction & __ptr64);572400;572400;572400;0;1
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Orphan_range(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64)const __ptr64;571900;571900;571900;0;1
??$_Cmp_chrange@PEBDPEBDU?$_Cmp_collate@V?$regex_traits@D@std@@@std@@@std@@YAPEBDPEBD000U?$_Cmp_collate@V?$regex_traits@D@std@@@0@@Z;char const * __ptr64 __cdecl std::_Cmp_chrange<char const * __ptr64,char const * __ptr64,struct std::_Cmp_collate<class std::regex_traits<char> > >(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64,struct std::_Cmp_collate<class std::regex_traits<char> >);571700;571700;571700;0;1
?_Orphan_range@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEBAXPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@0@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Orphan_range(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct st;571400;571400;571400;0;1
??$emplace_back@AEAUDataPerFile@?A0x120c265a@@@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAA@AEAUDataPerFile@?A0x120c265a@@@Z;__cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::emplace_back<struct `anonymous namespace'::DataPerFile & __ptr64>(struct `anonymous namespace'::DataPerFile & __ptr64) __ptr64;571200;571200;571200;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<cla;570850;231800;909900;339050;2
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Orphan_non_end(void) __ptr64;569200;569200;569200;0;1
??$Run@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@1234@AEBVEventStack@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@1234@AEBVEventStack@234@$;569200;569200;569200;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<cla;569000;542700;595300;26300;2
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > con;568000;568000;568000;0;1
??$construct@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAPEBD@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAPEBD@1@@Z;??$construct@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAPEBD@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$al;567950;498900;637000;69050;2
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & ;567900;567900;567900;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRe;567700;567700;567700;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;567300;567300;567300;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@1@@Z;567200;567200;567200;0;1
??0?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@_J@Z;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(__int64) __ptr64;567000;567000;567000;0;1
?_Change_array@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXQEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K1@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Change_array(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;566800;566800;566800;0;1
??$_Debug_lt_pred@AEAV<lambda_b91a942b4070954e66476ae297366993>@@AEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@AEAU23@$0A@@std@@YA_NAEAV<lambda_b91a942b4070954e66476ae297366993>@@AEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@1@Z;bool __cdecl std::_Debug_lt_pred<class <lambda_b91a942b4070954e66476ae297366993> & __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> & __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> & __ptr64,0>(class <lambda_b91a942b4070954e66476ae297366993> & __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData *;566700;566700;566700;0;1
?clear@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::clear(void) __ptr64;566500;566500;566500;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(void) __ptr64;566400;566400;566400;0;1
??$?0PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;566400;566400;566400;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;565800;565800;565800;0;1
??$?0PEA_N@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@$$QEAPEA_N@Z;??$?0PEA_N@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@$$QEAPEA_N@Z;565700;565700;565700;0;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class s;565200;565200;565200;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >(class s;565200;565200;565200;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class ;563400;563400;563400;0;1
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char;563200;563200;563200;0;1
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@@Z;void __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Lrotate(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64) __ptr64;563200;563200;563200;0;1
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@@Z;void __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Rrotate(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64) __ptr64;563000;563000;563000;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;562600;562600;562600;0;1
??$_Cmp_chrange@PEBDPEBDU?$_Cmp_cs@V?$regex_traits@D@std@@@std@@@std@@YAPEBDPEBD000U?$_Cmp_cs@V?$regex_traits@D@std@@@0@@Z;char const * __ptr64 __cdecl std::_Cmp_chrange<char const * __ptr64,char const * __ptr64,struct std::_Cmp_cs<class std::regex_traits<char> > >(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64,struct std::_Cmp_cs<class std::regex_traits<char> >);562100;562100;562100;0;1
??1?$_Node_class@DV?$regex_traits@D@std@@@std@@UEAA@XZ;virtual __cdecl std::_Node_class<char,class std::regex_traits<char> >::~_Node_class<char,class std::regex_traits<char> >(void) __ptr64;561200;561200;561200;0;1
?stringAppend@cxxopts@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV23@V23@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl cxxopts::stringAppend(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >);560600;560600;560600;0;1
?_Orphan_all@_Container_base12@std@@QEAAXXZ;void __cdecl std::_Container_base12::_Orphan_all(void) __ptr64;560172;493300;896800;93934;18
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Tree_temp_node_alloc<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::_Tree_temp_node_alloc<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std:;559800;559800;559800;0;1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@AEBV01@@Z;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_trait;558800;558800;558800;0;1
??0HelpOptionDetails@cxxopts@@QEAA@$$QEAU01@@Z;??0HelpOptionDetails@cxxopts@@QEAA@$$QEAU01@@Z;558700;558700;558700;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;557800;557800;557800;0;1
?_Orphan_range@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEBAXPEAV?$sub_match@PEBD@2@0@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Orphan_range(class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64)const __ptr64;556500;556500;556500;0;1
?_Tidy@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Tidy(void) __ptr64;555900;555900;555900;0;1
?clear@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::clear(void) __ptr64;555900;555900;555900;0;1
?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@AEBAXPEAI0@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Orphan_range(unsigned int * __ptr64,unsigned int * __ptr64)const __ptr64;555700;555700;555700;0;1
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::clear(void) __ptr64;555600;555600;555600;0;1
??$?0AEBV?$standard_value@_N@values@cxxopts@@@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@AEBV?$standard_value@_N@values@cxxopts@@@Z;__cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<bool> >::_Ref_count_obj2<class cxxopts::values::standard_value<bool> ><class cxxopts::values::standard_value<bool> const & __ptr64>(class cxxopts::values::standard_value<bool> const & __ptr64) __ptr64;555400;555400;555400;0;1
?_Make_iter@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Make_iter(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64)const __ptr64;555100;555100;555100;0;1
?AddChunk@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@AEAA_N_K@Z;bool __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::AddChunk(unsigned __int64) __ptr64;554700;554700;554700;0;1
?_Tidy@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Tidy(void) __ptr64;554500;554500;554500;0;1
??$_Debug_lt_pred@AEAV<lambda_1fae86a0efb35da210a6f82844560f44>@@AEAUDataPerFile@?A0x120c265a@@AEAU23@$0A@@std@@YA_NAEAV<lambda_1fae86a0efb35da210a6f82844560f44>@@AEAUDataPerFile@?A0x120c265a@@1@Z;bool __cdecl std::_Debug_lt_pred<class <lambda_1fae86a0efb35da210a6f82844560f44> & __ptr64,struct `anonymous namespace'::DataPerFile & __ptr64,struct A0x120c265a::DataPerFile & __ptr64,0>(class <lambda_1fae86a0efb35da210a6f82844560f44> & __ptr64,struct `anonymous namespace'::DataPerFile & __ptr64,struct `anonymous namespace'::DataPerFile & __ptr64);554300;554300;554300;0;1
??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@1234@AEBVEventStack@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@1234@AEBVEven;553500;553500;553500;0;1
??$_Uninitialized_copy@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@QEAU120@0PEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Uninitialized_copy<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __;553500;553500;553500;0;1
??$?0PEAI@?$_Ref_count_obj2@V?$standard_value@I@values@cxxopts@@@std@@QEAA@$$QEAPEAI@Z;??$?0PEAI@?$_Ref_count_obj2@V?$standard_value@I@values@cxxopts@@@std@@QEAA@$$QEAPEAI@Z;552700;552700;552700;0;1
??1?$vector@KV?$allocator@K@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::~vector<unsigned long,class std::allocator<unsigned long> >(void) __ptr64;552400;552400;552400;0;1
??$_Assign_range@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@1@0Uforward_iterator_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Assign_range<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::forward_iterator_tag) __ptr64;552200;552200;552200;0;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@2@@?$_Defaul;552000;552000;552000;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;551600;551600;551600;0;1
??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@$$V@1234@$$QEAVActivity@Activities@234@$$QEAVCommandLine@SimpleEvents@234@@Z;??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEB;551500;551500;551500;0;1
??0?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@QEAA@XZ;__cdecl std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >(void) __ptr64;551380;406900;857500;160494;5
?_Add_backreference@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXI@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_backreference(unsigned int) __ptr64;551000;551000;551000;0;1
??$_Destroy_range@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@YAXPEAVKeyValue@cxxopts@@QEAV12@AEAV?$allocator@VKeyValue@cxxopts@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class cxxopts::KeyValue> >(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64 const,class std::allocator<class cxxopts::KeyValue> & __ptr64);550900;550900;550900;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;550700;550700;550700;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::alloca;549700;518700;580700;31000;2
?_Tidy@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Tidy(void) __ptr64;549600;549600;549600;0;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PE;549350;490000;608700;59350;2
?Malloc@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAAPEAX_K@Z;void * __ptr64 __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::Malloc(unsigned __int64) __ptr64;549300;549300;549300;0;1
??0OptionAdder@cxxopts@@QEAA@AEAVOptions@1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::OptionAdder::OptionAdder(class cxxopts::Options & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;548800;548800;548800;0;1
??$Run@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@1234@AEBVEventStack@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VC;548300;548300;548300;0;1
??$min@_K@std@@YAAEB_KAEB_K0@Z;unsigned __int64 const & __ptr64 __cdecl std::min<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64);548000;548000;548000;0;1
??$?0AEBV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@AEBV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@Z;__cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > ><class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(class cxxopts::values::standard_value<class std::basic_stri;547800;547800;547800;0;1
??$MatchEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@@Z;??$MatchEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAE;547400;547400;547400;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Check_rehash_required_1(void)const __ptr64;547350;532900;561800;14450;2
??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVTemplateInstantiation@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstant;546000;546000;546000;0;1
?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Become_small(void) __ptr64;545800;545800;545800;0;1
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@AEBAXPEAK0@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Orphan_range(unsigned long * __ptr64,unsigned long * __ptr64)const __ptr64;545800;545800;545800;0;1
??$_Make_heap_unchecked@PEAUDataPerFunction@?A0x5f10505a@@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@0V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;void __cdecl std::_Make_heap_unchecked<struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb> >(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb>);545700;545700;545700;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Orphan_non_end(void) __ptr64;545600;545600;545600;0;1
?_Destroy_node@std@@YAXPEAV_Node_base@1@0@Z;void __cdecl std::_Destroy_node(class std::_Node_base * __ptr64,class std::_Node_base * __ptr64);545200;545200;545200;0;1
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~list<struct std::pair<class std::basic_string<char,struct std;544900;413100;676700;131800;2
??0?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >(void) __ptr64;544500;544500;544500;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class st;544400;544400;544400;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::max_size(void)const __ptr64;544100;445400;642800;98700;2
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_typ;544000;512300;575700;31700;2
?_Tidy@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Tidy(void) __ptr64;543500;543500;543500;0;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > const & __ptr64)const __ptr64;543300;543300;543300;0;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V;543300;543300;543300;0;1
?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Change_array(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;543200;543200;543200;0;1
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Tidy(void) __ptr64;542100;542100;542100;0;1
?_Change_array@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXQEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@_K1@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Change_array(struct std::pair<class std::basic_string<char,struct st;542000;542000;542000;0;1
??$_Construct_in_place@VOptionDetails@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@AEAV34@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@4@@std@@YAXAEAVOptionDetails@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1AEAV30@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@0@@Z;void __cdecl std::_Construct_in_place<class cxxopts::OptionDetails,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::shared_ptr<class cxxopts::Value const > & __ptr64>(class cxxopts::OptionDetails & __ptr64,class std::basic_string<char,struct ;541900;541900;541900;0;1
?_Change_array@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXQEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@_K1@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Change_array(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;541800;541800;541800;0;1
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z;void __cdecl <lambda_66f57f934f28d61049862f64df852ff0>::operator()(char * __ptr64 const,unsigned __int64,char const * __ptr64 const)const __ptr64;541700;268600;1903600;558102;7
??$?0V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@1@@Z;??$?0V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@;541600;530100;553100;11500;2
??$_Set_ptr_rep_and_enable_shared@V?$standard_value@I@values@cxxopts@@@?$shared_ptr@V?$standard_value@I@values@cxxopts@@@std@@AEAAXQEAV?$standard_value@I@values@cxxopts@@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class cxxopts::values::standard_value<unsigned int> >::_Set_ptr_rep_and_enable_shared<class cxxopts::values::standard_value<unsigned int> >(class cxxopts::values::standard_value<unsigned int> * __ptr64 const,class std::_Ref_count_base * __ptr64 const) __ptr64;541600;541600;541600;0;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std;541500;541500;541500;0;1
?_Change_array@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAXQEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K1@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Change_array(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;541300;541300;541300;0;1
??$?0AEBV?$allocator@_K@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > >::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > ><class std::allocator<unsigned __int64> const & __ptr64,0>(class std::allocator<unsigned __int64> const & __ptr64) __ptr64;541100;541100;541100;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Check_rehash_required_1(void)const __ptr64;540200;540200;540200;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_type;539800;384300;695300;155500;2
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Orphan_non_end(void) __ptr64;539500;539500;539500;0;1
?_Change_array@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXQEAU_Grp_t@?$_Tgt_state_t@PEBD@2@_K1@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Change_array(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;538900;538900;538900;0;1
??1locale@std@@QEAA@XZ;__cdecl std::locale::~locale(void) __ptr64;538275;420500;1217800;257665;8
??$_Push_heap_by_index@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@U12@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@_J1$$QEAU10@V<lambda_b91a942b4070954e66476ae297366993>@@@Z;??$_Push_heap_by_index@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@U12@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@_J1$$QEAU10@V<lambda_b91a942b4070954e66476ae297366993>@@@Z;538000;538000;538000;0;1
?_Tidy@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Tidy(void) __ptr64;536200;536200;536200;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_Orphan_non_end(void) __ptr64;536000;536000;536000;0;1
?_Tidy@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::_Tidy(void) __ptr64;535900;535900;535900;0;1
??0?$abstract_value@_N@values@cxxopts@@QEAA@PEA_N@Z;__cdecl cxxopts::values::abstract_value<bool>::abstract_value<bool>(bool * __ptr64) __ptr64;535600;535600;535600;0;1
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;534900;534900;534900;0;1
?StartTimestamp@Activity@Activities@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::Activity::StartTimestamp(void)const __ptr64;533833;201700;1976800;649736;6
??$AddMember@_J@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@AEAV01@_JAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember<__int64>(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,__int64,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __p;533500;533500;533500;0;1
??0?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAV01@@Z;533000;533000;533000;0;1
?_Change_array@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAXQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@_K1@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::_Change_array(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;532300;532300;532300;0;1
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::clear(void) __ptr64;532200;401300;663100;130900;2
??0?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@$$QEAV01@@Z;531500;531500;531500;0;1
??$try_emplace@AEAUTemplateInstantiationData@@@?$unordered_map@_KUTemplateInstantiationData@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@_N@1@AEB_KAEAUTemplateInstantiationData@@@Z;struct std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >,bool> __cdecl std::unordered_map<unsigned __int64,struct TemplateInstantiationData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::try_emplace<struct TemplateInstantiationData & __ptr64>(unsigned __int64 co;531400;531400;531400;0;1
??0?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64) __ptr64;531000;531000;531000;0;1
?_Compat@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAXAEBV12@@Z;void __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Compat(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;530700;530700;530700;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;530100;530100;530100;0;1
?clear@?$list@_KV?$allocator@_K@std@@@std@@QEAAXXZ;void __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::clear(void) __ptr64;530000;530000;530000;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<cha;529950;436200;623700;93750;2
??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@$0A@$$Z$0A@@?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@$0A@$$Z$0A@@?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;529400;529400;529400;0;1
?_Tidy@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Tidy(void) __ptr64;529200;529200;529200;0;1
??$?0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> ;529050;526400;531700;2650;2
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_str;527300;527300;527300;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic;527100;527100;527100;0;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@_K@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<unsigned __int64> >::_Orphan_non_end(void) __ptr64;526700;526700;526700;0;1
?WriteInt@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NH@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteInt(int) __ptr64;526400;526400;526400;0;1
?_Tidy@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXXZ;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Tidy(void) __ptr64;525766;506600;538200;13751;3
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;525733;202400;1100100;407209;3
??$?0AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > ><class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > const & __p;525500;525500;525500;0;1
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEBAXAEBV12@@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Compat(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64)const __ptr64;525466;496100;574200;34700;3
??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@1234@AEBVEventStack@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@M;525400;525400;525400;0;1
??$max@_K@std@@YAAEB_KAEB_K0@Z;unsigned __int64 const & __ptr64 __cdecl std::max<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64);525200;525200;525200;0;1
??$MatchEvent@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@@Z;??$MatchEvent@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@Simpl;525000;525000;525000;0;1
??$construct@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;??$construct@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$;524600;524600;524600;0;1
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z;void __cdecl std::_Container_base12::_Swap_proxy_and_iterators(struct std::_Container_base12 & __ptr64) __ptr64;524225;453400;587000;45639;8
??4locale@std@@QEAAAEBV01@AEBV01@@Z;class std::locale const & __ptr64 __cdecl std::locale::operator=(class std::locale const & __ptr64) __ptr64;524100;524100;524100;0;1
?_Change_array@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEAAXQEAUDataPerFile@?A0x120c265a@@_K1@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Change_array(struct `anonymous namespace'::DataPerFile * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;524000;524000;524000;0;1
?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ;void __cdecl std::vector<char,class std::allocator<char> >::_Tidy(void) __ptr64;523900;523900;523900;0;1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompil;523700;523700;523700;0;1
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEBAXAEBV12@@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::_Compat(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64)const __ptr64;523700;523700;523700;0;1
??$HandleAnalysisEvent@AEBVEventStack@BuildInsights@Cpp@Microsoft@@VIAnalyzer@234@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@AEBV1234@@DynamicEventHandlingSupport@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4AnalysisControl@234@AEAV?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@P8IAnalyzer@234@EAA?AW45234@AEBVEventStack@234@@Z1@Z;static enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicEventHandlingSupport::HandleAnalysisEvent<class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64>(class std::vector<class Microsoft::Cpp::BuildInsights::Internal::Ra;523300;523300;523300;0;1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const * __ptr64 const) __ptr64;523128;275000;1802700;522923;7
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tree_temp_node<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::~_Tree_temp_node<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(void) __ptr64;522600;522600;522600;0;1
??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Micro;522600;522600;522600;0;1
?_Change_array@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEAAXQEAUDataPerFunction@?A0x5f10505a@@_K1@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Change_array(struct `anonymous namespace'::DataPerFunction * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;522100;522100;522100;0;1
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class ;521300;521300;521300;0;1
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::~_Tree<class std::_Tmap_traits<class std::basic_string<char,stru;521200;521200;521200;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > ><class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64,0>(class std:;521000;521000;521000;0;1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const __ptr64;520933;489300;615500;31275;15
?_Tidy@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Tidy(void) __ptr64;520800;520800;520800;0;1
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char) __ptr64;520725;509000;537500;11342;8
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > __cdecl std::chrono::operator-<__int64,struct std::ratio<1,1000000000>,__int64,struct std::ratio<1,1000000000> >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);520640;403400;915400;197893;5
?_Change_array@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAXQEAU_Loop_vals_t@2@_K1@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Change_array(struct std::_Loop_vals_t * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;520600;520600;520600;0;1
??0?$_Tgt_state_t@PEBD@std@@QEAA@AEBV01@@Z;__cdecl std::_Tgt_state_t<char const * __ptr64>::_Tgt_state_t<char const * __ptr64>(class std::_Tgt_state_t<char const * __ptr64> const & __ptr64) __ptr64;520100;520100;520100;0;1
??1?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::~vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct st;520100;520100;520100;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Range_eraser::_Range_eraser(class std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > & ;519100;519100;519100;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Check_rehash_required_1(void)const __ptr64;518800;518800;518800;0;1
??$regex_match@U?$char_traits@D@std@@V?$allocator@D@2@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@DV?$regex_traits@D@2@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@0@AEBV?$basic_regex@DV?$regex_traits@D@std@@@0@W4match_flag_type@regex_constants@0@@Z;bool __cdecl std::regex_match<struct std::char_traits<char>,class std::allocator<char>,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >,char,class std::regex_traits<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<clas;518800;518800;518800;0;1
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::max_size(void)const __ptr64;518700;518700;518700;0;1
??0?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >(void) __ptr64;518300;518300;518300;0;1
?to_bytes@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEB_W@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::to_bytes(wchar_t const * __ptr64) __ptr64;517800;517800;517800;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > const * __ptr64 const,class std::_List_unchecked_iterator<class std::_List_val<s;517700;517700;517700;0;1
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::;517600;517600;517600;0;1
??$_Make_heap_unchecked@PEAUDataPerFile@?A0x120c265a@@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@0V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;void __cdecl std::_Make_heap_unchecked<struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44> >(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44>);517500;517500;517500;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,;517300;517300;517300;0;1
??$_Emplace_back_with_unused_capacity@AEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAA@AEB_K@Z;__cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Emplace_back_with_unused_capacity<unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64) __ptr64;516900;516900;516900;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::share;516500;516500;516500;0;1
?_Tidy@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Tidy(void) __ptr64;516400;516400;516400;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > ><class std::allocator<struct st;516300;516300;516300;0;1
??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VFrontEndFile@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVFrontEndFile@Activities@234@@Z;??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Gro;516300;516300;516300;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@;515600;424700;606500;90900;2
??_Gargument_incorrect_type@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::argument_incorrect_type::`scalar deleting destructor'(unsigned int) __ptr64;515100;515100;515100;0;1
??0?$unordered_map@_KULocalThreadData@PackedProcessThreadRemapper@@U?$hash@_K@std@@U?$equal_to@_K@4@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::unordered_map<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,s;514800;514800;514800;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::_Tidy(void) __ptr64;514300;514300;514300;0;1
??$_Verify_range@D@std@@YAXQEBD0@Z;void __cdecl std::_Verify_range<char>(char const * __ptr64 const,char const * __ptr64 const);513850;472400;555300;41450;2
??$MatchEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@V12345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@$$QEAVFrontEndFile@Activities@012@@Z;??$MatchEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEv;513500;513500;513500;0;1
?_Change_array@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@_K1@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Change_array(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilation;513300;513300;513300;0;1
??0?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<;512850;461900;709500;88752;6
??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@1@@Z;??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VO;512200;512200;512200;0;1
??$?0V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V$0A@@?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;??$?0V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V$0A@@?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@B;512000;512000;512000;0;1
??0?$_Node_str@D@std@@QEAA@W4_Node_flags@1@@Z;__cdecl std::_Node_str<char>::_Node_str<char>(enum std::_Node_flags) __ptr64;511800;511800;511800;0;1
?_Unchecked_begin@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_begin(void) __ptr64;511600;511600;511600;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duratio;511500;436000;587000;75500;2
??1?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::~vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(void) __ptr64;511100;511100;511100;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > ><;510900;510900;510900;0;1
??$MatchEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@VCommandLine@SimpleEvents@345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@$$QEAVCommandLine@SimpleEvents@012@@Z;??$MatchEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2;510100;510100;510100;0;1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const;509800;509800;509800;0;1
??$Run@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Inter;509800;509800;509800;0;1
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AEAAXXZ;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Tidy(void) __ptr64;509800;509800;509800;0;1
??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@V01234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@0@Z;??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@V01234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities;509400;509400;509400;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > const * ;509100;509100;509100;0;1
?AddProperty@TimelineEntry@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;bool __cdecl TimelineEntry::AddProperty(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;509000;509000;509000;0;1
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;508800;508800;508800;0;1
?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Tidy(void) __ptr64;508500;508500;508500;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_type;508350;373800;642900;134550;2
??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$;508100;508100;508100;0;1
?UpdateEntryName@BuildTimeline@@QEAAXAEB_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void __cdecl BuildTimeline::UpdateEntryName(unsigned __int64 const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;507700;507700;507700;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@$$QEA_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@$$QEA_N@Z;507600;507600;507600;0;1
??0OptionException@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::OptionException::OptionException(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;507600;507600;507600;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Check_rehash_required_1(void)const __ptr64;507300;507300;507300;0;1
??1?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::~vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >(void) __ptr64;507200;421900;560200;60905;3
??$?0AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;507000;507000;507000;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > ><class std::allocator<struct std::pair<unsigned __i;506500;506500;506500;0;1
??0?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@_K@Z;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(unsigned __int64) __ptr64;505600;505600;505600;0;1
??$_Push_heap_by_index@PEAUDataPerFunction@?A0x5f10505a@@U12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@_J1$$QEAU12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;??$_Push_heap_by_index@PEAUDataPerFunction@?A0x5f10505a@@U12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@_J1$$QEAU12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;505500;505500;505500;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>;505300;481800;528800;23500;2
?allocate@?$allocator@PEAVTimelineEntry@@@std@@QEAAPEAPEAVTimelineEntry@@_K@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::allocator<class TimelineEntry * __ptr64>::allocate(unsigned __int64) __ptr64;505100;260300;749900;244800;2
??$RunFindId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@;504600;504600;504600;0;1
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct s;504100;504100;504100;0;1
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@XZ;__cdecl std::basic_filebuf<char,struct std::char_traits<char> >::basic_filebuf<char,struct std::char_traits<char> >(void) __ptr64;503883;466100;563300;35950;6
??$construct@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@$$QEAV?$tuple@$$V@1@@Z;??$construct@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$s;503400;503400;503400;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >::_Release(void) __ptr64;503300;503300;503300;0;1
??$?0PEBD$$V$0A@@?$tuple@$$QEAPEBD@std@@QEAA@$$QEAPEBD@Z;??$?0PEBD$$V$0A@@?$tuple@$$QEAPEBD@std@@QEAA@$$QEAPEBD@Z;503050;372300;633800;130750;2
??$RunFindId@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsigh;502800;502800;502800;0;1
??$_Push_heap_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEBU12@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@_J1$$QEAPEBU10@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;??$_Push_heap_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEBU12@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@_J1$$QEAPEBU10@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;502500;502500;502500;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;502300;502300;502300;0;1
??$_Verify_range@I@std@@YAXQEBI0@Z;void __cdecl std::_Verify_range<unsigned int>(unsigned int const * __ptr64 const,unsigned int const * __ptr64 const);502300;502300;502300;0;1
??0?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::vector<struct std::pair<class std::basic_string<char,struct std::char_trai;502100;502100;502100;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(void) __ptr64;502000;502000;502000;0;1
??1?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::~vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(void) __ptr64;501400;501400;501400;0;1
?_Change_array@?$vector@KV?$allocator@K@std@@@std@@AEAAXQEAK_K1@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Change_array(unsigned long * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;500600;500600;500600;0;1
??0?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const ;500500;500500;500500;0;1
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<c;500000;500000;500000;0;1
??$_Verify_range@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YAXQEBU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t const * __ptr64 const,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t const * __ptr64 const);500000;500000;500000;0;1
??0?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::unordered_map<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,struct std::hash<class std::shared_;499400;499400;499400;0;1
??0?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> ;499200;499200;499200;0;1
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVActivity@Activities@345@@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBV;499000;499000;499000;0;1
?Calculate@PackedProcessThreadRemapper@@QEAAXPEBVBuildTimeline@@@Z;void __cdecl PackedProcessThreadRemapper::Calculate(class BuildTimeline const * __ptr64) __ptr64;499000;499000;499000;0;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$C;498800;498800;498800;0;1
?Reserve@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@IAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::Reserve(unsigned int,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;498800;498800;498800;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >::allocate(unsigned __int64) __ptr64;498400;498400;498400;0;1
??0?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;498100;498100;498100;0;1
??$HandleAnalysisEvent@AEBVTraceInfo@BuildInsights@Cpp@Microsoft@@VIRelogger@234@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@AEBV1234@@DynamicEventHandlingSupport@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4AnalysisControl@234@AEAV?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@P8IRelogger@234@EAA?AW45234@AEBVTraceInfo@234@@Z1@Z;static enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicEventHandlingSupport::HandleAnalysisEvent<class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64,class Microsoft::Cpp::BuildInsights::IRelogger,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64>(class std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawP;497500;497500;497500;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > ><class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiati;497400;497400;497400;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const * __ptr64 const,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class Timelin;497200;497200;497200;0;1
??$MatchEvent@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@@Z;??$MatchEvent@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Intern;497100;497100;497100;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > const * __ptr64 const,clas;496950;494900;499000;2050;2
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > const * __ptr64 const,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_sim;496900;496900;496900;0;1
??$HandleAnalysisEvent@$$VVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@$$V@DynamicEventHandlingSupport@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4AnalysisControl@234@AEAV?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@P8IAnalyzer@234@EAA?AW45234@XZ@Z;??$HandleAnalysisEvent@$$VVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@$$V@DynamicEventHandlingSupport@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4AnalysisControl@234@AEAV?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@P8IAnalyzer@234@EAA?AW45234@XZ@Z;496800;496800;496800;0;1
??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;__cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Emplace_back_with_unused_capacity<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;496300;496300;496300;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Check_rehash_required_1(void)const __ptr64;496300;496300;496300;0;1
?_Tidy@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXXZ;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Tidy(void) __ptr64;496200;496200;496200;0;1
??$?0M@?$_Compressed_pair@U?$equal_to@_K@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;??$?0M@?$_Compressed_pair@U?$equal_to@_K@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;496160;277600;1333900;418926;5
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z;??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z;495500;495500;495500;0;1
??$?RVCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVCommandLine@SimpleEvents@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$?RVCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?;494300;494300;494300;0;1
??0?$abstract_value@I@values@cxxopts@@QEAA@PEAI@Z;__cdecl cxxopts::values::abstract_value<unsigned int>::abstract_value<unsigned int>(unsigned int * __ptr64) __ptr64;494300;494300;494300;0;1
??$construct@U?$pair@$$CB_KVTimelineEntry@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAVTimelineEntry@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KVTimelineEntry@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAVTimelineEntry@@@1@@Z;??$construct@U?$pair@$$CB_KVTimelineEntry@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAVTimelineEntry@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KVTimelineEntry@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAVTimelineEntry@@@1@@Z;494100;494100;494100;0;1
??$find@X@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __in;494100;494100;494100;0;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;494000;494000;494000;0;1
??$_Verify_range@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@YAXQEBU_Grp_t@?$_Tgt_state_t@PEBD@0@0@Z;void __cdecl std::_Verify_range<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t const * __ptr64 const,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t const * __ptr64 const);493500;493500;493500;0;1
??$construct@U?$pair@$$CB_KUProcessThreadRemap@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAUProcessThreadRemap@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KUProcessThreadRemap@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAUProcessThreadRemap@@@1@@Z;??$construct@U?$pair@$$CB_KUProcessThreadRemap@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAUProcessThreadRemap@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KUProcessThreadRemap@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAUProcessThreadRemap@@@1@@Z;493400;493400;493400;0;1
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::max_size(void)const __ptr64;493250;395900;590600;97350;2
??$_Emplace_back_with_unused_capacity@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;??$_Emplace_back_with_unused_capacity@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;492800;492800;492800;0;1
?_Change_array@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXQEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@_K1@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Change_array(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;492200;492200;492200;0;1
??0OptionException@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::OptionException::OptionException(class cxxopts::OptionException const & __ptr64) __ptr64;492100;492100;492100;0;1
??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;__cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Emplace_back_with_unused_capacity<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std:;491700;491700;491700;0;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V42@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@3@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V42@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$;491700;491700;491700;0;1
??1?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ;__cdecl std::_Vb_val<class std::allocator<bool> >::~_Vb_val<class std::allocator<bool> >(void) __ptr64;491400;491400;491400;0;1
??$_Set_ptr_rep_and_enable_shared@V?$standard_value@_N@values@cxxopts@@@?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@AEAAXQEAV?$standard_value@_N@values@cxxopts@@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class cxxopts::values::standard_value<bool> >::_Set_ptr_rep_and_enable_shared<class cxxopts::values::standard_value<bool> >(class cxxopts::values::standard_value<bool> * __ptr64 const,class std::_Ref_count_base * __ptr64 const) __ptr64;491300;491300;491300;0;1
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const __ptr64;491200;491200;491200;0;1
??$?0V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@1@@Z;??$?0V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basi;490950;337100;644800;153850;2
?CountDecimalDigit32@internal@rapidjson@@YAII@Z;unsigned int __cdecl rapidjson::internal::CountDecimalDigit32(unsigned int);490800;490800;490800;0;1
??1HelpOptionDetails@cxxopts@@QEAA@XZ;__cdecl cxxopts::HelpOptionDetails::~HelpOptionDetails(void) __ptr64;490700;490700;490700;0;1
?_Tidy@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Tidy(void) __ptr64;490600;490600;490600;0;1
??$_Find_unchecked@PEAKK@std@@YAPEAKQEAK0AEBK@Z;unsigned long * __ptr64 __cdecl std::_Find_unchecked<unsigned long * __ptr64,unsigned long>(unsigned long * __ptr64 const,unsigned long * __ptr64 const,unsigned long const & __ptr64);490600;490600;490600;0;1
??0?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(void) __ptr64;489100;489100;489100;0;1
??0?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >(void) __ptr64;488700;488700;488700;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const * __ptr64 const,class std::_List_unchecked_i;488200;488200;488200;0;1
??$_Push_heap_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@_J1$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;??$_Push_heap_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@_J1$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;488000;488000;488000;0;1
?_Change_array@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXQEA_K_K1@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Change_array(unsigned __int64 * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;487800;487800;487800;0;1
?WriteInt64@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_N_J@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteInt64(__int64) __ptr64;487800;487800;487800;0;1
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@V01234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@0@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@V01234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp;487300;487300;487300;0;1
??$MatchEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@V12345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@$$QEAVActivity@Activities@012@@Z;??$MatchEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_;487100;487100;487100;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > const * __ptr64 const,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,s;486800;486800;486800;0;1
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@@Z;static struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64>::_Buyheadnode<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_t;486400;486400;486400;0;1
??$_Find@_K@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@_KPEAX@1@AEB_K_K@Z;struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Find<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64)const __ptr64;486400;486400;486400;0;1
??$MatchEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@@Z;??$MatchEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@;485200;485200;485200;0;1
??$_Set_ptr_rep_and_enable_shared@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@AEAAXQEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Set_ptr_rep_and_enable_shared<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 const,class std::_Ref_count_base * __ptr64 const) _;485000;485000;485000;0;1
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;484700;484700;484700;0;1
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z;class std::locale::facet const * __ptr64 __cdecl std::locale::_Getfacet(unsigned __int64)const __ptr64;483785;448300;576700;39694;7
?value@?$regex_traits@D@std@@QEBAHDH@Z;int __cdecl std::regex_traits<char>::value(char,int)const __ptr64;483700;483700;483700;0;1
??$RunFindId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsigh;483500;483500;483500;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;483100;410100;556100;73000;2
?OnStopActivity@FunctionCompilationsAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl FunctionCompilationsAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;483000;483000;483000;0;1
??$construct@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAUTemplateInstantiationData@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KUTemplateInstantiationData@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAUTemplateInstantiationData@@@1@@Z;??$construct@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAUTemplateInstantiationData@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KUTemplateInstantiationData@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAUTemplateInstantiationData;482900;482900;482900;0;1
??0?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;482600;482600;482600;0;1
??$assign@PEBD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign<char const * __ptr64,0>(char const * __ptr64 const,char const * __ptr64 const) __ptr64;482600;482600;482600;0;1
??1?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class;482050;413300;550800;68750;2
??$_Verify_range@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXQEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> >(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> const * __ptr64 const,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> const * __ptr64 const);482000;482000;482000;0;1
?_Do_digits@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAHHH@Z;int __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_digits(int,int) __ptr64;481400;481400;481400;0;1
??$MatchEventStackInMemberFunction@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVFrontEndFile@Activities@456@0@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVFileInclusionsAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@2@Z@Z;??$MatchEventStackInMemberFunction@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVFrontEndFile@Activities@456@0@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVFileInclusionsAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@2@Z@Z;481400;481400;481400;0;1
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@AEBU01@@Z;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,clas;481200;481200;481200;0;1
??$?0V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@@locale@std@@QEAA@AEBV01@PEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@1@@Z;__cdecl std::locale::locale<class std::codecvt_utf8<wchar_t,1114111,0> >(class std::locale const & __ptr64,class std::codecvt_utf8<wchar_t,1114111,0> const * __ptr64) __ptr64;481000;481000;481000;0;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Check_rehash_required_1;480700;480700;480700;0;1
??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVCommandLine@SimpleEvents@234@@Z;??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@;480400;480400;480400;0;1
??0?$standard_value@_N@values@cxxopts@@QEAA@PEA_N@Z;__cdecl cxxopts::values::standard_value<bool>::standard_value<bool>(bool * __ptr64) __ptr64;480300;480300;480300;0;1
??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@;480200;480200;480200;0;1
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned __int64,unsigned __int64) __ptr64;480016;456200;520700;19860;6
??$RunContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@$$V@1234@$$QEAVFrontEndFile@Activities@234@4@Z;??$RunContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@V;479800;479800;479800;0;1
??$emplace_back@AEB_K@?$vector@_KV?$allocator@_K@std@@@std@@QEAA@AEB_K@Z;__cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::emplace_back<unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64) __ptr64;479700;479700;479700;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous names;478900;478900;478900;0;1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::ch;478500;478500;478500;0;1
??$RunFindId@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal;477900;477900;477900;0;1
?max_size@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::max_size(void)const __ptr64;477700;404200;551200;73500;2
?max_size@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::max_size(void)const __ptr64;477700;477700;477700;0;1
??$?0$$V@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@XZ;??$?0$$V@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@XZ;477600;477600;477600;0;1
?MakeDynamicAnalyzerGroup@BuildInsights@Cpp@Microsoft@@YA?AV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@123@V?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@@Z;class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > __cdecl Microsoft::Cpp::BuildInsights::MakeDynamicAnalyzerGroup(class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >);477500;477500;477500;0;1
?_Verify_range@std@@YAXAEBV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64,class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64);477100;477100;477100;0;1
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Mi;477000;477000;477000;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_tr;476650;476400;476900;250;2
?_Swap_val@?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::_Swap_val(class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> ;476500;476500;476500;0;1
??0?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >(void) __ptr64;476366;434200;546300;49798;3
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$;476350;447900;504800;28450;2
??1?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAA@XZ;virtual __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::~wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >(void) __ptr64;476100;476100;476100;0;1
??$RunFindId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@C;475400;475400;475400;0;1
??$emplace_back@AEAPEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA@AEAPEBVTimelineEntry@@$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@@Z;??$emplace_back@AEAPEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA@AEAPEBVTimelineEntry@@$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@@Z;475000;475000;475000;0;1
??$_Emplace_back_with_unused_capacity@AEAPEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAA@AEAPEBVTimelineEntry@@$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@@Z;??$_Emplace_back_with_unused_capacity@AEAPEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAA@AEAPEBVTimelineEntry@@$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@@Z;474500;474500;474500;0;1
printf;printf;473900;473900;473900;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,voi;473000;473000;473000;0;1
??0DataPerTemplate@?A0x5cdd232a@@QEAA@XZ;__cdecl `anonymous namespace'::DataPerTemplate::DataPerTemplate(void) __ptr64;472900;472900;472900;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(void) __ptr64;472400;472400;472400;0;1
?_Do_ffn@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_ND@Z;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_ffn(char) __ptr64;471800;471800;471800;0;1
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z;int __cdecl std::_Traits_compare<struct std::char_traits<char> >(char const * __ptr64 const,unsigned __int64,char const * __ptr64 const,unsigned __int64);471600;471600;471600;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 const,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 c;471400;471400;471400;0;1
??1?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::~list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >(void) __ptr64;471200;471200;471200;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::_Tidy(void) __ptr64;470750;442400;499100;28350;2
??0_Node_rep@std@@QEAA@_NHHPEAV_Node_end_rep@1@I@Z;__cdecl std::_Node_rep::_Node_rep(bool,int,int,class std::_Node_end_rep * __ptr64,unsigned int) __ptr64;470700;470700;470700;0;1
??$_Copy_construct_from@$$CBVValue@cxxopts@@@?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@$$CBVValue@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::Value const >::_Copy_construct_from<class cxxopts::Value const >(class std::shared_ptr<class cxxopts::Value const > const & __ptr64) __ptr64;470100;470100;470100;0;1
??1?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::~vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >(void) __ptr64;469200;469200;469200;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;468600;468600;468600;0;1
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z;struct std::_Container_proxy * __ptr64 __cdecl std::_Unfancy<struct std::_Container_proxy>(struct std::_Container_proxy * __ptr64);468050;197100;2718200;639949;18
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ;virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::sync(void) __ptr64;467833;423400;521900;40215;6
??1?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~vector<struct std::pair<class std::basic_string<char,struct std::char_tra;467800;467800;467800;0;1
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ;__cdecl std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >(void) __ptr64;467700;467700;467700;0;1
??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::~vector<unsigned int,class std::allocator<unsigned int> >(void) __ptr64;467600;467600;467600;0;1
??$_Med3_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@00V<lambda_b91a942b4070954e66476ae297366993>@@@Z;void __cdecl std::_Med3_unchecked<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae297366993> >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __p;467300;467300;467300;0;1
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64>::_Freenode<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,s;467200;467200;467200;0;1
?_Make_const_iter@?$list@_KV?$allocator@_K@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@2@PEAU?$_List_node@_KPEAX@2@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > > __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::_Make_const_iter(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64)const __ptr64;466600;466600;466600;0;1
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z;??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z;466450;321200;1540400;273528;18
??$value@_N@cxxopts@@YA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEA_N@Z;class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::value<bool>(bool & __ptr64);466400;466400;466400;0;1
??$_Pop_heap_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@0V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;void __cdecl std::_Pop_heap_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,class <lambda_5b04ced4049247d028dd2b0acc74b1e0> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct;466200;466200;466200;0;1
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z;virtual class std::basic_streambuf<char,struct std::char_traits<char> > * __ptr64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::setbuf(char * __ptr64,__int64) __ptr64;465966;436100;498100;24831;6
??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp;465600;465600;465600;0;1
??$?0U_Exact_args_t@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@$$V$0A@@?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;??$?0U_Exact_args_t@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@$$V$0A@@?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?;465600;465600;465600;0;1
?max_size@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::max_size(void)const __ptr64;465200;465200;465200;0;1
??$_Med3_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@00V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Med3_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;465200;465200;465200;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::a;464700;464700;464700;0;1
??1?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::~vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>;464600;464600;464600;0;1
??$?RVCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVCommandLine@SimpleEvents@345@@Z;??$?RVCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@In;464400;464400;464400;0;1
?WriteUint@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NI@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteUint(unsigned int) __ptr64;463900;463900;463900;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::max_size(void)const __ptr64;463700;463700;463700;0;1
??$?0V?$vector@_KV?$allocator@_K@std@@@std@@$$V$0A@@?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;??$?0V?$vector@_KV?$allocator@_K@std@@@std@@$$V$0A@@?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;463700;463700;463700;0;1
??$_Med3_unchecked@PEAUDataPerFile@?A0x120c265a@@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@00V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;void __cdecl std::_Med3_unchecked<struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44> >(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44>);463000;463000;463000;0;1
??$_Uninitialized_move@PEAPEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@YAPEAPEAVTimelineEntry@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVTimelineEntry@@@0@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Uninitialized_move<class TimelineEntry * __ptr64 * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >(class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 * __ptr64,class std::allocator<class TimelineEntry * __ptr64> & __ptr64);462750;436500;489000;26250;2
?_Unchecked_begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0> __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<ch;462200;462200;462200;0;1
??1?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::~vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >(void) __ptr64;462100;462100;462100;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > >(void) __ptr64;461700;461700;461700;0;1
??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@AEAV?$tuple@$$QEAV?$basic;461700;461700;461700;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char;461200;440400;482000;20800;2
?max_size@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::max_size(void)const __ptr64;460850;387500;534200;73350;2
??$RunFindId@VInvocation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VInvocation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Micro;460700;460700;460700;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_;460600;460600;460600;0;1
??$find@X@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<;460600;460600;460600;0;1
?FilterTemplateInstantiation@FilterTimelineAnalyzer@@AEAAXAEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl FilterTimelineAnalyzer::FilterTemplateInstantiation(class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation const & __ptr64) __ptr64;460600;460600;460600;0;1
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;460400;460400;460400;0;1
??$_Med3_unchecked@PEAUDataPerFunction@?A0x5f10505a@@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@00V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;void __cdecl std::_Med3_unchecked<struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb> >(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb>);460400;460400;460400;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::alloc;459900;442600;477200;17300;2
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@1@U?$integer_sequence@_K$0A@@1@2@Z;459900;459900;459900;0;1
?_Calculate_growth@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Calculate_growth(unsigned __int64)const __ptr64;459700;459700;459700;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,str;459600;434800;484400;24800;2
??$RunFindId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft;459300;459300;459300;0;1
??1?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::~vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > co;459000;459000;459000;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > co;458900;458900;458900;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > >(void) __ptr64;458800;458800;458800;0;1
?_Calculate_growth@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Calculate_growth(unsigned __int64)const __ptr64;458700;458700;458700;0;1
??$MatchEvent@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@@Z;??$MatchEvent@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_K;458600;458600;458600;0;1
??0?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@$$QEAV01@@Z;458500;458500;458500;0;1
??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@;457800;457800;457800;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@st;457800;457800;457800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterat;457700;457700;457700;0;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;457500;457500;457500;0;1
??$_Emplace_back_with_unused_capacity@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAA@$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;??$_Emplace_back_with_unused_capacity@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAA@$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;456900;456900;456900;0;1
??$?0V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$_Tuple_val@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$?0V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$_Tuple_val@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;456450;454600;458300;1850;2
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::max_size(void)const __ptr64;456100;456100;456100;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,1>::_Get_first(void);456000;456000;456000;0;1
??$_Emplace_back_with_unused_capacity@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAA@$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;??$_Emplace_back_with_unused_capacity@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAA@$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;456000;456000;456000;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<cha;455850;397100;514600;58750;2
??$_Uninitialized_move@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@QEAPEBU10@0PEAPEBU10@AEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@0@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Uninitialized_move<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileC;455600;455600;455600;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U_Loop_vals_t@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Loop_vals_t@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U_Loop_vals_t@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Loop_vals_t@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;455400;455400;455400;0;1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;455350;433400;477300;21950;2
??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;__cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::emplace_back<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > con;455200;455200;455200;0;1
??0?$_Regex_traits@D@std@@QEAA@XZ;__cdecl std::_Regex_traits<char>::_Regex_traits<char>(void) __ptr64;454800;454800;454800;0;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > const * __ptr64 const,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __;454700;454700;454700;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tra;454650;336700;572600;117950;2
??0?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std;454600;454600;454600;0;1
?max_size@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::max_size(void)const __ptr64;454000;454000;454000;0;1
??$RunFindId@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@;453900;453900;453900;0;1
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;453700;453700;453700;0;1
??$find@X@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<c;453500;453500;453500;0;1
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ;virtual __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::~basic_ofstream<char,struct std::char_traits<char> >(void) __ptr64;452733;396100;561200;51726;6
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::_Tidy(void) __ptr64;452600;452600;452600;0;1
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@VCommandLine@SimpleEvents@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVCommandLine@SimpleEvents@234@@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@VCommandLine@SimpleEvents@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$G;452400;452400;452400;0;1
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Find<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __in;452200;452200;452200;0;1
??$?0AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z;??$?0AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@;452100;452100;452100;0;1
??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VActivity@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVActivity@Activities@234@@Z;??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Inte;451900;451900;451900;0;1
??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z;??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_trai;451800;451800;451800;0;1
??1?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::~vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const;451400;451400;451400;0;1
??$_Emplace_back_with_unused_capacity@AEBQEAVTimelineEntry@@@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAA@AEBQEAVTimelineEntry@@@Z;__cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Emplace_back_with_unused_capacity<class TimelineEntry * __ptr64 const & __ptr64>(class TimelineEntry * __ptr64 const & __ptr64) __ptr64;451250;431200;471300;20050;2
??$HandleMatchedEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@0@Z;??$HandleMatchedEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Mi;450500;450500;450500;0;1
?str@?$sub_match@PEBD@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::sub_match<char const * __ptr64>::str(void)const __ptr64;450500;450500;450500;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::_Tidy(void) __ptr64;450500;450500;450500;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRe;450300;450300;450300;0;1
??$emplace_back@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;??$emplace_back@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;450300;450300;450300;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cl;450200;450200;450200;0;1
?_Calculate_growth@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Calculate_growth(unsigned __int64)const __ptr64;449900;449900;449900;0;1
??$_Emplace_back_with_unused_capacity@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@@Z;__cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Emplace_back_with_unused_capacity<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64) __ptr64;449800;449800;449800;0;1
??$fill@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >(class std::_List_unchecked_const_iterator<cla;449700;423500;475900;26200;2
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VOptICF@Activities@BuildInsights@Cpp@Microsoft@@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Micr;449700;449700;449700;0;1
??$?RVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVSymbolName@SimpleEvents@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$?RVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@;449600;449600;449600;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;449400;449400;449400;0;1
??0?$unordered_set@_KU?$hash@_K@std@@U?$equal_to@_K@2@V?$allocator@_K@2@@std@@QEAA@XZ;__cdecl std::unordered_set<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<unsigned __int64> >::unordered_set<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<unsigned __int64> >(void) __ptr64;449400;449400;449400;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::;449300;449300;449300;0;1
??$?0U_Exact_args_t@std@@UFileCompilationData@@$$V$0A@@?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@U_Exact_args_t@1@$$QEAUFileCompilationData@@@Z;??$?0U_Exact_args_t@std@@UFileCompilationData@@$$V$0A@@?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@U_Exact_args_t@1@$$QEAUFileCompilationData@@@Z;449000;449000;449000;0;1
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ;char * __ptr64 __cdecl std::_String_val<struct std::_Simple_types<char> >::_Myptr(void) __ptr64;448800;293700;1881100;414903;13
?_Calculate_growth@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Calculate_growth(unsigned __int64)const __ptr64;448800;448800;448800;0;1
?clear@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::clear(void) __ptr64;448000;448000;448000;0;1
??$_Emplace_back_with_unused_capacity@AEAUDataPerFile@?A0x120c265a@@@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEAA@AEAUDataPerFile@?A0x120c265a@@@Z;__cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Emplace_back_with_unused_capacity<struct `anonymous namespace'::DataPerFile & __ptr64>(struct `anonymous namespace'::DataPerFile & __ptr64) __ptr64;448000;448000;448000;0;1
??$HandleMatchedEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVCommandLine@SimpleEvents@345@@Z;??$HandleMatchedEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@Si;447900;447900;447900;0;1
??0?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >(class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64) __ptr64;447900;447900;447900;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?;447900;447900;447900;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >(void) __ptr64;447300;447300;447300;0;1
?_Calculate_growth@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Calculate_growth(unsigned __int64)const __ptr64;447000;407500;486500;39500;2
?_At@?$_Buf@D@std@@QEBADI@Z;char __cdecl std::_Buf<char>::_At(unsigned int)const __ptr64;446800;446800;446800;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >(void) __ptr64;446600;446600;446600;0;1
??0?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >(void) __ptr64;446400;446400;446400;0;1
??$_Uninitialized_move@PEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@YAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@QEAV120@0PEAV120@AEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::_Uninitialized_move<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,class std::chrono::duration<__int64,struct std::ra;446400;430100;461600;12883;3
??$find@X@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::find<void>(unsigned __int64 const & __ptr64)const;446400;446400;446400;0;1
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocato;445800;445800;445800;0;1
?_Init@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@AEAAXPEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@2@@Z;void __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::_Init(class std::codecvt_utf8<wchar_t,1114111,0> const * __ptr64) __ptr64;445400;445400;445400;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<st;445300;445300;445300;0;1
??$_Pop_heap_unchecked@PEAUDataPerFunction@?A0x5f10505a@@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@0V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;void __cdecl std::_Pop_heap_unchecked<struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb> >(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb>);445200;445200;445200;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,c;445100;445100;445100;0;1
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Find<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64)const __ptr64;445100;441900;448300;3200;2
??0DataPerFile@?A0x120c265a@@QEAA@XZ;__cdecl `anonymous namespace'::DataPerFile::DataPerFile(void) __ptr64;445000;445000;445000;0;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;444800;444800;444800;0;1
??0?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >) __ptr64;444800;444800;444800;0;1
??$swap@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@$0A@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@0@Z;void __cdecl std::swap<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64,0>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64);444700;444700;444700;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<str;444700;444700;444700;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > >::_Tidy(void) __ptr64;444400;444400;444400;0;1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;443900;443900;443900;0;1
??1_Node_if@std@@UEAA@XZ;virtual __cdecl std::_Node_if::~_Node_if(void) __ptr64;443800;443800;443800;0;1
??0?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ;__cdecl std::_Vb_val<class std::allocator<bool> >::_Vb_val<class std::allocator<bool> >(void) __ptr64;443400;443400;443400;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class st;443300;443300;443300;0;1
??1?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::~vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >(void) __ptr64;443300;443300;443300;0;1
??1?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::~vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper;443300;443300;443300;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::_Tidy(void) __ptr64;443250;434500;452000;8750;2
?begin@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > > __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::begin(void) __ptr64;442800;442800;442800;0;1
??$HandleMatchedEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@0@Z;??$HandleMatchedEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@Bui;442800;442800;442800;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 const,struct std;442800;442800;442800;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allo;442800;442800;442800;0;1
??0?$unordered_map@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::unordered_map<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned __;442650;438500;446800;4150;2
??$?0$$V@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;442500;442500;442500;0;1
??$make_reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@YA?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@0@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@@Z;class std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > > __cdecl std::make_reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >);442500;442500;442500;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@1@@Z;442400;442400;442400;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > >::max_size(void)const __ptr64;442100;442100;442100;0;1
??$_Emplace_back_with_unused_capacity@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAA@$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@@Z;??$_Emplace_back_with_unused_capacity@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAA@$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@@Z;441900;424100;459700;17800;2
??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?;441800;441800;441800;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::max_size(void)const __ptr64;441700;409900;473500;31800;2
??0?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::vector<unsigned int,class std::allocator<unsigned int> >(void) __ptr64;441700;441700;441700;0;1
??$?0AEAUProcessThreadRemap@@$0A@@?$tuple@AEAUProcessThreadRemap@@@std@@QEAA@AEAUProcessThreadRemap@@@Z;__cdecl std::tuple<struct ProcessThreadRemap & __ptr64>::tuple<struct ProcessThreadRemap & __ptr64><struct ProcessThreadRemap & __ptr64,0>(struct ProcessThreadRemap & __ptr64) __ptr64;441100;441100;441100;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_str;441100;441100;441100;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::alloc;440900;421200;460600;19700;2
??1?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::~vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_it;440700;440700;440700;0;1
??$HandleMatchedEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$HandleMatchedEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Mi;440700;440700;440700;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;440300;440300;440300;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t;440300;440300;440300;0;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstan;439500;439500;439500;0;1
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration;439500;419300;459700;20200;2
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;439450;322500;556400;116950;2
??$_Uninitialized_move@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@QEAPEBU10@0PEAPEBU10@AEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@0@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::_Uninitialized_move<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std:;439400;439400;439400;0;1
??$?0U_Exact_args_t@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@$$V$0A@@?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$?0U_Exact_args_t@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@$$V$0A@@?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;439300;408400;470200;30900;2
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Unchecked_end(void) __ptr64;438500;438500;438500;0;1
??1Options@cxxopts@@QEAA@XZ;__cdecl cxxopts::Options::~Options(void) __ptr64;438200;438200;438200;0;1
??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;438100;438100;438100;0;1
?GrisuRound@internal@rapidjson@@YAXPEADH_K111@Z;void __cdecl rapidjson::internal::GrisuRound(char * __ptr64,int,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64);438000;438000;438000;0;1
??0?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::unordered_set<class std::basic_string<char,struct std::char_tra;437900;398100;477700;39800;2
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Take_contents(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,struct std::integral_constant<bool,1>) __ptr64;437760;411900;475700;20863;5
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator;437600;437600;437600;0;1
??0?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper:;437500;437500;437500;0;1
??$Run@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsig;437400;437400;437400;0;1
??$?0V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAA@AEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z;??$?0V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAA@AEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z;437200;437200;437200;0;1
??$_Emplace_back_with_unused_capacity@AEAUDataPerFunction@?A0x5f10505a@@@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEAA@AEAUDataPerFunction@?A0x5f10505a@@@Z;__cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Emplace_back_with_unused_capacity<struct `anonymous namespace'::DataPerFunction & __ptr64>(struct `anonymous namespace'::DataPerFunction & __ptr64) __ptr64;436700;436700;436700;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,st;436700;375700;497700;61000;2
??Iregex_constants@std@@YA?AW4syntax_option_type@01@W4201@0@Z;enum std::regex_constants::syntax_option_type __cdecl std::regex_constants::operator&(enum std::regex_constants::syntax_option_type,enum std::regex_constants::syntax_option_type);436700;436700;436700;0;1
??1?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::~vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >(void) __ptr64;436600;436600;436600;0;1
??$swap@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@$0A@@std@@YAXAEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::swap<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64,0>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 & __ptr64,class std::_List_unchecked_iterator<class std::_List_val<s;436300;436300;436300;0;1
?max_size@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::max_size(void)const __ptr64;436200;436200;436200;0;1
?MemberEnd@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA?AV?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@XZ;class rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::MemberEnd(void)const __ptr64;435900;435900;435900;0;1
??$?0U_Exact_args_t@std@@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V$0A@@?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;??$?0U_Exact_args_t@std@@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V$0A@@?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrap;435600;435600;435600;0;1
?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXQEBD0Urandom_access_iterator_tag@2@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Construct(char const * __ptr64 const,char const * __ptr64 const,struct std::random_access_iterator_tag) __ptr64;435500;435500;435500;0;1
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ;virtual __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::~basic_filebuf<char,struct std::char_traits<char> >(void) __ptr64;435466;409100;474500;23917;6
??$_Emplace_back_with_unused_capacity@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;??$_Emplace_back_with_unused_capacity@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;435400;435400;435400;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > >(void) __ptr64;435300;435300;435300;0;1
?bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;434100;434100;434100;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class;433700;433700;433700;0;1
??$_Emplace_back_with_unused_capacity@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAA@$$QEAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@@Z;??$_Emplace_back_with_unused_capacity@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAA@$$QEAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTem;433500;433500;433500;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocato;433300;393600;473000;39700;2
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_Tidy(void) __ptr64;433200;433200;433200;0;1
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;433100;433100;433100;0;1
??$_Med3_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@00V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;void __cdecl std::_Med3_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,class <lambda_5b04ced4049247d028dd2b0acc74b1e0> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std;432300;432300;432300;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >;431900;431900;431900;0;1
??$?0PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@$$QEA_N@Z;431700;431700;431700;0;1
??$_Uninitialized_move@PEAU_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@YAPEAU_Loop_vals_t@0@QEAU10@0PEAU10@AEAV?$allocator@U_Loop_vals_t@std@@@0@@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::_Uninitialized_move<struct std::_Loop_vals_t * __ptr64,class std::allocator<struct std::_Loop_vals_t> >(struct std::_Loop_vals_t * __ptr64 const,struct std::_Loop_vals_t * __ptr64 const,struct std::_Loop_vals_t * __ptr64,class std::allocator<struct std::_Loop_vals_t> & __ptr64);431400;431400;431400;0;1
?WriteUint64@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_N_K@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteUint64(unsigned __int64) __ptr64;431100;431100;431100;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >(voi;431000;431000;431000;0;1
?_Buy_raw@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Buy_raw(unsigned __int64) __ptr64;430500;430500;430500;0;1
?Normalize@DiyFp@internal@rapidjson@@QEBA?AU123@XZ;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::DiyFp::Normalize(void)const __ptr64;430500;430500;430500;0;1
??$find@X@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_trai;430400;430400;430400;0;1
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::~list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::share;430400;430400;430400;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >(class std::_List_unchecke;430100;377000;483200;53100;2
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Tidy(void) __ptr64;430000;384500;475500;45500;2
??$value@I@cxxopts@@YA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEAI@Z;class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::value<unsigned int>(unsigned int & __ptr64);429500;429500;429500;0;1
??R<lambda_9480883bff83c29d8fc89bed48609766>@@QEBA_NPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@0@Z;bool __cdecl <lambda_9480883bff83c29d8fc89bed48609766>::operator()(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64)const __ptr64;429400;429400;429400;0;1
??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z;bool __cdecl std::chrono::operator<<__int64,struct std::ratio<1,1000000000>,__int64,struct std::ratio<1,1000000000> >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);429316;399800;509800;36685;6
??0exception@std@@QEAA@QEBD@Z;__cdecl std::exception::exception(char const * __ptr64 const) __ptr64;429000;429000;429000;0;1
??1?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::~vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >(void) __ptr64;428400;428400;428400;0;1
??$_Pop_heap_unchecked@PEAUDataPerFile@?A0x120c265a@@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@0V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;void __cdecl std::_Pop_heap_unchecked<struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44> >(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44>);428300;428300;428300;0;1
?GetFilePath@FileCompilationsAnalyzer@@AEBAPEB_WAEBVCompilerPass@Activities@BuildInsights@Cpp@Microsoft@@@Z;wchar_t const * __ptr64 __cdecl FileCompilationsAnalyzer::GetFilePath(class Microsoft::Cpp::BuildInsights::Activities::CompilerPass const & __ptr64)const __ptr64;428300;428300;428300;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std;428000;428000;428000;0;1
??$?0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;??$?0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$0;427850;391200;464500;36650;2
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > > >::_Tidy(void) __ptr64;427700;427700;427700;0;1
?_Rehash_for_1@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;427700;427700;427700;0;1
??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;__cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::emplace_back<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;427500;427500;427500;0;1
?_Calculate_growth@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Calculate_growth(unsigned __int64)const __ptr64;427500;427500;427500;0;1
??$emplace_back@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;??$emplace_back@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;427400;427400;427400;0;1
??$emplace_back@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;??$emplace_back@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;427000;427000;427000;0;1
??$find@PEBDE@std@@YAPEBDPEBDQEBDAEBE@Z;char const * __ptr64 __cdecl std::find<char const * __ptr64,unsigned char>(char const * __ptr64,char const * __ptr64 const,unsigned char const & __ptr64);426800;426800;426800;0;1
??0?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(void) __ptr64;426500;426500;426500;0;1
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void) __ptr64;426500;426500;426500;0;1
??0?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > con;426400;426400;426400;0;1
?_Tidy@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Tidy(void) __ptr64;426300;426300;426300;0;1
?size@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::size(void)const __ptr64;426000;426000;426000;0;1
??0?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_ite;425800;425800;425800;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >(void) __ptr64;425700;425700;425700;0;1
??1?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::~vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >(void) __ptr64;425700;425700;425700;0;1
?_Calculate_growth@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Calculate_growth(unsigned __int64)const __ptr64;425600;425600;425600;0;1
?max_size@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::max_size(void)const __ptr64;425600;425600;425600;0;1
??$_Emplace_back_with_unused_capacity@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAA@$$QEAUHelpOptionDetails@cxxopts@@@Z;??$_Emplace_back_with_unused_capacity@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAA@$$QEAUHelpOptionDetails@cxxopts@@@Z;425500;425500;425500;0;1
?_Unchecked_end@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Unchecked_end(void) __ptr64;425100;425100;425100;0;1
??4?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAAAEAV01@AEBV01@@Z;class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> > & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class st;425100;425100;425100;0;1
??$_Pop_heap_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@0V<lambda_b91a942b4070954e66476ae297366993>@@@Z;void __cdecl std::_Pop_heap_unchecked<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae297366993> >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae2973669;425100;425100;425100;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@1@AEB_N@Z;424900;424900;424900;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;424800;424800;424800;0;1
??$?0V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$$V$0A@@?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;??$?0V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$$V$0A@@?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basi;424800;424800;424800;0;1
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_stri;424500;424500;424500;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::max_size(void)const __ptr64;424400;424400;424400;0;1
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Find<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64)const __ptr64;424000;424000;424000;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::max_size(void)const __ptr64;423500;423500;423500;0;1
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Move_assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,struct std::_Equal_allocators) __ptr64;423400;423400;423400;0;1
?_Buy_raw@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Buy_raw(unsigned __int64) __ptr64;423300;423300;423300;0;1
?_CharacterClass@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_CharacterClass(void) __ptr64;423300;423300;423300;0;1
??$swap@UDataPerFunction@?A0x5f10505a@@$0A@@std@@YAXAEAUDataPerFunction@?A0x5f10505a@@0@Z;void __cdecl std::swap<struct `anonymous namespace'::DataPerFunction,0>(struct `anonymous namespace'::DataPerFunction & __ptr64,struct `anonymous namespace'::DataPerFunction & __ptr64);423300;423300;423300;0;1
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::~vector<unsigned __int64,class std::allocator<unsigned __int64> >(void) __ptr64;423300;423300;423300;0;1
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64,struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<char,st;423200;423200;423200;0;1
??$_Uninitialized_copy@PEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@QEAPEAV1234@0PEAPEAV1234@AEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::_Uninitialized_copy<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class std::allocator<class Microsoft::Cpp::BuildI;423100;423100;423100;0;1
??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@1@@Z;??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shar;423000;423000;423000;0;1
?_Tidy@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Tidy(void) __ptr64;422950;375800;470100;47150;2
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base12>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,clas;422900;399500;446300;23400;2
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::Hel;422900;422900;422900;0;1
??0?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >(void) __ptr64;422850;420900;424800;1950;2
??$move@AEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microso;422800;422800;422800;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > >::_Tidy(void) __ptr64;422700;422700;422700;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@AEB_N@Z;422600;420200;425000;2400;2
?clone@?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::clone(void)const __ptr64;422300;422300;422300;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cl;422300;378100;466500;44200;2
??$_Uninitialized_move@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@QEAU120@0PEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Uninitialized_move<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __;422100;422100;422100;0;1
??0?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >(void) __ptr64;421700;421700;421700;0;1
??0?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ;__cdecl std::vector<bool,class std::allocator<bool> >::vector<bool,class std::allocator<bool> >(void) __ptr64;421700;421700;421700;0;1
??0?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;421500;421500;421500;0;1
?clone@?$standard_value@I@values@cxxopts@@UEBA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::standard_value<unsigned int>::clone(void)const __ptr64;421400;421400;421400;0;1
?max_size@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::max_size(void)const __ptr64;421200;421200;421200;0;1
??$OnStartActivityImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStartActivityIm;421000;421000;421000;0;1
?capacity@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::capacity(void)const __ptr64;420800;420800;420800;0;1
??$?0V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@$$V$0A@@?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$?0V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@$$V$0A@@?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;420750;393000;448500;27750;2
??1?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::~list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class ;420700;420700;420700;0;1
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@@Z;void __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Erase_tree<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_;420100;420100;420100;0;1
?End@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAPEAV12@XZ;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::End(void) __ptr64;420000;420000;420000;0;1
??0?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >(void) __ptr64;419700;419700;419700;0;1
??$_Uninitialized_move@PEAKV?$allocator@K@std@@@std@@YAPEAKQEAK0PEAKAEAV?$allocator@K@0@@Z;unsigned long * __ptr64 __cdecl std::_Uninitialized_move<unsigned long * __ptr64,class std::allocator<unsigned long> >(unsigned long * __ptr64 const,unsigned long * __ptr64 const,unsigned long * __ptr64,class std::allocator<unsigned long> & __ptr64);419600;419600;419600;0;1
??$_Copy_construct_from@$$CBVOptionDetails@cxxopts@@@?$_Ptr_base@$$CBVOptionDetails@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@$$CBVOptionDetails@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::OptionDetails const >::_Copy_construct_from<class cxxopts::OptionDetails const >(class std::shared_ptr<class cxxopts::OptionDetails const > const & __ptr64) __ptr64;419300;419300;419300;0;1
??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAUFileCompilationData@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAA@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAUFileCompilationData@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAUFileCompilationData@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAA@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAUFileCompilationData@@@1@U?$integer_sequence@_K$0A@@1@2@Z;419200;419200;419200;0;1
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z;__cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >(char const * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;419000;419000;419000;0;1
??$EntityCanMaterializeId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::Activity>(unsigned int);419000;419000;419000;0;1
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::max_size(void)const __ptr64;418900;418900;418900;0;1
??$_Uninitialized_copy@PEAIV?$allocator@I@std@@@std@@YAPEAIQEAI0PEAIAEAV?$allocator@I@0@@Z;unsigned int * __ptr64 __cdecl std::_Uninitialized_copy<unsigned int * __ptr64,class std::allocator<unsigned int> >(unsigned int * __ptr64 const,unsigned int * __ptr64 const,unsigned int * __ptr64,class std::allocator<unsigned int> & __ptr64);418800;418800;418800;0;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct;418700;308100;529300;110600;2
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,stru;418700;418700;418700;0;1
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const;418650;393200;444100;25450;2
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >(void) __ptr64;418600;418600;418600;0;1
??$fill@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> >(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64 const,class std::_List_unchecked_con;418600;418600;418600;0;1
??4?$shared_ptr@VValue@cxxopts@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$shared_ptr@VValue@cxxopts@@@std@@QEAAAEAV01@$$QEAV01@@Z;418600;418600;418600;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simp;418100;418100;418100;0;1
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z;??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z;417900;417900;417900;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Min_load_fa;417700;417700;417700;0;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@XZ;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Release(void) __ptr64;417700;417700;417700;0;1
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Set_back(void) __ptr64;417633;399700;460600;20858;6
?OnSimpleEvent@TemplateInstantiationsAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl TemplateInstantiationsAnalyzer::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;417300;417300;417300;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsi;417300;417300;417300;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Max_bucket_size(void)const __ptr64;417300;417300;417300;0;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >(void) __ptr64;417200;417200;417200;0;1
??$construct@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@AEAPEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@QEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@AEAPEBVTimelineEntry@@$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@@Z;??$construct@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@AEAPEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@QEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@AEAPEBVTimelineEntry@@;416800;416800;416800;0;1
?Duration@?$EventDurationProvider@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > __cdecl Microsoft::Cpp::BuildInsights::Internal::EventDurationProvider<class Microsoft::Cpp::BuildInsights::Activities::Activity>::Duration(void)const __ptr64;416800;307200;710500;170056;4
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;416600;416600;416600;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_tra;416400;297700;535100;118700;2
?_Tidy@?$basic_regex@DV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Tidy(void) __ptr64;416400;416400;416400;0;1
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ;class std::basic_filebuf<char,struct std::char_traits<char> > * __ptr64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::close(void) __ptr64;415900;391900;429400;11608;6
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@;415800;415800;415800;0;1
??$value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@cxxopts@@YA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);415700;415700;415700;0;1
??$emplace_back@AEAUDataPerFunction@?A0x5f10505a@@@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAA@AEAUDataPerFunction@?A0x5f10505a@@@Z;__cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::emplace_back<struct `anonymous namespace'::DataPerFunction & __ptr64>(struct `anonymous namespace'::DataPerFunction & __ptr64) __ptr64;415700;415700;415700;0;1
??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAPEBD@1@$0A@$$Z$0A@@?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAPEBD@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAPEBD@1@$0A@$$Z$0A@@?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAPEBD@1@U?$integer_sequence@_K$0A@@1@2@Z;415500;386000;445000;29500;2
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::__autoclassinit2(unsigned __int64) __ptr64;415400;415400;415400;0;1
??$swap@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@std@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z;void __cdecl std::swap<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,0>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 & __ptr64);415200;415200;415200;0;1
??$_Pop_heap_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Pop_heap_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::all;415000;415000;415000;0;1
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char;414900;414900;414900;0;1
?clear@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::clear(void) __ptr64;414900;414900;414900;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::_Tidy(void) __ptr64;414700;399900;429500;14800;2
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr;414500;414500;414500;0;1
??0?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;414500;414500;414500;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@AEB_N@Z;414300;414300;414300;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;414100;414100;414100;0;1
?capacity@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::capacity(void)const __ptr64;414000;414000;414000;0;1
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Reset_back(void) __ptr64;413816;319700;849200;194752;6
??$?0U_Exact_args_t@std@@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@$$V$0A@@?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@U_Exact_args_t@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;??$?0U_Exact_args_t@std@@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@$$V$0A@@?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@U_Exact_args_t@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;413500;413500;413500;0;1
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,str;412750;402400;423100;10350;2
??$?0PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@1@$$QEA_N@Z;412500;412500;412500;0;1
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,str;412450;402700;422200;9750;2
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class ;412300;412300;412300;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;412200;412200;412200;0;1
??$find@X@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::Lo;411800;411800;411800;0;1
?isctype@?$_Regex_traits@D@std@@QEBA_NDF@Z;bool __cdecl std::_Regex_traits<char>::isctype(char,short)const __ptr64;411500;411500;411500;0;1
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::max_size(void)const __ptr64;411100;411100;411100;0;1
?_Calculate_growth@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Calculate_growth(unsigned __int64)const __ptr64;411100;411100;411100;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;410900;410900;410900;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocato;410800;304700;617700;146316;3
??$emplace_back@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@@Z;__cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::emplace_back<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64) __ptr64;410700;410700;410700;0;1
??$_Uninitialized_move@PEAIV?$allocator@I@std@@@std@@YAPEAIQEAI0PEAIAEAV?$allocator@I@0@@Z;unsigned int * __ptr64 __cdecl std::_Uninitialized_move<unsigned int * __ptr64,class std::allocator<unsigned int> >(unsigned int * __ptr64 const,unsigned int * __ptr64 const,unsigned int * __ptr64,class std::allocator<unsigned int> & __ptr64);410600;410600;410600;0;1
??$_Lookup_range@D@std@@YA_NIPEBU?$_Buf@D@0@@Z;bool __cdecl std::_Lookup_range<char>(unsigned int,struct std::_Buf<char> const * __ptr64);410500;410500;410500;0;1
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,c;410433;367500;459700;37905;3
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<;410400;410400;410400;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 & __ptr64,struct std::_Lis;410300;410300;410300;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@;410150;408800;411500;1350;2
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_trait;410100;410100;410100;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;409900;409900;409900;0;1
??1?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::~list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >(void) __ptr64;409700;409700;409700;0;1
??0?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >(void) __ptr64;409600;409600;409600;0;1
??$Run@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@MakeStaticAnalyzerGroupImpl@Internal@BuildInsights@Cpp@Microsoft@@SA@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@1234@@Z;static __cdecl Microsoft::Cpp::BuildInsights::Internal::MakeStaticAnalyzerGroupImpl::Run<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > * __ptr64>(class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::Bui;409600;409600;409600;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(void) __ptr64;409600;409600;409600;0;1
??$_Freenode@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64,struct std::_List_node<class std::basic_string<;409500;357700;461300;51800;2
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::_Tidy(void) __ptr64;409500;400400;418600;9100;2
??$PushUnsafe@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAAPEAULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@2@_K@Z;struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level * __ptr64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::PushUnsafe<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjso;409500;409500;409500;0;1
??$emplace_back@AEBQEAVTimelineEntry@@@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA@AEBQEAVTimelineEntry@@@Z;__cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::emplace_back<class TimelineEntry * __ptr64 const & __ptr64>(class TimelineEntry * __ptr64 const & __ptr64) __ptr64;409450;380400;438500;29050;2
??0DataPerFunction@?A0x5f10505a@@QEAA@XZ;__cdecl `anonymous namespace'::DataPerFunction::DataPerFunction(void) __ptr64;409400;409400;409400;0;1
??$_Uninitialized_move@PEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@QEAPEAV1234@0PEAPEAV1234@AEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::_Uninitialized_move<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class std::allocator<class Microsoft::Cpp::BuildI;409300;409300;409300;0;1
?_Calculate_growth@?$vector@_KV?$allocator@_K@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Calculate_growth(unsigned __int64)const __ptr64;409200;409200;409200;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __;408300;408300;408300;0;1
??$emplace_back@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@@Z;??$emplace_back@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@@Z;408250;406500;410000;1750;2
?_Calculate_growth@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Calculate_growth(unsigned __int64)const __ptr64;408200;408200;408200;0;1
?_Advance@?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Advance(unsigned __int64) __ptr64;408100;408100;408100;0;1
??$?0U?$default_delete@V_Node_assert@std@@@std@@$0A@@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAA@$$QEAV01@@Z;??$?0U?$default_delete@V_Node_assert@std@@@std@@$0A@@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAA@$$QEAV01@@Z;408000;408000;408000;0;1
?_Decref@?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Decref(void) __ptr64;407900;407900;407900;0;1
?i32toa@internal@rapidjson@@YAPEADHPEAD@Z;char * __ptr64 __cdecl rapidjson::internal::i32toa(int,char * __ptr64);407900;407900;407900;0;1
??$?R$$V@?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$?R$$V@?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$;407900;407900;407900;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::size(void)const __ptr64;407500;407500;407500;0;1
??$?0$$V@?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;??$?0$$V@?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;407500;407500;407500;0;1
?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Take_contents(class std::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > & __ptr64) __ptr64;407433;351900;451600;41488;3
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::~list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<cl;407400;407400;407400;0;1
?max_size@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::max_size(void)const __ptr64;407200;407200;407200;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char;407200;407200;407200;0;1
?max_size@?$vector@KV?$allocator@K@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::max_size(void)const __ptr64;407200;407200;407200;0;1
??0option_requires_argument_exception@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::option_requires_argument_exception::option_requires_argument_exception(class cxxopts::option_requires_argument_exception const & __ptr64) __ptr64;407100;407100;407100;0;1
??1?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::~list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >(void) __ptr64;407000;407000;407000;0;1
?max_size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::max_size(void)const __ptr64;406900;406900;406900;0;1
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >::max_size(void)const __ptr64;406800;406800;406800;0;1
??0?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >(void) __ptr64;406800;406800;406800;0;1
??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAVTimelineEntry@@@1@$0A@$$Z$0A@@?$pair@$$CB_KVTimelineEntry@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAVTimelineEntry@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAVTimelineEntry@@@1@$0A@$$Z$0A@@?$pair@$$CB_KVTimelineEntry@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAVTimelineEntry@@@1@U?$integer_sequence@_K$0A@@1@2@Z;406300;406300;406300;0;1
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z;bool __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Equal(char const * __ptr64 const)const __ptr64;406300;406300;406300;0;1
??0DiyFp@internal@rapidjson@@QEAA@N@Z;__cdecl rapidjson::internal::DiyFp::DiyFp(double) __ptr64;406200;406200;406200;0;1
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >::~list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::;406100;406100;406100;0;1
?_Decref@_Ref_count_base@std@@QEAAXXZ;void __cdecl std::_Ref_count_base::_Decref(void) __ptr64;406000;406000;406000;0;1
?_Calculate_growth@?$vector@KV?$allocator@K@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Calculate_growth(unsigned __int64)const __ptr64;405900;405900;405900;0;1
?_Calculate_growth@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Calculate_growth(unsigned __int64)const __ptr64;405900;405900;405900;0;1
?_Calculate_growth@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Calculate_growth(unsigned __int64)const __ptr64;405700;405700;405700;0;1
?clear@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::clear(void) __ptr64;405500;405500;405500;0;1
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigne;405500;405500;405500;0;1
??0?$vector@KV?$allocator@K@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::vector<unsigned long,class std::allocator<unsigned long> >(void) __ptr64;405300;405300;405300;0;1
??0?$pair@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@QEAA@$$QEAU01@@Z;??0?$pair@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@QEAA@$$QEAU01@@Z;405300;405300;405300;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;404850;393400;416300;11450;2
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::end(void) __ptr64;404600;404600;404600;0;1
?OverlapsWith@TimelineEntry@@QEBA_NPEBV1@@Z;bool __cdecl TimelineEntry::OverlapsWith(class TimelineEntry const * __ptr64)const __ptr64;404300;404300;404300;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64);404200;404200;404200;0;1
??1?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@QEAA@XZ;__cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::~_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;404000;404000;404000;0;1
??$?0U_Exact_args_t@std@@AEB_K$$V$0A@@?$tuple@AEB_K@std@@QEAA@U_Exact_args_t@1@AEB_K@Z;??$?0U_Exact_args_t@std@@AEB_K$$V$0A@@?$tuple@AEB_K@std@@QEAA@U_Exact_args_t@1@AEB_K@Z;403550;360400;517500;65871;4
?_Tidy@?$list@_KV?$allocator@_K@std@@@std@@AEAAXXZ;void __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::_Tidy(void) __ptr64;403200;403200;403200;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std:;403000;370900;435100;32100;2
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namesp;402900;402900;402900;0;1
?_Calculate_growth@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Calculate_growth(unsigned __int64)const __ptr64;402866;384200;425300;16989;3
?OnSimpleEvent@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEBUEVENT_COLLECTION_DATA_TAG@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;402800;402800;402800;0;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@1@$$QEA_N@Z;402700;402700;402700;0;1
??_G?$collate@D@std@@MEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::collate<char>::`scalar deleting destructor'(unsigned int) __ptr64;402700;402700;402700;0;1
??$_Copy_construct_from@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@IEAAXAEBV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@1@@Z;void __cdecl std::_Ptr_base<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,cl;402700;402700;402700;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;402400;402400;402400;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class s;402400;402400;402400;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::_Tidy(void) __ptr64;402300;402300;402300;0;1
??$swap@UDataPerFile@?A0x120c265a@@$0A@@std@@YAXAEAUDataPerFile@?A0x120c265a@@0@Z;void __cdecl std::swap<struct `anonymous namespace'::DataPerFile,0>(struct `anonymous namespace'::DataPerFile & __ptr64,struct `anonymous namespace'::DataPerFile & __ptr64);402300;402300;402300;0;1
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;402050;348900;455200;53150;2
??$_Construct_from_weak@VValue@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAA_NAEBV?$weak_ptr@VValue@cxxopts@@@1@@Z;bool __cdecl std::_Ptr_base<class cxxopts::Value>::_Construct_from_weak<class cxxopts::Value>(class std::weak_ptr<class cxxopts::Value> const & __ptr64) __ptr64;402000;402000;402000;0;1
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64,struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<c;402000;402000;402000;0;1
??0?$unordered_map@_KUTemplateInstantiationData@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,struct TemplateInstantiationData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::unordered_map<unsigned __int64,struct TemplateInstantiationData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >(void) __ptr64;401800;401800;401800;0;1
??$forward@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@AEAV10@@Z;??$forward@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@AEAV10@@Z;401650;255900;547400;145750;2
??$HandleMatchedEvent@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVSymbolName@SimpleEvents@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$HandleMatchedEvent@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microso;401400;401400;401400;0;1
?_Calculate_growth@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::_Calculate_growth(unsigned __int64)const __ptr64;401400;401400;401400;0;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > ;401400;371000;431800;30400;2
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >(void) __ptr64;401400;384200;418600;17200;2
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@1@AEB_N@Z;401300;401300;401300;0;1
?_Expand@?$_Buf@D@std@@AEAAXI@Z;void __cdecl std::_Buf<char>::_Expand(unsigned int) __ptr64;401200;401200;401200;0;1
??1?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::~list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >(void) __ptr64;401100;401100;401100;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespa;401100;401100;401100;0;1
??$forward@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;401000;401000;401000;0;1
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z;void * __ptr64 __cdecl std::_Allocate<16,struct std::_Default_allocate_traits,0>(unsigned __int64);400988;290500;1235500;216767;18
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >(void) __ptr64;400700;400700;400700;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@PEAPEAVTimelineEntry@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(class TimelineEntry * __ptr64 * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;400666;347500;432800;37866;3
??$MatchEventInMemberFunction@VFilterTimelineAnalyzer@@XAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFilterTimelineAnalyzer@@P84@EAAXAEBVFunction@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VFilterTimelineAnalyzer@@XAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFilterTimelineAnalyzer@@P84@EAAXAEBVFunction@Activities@012@@Z@Z;400400;400400;400400;0;1
??4?$shared_ptr@I@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$shared_ptr@I@std@@QEAAAEAV01@$$QEAV01@@Z;400400;400400;400400;0;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@$$QEA_N@Z;400300;400300;400300;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;400300;400300;400300;0;1
?clone@?$standard_value@_N@values@cxxopts@@UEBA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::standard_value<bool>::clone(void)const __ptr64;400300;400300;400300;0;1
?clear@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::clear(void) __ptr64;400200;400200;400200;0;1
?Clear@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAAXXZ;void __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::Clear(void) __ptr64;400100;400100;400100;0;1
??$?0$$V@?$_Ref_count_obj2@I@std@@QEAA@XZ;??$?0$$V@?$_Ref_count_obj2@I@std@@QEAA@XZ;400100;400100;400100;0;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::cha;400050;279500;520600;120550;2
?end@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > > __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_st;399800;399800;399800;0;1
??1?$list@_KV?$allocator@_K@std@@@std@@QEAA@XZ;__cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::~list<unsigned __int64,class std::allocator<unsigned __int64> >(void) __ptr64;399600;399600;399600;0;1
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z;399500;399500;399500;0;1
?max_size@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::max_size(void)const __ptr64;399300;399300;399300;0;1
??$MakeStaticAnalyzerGroup@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@YA@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@012@@Z;__cdecl Microsoft::Cpp::BuildInsights::MakeStaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > * __ptr64>(class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawP;399300;399300;399300;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > >::max_size(void)const __ptr64;399100;399100;399100;0;1
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxop;399100;399100;399100;0;1
?max_size@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::max_size(void)const __ptr64;399000;399000;399000;0;1
??$emplace_back@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;??$emplace_back@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;398900;398900;398900;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,s;398850;386900;410800;11950;2
??$emplace_back@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@$$QEAUHelpOptionDetails@cxxopts@@@Z;??$emplace_back@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@$$QEAUHelpOptionDetails@cxxopts@@@Z;398700;398700;398700;0;1
??0?$standard_value@_N@values@cxxopts@@QEAA@XZ;__cdecl cxxopts::values::standard_value<bool>::standard_value<bool>(void) __ptr64;398400;398400;398400;0;1
??$find@X@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::find<void>(unsigned __int64 const ;398300;398300;398300;0;1
??$_Pop_heap_hole_unchecked@PEAUDataPerFunction@?A0x5f10505a@@U12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@00$$QEAU12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;??$_Pop_heap_hole_unchecked@PEAUDataPerFunction@?A0x5f10505a@@U12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@00$$QEAU12@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;398200;398200;398200;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > co;398200;398200;398200;0;1
?StartObject@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NXZ;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::StartObject(void) __ptr64;397900;397900;397900;0;1
??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV21@@Z;??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV21@@Z;397900;397900;397900;0;1
?GetAllocator@?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@rapidjson@@QEAAAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@XZ;class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64 __cdecl rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>::GetAllocator(void) __ptr64;397800;397800;397800;0;1
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >::clear(void) __ptr64;397600;397600;397600;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >(struct std::pair<class std::ba;397500;397500;397500;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@_K@std@@@std@@SAPEAU?$_List_node@_KPEAX@2@QEAU32@00@Z;static struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<unsigned __int64> >::_Unchecked_splice(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const);397200;397200;397200;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;397100;386900;407300;10200;2
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@234@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@$$QEAVCommandLine@SimpleEvents@234@@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@234@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@$$QEAVCommandLine@SimpleEvents@234@@Z;397000;397000;397000;0;1
?OnTraceInfo@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVTraceInfo@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnTraceInfo(class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64) __ptr64;396914;166300;1608200;495188;7
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_tra;396900;338000;455800;58900;2
??0?$unordered_map@_KUProcessThreadRemap@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,struct ProcessThreadRemap,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::unordered_map<unsigned __int64,struct ProcessThreadRemap,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >(void) __ptr64;396800;396800;396800;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > cons;396700;396700;396700;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;396600;396600;396600;0;1
??$forward_as_tuple@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA?AV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@@Z;??$forward_as_tuple@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA?AV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@@Z;396600;362800;430400;33800;2
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;396400;396400;396400;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > >::_Tidy(void) __ptr64;396400;396400;396400;0;1
??_G?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAPEAXI@Z;void * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::`scalar deleting destructor'(unsigned int) __ptr64;396300;396300;396300;0;1
?GetCachedPower@internal@rapidjson@@YA?AUDiyFp@12@HPEAH@Z;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::GetCachedPower(int,int * __ptr64);396200;396200;396200;0;1
??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;396000;363200;451600;39526;3
??$?0U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@1@@?$_Compressed_pair@U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V_Node_assert@std@@@1@$$QEAPEAV_Node_assert@1@@Z;??$?0U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@1@@?$_Compressed_pair@U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V_Node_assert@std@@@1@$$QEAPEAV_Node_assert@1@@Z;395900;395900;395900;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::bucket_count(void)const __ptr64;395700;395700;395700;0;1
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z;bool __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Equal(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;395414;330900;557500;69735;7
??$?0AEB_K$0A@@?$tuple@AEB_K@std@@QEAA@AEB_K@Z;__cdecl std::tuple<unsigned __int64 const & __ptr64>::tuple<unsigned __int64 const & __ptr64><unsigned __int64 const & __ptr64,0>(unsigned __int64 const & __ptr64) __ptr64;395400;314400;627400;133992;4
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;395400;395400;395400;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >(void) __ptr64;395200;395200;395200;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_st;395200;395200;395200;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::max_size(void)const __ptr64;395100;395100;395100;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > & __ptr64,struct std::_List_node<s;395100;395100;395100;0;1
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cla;394900;394900;394900;0;1
??$_Destroy_range@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@QEAV10@AEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 const,class std::allocator<class std::sub_match<class std::_String_const_iterator<cl;394800;394800;394800;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::alloc;394800;394800;394800;0;1
??$swap@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAXAEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::swap<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64,0>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 & __ptr64,class std::_List_uncheck;394750;376600;412900;18150;2
?_Effective_range@?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEBA?AU?$pair@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@2@XZ;struct std::pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > __cdecl std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Effective_range(void)const __ptr64;394600;394600;394600;0;1
?_Tidy@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Tidy(void) __ptr64;394500;394500;394500;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared;394300;394300;394300;0;1
??0?$_Node_class@DV?$regex_traits@D@std@@@std@@QEAA@W4_Node_type@1@W4_Node_flags@1@@Z;__cdecl std::_Node_class<char,class std::regex_traits<char> >::_Node_class<char,class std::regex_traits<char> >(enum std::_Node_type,enum std::_Node_flags) __ptr64;394200;394200;394200;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(void) __ptr64;394100;394100;394100;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@2@$00@std@@Q;393800;393800;393800;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;393700;393700;393700;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;393700;393700;393700;0;1
?max_size@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::max_size(void)const __ptr64;393500;393500;393500;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct T;393500;393500;393500;0;1
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z;int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;393300;393300;393300;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >(void) __ptr64;393300;393300;393300;0;1
??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::vector<unsigned __int64,class std::allocator<unsigned __int64> >(void) __ptr64;393200;393200;393200;0;1
??$forward@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@YAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@0@AEBV10@@Z;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<;392800;392800;392800;0;1
??1?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;392750;391300;394200;1450;2
?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z;void __cdecl std::allocator<unsigned __int64>::deallocate(unsigned __int64 * __ptr64 const,unsigned __int64) __ptr64;392600;392600;392600;0;1
??$swap@PEAV_Node_base@std@@$0A@@std@@YAXAEAPEAV_Node_base@0@0@Z;void __cdecl std::swap<class std::_Node_base * __ptr64,0>(class std::_Node_base * __ptr64 & __ptr64,class std::_Node_base * __ptr64 & __ptr64);392600;392600;392600;0;1
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);392600;392600;392600;0;1
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ;__cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Sentry_base::~_Sentry_base(void) __ptr64;392516;363500;426700;20486;6
?_Copy_assign@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Copy_assign(class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const & __ptr64,struct std::integral_constant<bool,0>) __ptr64;392500;392500;392500;0;1
?max_size@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::max_size(void)const __ptr64;392500;392500;392500;0;1
??$swap@PEAVValue@cxxopts@@$0A@@std@@YAXAEAPEAVValue@cxxopts@@0@Z;void __cdecl std::swap<class cxxopts::Value * __ptr64,0>(class cxxopts::Value * __ptr64 & __ptr64,class cxxopts::Value * __ptr64 & __ptr64);392400;392400;392400;0;1
?StartArray@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NXZ;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::StartArray(void) __ptr64;391900;391900;391900;0;1
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ;void __cdecl std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::_Tidy_init(void) __ptr64;391900;391900;391900;0;1
?ConvertTime@?$EventDurationProvider@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_J@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > __cdecl Microsoft::Cpp::BuildInsights::Internal::EventDurationProvider<class Microsoft::Cpp::BuildInsights::Activities::Activity>::ConvertTime(__int64)const __ptr64;391675;342400;487000;56611;4
??$?CV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$0A@@?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEBAPEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@1@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;391600;391600;391600;0;1
??$make_pair@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV20@@Z;??$make_pair@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV20@@Z;391400;391400;391400;0;1
??$?0U_Exact_args_t@std@@PEBD$$V$0A@@?$tuple@$$QEAPEBD@std@@QEAA@U_Exact_args_t@1@$$QEAPEBD@Z;??$?0U_Exact_args_t@std@@PEBD$$V$0A@@?$tuple@$$QEAPEBD@std@@QEAA@U_Exact_args_t@1@$$QEAPEBD@Z;391400;388600;394200;2800;2
??$_Uninitialized_move@PEA_KV?$allocator@_K@std@@@std@@YAPEA_KQEA_K0PEA_KAEAV?$allocator@_K@0@@Z;unsigned __int64 * __ptr64 __cdecl std::_Uninitialized_move<unsigned __int64 * __ptr64,class std::allocator<unsigned __int64> >(unsigned __int64 * __ptr64 const,unsigned __int64 * __ptr64 const,unsigned __int64 * __ptr64,class std::allocator<unsigned __int64> & __ptr64);391200;391200;391200;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>(v;391200;391200;391200;0;1
?_Unchecked_begin@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAAPEAUDataPerFile@?A0x120c265a@@XZ;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Unchecked_begin(void) __ptr64;390700;390700;390700;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;390700;390700;390700;0;1
?__autoclassinit2@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@QEAAX_K@Z;void __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::__autoclassinit2(unsigned __int64) __ptr64;390500;390500;390500;0;1
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::clear(void) __ptr64;390500;390500;390500;0;1
?max_size@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::max_size(void)const __ptr64;390466;371600;417500;19608;3
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(void) __ptr64;390400;390400;390400;0;1
?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Calculate_growth(unsigned __int64)const __ptr64;390300;390300;390300;0;1
?_Umove@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@PEAU32@00@Z;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Umove(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThrea;390300;390300;390300;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const,struct std::_List_n;390200;390200;390200;0;1
?_Swap_val@?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::_Swap_val(class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<c;390050;386200;393900;3850;2
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Range_eraser::_Bump_erased(void) __ptr64;389900;389900;389900;0;1
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,cla;389900;337300;442500;52600;2
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::max_size(void)const __ptr64;389900;389900;389900;0;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 & __ptr64);389800;389800;389800;0;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;389700;389700;389700;0;1
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::_Tidy(void) __ptr64;389600;389600;389600;0;1
?_Is_esc@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEBA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Is_esc(void)const __ptr64;389500;389500;389500;0;1
?_Calculate_growth@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Calculate_growth(unsigned __int64)const __ptr64;389300;389300;389300;0;1
??$swap@PEAI$0A@@std@@YAXAEAPEAI0@Z;void __cdecl std::swap<unsigned int * __ptr64,0>(unsigned int * __ptr64 & __ptr64,unsigned int * __ptr64 & __ptr64);389300;389300;389300;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::size(void)const __ptr64;389100;294400;483800;94700;2
??$find@X@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@1@AEB_K@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > > __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::find<void>(unsigned __int64 const & __ptr64)const __ptr64;389100;389100;389100;0;1
??$_Weakly_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXAEBV?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Weakly_construct_from<class cxxopts::values::standard_value<bool> >(class std::_Ptr_base<class cxxopts::values::standard_value<bool> > const & __ptr64) __ptr64;389000;389000;389000;0;1
??4?$shared_ptr@_N@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$shared_ptr@_N@std@@QEAAAEAV01@$$QEAV01@@Z;389000;389000;389000;0;1
??$_Destroy_range@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@QEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const,class std::allocator<struct std::_Tgt_state;389000;389000;389000;0;1
??$find@X@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std:;388700;388700;388700;0;1
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >::_Tidy(void) __ptr64;388500;388500;388500;0;1
??$find@X@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::find<void>(unsigned __int64 const & __ptr64) __ptr64;388400;388400;388400;0;1
??$_Uninitialized_copy@PEBDV?$allocator@D@std@@@std@@YAPEADQEBD0PEADAEAV?$allocator@D@0@@Z;char * __ptr64 __cdecl std::_Uninitialized_copy<char const * __ptr64,class std::allocator<char> >(char const * __ptr64 const,char const * __ptr64 const,char * __ptr64,class std::allocator<char> & __ptr64);388300;388300;388300;0;1
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Memcpy_val_from(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;388180;344100;480900;50082;5
??$?0AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@$0A@@?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;__cdecl std::tuple<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64>::tuple<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64><class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64,0>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;388100;388100;388100;0;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(void) __ptr64;388100;388100;388100;0;1
?MemberBegin@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA?AV?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@XZ;class rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::MemberBegin(void)const __ptr64;388000;388000;388000;0;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > >::_Tidy(void) __ptr64;387900;387900;387900;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * _;387900;387900;387900;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::bucket_count(void)const __ptr64;387800;387800;387800;0;1
?end@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > > __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::end(void) __ptr64;387700;387700;387700;0;1
?_Check_max_size@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;387500;387500;387500;0;1
?AddEntryProperty@BuildTimeline@@QEAAXAEB_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z;void __cdecl BuildTimeline::AddEntryProperty(unsigned __int64 const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;387500;387500;387500;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::max_size(void)const __ptr64;387400;387400;387400;0;1
??0TemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation::TemplateInstantiation(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;387300;250300;630200;172224;3
??$swap@_K$0A@@std@@YAXAEA_K0@Z;void __cdecl std::swap<unsigned __int64,0>(unsigned __int64 & __ptr64,unsigned __int64 & __ptr64);387300;382600;392000;4700;2
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Range_eraser::_Bump_erased(void) __ptr64;387200;326700;447700;60500;2
??$addressof@V?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@@std@@YAPEAV?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@0@AEAV10@@Z;class std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > > * __ptr64 __cdecl std::addressof<class std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<s;387100;387100;387100;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > >::max_size(void)const __ptr64;387000;387000;387000;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base12>(struct std::_List_node<s;387000;387000;387000;0;1
??$HandleMatchedEvent@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVCommandLine@SimpleEvents@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$HandleMatchedEvent@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLi;387000;387000;387000;0;1
??0?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@@Z;__cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(class std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;386900;386900;386900;0;1
??$?0U_Exact_args_t@std@@AEAUTemplateInstantiationData@@$$V$0A@@?$tuple@AEAUTemplateInstantiationData@@@std@@QEAA@U_Exact_args_t@1@AEAUTemplateInstantiationData@@@Z;??$?0U_Exact_args_t@std@@AEAUTemplateInstantiationData@@$$V$0A@@?$tuple@AEAUTemplateInstantiationData@@@std@@QEAA@U_Exact_args_t@1@AEAUTemplateInstantiationData@@@Z;386600;386600;386600;0;1
?max_size@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::max_size(void)const __ptr64;386600;386600;386600;0;1
?clear@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::clear(void) __ptr64;386450;383600;389300;2850;2
??$_Find@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@_K@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std;386400;386400;386400;0;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V$0A@@?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V$0A@@?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;385933;371100;412200;18625;3
?SetFinishTimestamp@TimelineEntry@@QEAAXAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@Z;void __cdecl TimelineEntry::SetFinishTimestamp(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64) __ptr64;385900;385900;385900;0;1
??$swap@PEBVTimelineEntry@@$0A@@std@@YAXAEAPEBVTimelineEntry@@0@Z;void __cdecl std::swap<class TimelineEntry const * __ptr64,0>(class TimelineEntry const * __ptr64 & __ptr64,class TimelineEntry const * __ptr64 & __ptr64);385900;385900;385900;0;1
??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z;??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z;385900;385900;385900;0;1
??$_Uninitialized_copy@PEADV?$allocator@D@std@@@std@@YAPEADQEAD0PEADAEAV?$allocator@D@0@@Z;char * __ptr64 __cdecl std::_Uninitialized_copy<char * __ptr64,class std::allocator<char> >(char * __ptr64 const,char * __ptr64 const,char * __ptr64,class std::allocator<char> & __ptr64);385600;385600;385600;0;1
??$?4V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$weak_ptr@VValue@cxxopts@@@std@@QEAAAEAV01@AEBV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;class std::weak_ptr<class cxxopts::Value> & __ptr64 __cdecl std::weak_ptr<class cxxopts::Value>::operator=<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64) __ptr64;385600;385600;385600;0;1
??$?0U_Exact_args_t@std@@V?$vector@_KV?$allocator@_K@std@@@1@$$V$0A@@?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;??$?0U_Exact_args_t@std@@V?$vector@_KV?$allocator@_K@std@@@1@$$V$0A@@?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;385500;385500;385500;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct s;385500;385500;385500;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@1@AEB_N@Z;385500;385500;385500;0;1
?Resize@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@AEAAX_K@Z;void __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Resize(unsigned __int64) __ptr64;385500;385500;385500;0;1
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<char> >::_Bxty::~_Bxty(void) __ptr64;385312;190800;2998400;674919;16
?max_load_factor@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::max_load_factor(void)const __ptr64;385300;385300;385300;0;1
??$?0U_Exact_args_t@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0U_Exact_args_t@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;385000;356700;406900;22073;4
?max_size@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::max_size(void)const __ptr64;384500;384500;384500;0;1
??$move@AEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@AEAPEAV10@@Z;??$move@AEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@AEAPEAV10@@Z;384500;208600;560400;175900;2
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator;384400;384400;384400;0;1
?_Fnv1a_append_bytes@std@@YA_K_KQEBE_K@Z;unsigned __int64 __cdecl std::_Fnv1a_append_bytes(unsigned __int64,unsigned char const * __ptr64 const,unsigned __int64);384150;355200;422600;19365;12
?max_size@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::max_size(void)const __ptr64;384100;384100;384100;0;1
?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Take_contents(class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64) __ptr64;384000;384000;384000;0;1
??$?0U_Exact_args_t@std@@AEAULocalThreadData@PackedProcessThreadRemapper@@$$V$0A@@?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@U_Exact_args_t@1@AEAULocalThreadData@PackedProcessThreadRemapper@@@Z;??$?0U_Exact_args_t@std@@AEAULocalThreadData@PackedProcessThreadRemapper@@$$V$0A@@?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@U_Exact_args_t@1@AEAULocalThreadData@PackedProcessThreadRemapper@@@Z;384000;384000;384000;0;1
??$emplace_back@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA@$$QEAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@@Z;??$emplace_back@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA@$$QEAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1;383900;383900;383900;0;1
?_Unchecked_end@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Unchecked_end(void) __ptr64;383900;383900;383900;0;1
??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@1@$$QEA_N@Z;383700;383700;383700;0;1
??1?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::~list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >(void) __ptr64;383500;383500;383500;0;1
?max_size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::max_size(void)const __ptr64;383500;383500;383500;0;1
?rend@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBA?AV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > > __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::rend(void)const __ptr64;383200;383200;383200;0;1
??$swap@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@$0A@@std@@YAXAEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@0@Z;void __cdecl std::swap<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,0>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 & __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anon;383200;383200;383200;0;1
?max_size@?$list@_KV?$allocator@_K@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::max_size(void)const __ptr64;383100;383100;383100;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64,struct std::_List_node<class std::basic_st;382750;370400;395100;12350;2
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types;382750;373600;391900;9150;2
??0?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned;382700;382700;382700;0;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVTemplateInstantiation@Activities@456@@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVTemplateInstantiation@Activities@012@@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVTemplateInstantiation@Activities@456@@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVTemplateInstantiation@Activities@012@@Z@Z;382700;382700;382700;0;1
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<char> >::_String_val<struct std::_Simple_types<char> >(void) __ptr64;382556;301400;833000;126829;16
?_Tidy@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Tidy(void) __ptr64;382500;382500;382500;0;1
??$_Alias_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@PEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@Z;void __cdecl std::_Ptr_base<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Alias_construct_from<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64,class cxxopts::values::standard;382400;382400;382400;0;1
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const __ptr64;382200;382200;382200;0;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;382100;382100;382100;0;1
??$find@X@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct;381750;379300;384200;2450;2
??$?0AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@@Z;381700;381700;381700;0;1
?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<char,class std::allocator<char> >::max_size(void)const __ptr64;381700;381700;381700;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class st;381500;381500;381500;0;1
?max_size@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::max_size(void)const __ptr64;381400;381400;381400;0;1
?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,struct std::integral_constant<bool,0>) __ptr64;381300;369100;393500;12200;2
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct s;381100;344500;417700;36600;2
??$OnSimpleEventImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnSimpleEventImpl;380900;380900;380900;0;1
??$emplace_back@AEBK@?$vector@KV?$allocator@K@std@@@std@@QEAA@AEBK@Z;__cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::emplace_back<unsigned long const & __ptr64>(unsigned long const & __ptr64) __ptr64;380700;380700;380700;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@1@AEB_N@Z;380600;380600;380600;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::max_size(void)const __ptr64;380350;379900;380800;450;2
??4?$vector@_NV?$allocator@_N@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::vector<bool,class std::allocator<bool> > & __ptr64 __cdecl std::vector<bool,class std::allocator<bool> >::operator=(class std::vector<bool,class std::allocator<bool> > const & __ptr64) __ptr64;380300;380300;380300;0;1
??$?R$$V@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$?R$$V@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberF;380300;380300;380300;0;1
?begin@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::alloc;380200;380200;380200;0;1
??0?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@$$QEAV01@@Z;379900;379900;379900;0;1
?clear@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::clear(void) __ptr64;379700;379700;379700;0;1
??A?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBAAEBV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@_K@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64 __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::operator[](unsigned __int64)const __ptr64;379500;379500;379500;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilatio;379500;379500;379500;0;1
??1?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::~_Hash<class std::_Umap_trait;379400;379400;379400;0;1
?max_size@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::max_size(void)const __ptr64;379200;379200;379200;0;1
??$_Emplace_back@AEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAXAEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>::_Emplace_back<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr;379150;348400;409900;30750;2
?end@?$list@_KV?$allocator@_K@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > > __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::end(void)const __ptr64;379100;379100;379100;0;1
??$_Find_unchecked1@PEBDE@std@@YAPEBDPEBDQEBDAEBEU?$integral_constant@_N$00@0@@Z;char const * __ptr64 __cdecl std::_Find_unchecked1<char const * __ptr64,unsigned char>(char const * __ptr64,char const * __ptr64 const,unsigned char const & __ptr64,struct std::integral_constant<bool,1>);379000;379000;379000;0;1
?OnStopActivity@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEBUEVENT_COLLECTION_DATA_TAG@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;379000;379000;379000;0;1
?clear@?$vector@KV?$allocator@K@std@@@std@@QEAAXXZ;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::clear(void) __ptr64;378800;378800;378800;0;1
??$Pop@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAAPEAULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@2@_K@Z;struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level * __ptr64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Pop<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtA;378800;378800;378800;0;1
??0bad_alloc@std@@AEAA@QEBD@Z;__cdecl std::bad_alloc::bad_alloc(char const * __ptr64 const) __ptr64;378794;278300;1241900;219713;18
??$HandleMatchedEvent@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVTemplateInstantiation@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$HandleMatchedEvent@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345;378700;378700;378700;0;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> ><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails> & __ptr64,0>(class std::basic_st;378700;378700;378700;0;1
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;378100;378100;378100;0;1
?_Make_iter@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Make_iter(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64)const __ptr64;378000;378000;378000;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __pt;377900;377900;377900;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;377850;238600;517100;139250;2
?__autoclassinit2@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > ;377800;377800;377800;0;1
??0?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@1234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildI;377800;377800;377800;0;1
??$HandleMatchedEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$HandleMatchedEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@Bui;377800;377800;377800;0;1
?max_size@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::max_size(void)const __ptr64;377700;377700;377700;0;1
?max_size@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::max_size(void)const __ptr64;377700;377700;377700;0;1
??$_Construct_in_place@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr64>(class std::_List_unchecke;377600;353100;402100;24500;2
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;377500;377500;377500;0;1
?_Destroy@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@0@Z;void __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Destroy(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::Loc;377500;377500;377500;0;1
??$_Pop_heap_hole_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEBU12@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@00$$QEAPEBU10@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;??$_Pop_heap_hole_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEBU12@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@00$$QEAPEBU10@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;377400;377400;377400;0;1
??$swap@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@$0A@@std@@YAXAEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0@Z;void __cdecl std::swap<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,0>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 & __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 & __pt;377400;377400;377400;0;1
??0_Regex_base@std@@QEAA@XZ;__cdecl std::_Regex_base::_Regex_base(void) __ptr64;377200;377200;377200;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct s;377100;377100;377100;0;1
??0?$unordered_map@_KVTimelineEntry@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class TimelineEntry,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::unordered_map<unsigned __int64,class TimelineEntry,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >(void) __ptr64;377000;377000;377000;0;1
?_Calculate_growth@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Calculate_growth(unsigned __int64)const __ptr64;376800;376800;376800;0;1
?_Swap_val@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@@Z;void __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Swap_val(class std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64) __ptr64;376750;373300;380200;3450;2
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;376700;376700;376700;0;1
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z;__cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Sentry_base::_Sentry_base(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64) __ptr64;376350;348000;398200;19103;6
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;376100;376100;376100;0;1
??$_Sort_heap_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@0V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@@Z;void __cdecl std::_Sort_heap_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,class <lambda_5b04ced4049247d028dd2b0acc74b1e0> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struc;376000;376000;376000;0;1
?default_value@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::default_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;376000;376000;376000;0;1
??4?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;375500;375500;375500;0;1
??$?0V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$_Tuple_val@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;??$?0V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$_Tuple_val@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_;375400;375400;375400;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct Te;375300;375300;375300;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@;375250;370700;379800;4550;2
??$_Destroy_range@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@YAXPEAUHelpOptionDetails@cxxopts@@QEAU12@AEAV?$allocator@UHelpOptionDetails@cxxopts@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct cxxopts::HelpOptionDetails> >(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64 const,class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64);375100;375100;375100;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >(class std::_List_unchecked_iterator<class std::_L;375000;375000;375000;0;1
??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;bool __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::_Lower_bound_duplicate<class std::basic_string<char,struct ;375000;375000;375000;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tr;375000;375000;375000;0;1
?GetStringLength@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAIXZ;unsigned int __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetStringLength(void)const __ptr64;374800;374800;374800;0;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > > >::max_size(void)const __ptr64;374700;374700;374700;0;1
??$?R$$V@?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$?R$$V@?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@;374700;374700;374700;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;374250;339500;409000;34750;2
??$_Get_size_of_n@$0NI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<216>(unsigned __int64);374100;374100;374100;0;1
??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;373400;373400;373400;0;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVActivity@Activities@456@AEBVCommandLine@SimpleEvents@456@@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@AEBVCommandLine@SimpleEvents@012@@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVActivity@Activities@456@AEBVCommandLine@SimpleEvents@456@@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@AEBVCommandLine@SimpleEvents@012@@Z@Z;373400;373400;373400;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits;373300;373300;373300;0;1
??1ParseResult@cxxopts@@QEAA@XZ;__cdecl cxxopts::ParseResult::~ParseResult(void) __ptr64;373200;373200;373200;0;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;373000;373000;373000;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;372700;372700;372700;0;1
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z;char * __ptr64 const & __ptr64 __cdecl std::forward<char * __ptr64 const & __ptr64>(char * __ptr64 const & __ptr64);372686;186800;2179600;486934;15
??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@$$QEA_N@Z;372500;372500;372500;0;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;372300;372300;372300;0;1
??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@$0A@$$Z$0A@@?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@$0A@$$Z$0A@@?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@U?$integer_sequence@_K$0A@@1@2@Z;372300;372300;372300;0;1
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::_Tree<class std::_Tmap_traits<class std::basic_string<char,struc;372100;372100;372100;0;1
??$?0U_Exact_args_t@std@@AEAVTimelineEntry@@$$V$0A@@?$tuple@AEAVTimelineEntry@@@std@@QEAA@U_Exact_args_t@1@AEAVTimelineEntry@@@Z;??$?0U_Exact_args_t@std@@AEAVTimelineEntry@@$$V$0A@@?$tuple@AEAVTimelineEntry@@@std@@QEAA@U_Exact_args_t@1@AEAVTimelineEntry@@@Z;372000;372000;372000;0;1
?begin@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > > __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_st;371900;371900;371900;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@1@$$QEA_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@1@$$QEA_N@Z;371900;371900;371900;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >;371850;352100;391600;19750;2
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Find<unsigne;371800;371800;371800;0;1
??$?0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;??$?0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;371750;342400;401100;29350;2
?max_size@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::max_size(void)const __ptr64;371700;371700;371700;0;1
?_Floor_of_log_2@std@@YAK_K@Z;unsigned long __cdecl std::_Floor_of_log_2(unsigned __int64);371690;329500;520500;48801;11
??$?R$$V@?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$?R$$V@?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandle;371600;371600;371600;0;1
??$swap@PEAV_Ref_count_base@std@@$0A@@std@@YAXAEAPEAV_Ref_count_base@0@0@Z;void __cdecl std::swap<class std::_Ref_count_base * __ptr64,0>(class std::_Ref_count_base * __ptr64 & __ptr64,class std::_Ref_count_base * __ptr64 & __ptr64);371500;371500;371500;0;1
??$find@X@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::find<void>(unsigned __int64 const & __ptr64) __ptr64;371400;371400;371400;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@PEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_;371400;371400;371400;0;1
??$_Emplace_back@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Emplace_back<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64) __ptr64;371000;371000;371000;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,st;370800;370800;370800;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair;370800;370800;370800;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsig;370800;370800;370800;0;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allo;370800;370800;370800;0;1
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base12>::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,;370400;370400;370400;0;1
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void) __ptr64;370400;370400;370400;0;1
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > > __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,cl;370200;370200;370200;0;1
??$_Alias_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@1@PEAV?$standard_value@_N@values@cxxopts@@@Z;void __cdecl std::_Ptr_base<class cxxopts::values::standard_value<bool> >::_Alias_construct_from<class cxxopts::values::standard_value<bool> >(class std::shared_ptr<class cxxopts::values::standard_value<bool> > const & __ptr64,class cxxopts::values::standard_value<bool> * __ptr64) __ptr64;370000;370000;370000;0;1
??_G?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::`scalar deleting destructor'(unsigned int) __ptr64;370000;370000;370000;0;1
??$_Move_construct_from@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$a;369800;369800;369800;0;1
??$?0U_Exact_args_t@std@@UDataPerTemplate@?A0x5cdd232a@@$$V$0A@@?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@U_Exact_args_t@1@$$QEAUDataPerTemplate@?A0x5cdd232a@@@Z;??$?0U_Exact_args_t@std@@UDataPerTemplate@?A0x5cdd232a@@$$V$0A@@?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@U_Exact_args_t@1@$$QEAUDataPerTemplate@?A0x5cdd232a@@@Z;369700;369700;369700;0;1
?max_size@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::max_size(void)const __ptr64;369700;369700;369700;0;1
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@_K@std@@V?$_Compressed_pair@U?$equal_to@_K@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@_K@std@@V?$_Compressed_pair@U?$equal_to@_K@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;369560;337600;451800;41574;5
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::;369500;369500;369500;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<st;369500;369500;369500;0;1
?size@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::size(void)const __ptr64;369500;369500;369500;0;1
??_GKeyValue@cxxopts@@QEAAPEAXI@Z;void * __ptr64 __cdecl cxxopts::KeyValue::`scalar deleting destructor'(unsigned int) __ptr64;369400;369400;369400;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(void) __ptr64;369300;369300;369300;0;1
??$_Pop_heap_hole_unchecked@PEAUDataPerFile@?A0x120c265a@@U12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@00$$QEAU12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;??$_Pop_heap_hole_unchecked@PEAUDataPerFile@?A0x120c265a@@U12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@00$$QEAU12@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;369300;369300;369300;0;1
??$value@_N@cxxopts@@YA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::value<bool>(void);369100;369100;369100;0;1
??$_Weakly_construct_from@V?$standard_value@I@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXAEBV?$_Ptr_base@V?$standard_value@I@values@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Weakly_construct_from<class cxxopts::values::standard_value<unsigned int> >(class std::_Ptr_base<class cxxopts::values::standard_value<unsigned int> > const & __ptr64) __ptr64;369100;369100;369100;0;1
??$_Construct_in_place@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<class std::;369000;369000;369000;0;1
??$?0UFileCompilationData@@$$V$0A@@?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAUFileCompilationData@@@Z;??$?0UFileCompilationData@@$$V$0A@@?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAUFileCompilationData@@@Z;368800;368800;368800;0;1
??$_Within_limits@PEBDE@std@@YA_NPEBDAEBE@Z;bool __cdecl std::_Within_limits<char const * __ptr64,unsigned char>(char const * __ptr64,unsigned char const & __ptr64);368800;368800;368800;0;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@$$QEA_N@Z;368700;368700;368700;0;1
??0AnalysisOptions@BuildAnalyzer@@QEAA@XZ;__cdecl BuildAnalyzer::AnalysisOptions::AnalysisOptions(void) __ptr64;368700;368700;368700;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __;368600;368600;368600;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@PEAKPEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >(unsigned long * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;368500;368500;368500;0;1
??$swap@PEA_N$0A@@std@@YAXAEAPEA_N0@Z;void __cdecl std::swap<bool * __ptr64,0>(bool * __ptr64 & __ptr64,bool * __ptr64 & __ptr64);368500;368500;368500;0;1
?max_size@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::max_size(void)const __ptr64;368500;368500;368500;0;1
?begin@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > > __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char;368400;368400;368400;0;1
??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V01234@@?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@0@Z;??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V01234@@?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@0@Z;368400;368400;368400;0;1
?NormalizeBoundary@DiyFp@internal@rapidjson@@QEBA?AU123@XZ;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::DiyFp::NormalizeBoundary(void)const __ptr64;368200;368200;368200;0;1
??$Forward@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$HandlerForwarder@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SAX$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVFrontEndFile@Activities@345@1@Z;??$Forward@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$HandlerForwarder@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@;368100;368100;368100;0;1
??$?0PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;367900;367900;367900;0;1
?_Next@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Next(void) __ptr64;367700;367700;367700;0;1
?end@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::end(void) __ptr64;367700;367700;367700;0;1
?_Buy_raw@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Buy_raw(unsigned __int64) __ptr64;367600;367600;367600;0;1
?_Buy_raw@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Buy_raw(unsigned __int64) __ptr64;367600;367600;367600;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::cha;367600;336700;398500;30900;2
?_Link_node@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAPEAV_Node_base@2@PEAV32@@Z;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Link_node(class std::_Node_base * __ptr64) __ptr64;367300;367300;367300;0;1
??1?$abstract_value@I@values@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::values::abstract_value<unsigned int>::~abstract_value<unsigned int>(void) __ptr64;367300;367300;367300;0;1
?_Sfx@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAAEAV?$sub_match@PEBD@2@XZ;class std::sub_match<char const * __ptr64> & __ptr64 __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Sfx(void) __ptr64;367300;367300;367300;0;1
?swap@?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAAXAEAU12@@Z;void __cdecl std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>::swap(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> & __ptr64) __ptr64;367200;367200;367200;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair;367000;367000;367000;0;1
??1?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::~match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >;366900;366900;366900;0;1
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::cha;366900;366900;366900;0;1
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::reserve(unsigned __int64) __ptr64;366500;366500;366500;0;1
?_Insert@?$_Buf@D@std@@QEAAXD@Z;void __cdecl std::_Buf<char>::_Insert(char) __ptr64;366400;366400;366400;0;1
?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct s;366200;366200;366200;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@1@@Z;366100;366100;366100;0;1
??$StringRef@D@rapidjson@@YA?AU?$GenericStringRef@D@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct rapidjson::GenericStringRef<char> __cdecl rapidjson::StringRef<char>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);366100;366100;366100;0;1
??0?$_Sequence@D@std@@QEAA@I@Z;__cdecl std::_Sequence<char>::_Sequence<char>(unsigned int) __ptr64;366000;366000;366000;0;1
?OnStartActivity@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEBUEVENT_COLLECTION_DATA_TAG@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;366000;366000;366000;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 const,struct std::_List_node<struct std::pair<;366000;366000;366000;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class ;365900;365900;365900;0;1
??0?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA@AEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@1@PEAVCrtAllocator@1@_K@Z;__cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>(class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::c;365500;365500;365500;0;1
?_Buy_raw@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Buy_raw(unsigned __int64) __ptr64;365500;365500;365500;0;1
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z;void __cdecl <lambda_65e615be2a453ca0576c979606f46740>::operator()(char * __ptr64 const,char const * __ptr64 const,unsigned __int64,char const * __ptr64 const,unsigned __int64)const __ptr64;365350;356400;374300;8950;2
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Interna;365300;365300;365300;0;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;365200;365200;365200;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base12>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64,class std;365150;352300;378000;12850;2
?MemberBegin@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA?AV?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@XZ;class rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::MemberBegin(void) __ptr64;365100;365100;365100;0;1
?max_size@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::max_size(void)const __ptr64;364900;364900;364900;0;1
??$OnStopActivityImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStopActivityImp;364900;364900;364900;0;1
?MemberEnd@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA?AV?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@XZ;class rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::MemberEnd(void) __ptr64;364900;364900;364900;0;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std:;364800;364800;364800;0;1
??1_Clear_guard@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;364700;364700;364700;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simp;364600;364600;364600;0;1
??$make_tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AV?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z;??$make_tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AV?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z;364600;364600;364600;0;1
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z;void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Initcvt(class std::codecvt<char,char,struct _Mbstatet> const & __ptr64) __ptr64;364533;355400;372700;7008;6
??$swap@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@$0A@@std@@YAXAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@0@Z;void __cdecl std::swap<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,0>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64);364300;355600;373000;8700;2
??$_Destroy_range@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@YAXPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@QEAU10@AEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64,struct std::pair<class std::basic_string<char,struct;364300;364300;364300;0;1
?OnTraceInfo@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEBUTRACE_INFO_DATA_TAG@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;364200;364200;364200;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@1@$$QEA_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char;364000;364000;364000;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > const & __ptr64>(class;364000;363600;364400;400;2
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > >::max_size(void)const __ptr64;364000;364000;364000;0;1
??$?0AEAULocalThreadData@PackedProcessThreadRemapper@@$0A@@?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@AEAULocalThreadData@PackedProcessThreadRemapper@@@Z;__cdecl std::tuple<struct PackedProcessThreadRemapper::LocalThreadData & __ptr64>::tuple<struct PackedProcessThreadRemapper::LocalThreadData & __ptr64><struct PackedProcessThreadRemapper::LocalThreadData & __ptr64,0>(struct PackedProcessThreadRemapper::LocalThreadData & __ptr64) __ptr64;364000;364000;364000;0;1
??$_Pop_heap_hole_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@00$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;??$_Pop_heap_hole_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@00$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;363800;363800;363800;0;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_tra;363700;363700;363700;0;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVActivity@Activities@456@0@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@2@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVActivity@Activities@456@0@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@2@Z@Z;363700;363700;363700;0;1
??$_Free_non_head@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@?$_List_node@_KPEAX@std@@SAXAEAV?$allocator@U?$_List_node@_KPEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<unsigned __int64,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >(class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > & __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64);363500;363500;363500;0;1
??$_Set_ptr_rep_and_enable_shared@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@AEAAXQEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@1@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,c;363400;363400;363400;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple;363200;353500;372900;9700;2
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::;362800;362800;362800;0;1
??$destroy@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KUTemplateInstantiationData@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >::destroy<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > & __ptr64,struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> * __ptr64 co;362800;362800;362800;0;1
?_Tidy@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Tidy(void) __ptr64;362600;351900;373300;10700;2
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base12>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,class std::_List_val<struct;362500;362500;362500;0;1
?_Tidy@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Tidy(void) __ptr64;362300;362300;362300;0;1
?_Getal@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> & __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCo;362200;362200;362200;0;1
?GetString@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAPEBDXZ;char const * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetString(void)const __ptr64;362100;362100;362100;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;361900;361900;361900;0;1
?_Add_named_class@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXF_N@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_named_class(short,bool) __ptr64;361800;361800;361800;0;1
?_Make_iter@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Make_iter(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64)const __ptr64;361800;361800;361800;0;1
??$MatchEventInMemberFunction@VTemplateInstantiationsAnalyzer@@XAEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVTemplateInstantiationsAnalyzer@@P84@EAAXAEBVTemplateInstantiation@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VTemplateInstantiationsAnalyzer@@XAEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVTemplateInstantiationsAnalyzer@@P84@EAAXAEBVTemplateInstantiation@Activities@012@@Z@Z;361700;361700;361700;0;1
?_Make_const_iter@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocat;361400;361400;361400;0;1
??1?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::~_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(void) __ptr64;361400;361400;361400;0;1
??$?0U_Exact_args_t@std@@AEAUProcessThreadRemap@@$$V$0A@@?$tuple@AEAUProcessThreadRemap@@@std@@QEAA@U_Exact_args_t@1@AEAUProcessThreadRemap@@@Z;??$?0U_Exact_args_t@std@@AEAUProcessThreadRemap@@$$V$0A@@?$tuple@AEAUProcessThreadRemap@@@std@@QEAA@U_Exact_args_t@1@AEAUProcessThreadRemap@@@Z;361300;361300;361300;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_;361150;253400;468900;107750;2
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<;361100;338300;390100;18574;4
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __pt;361100;361100;361100;0;1
??$?DV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$0A@@?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEBAAEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@1@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;361100;361100;361100;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocat;361000;361000;361000;0;1
??1?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@rapidjson@@QEAA@XZ;__cdecl rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>::~GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>(void) __ptr64;360800;360800;360800;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;360700;360700;360700;0;1
??0?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@QEAA@AEBV0123@@Z;__cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::Ana;360500;360500;360500;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;360500;351800;369200;8700;2
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >::_Allocate(void) __ptr64;360500;360500;360500;0;1
??$forward_as_tuple@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA?AV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z;??$forward_as_tuple@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA?AV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U;360400;360400;360400;0;1
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,;360300;360300;360300;0;1
?_Swap_val@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAAXAEAV12@@Z;void __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Swap_val(class std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue;360200;360200;360200;0;1
??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z;void __cdecl <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()(char * __ptr64 const,char const * __ptr64 const,unsigned __int64,char)const __ptr64;360100;318400;412200;31644;8
??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@;359950;358400;361500;1550;2
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z;void __cdecl std::_Destroy_in_place<char * __ptr64>(char * __ptr64 & __ptr64);359818;186300;2358100;516824;16
?end@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::end(void)const __ptr64;359800;359800;359800;0;1
?_Copy_assign@?$vector@IV?$allocator@I@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Copy_assign(class std::vector<unsigned int,class std::allocator<unsigned int> > const & __ptr64,struct std::integral_constant<bool,0>) __ptr64;359800;359800;359800;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Unchecked_splice(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_trait;359800;358100;361500;1700;2
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct s;359600;359600;359600;0;1
??0_Node_back@std@@QEAA@I@Z;__cdecl std::_Node_back::_Node_back(unsigned int) __ptr64;359600;359600;359600;0;1
??1?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;359300;359300;359300;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tr;359100;359100;359100;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>;359100;359100;359100;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std:;358800;358800;358800;0;1
??0?$pair@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@QEAA@AEBU01@@Z;__cdecl std::pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(struct std::pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,;358600;358600;358600;0;1
??$_Construct_in_place@V?$standard_value@I@values@cxxopts@@AEBV123@@std@@YAXAEAV?$standard_value@I@values@cxxopts@@AEBV123@@Z;void __cdecl std::_Construct_in_place<class cxxopts::values::standard_value<unsigned int>,class cxxopts::values::standard_value<unsigned int> const & __ptr64>(class cxxopts::values::standard_value<unsigned int> & __ptr64,class cxxopts::values::standard_value<unsigned int> const & __ptr64);358500;358500;358500;0;1
??$?0V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;??$?0V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;358400;358400;358400;0;1
??A?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEBAAEBV?$sub_match@PEBD@1@_K@Z;class std::sub_match<char const * __ptr64> const & __ptr64 __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::operator[](unsigned __int64)const __ptr64;358400;358400;358400;0;1
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;358300;358300;358300;0;1
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char;358300;358300;358300;0;1
??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVTemplateInstantiation@Activities@234@@Z;??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVTemplateInstantiation@Activities@234@@Z;358200;358200;358200;0;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_trai;358000;307800;408200;50200;2
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateIn;357800;357800;357800;0;1
?begin@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > > __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::begin(void) __ptr64;357800;357800;357800;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Unchecked_splice(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >;357500;357500;357500;0;1
?WriteIndent@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAAXXZ;void __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteIndent(void) __ptr64;357400;357400;357400;0;1
?end@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > > __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::end(void) __ptr64;357300;357300;357300;0;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<cha;357300;282500;432100;74800;2
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64);357200;357200;357200;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,st;357050;307400;406700;49650;2
??$forward@VInvocation@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVInvocation@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VInvocation@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVInvocation@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;357000;357000;357000;0;1
?end@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<;356800;356800;356800;0;1
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z;void __cdecl std::_Construct_in_place<char * __ptr64,char * __ptr64 const & __ptr64>(char * __ptr64 & __ptr64,char * __ptr64 const & __ptr64);356406;314500;441100;29246;15
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV;356300;356300;356300;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::c;356250;326800;385700;29450;2
??0?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@AEBV01@@Z;__cdecl std::tuple<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::tuple<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights:;356100;356100;356100;0;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@SAPEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@2@AEAU32@@Z;static struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > & __ptr64);356000;356000;356000;0;1
?_Tidy@?$_Node_class@DV?$regex_traits@D@std@@@std@@QEAAXPEAU?$_Sequence@D@2@@Z;void __cdecl std::_Node_class<char,class std::regex_traits<char> >::_Tidy(struct std::_Sequence<char> * __ptr64) __ptr64;356000;356000;356000;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;355900;335500;376300;20400;2
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_;355900;355900;355900;0;1
?resize@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::resize(unsigned __int64) __ptr64;355700;355700;355700;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::c;355650;339400;371900;16250;2
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned __int64,char) __ptr64;355600;355600;355600;0;1
??$?0V?$standard_value@_N@values@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@1@@Z;??$?0V?$standard_value@_N@values@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@1@@Z;355600;355600;355600;0;1
??$_Copy_construct_from@VOptionDetails@cxxopts@@@?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::OptionDetails>::_Copy_construct_from<class cxxopts::OptionDetails>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;355300;355300;355300;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simpl;355100;355100;355100;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char;355000;355000;355000;0;1
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::`vbase destructor'(void) __ptr64;354933;295400;490600;65133;6
??$?0V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@$0A@@?$weak_ptr@VValue@cxxopts@@@std@@QEAA@AEBV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;__cdecl std::weak_ptr<class cxxopts::Value>::weak_ptr<class cxxopts::Value><class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>(class std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64) __ptr64;354900;354900;354900;0;1
??$_Move_backward_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAU12@@std@@YAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@PEAU10@00@Z;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::_Move_backward_unchecked<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64>(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::Loca;354900;354900;354900;0;1
??$_Swap_adl@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@0@Z;void __cdecl std::_Swap_adl<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64);354900;301100;408700;53800;2
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;354800;354800;354800;0;1
??0?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@$$QEAV01@@Z;??0?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@$$QEAV01@@Z;354600;354600;354600;0;1
?_Take_contents@?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<unsigned __int64> >::_Take_contents(class std::_Vector_val<struct std::_Simple_types<unsigned __int64> > & __ptr64) __ptr64;354500;354500;354500;0;1
??$?0$$V@?$_Ref_count_obj2@_N@std@@QEAA@XZ;??$?0$$V@?$_Ref_count_obj2@_N@std@@QEAA@XZ;354500;354500;354500;0;1
??$_Copy_construct_from@VOptionDetails@cxxopts@@@?$_Ptr_base@$$CBVOptionDetails@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::OptionDetails const >::_Copy_construct_from<class cxxopts::OptionDetails>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;354400;354400;354400;0;1
?i64toa@internal@rapidjson@@YAPEAD_JPEAD@Z;char * __ptr64 __cdecl rapidjson::internal::i64toa(__int64,char * __ptr64);354300;354300;354300;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::alloc;354150;315300;393000;38850;2
??$?0UDataPerTemplate@?A0x5cdd232a@@$$V$0A@@?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@$$QEAUDataPerTemplate@?A0x5cdd232a@@@Z;??$?0UDataPerTemplate@?A0x5cdd232a@@$$V$0A@@?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@$$QEAUDataPerTemplate@?A0x5cdd232a@@@Z;354100;354100;354100;0;1
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@0@AEBV10@@Z;class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > const * __ptr64 __cdecl std::addressof<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > const >(class std::_Tree_val<struct std::_Tree_simple_types<struct ;354100;354100;354100;0;1
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy_init(void) __ptr64;354085;290700;492800;54915;14
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;class std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > > __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,cl;354000;354000;354000;0;1
??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@$$QEA_N@Z;354000;354000;354000;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;353800;353800;353800;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;353800;353800;353800;0;1
??4?$vector@IV?$allocator@I@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::vector<unsigned int,class std::allocator<unsigned int> > & __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::operator=(class std::vector<unsigned int,class std::allocator<unsigned int> > const & __ptr64) __ptr64;353600;353600;353600;0;1
??$_Alias_construct_from@V?$standard_value@I@values@cxxopts@@@?$_Ptr_base@V?$standard_value@I@values@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@1@PEAV?$standard_value@I@values@cxxopts@@@Z;void __cdecl std::_Ptr_base<class cxxopts::values::standard_value<unsigned int> >::_Alias_construct_from<class cxxopts::values::standard_value<unsigned int> >(class std::shared_ptr<class cxxopts::values::standard_value<unsigned int> > const & __ptr64,class cxxopts::values::standard_value<unsigned int> * __ptr64) __ptr64;353600;353600;353600;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<stru;353400;353400;353400;0;1
??$?0AEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@AEAPEAPEBU01@$0A@@?$pair@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@std@@QEAA@AEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@0@Z;__cdecl std::pair<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64>::pair<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr;353200;353200;353200;0;1
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::ch;353200;353200;353200;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 const,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>;353200;353200;353200;0;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::construct<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::basic_string<char,struct std::char_traits;353100;353100;353100;0;1
?_Tidy@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_Tidy(void) __ptr64;352900;352900;352900;0;1
??$assign@PEAI$0A@@?$vector@IV?$allocator@I@std@@@std@@QEAAXPEAI0@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::assign<unsigned int * __ptr64,0>(unsigned int * __ptr64,unsigned int * __ptr64) __ptr64;352900;352900;352900;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base12>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct Pac;352800;352800;352800;0;1
?_Decref@?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Decref(void) __ptr64;352800;352800;352800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_st;352800;265000;440600;87800;2
??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@1@$$QEA_N@Z;352800;352800;352800;0;1
??_0?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEB_J@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > & __ptr64 __cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000000> >::operator/=(__int64 const & __ptr64) __ptr64;352666;243100;557300;144818;3
?_Decwref@_Ref_count_base@std@@QEAAXXZ;void __cdecl std::_Ref_count_base::_Decwref(void) __ptr64;352600;352600;352600;0;1
?ConvertTickPrecision@Internal@BuildInsights@Cpp@Microsoft@@YA_J_J00@Z;__int64 __cdecl Microsoft::Cpp::BuildInsights::Internal::ConvertTickPrecision(__int64,__int64,__int64);352520;297900;418700;46614;5
??$?4V?$standard_value@_N@values@cxxopts@@@?$weak_ptr@VValue@cxxopts@@@std@@QEAAAEAV01@AEBV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@1@@Z;class std::weak_ptr<class cxxopts::Value> & __ptr64 __cdecl std::weak_ptr<class cxxopts::Value>::operator=<class cxxopts::values::standard_value<bool> >(class std::shared_ptr<class cxxopts::values::standard_value<bool> > const & __ptr64) __ptr64;352500;352500;352500;0;1
??R?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEBA_KAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;unsigned __int64 __cdecl std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >::operator()(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64)const __ptr64;352300;352300;352300;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std:;352200;338600;365800;13600;2
?_Umove_if_noexcept@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAXPEAPEAVTimelineEntry@@00@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Umove_if_noexcept(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64) __ptr64;352150;276400;427900;75750;2
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::size(void)const __ptr64;351900;351900;351900;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base12>(struct std::_List_node<struct std::pair<class std::sha;351800;351800;351800;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allo;351700;351700;351700;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?;351700;351700;351700;0;1
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;351700;323900;379500;27800;2
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::_Tidy(void) __ptr64;351500;351500;351500;0;1
?_Unchecked_begin@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;351400;351400;351400;0;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > ;351100;323100;379100;28000;2
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::_Release(void) __ptr64;351100;351100;351100;0;1
??1?$basic_regex@DV?$regex_traits@D@std@@@std@@QEAA@XZ;__cdecl std::basic_regex<char,class std::regex_traits<char> >::~basic_regex<char,class std::regex_traits<char> >(void) __ptr64;351100;351100;351100;0;1
??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@$$V@1234@$$QEAVActivity@Activities@234@4@Z;??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimeline;351000;351000;351000;0;1
??0?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >(class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > const & __ptr64) __ptr64;350900;350900;350900;0;1
??0?$shared_ptr@V?$standard_value@I@values@cxxopts@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@V?$standard_value@I@values@cxxopts@@@std@@QEAA@$$QEAV01@@Z;350800;350800;350800;0;1
??$?N_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z;bool __cdecl std::chrono::operator<=<__int64,struct std::ratio<1,1000000000>,__int64,struct std::ratio<1,1000000000> >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);350800;350800;350800;0;1
??$?0AEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@AEAPEAPEBU01@$0A@@?$pair@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAPEBU12@@std@@QEAA@AEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@0@Z;__cdecl std::pair<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64>::pair<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,str;350700;350700;350700;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >(void) __ptr64;350700;300000;401400;50700;2
??0?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@AEBV01234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildI;350600;350600;350600;0;1
??$?0V?$standard_value@I@values@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@1@@Z;??$?0V?$standard_value@I@values@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@1@@Z;350500;350500;350500;0;1
??0bad_cast@std@@QEAA@XZ;__cdecl std::bad_cast::bad_cast(void) __ptr64;350500;319000;387000;27885;7
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;350450;350200;350700;250;2
?end@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::end(void) __ptr64;350300;350300;350300;0;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVSymbolName@SimpleEvents@456@@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVSymbolName@SimpleEvents@012@@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVSymbolName@SimpleEvents@456@@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVSymbolName@SimpleEvents@012@@Z@Z;350100;350100;350100;0;1
??0?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV01@@Z;350100;329300;370900;20800;2
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> ;350000;350000;350000;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64);349900;349900;349900;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64>(class std::_List_unchecked_it;349800;349800;349800;0;1
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::capacity(void)const __ptr64;349700;349700;349700;0;1
??$MatchEventInMemberFunction@VFunctionCompilationsAnalyzer@@XAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFunctionCompilationsAnalyzer@@P84@EAAXAEBVFunction@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VFunctionCompilationsAnalyzer@@XAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFunctionCompilationsAnalyzer@@P84@EAAXAEBVFunction@Activities@012@@Z@Z;349600;349600;349600;0;1
??$?0V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >(class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > const & __ptr64) __ptr64;349600;349600;349600;0;1
?end@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::end(void) __ptr64;349400;349400;349400;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t;349400;349400;349400;0;1
??$MatchEventInMemberFunction@VTemplateInstantiationsAnalyzer@@XAEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVTemplateInstantiationsAnalyzer@@P84@EAAXAEBVSymbolName@SimpleEvents@012@@Z@Z;??$MatchEventInMemberFunction@VTemplateInstantiationsAnalyzer@@XAEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVTemplateInstantiationsAnalyzer@@P84@EAAXAEBVSymbolName@SimpleEvents@012@@Z@Z;348900;348900;348900;0;1
??$_Weakly_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXAEBV?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Weakly_construct_from<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::_Ptr_base<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64) __ptr64;348700;348700;348700;0;1
?begin@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > > __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::begin(void) __ptr64;348700;348700;348700;0;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<cha;348600;341700;355500;6900;2
??$_Find_unchecked1@PEAKK@std@@YAPEAKPEAKQEAKAEBKU?$integral_constant@_N$0A@@0@@Z;unsigned long * __ptr64 __cdecl std::_Find_unchecked1<unsigned long * __ptr64,unsigned long>(unsigned long * __ptr64,unsigned long * __ptr64 const,unsigned long const & __ptr64,struct std::integral_constant<bool,0>);348400;348400;348400;0;1
??1_Iterator_base12@std@@QEAA@XZ;__cdecl std::_Iterator_base12::~_Iterator_base12(void) __ptr64;348366;312600;422500;28443;15
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstant;348200;348200;348200;0;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_;348100;348100;348100;0;1
?_Buy_raw@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Buy_raw(unsigned __int64) __ptr64;348100;348100;348100;0;1
?_Make_iter@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Make_iter(struct std::_;348100;348100;348100;0;1
?pointer_to@?$pointer_traits@PEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@SAPEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@2@AEBU32@@Z;static struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const * __ptr64>::pointer_to(struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const & __ptr64);348100;348100;348100;0;1
?insert@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;struct std::pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,bool> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_;348000;348000;348000;0;1
??$_Emplace_back@AEBI@?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAAXAEBI@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<unsigned int> >::_Emplace_back<unsigned int const & __ptr64>(unsigned int const & __ptr64) __ptr64;348000;348000;348000;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<st;347800;347800;347800;0;1
??$?0AEAPEAV_Node_assert@std@@@?$_Compressed_pair@U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Node_assert@1@@Z;__cdecl std::_Compressed_pair<struct std::default_delete<class std::_Node_assert>,class std::_Node_assert * __ptr64,1>::_Compressed_pair<struct std::default_delete<class std::_Node_assert>,class std::_Node_assert * __ptr64,1><class std::_Node_assert * __ptr64 & __ptr64>(struct std::_Zero_then_variadic_args_t,class std::_Node_assert * __ptr64 & __ptr64) __ptr64;347800;347800;347800;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::_Unchecked_splice(struct std::_List_node<struct std::pair<class;347700;347700;347700;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base12>(;347466;331400;368300;15436;3
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;347350;345300;349400;2050;2
??$_Construct_in_place@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$$V@std@@YAXAEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@0@@Z;??$_Construct_in_place@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$$V@std@@YAXAEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$;347100;347100;347100;0;1
?value@OptionDetails@cxxopts@@QEBAAEBVValue@2@XZ;class cxxopts::Value const & __ptr64 __cdecl cxxopts::OptionDetails::value(void)const __ptr64;347100;347100;347100;0;1
??$?4V?$standard_value@I@values@cxxopts@@@?$weak_ptr@VValue@cxxopts@@@std@@QEAAAEAV01@AEBV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@1@@Z;class std::weak_ptr<class cxxopts::Value> & __ptr64 __cdecl std::weak_ptr<class cxxopts::Value>::operator=<class cxxopts::values::standard_value<unsigned int> >(class std::shared_ptr<class cxxopts::values::standard_value<unsigned int> > const & __ptr64) __ptr64;347000;347000;347000;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;346900;346900;346900;0;1
?bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_tr;346650;345800;347500;850;2
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;346600;345900;347300;700;2
??0?$tuple@AEAUProcessThreadRemap@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEAUProcessThreadRemap@@@std@@QEAA@$$QEAV01@@Z;346600;346600;346600;0;1
?_Buy_raw@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<char,class std::allocator<char> >::_Buy_raw(unsigned __int64) __ptr64;346500;346500;346500;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(void) __ptr64;346200;346200;346200;0;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<cha;345850;339400;352300;6450;2
??$_Construct_in_place@PEAU?$_List_node@_KPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@_KPEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 & __ptr64);345700;345700;345700;0;1
??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z;void __cdecl <lambda_e1befb086ad3257e3f042a63030725f7>::operator()(char * __ptr64 const,char const * __ptr64 const,unsigned __int64,unsigned __int64,char)const __ptr64;345650;339100;352200;6550;2
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct s;345600;318900;372300;26700;2
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<uns;345500;345500;345500;0;1
?_Rehash_for_1@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Rehash_for_1(void) __ptr64;345400;345400;345400;0;1
??$_Construct_in_place@I$$V@std@@YAXAEAI@Z;??$_Construct_in_place@I$$V@std@@YAXAEAI@Z;345300;345300;345300;0;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@;345200;345200;345200;0;1
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;345200;345200;345200;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::c;345100;345100;345100;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Check_max_size(void)const __ptr64;345100;345100;345100;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;344900;340400;349400;4500;2
?_Delete_this@?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_t;344700;344700;344700;0;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int;344700;344700;344700;0;1
??$?0V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@@Z;??$?0V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@@Z;344600;339600;349600;5000;2
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tra;344500;283800;405200;60700;2
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::all;344400;344400;344400;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64>(cla;344300;261600;427000;82700;2
??$?0AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptio;344200;344200;344200;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,st;344200;331400;357000;12800;2
??0?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class ;344200;344200;344200;0;1
??$?0AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiatio;344100;344100;344100;0;1
??$?0V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@@Z;??$?0V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@@Z;344000;344000;344000;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::s;344000;344000;344000;0;1
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::begin(void) __ptr64;343800;343800;343800;0;1
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV31@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::construct<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64>(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64,class std::basic_string<cha;343800;343800;343800;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_;343700;343700;343700;0;1
?deallocate@?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@QEAAXQEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@_K@Z;void __cdecl std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> >::deallocate(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;343700;343700;343700;0;1
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z;unsigned __int64 __cdecl std::_String_val<struct std::_Simple_types<char> >::_Clamp_suffix_size(unsigned __int64,unsigned __int64)const __ptr64;343633;317300;416900;33891;6
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >(void) __ptr64;343600;343600;343600;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::;343600;343600;343600;0;1
?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z;static int __cdecl std::_Narrow_char_traits<char,int>::not_eof(int const & __ptr64);343600;312100;415800;34729;6
??$_Emplace_back@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;??$_Emplace_back@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;343600;343600;343600;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class Timeline;343500;343500;343500;0;1
?end@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<cha;343450;333300;353600;10150;2
?_Umove_if_noexcept1@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAXPEAPEAVTimelineEntry@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Umove_if_noexcept1(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,struct std::integral_constant<bool,1>) __ptr64;343300;246600;440000;96700;2
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::a;343250;341600;344900;1650;2
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@$$QEA_N@Z;343100;343100;343100;0;1
??$?0M@?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;??$?0M@?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;343100;343100;343100;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_splice(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const,struct std::_List_node<class std::basic_string<char,struct;343100;343100;343100;0;1
?default_value@?$abstract_value@I@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<unsigned int>::default_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;343100;343100;343100;0;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@$$QEA_N@Z;343100;343100;343100;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous n;343000;343000;343000;0;1
?default_value@?$abstract_value@_N@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<bool>::default_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;342900;342900;342900;0;1
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0>::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,s;342900;342900;342900;0;1
??0?$GenericStringRef@D@rapidjson@@QEAA@PEBDI@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char>(char const * __ptr64,unsigned int) __ptr64;342800;342800;342800;0;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@1@AEB_N@Z;342700;342700;342700;0;1
?end@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::end(void) __ptr64;342700;342700;342700;0;1
?_Make_iter@?$list@_KV?$allocator@_K@std@@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@2@PEAU?$_List_node@_KPEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > > __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::_Make_iter(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64)const __ptr64;342600;342600;342600;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;342550;342300;342800;250;2
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_s;341900;341900;341900;0;1
?_Make_const_iter@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Make_const_iter(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64)const __ptr64;341900;341900;341900;0;1
??0?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA@AEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@1@PEAVCrtAllocator@1@_K@Z;__cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>(class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<c;341800;341800;341800;0;1
?_Do_noncapture_group@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_noncapture_group(void) __ptr64;341800;341800;341800;0;1
?_Decref@?$_Ptr_base@I@std@@IEAAXXZ;void __cdecl std::_Ptr_base<unsigned int>::_Decref(void) __ptr64;341600;341600;341600;0;1
??0?$GenericStringRef@D@rapidjson@@QEAA@AEBU01@@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char>(struct rapidjson::GenericStringRef<char> const & __ptr64) __ptr64;341500;341500;341500;0;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >(void) __ptr64;341400;341400;341400;0;1
??B?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NXZ;__cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator bool(void)const __ptr64;341300;341300;341300;0;1
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@@Z;341300;341300;341300;0;1
??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@$$QEAV?$basic_string@DU?$char;341300;341300;341300;0;1
??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z;bool __cdecl std::_Traits_equal<struct std::char_traits<char> >(char const * __ptr64 const,unsigned __int64,char const * __ptr64 const,unsigned __int64);341257;293800;493100;63822;7
??0_Root_node@std@@QEAA@XZ;__cdecl std::_Root_node::_Root_node(void) __ptr64;341200;341200;341200;0;1
??$OnBeginAnalysisPassImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAnalysisPa;341200;341200;341200;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::ch;341150;303600;378700;37550;2
?end@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocat;341000;341000;341000;0;1
??$_Find_unchecked1@PEAPEAVTimelineEntry@@PEAV1@@std@@YAPEAPEAVTimelineEntry@@PEAPEAV1@QEAPEAV1@AEBQEAV1@U?$integral_constant@_N$0A@@0@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Find_unchecked1<class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64>(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 const & __ptr64,struct std::integral_constant<bool,0>);340900;321600;360200;19300;2
??$OnEndAnalysisPassImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnalysisPass;340900;340900;340900;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@_KPEAX@1@PEBV?$_List_val@U?$_List_simple_types@_K@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base12>(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<unsigned __int64> > const * __ptr64) __ptr64;340750;333500;348000;7250;2
??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAUTemplateInstantiationData@@@1@$0A@$$Z$0A@@?$pair@$$CB_KUTemplateInstantiationData@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAUTemplateInstantiationData@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAUTemplateInstantiationData@@@1@$0A@$$Z$0A@@?$pair@$$CB_KUTemplateInstantiationData@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAUTemplateInstantiationData@@@1@U?$integer_sequence@_K$0A@@1@2@Z;340700;340700;340700;0;1
??$?0V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAA@U_Move_allocator_tag@1@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > ><class std::allocator;340700;340700;340700;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __;340600;340600;340600;0;1
??0_Node_end_group@std@@QEAA@W4_Node_type@1@W4_Node_flags@1@PEAV_Node_base@1@@Z;__cdecl std::_Node_end_group::_Node_end_group(enum std::_Node_type,enum std::_Node_flags,class std::_Node_base * __ptr64) __ptr64;340500;340500;340500;0;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z;??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z;340500;340500;340500;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>(struct std::_List_node<str;340500;340500;340500;0;1
??_G?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::codecvt_utf8<wchar_t,1114111,0>::`scalar deleting destructor'(unsigned int) __ptr64;340500;340500;340500;0;1
??$forward@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEBU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::forward<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(struct std::pair<class std::basic_string<char,struct;340400;340400;340400;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<;340200;340200;340200;0;1
??$?8VOptionDetails@cxxopts@@V01@@std@@YA_NAEBV?$shared_ptr@VOptionDetails@cxxopts@@@0@0@Z;bool __cdecl std::operator==<class cxxopts::OptionDetails,class cxxopts::OptionDetails>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64);340100;340100;340100;0;1
??$_Construct_in_place@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> const & __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> & __ptr64,class std::_List;339900;339900;339900;0;1
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,;339900;320700;359100;19200;2
??$?0AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;339700;339700;339700;0;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<class std::basic_st;339700;339700;339700;0;1
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class s;339600;339600;339600;0;1
??$?0U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > ><struct std::pair<unsig;339500;256900;422100;82600;2
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct Fi;339500;339500;339500;0;1
??0?$_List_val@U?$_List_simple_types@_K@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<unsigned __int64> >::_List_val<struct std::_List_simple_types<unsigned __int64> >(void) __ptr64;339500;339500;339500;0;1
??$_Find_unchecked@PEAPEAVTimelineEntry@@PEAV1@@std@@YAPEAPEAVTimelineEntry@@QEAPEAV1@0AEBQEAV1@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Find_unchecked<class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64>(class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 const & __ptr64);339500;331600;347400;7900;2
?end@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > > __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::end(void) __ptr64;339300;339300;339300;0;1
?_Delete_this@?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Delete_this(void) __ptr64;339100;339100;339100;0;1
??0?$shared_ptr@_N@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@_N@std@@QEAA@$$QEAV01@@Z;339000;339000;339000;0;1
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<ch;338800;329600;348000;9200;2
?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAX_K@Z;void __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::__autoclassinit2(unsigned __int64) __ptr64;338766;291600;434300;49725;6
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;338700;253800;423600;84900;2
??$_Pop_heap_hole_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@U12@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@00$$QEAU10@V<lambda_b91a942b4070954e66476ae297366993>@@@Z;??$_Pop_heap_hole_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@U12@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@00$$QEAU10@V<lambda_b91a942b4070954e66476ae297366993>@@@Z;338500;338500;338500;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@XZ;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::_Release(void) __ptr64;338500;338500;338500;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Range_eraser::_Range_eraser(class std::list<struct std::pair<unsigned __int64 cons;338500;318900;358100;19600;2
??0?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z;??0?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z;338400;335400;341400;3000;2
?capacity@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<bool,class std::allocator<bool> >::capacity(void)const __ptr64;338400;338400;338400;0;1
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared;338300;338300;338300;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;338250;303400;373100;34850;2
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@@std@@QEAAAEAUHelpGroupDetails@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;struct cxxopts::HelpGroupDetails & __ptr64 __cdecl std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::operator[](class std::basic_string<char,struct std;338200;338200;338200;0;1
?size@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::size(void)const __ptr64;338000;338000;338000;0;1
??$_Construct_in_place@V?$standard_value@_N@values@cxxopts@@PEA_N@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@$$QEAPEA_N@Z;??$_Construct_in_place@V?$standard_value@_N@values@cxxopts@@PEA_N@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@$$QEAPEA_N@Z;338000;338000;338000;0;1
??$?0$02@?$GenericStringRef@D@rapidjson@@QEAA@AEAY02$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><3>(char const (& __ptr64)[3]) __ptr64;337900;337900;337900;0;1
??__Es_defaultOutputPathFunctionCompilations@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultOutputPathFunctionCompilations''(void);337800;337800;337800;0;1
??$OnTraceInfoImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVTraceInfo@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnTraceInfoImpl<0;337800;337800;337800;0;1
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<struct std::pa;337800;337800;337800;0;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64>;337700;337700;337700;0;1
??0?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;337666;283700;384600;41491;3
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@;337600;337600;337600;0;1
?WriteNull@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NXZ;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteNull(void) __ptr64;337600;337600;337600;0;1
??$?0V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@@Z;??$?0V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@@Z;337533;320900;351300;12575;3
??0?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@$$QEAV01@@Z;337400;337400;337400;0;1
?end@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > > __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::end(void)const __ptr64;337400;337400;337400;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;337350;321700;353000;15650;2
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >(void) _;337300;337300;337300;0;1
??$?0PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@1@$$QEA_N@Z;337200;337200;337200;0;1
??$_Emplace_back@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@QEAAX$$QEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@@Z;??$_Emplace_back@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@QEAAX$$QEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@@Z;337200;337200;337200;0;1
??0?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAA@$$QEAV01@@Z;337200;337200;337200;0;1
??$?0VValue@cxxopts@@$0A@@?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@VValue@cxxopts@@@1@@Z;??$?0VValue@cxxopts@@$0A@@?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@VValue@cxxopts@@@1@@Z;337200;337200;337200;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >::_Release(void) __ptr64;337000;337000;337000;0;1
??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;336900;336900;336900;0;1
??$_Emplace_back@AEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAXAEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Emplace_back<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64) __ptr64;336900;336900;336900;0;1
??$construct@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@PEAVIAnalyzer@345@@?$_Default_allocator_traits@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$QEAPEAVIAnalyzer@567@@Z;??$construct@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@PEAVIAnalyzer@345@@?$_Default_allocator_traits@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$QEAPEAVIAnalyz;336800;336800;336800;0;1
?_Unchecked_end@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;336650;328700;344600;7950;2
??$?0AEAUTemplateInstantiationData@@$0A@@?$tuple@AEAUTemplateInstantiationData@@@std@@QEAA@AEAUTemplateInstantiationData@@@Z;__cdecl std::tuple<struct TemplateInstantiationData & __ptr64>::tuple<struct TemplateInstantiationData & __ptr64><struct TemplateInstantiationData & __ptr64,0>(struct TemplateInstantiationData & __ptr64) __ptr64;336600;336600;336600;0;1
??$_Get_size_of_n@$0DI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<56>(unsigned __int64);336600;264300;446400;78929;3
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@@Z;void __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Erase_head<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_;336400;336400;336400;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >(void) __ptr64;336300;336300;336300;0;1
??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<char> >::_Vector_val<struct std::_Simple_types<char> >(void) __ptr64;336300;336300;336300;0;1
??$_Construct_in_place@PEAU?$_List_node@_KPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@_KPEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const & __ptr64);336000;336000;336000;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_It;335900;333400;338400;2500;2
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345;335900;335900;335900;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;335600;335600;335600;0;1
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z;void __cdecl std::default_delete<class std::_Facet_base>::operator()(class std::_Facet_base * __ptr64)const __ptr64;335557;308100;363000;18126;7
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >(struct std::_List_node<struct st;335400;335400;335400;0;1
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;335300;335300;335300;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@std@@QEAA@PEAUDataPerFile@?A0x120c265a@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >(struct `anonymous namespace'::DataPerFile * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;335200;335200;335200;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair;335200;335200;335200;0;1
??$?RV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;unsigned __int64 __cdecl std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::operator()<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<ch;335185;280400;437900;49624;7
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_trait;335000;335000;335000;0;1
??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@@Z@Z;334800;334800;334800;0;1
??$swap@PEAULocalThreadData@PackedProcessThreadRemapper@@$0A@@std@@YAXAEAPEAULocalThreadData@PackedProcessThreadRemapper@@0@Z;void __cdecl std::swap<struct PackedProcessThreadRemapper::LocalThreadData * __ptr64,0>(struct PackedProcessThreadRemapper::LocalThreadData * __ptr64 & __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64 & __ptr64);334800;334800;334800;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;334700;334700;334700;0;1
?implicit_value@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::implicit_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;334600;334600;334600;0;1
??$?0V?$standard_value@_N@values@cxxopts@@@?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@AEBV01@PEAV?$standard_value@_N@values@cxxopts@@@Z;__cdecl std::shared_ptr<class cxxopts::values::standard_value<bool> >::shared_ptr<class cxxopts::values::standard_value<bool> ><class cxxopts::values::standard_value<bool> >(class std::shared_ptr<class cxxopts::values::standard_value<bool> > const & __ptr64,class cxxopts::values::standard_value<bool> * __ptr64) __ptr64;334400;334400;334400;0;1
??$toUTF8String@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@cxxopts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV12@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::toUTF8String<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);334400;334400;334400;0;1
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<wchar_t> >::_String_val<struct std::_Simple_types<wchar_t> >(void) __ptr64;334400;334400;334400;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::operator--(void) __ptr64;334400;334400;334400;0;1
??$construct@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V12345@@?$_Default_allocator_traits@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$QEAV34567@@Z;??$construct@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V12345@@?$_Default_allocator_traits@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$QEAV34567@@Z;334400;334400;334400;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::c;334400;317700;351100;16700;2
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std:;334300;290400;378200;43900;2
?end@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@2@XZ;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::end(void)const __ptr64;333900;333900;333900;0;1
??0?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAA@PEAVCrtAllocator@2@_K@Z;__cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Stack<class rapidjson::CrtAllocator>(class rapidjson::CrtAllocator * __ptr64,unsigned __int64) __ptr64;333800;333800;333800;0;1
?begin@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::begin(void) __ptr64;333700;333700;333700;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;333700;333700;333700;0;1
??$_Freenode0@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64,struct std::_List_node<class std::basic_string;333650;318300;349000;15350;2
??_G?$_Sequence@D@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::_Sequence<char>::`scalar deleting destructor'(unsigned int) __ptr64;333600;333600;333600;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr;333600;333600;333600;0;1
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z;class std::_String_val<struct std::_Simple_types<char> > * __ptr64 __cdecl std::addressof<class std::_String_val<struct std::_Simple_types<char> > >(class std::_String_val<struct std::_Simple_types<char> > & __ptr64);333560;219100;570300;123196;5
?end@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::end(void)const __ptr64;333500;333500;333500;0;1
?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ;char * __ptr64 __cdecl std::vector<char,class std::allocator<char> >::data(void) __ptr64;333500;333500;333500;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_strin;333500;236200;430800;97300;2
?_Getal@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Getal(void)const __ptr64;333500;333500;333500;0;1
??$_Copy_memmove@PEBDPEAD@std@@YAPEADPEBD0PEAD@Z;char * __ptr64 __cdecl std::_Copy_memmove<char const * __ptr64,char * __ptr64>(char const * __ptr64,char const * __ptr64,char * __ptr64);333500;333500;333500;0;1
??$?C$$CBVValue@cxxopts@@$0A@@?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEBAPEBVValue@cxxopts@@XZ;class cxxopts::Value const * __ptr64 __cdecl std::shared_ptr<class cxxopts::Value const >::operator-><class cxxopts::Value const ,0>(void)const __ptr64;333300;333300;333300;0;1
??1?$abstract_value@_N@values@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::values::abstract_value<bool>::~abstract_value<bool>(void) __ptr64;333200;333200;333200;0;1
?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::close(void) __ptr64;333133;296400;417300;38990;6
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;333050;295100;371000;37950;2
??$?0PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@1@$$QEA_N@Z;333000;332000;334000;1000;2
?end@?$vector@KV?$allocator@K@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::end(void) __ptr64;333000;333000;333000;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Range_eraser::_Range_eraser(class std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct Templ;332800;332800;332800;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VActivity@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVActivity@Activities@234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal;332700;332700;332700;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > >(void) __ptr64;332600;332600;332600;0;1
??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBI_KPEBU_Container_base12@1@@Z;__cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(unsigned int const * __ptr64,unsigned __int64,struct std::_Container_base12 const * __ptr64) __ptr64;332600;332600;332600;0;1
?end@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::end(void) __ptr64;332550;329800;335300;2750;2
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;332400;332400;332400;0;1
??$_Ucopy@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@PEAU231@00@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Ucopy<struct std::_Tgt_state_t<class std::_String_const_iterator<class;332300;332300;332300;0;1
??$_Emplace_back@UHelpOptionDetails@cxxopts@@@?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAX$$QEAUHelpOptionDetails@cxxopts@@@Z;??$_Emplace_back@UHelpOptionDetails@cxxopts@@@?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAX$$QEAUHelpOptionDetails@cxxopts@@@Z;332300;332300;332300;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;332200;332200;332200;0;1
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAAXXZ;??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAAXXZ;332200;332200;332200;0;1
?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_trai;332100;332100;332100;0;1
?_Make_const_iter@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Make_const_iter(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::a;332100;332100;332100;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;332000;332000;332000;0;1
?_Delete_this@?$_Ref_count_obj2@I@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<unsigned int>::_Delete_this(void) __ptr64;331800;331800;331800;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;331800;331800;331800;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Check_max_size(void)const __ptr64;331700;325200;338200;6500;2
?_Delete_this@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<bool> >::_Delete_this(void) __ptr64;331700;331700;331700;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const,unsigned __int64);331600;331600;331600;0;1
??0bad_array_new_length@std@@QEAA@XZ;__cdecl std::bad_array_new_length::bad_array_new_length(void) __ptr64;331405;296600;449600;38398;18
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class s;331350;247700;415000;83650;2
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64);331300;331300;331300;0;1
?size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::size(void)const __ptr64;331100;331100;331100;0;1
??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAUProcessThreadRemap@@@1@$0A@$$Z$0A@@?$pair@$$CB_KUProcessThreadRemap@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAUProcessThreadRemap@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAUProcessThreadRemap@@@1@$0A@$$Z$0A@@?$pair@$$CB_KUProcessThreadRemap@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAUProcessThreadRemap@@@1@U?$integer_sequence@_K$0A@@1@2@Z;331100;331100;331100;0;1
?_Delete_this@?$_Ref_count_obj2@VOptionDetails@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::OptionDetails>::_Delete_this(void) __ptr64;331000;331000;331000;0;1
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z;class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::endl<char,struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64);330950;318800;345800;10161;6
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@_KPEAX@1@PEBV?$_List_val@U?$_List_simple_types@_K@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<unsigned __int64> > const * __ptr64) __ptr64;330900;330900;330900;0;1
?IsObject@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsObject(void)const __ptr64;330800;330800;330800;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node;330700;330700;330700;0;1
?_Umove_if_noexcept@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K00@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Umove_if_noexcept(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64,unsigned __int64 * __ptr64) __ptr64;330700;330700;330700;0;1
?_Delete_this@?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Delete_this(void) __ptr64;330600;330600;330600;0;1
??__Es_defaultOutputPathTemplateInstantiations@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultOutputPathTemplateInstantiations''(void);330600;330600;330600;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Check_max_size(void)const __ptr64;330600;330600;330600;0;1
?_Getal@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> & __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::;330500;330500;330500;0;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_;330500;330500;330500;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<class;330400;330400;330400;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;330400;330400;330400;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::alloca;330350;236900;423800;93450;2
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_trai;330250;266900;393600;63350;2
??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@$$QEAU01@@Z;??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@$$QEAU01@@Z;329900;329900;329900;0;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<;329800;329800;329800;0;1
??$_Emplace_back@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAX$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;??$_Emplace_back@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAX$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;329800;329800;329800;0;1
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z;__cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> ><struct std::default_delete<class std::_Facet_base>,0>(class std::_Facet_base * __ptr64) __ptr64;329657;314100;341300;10927;7
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base12>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64;329600;329600;329600;0;1
??$?0AEAVTimelineEntry@@$0A@@?$tuple@AEAVTimelineEntry@@@std@@QEAA@AEAVTimelineEntry@@@Z;__cdecl std::tuple<class TimelineEntry & __ptr64>::tuple<class TimelineEntry & __ptr64><class TimelineEntry & __ptr64,0>(class TimelineEntry & __ptr64) __ptr64;329500;329500;329500;0;1
??$?0AEB_K$$ZAEAVTimelineEntry@@@?$pair@$$CB_KVTimelineEntry@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAVTimelineEntry@@@1@@Z;??$?0AEB_K$$ZAEAVTimelineEntry@@@?$pair@$$CB_KVTimelineEntry@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAVTimelineEntry@@@1@@Z;329300;329300;329300;0;1
?_Copy_assign@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Copy_assign(class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t;329200;329200;329200;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;328966;290900;375100;34844;3
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,cla;328900;328900;328900;0;1
?_Delete_this@?$_Ref_count_obj2@_N@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<bool>::_Delete_this(void) __ptr64;328800;328800;328800;0;1
??G?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_JAEBV01@@Z;__int64 __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator-(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;328800;328800;328800;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;328800;328800;328800;0;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@1@$$QEA_N@Z;328750;324900;332600;3850;2
?_Take_contents@?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> >::_Take_contents(class std::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> > & __ptr64) __ptr64;328700;328700;328700;0;1
?_Make_iter@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<cha;328700;317700;339700;11000;2
??$?0AEB_K$$Z$$QEAPEBD@?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAPEBD@1@@Z;??$?0AEB_K$$Z$$QEAPEBD@?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAPEBD@1@@Z;328700;285800;371600;42900;2
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >(void) __ptr64;328700;328700;328700;0;1
??$?0V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@@Z;??$?0V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V;328700;328700;328700;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct ;328700;310100;347300;18600;2
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,st;328650;311300;346000;17350;2
??$?0M@?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;??$?0M@?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;328650;286000;366800;27653;6
??0?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEAA@AEBV01@@Z;__cdecl std::shared_ptr<class cxxopts::Value const >::shared_ptr<class cxxopts::Value const >(class std::shared_ptr<class cxxopts::Value const > const & __ptr64) __ptr64;328400;328400;328400;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@std@@QEAA@PEAUDataPerFunction@?A0x5f10505a@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >(struct `anonymous namespace'::DataPerFunction * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;328300;328300;328300;0;1
?end@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::end(void) __ptr64;328100;328100;328100;0;1
?empty@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEBA_NXZ;bool __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::empty(void)const __ptr64;328100;328100;328100;0;1
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;328100;286700;369500;41400;2
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::ch;327950;283700;372200;44250;2
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;327900;327900;327900;0;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cp;327700;327700;327700;0;1
??$?0PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@$$QEA_N@Z;327500;327500;327500;0;1
??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z;bool __cdecl std::_Fgetc<char>(char & __ptr64,struct _iobuf * __ptr64);327300;310600;350800;12450;6
??0bad_alloc@std@@QEAA@AEBV01@@Z;__cdecl std::bad_alloc::bad_alloc(class std::bad_alloc const & __ptr64) __ptr64;327266;228900;1576700;303643;18
?_Umove_if_noexcept@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@00@Z;void __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Umove_if_noexcept(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRem;327100;327100;327100;0;1
?SetStringRaw@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAXU?$GenericStringRef@D@2@@Z;void __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::SetStringRaw(struct rapidjson::GenericStringRef<char>) __ptr64;327100;327100;327100;0;1
?end@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::end(void) __ptr64;327000;327000;327000;0;1
??$_Emplace_back@UDataPerFunction@?A0x5f10505a@@@?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAAX$$QEAUDataPerFunction@?A0x5f10505a@@@Z;??$_Emplace_back@UDataPerFunction@?A0x5f10505a@@@?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAAX$$QEAUDataPerFunction@?A0x5f10505a@@@Z;327000;327000;327000;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,st;327000;327000;327000;0;1
??0range_error@std@@QEAA@PEBD@Z;__cdecl std::range_error::range_error(char const * __ptr64) __ptr64;326900;326900;326900;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 c;326800;326800;326800;0;1
??$get@$0A@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z;??$get@$0A@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$b;326800;326800;326800;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::c;326700;317200;336200;9500;2
??1?$collate@D@std@@MEAA@XZ;virtual __cdecl std::collate<char>::~collate<char>(void) __ptr64;326700;326700;326700;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;326700;326700;326700;0;1
??$OnBeginAnalysisImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAnalysisIm;326600;326600;326600;0;1
??$_Move_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@1@@Z;??$_Move_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@1@@Z;326500;326500;326500;0;1
?begin@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::begin(void) __ptr64;326500;320600;332400;5900;2
?max_load_factor@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::max_load_factor(void)const __ptr64;326500;326500;326500;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,stru;326500;326500;326500;0;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;326500;326500;326500;0;1
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z;??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z;326400;326400;326400;0;1
??$construct@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@U123@@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@$$QEAU341@@Z;??$construct@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@U123@@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@;326300;326300;326300;0;1
??$_Construct_in_place@V?$standard_value@_N@values@cxxopts@@AEBV123@@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@AEBV123@@Z;void __cdecl std::_Construct_in_place<class cxxopts::values::standard_value<bool>,class cxxopts::values::standard_value<bool> const & __ptr64>(class cxxopts::values::standard_value<bool> & __ptr64,class cxxopts::values::standard_value<bool> const & __ptr64);326200;326200;326200;0;1
??$?0VValue@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@AEBV?$weak_ptr@VValue@cxxopts@@@1@@Z;__cdecl std::shared_ptr<class cxxopts::Value>::shared_ptr<class cxxopts::Value><class cxxopts::Value,0>(class std::weak_ptr<class cxxopts::Value> const & __ptr64) __ptr64;326200;326200;326200;0;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<cla;326000;326000;326000;0;1
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z;??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z;325900;325900;325900;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Check_max_size(void)const __ptr64;325900;325900;325900;0;1
??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFunction@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFunction@Activities@012@@Z@Z;325800;325800;325800;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;325800;325800;325800;0;1
??$_Construct_in_place@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<class std::basic_;325750;320900;330600;4850;2
??$OnEndAnalysisImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnalysisImpl;325700;325700;325700;0;1
??$_Construct_in_place@V?$standard_value@I@values@cxxopts@@PEAI@std@@YAXAEAV?$standard_value@I@values@cxxopts@@$$QEAPEAI@Z;??$_Construct_in_place@V?$standard_value@I@values@cxxopts@@PEAI@std@@YAXAEAV?$standard_value@I@values@cxxopts@@$$QEAPEAI@Z;325700;325700;325700;0;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$ZAEBV01@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@1@Z;??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$ZAEBV01@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@1@Z;325300;325300;325300;0;1
??0?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;325300;325300;325300;0;1
?release@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAAPEAV_Node_assert@2@XZ;class std::_Node_assert * __ptr64 __cdecl std::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >::release(void) __ptr64;325100;325100;325100;0;1
?_Unchecked_end@?$list@_KV?$allocator@_K@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > > __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::_Unchecked_end(void) __ptr64;325100;325100;325100;0;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@;325000;325000;325000;0;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@1@$$QEA_N@Z;324900;324900;324900;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(void) __ptr64;324900;324900;324900;0;1
?transform@?$collate@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEBD0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::collate<char>::transform(char const * __ptr64,char const * __ptr64)const __ptr64;324800;324800;324800;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;324500;324500;324500;0;1
??$_Construct_in_place@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@std@@YAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;??$_Construct_in_place@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@std@@YAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;324400;324400;324400;0;1
??0?$shared_ptr@I@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@I@std@@QEAA@$$QEAV01@@Z;324300;324300;324300;0;1
?data@?$vector@IV?$allocator@I@std@@@std@@QEBAPEBIXZ;unsigned int const * __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::data(void)const __ptr64;324300;324300;324300;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecke;324200;309000;339400;15200;2
??R?$_Cmp_icase@V?$_Regex_traits@D@std@@@std@@QEAA_NDD@Z;bool __cdecl std::_Cmp_icase<class std::_Regex_traits<char> >::operator()(char,char) __ptr64;324200;324200;324200;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::_Release(void) __ptr64;324200;324200;324200;0;1
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::alloc;324200;324200;324200;0;1
?GetCachedPowerByIndex@internal@rapidjson@@YA?AUDiyFp@12@_K@Z;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::GetCachedPowerByIndex(unsigned __int64);324200;324200;324200;0;1
??$?0PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@1@$$QEA_N@Z;324100;324100;324100;0;1
??1?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::~_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(void) __ptr64;324100;324100;324100;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::_Release(void) __ptr64;324050;315200;332900;8850;2
??$?0V?$standard_value@I@values@cxxopts@@$0A@@?$weak_ptr@VValue@cxxopts@@@std@@QEAA@AEBV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@1@@Z;__cdecl std::weak_ptr<class cxxopts::Value>::weak_ptr<class cxxopts::Value><class cxxopts::values::standard_value<unsigned int>,0>(class std::shared_ptr<class cxxopts::values::standard_value<unsigned int> > const & __ptr64) __ptr64;324000;324000;324000;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;324000;324000;324000;0;1
??$?0AEAPEAUDataPerFile@?A0x120c265a@@AEAPEAU01@$0A@@?$pair@PEAUDataPerFile@?A0x120c265a@@PEAU12@@std@@QEAA@AEAPEAUDataPerFile@?A0x120c265a@@0@Z;__cdecl std::pair<struct `anonymous namespace'::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64>::pair<struct `anonymous namespace'::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64><struct `anonymous namespace'::DataPerFile * __ptr64 & __ptr64,struct A0x120c265a::DataPerFile * __ptr64 & __ptr64,0>(struct `anonymous namespace'::DataPerFile * __ptr64 & __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64 & __ptr64) __ptr64;323700;323700;323700;0;1
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,st;323500;323500;323500;0;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >;323500;323500;323500;0;1
??R?$_Cmp_collate@V?$regex_traits@D@std@@@std@@QEAA_NDD@Z;bool __cdecl std::_Cmp_collate<class std::regex_traits<char> >::operator()(char,char) __ptr64;323400;323400;323400;0;1
??$?0V?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_K@1@@Z;??$?0V?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_K@1@@Z;323300;323300;323300;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >;323300;323300;323300;0;1
??$_Emplace_back@V?$sub_match@PEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAX$$QEAV?$sub_match@PEBD@1@@Z;??$_Emplace_back@V?$sub_match@PEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAX$$QEAV?$sub_match@PEBD@1@@Z;323200;323200;323200;0;1
??$_Copy_backward_memmove@PEAUDataPerFile@?A0x120c265a@@PEAU12@@std@@YAPEAUDataPerFile@?A0x120c265a@@PEAU12@00@Z;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::_Copy_backward_memmove<struct `anonymous namespace'::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64>(struct A0x120c265a::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64);323100;323100;323100;0;1
??$construct@_KAEB_K@?$_Default_allocator_traits@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@_KPEAX@std@@@1@QEA_KAEB_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >::construct<unsigned __int64,unsigned __int64 const & __ptr64>(class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > & __ptr64,unsigned __int64 * __ptr64 const,unsigned __int64 const & __ptr64);322700;322700;322700;0;1
?_Getal@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::;322700;322700;322700;0;1
?max_load_factor@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::max_load_factor(void)const __ptr64;322650;257600;387700;65050;2
??0_Node_end_rep@std@@QEAA@XZ;__cdecl std::_Node_end_rep::_Node_end_rep(void) __ptr64;322600;322600;322600;0;1
??1?$_Tidy_guard@V?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> > >::~_Tidy_guard<class std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> > >(void) __ptr64;322600;322600;322600;0;1
??$?0U?$default_delete@V_Node_assert@std@@@std@@$0A@@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAA@PEAV_Node_assert@1@@Z;__cdecl std::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> ><struct std::default_delete<class std::_Node_assert>,0>(class std::_Node_assert * __ptr64) __ptr64;322400;322400;322400;0;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Unchecked_begin(void) __ptr64;322300;322300;322300;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VLinker@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@VBackEndPass@2345@VFrontEndFile@2345@VTemplateInstantiation@2345@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Linker,class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass,class Microsoft::Cpp::BuildInsights::Activities::BackEndPass,class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation,class Microsoft::Cpp::BuildInsights::Activities::Functio;321900;321900;321900;0;1
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z;__cdecl std::_Compressed_pair<struct std::default_delete<class std::_Facet_base>,class std::_Facet_base * __ptr64,1>::_Compressed_pair<struct std::default_delete<class std::_Facet_base>,class std::_Facet_base * __ptr64,1><class std::_Facet_base * __ptr64 & __ptr64>(struct std::_Zero_then_variadic_args_t,class std::_Facet_base * __ptr64 & __ptr64) __ptr64;321828;287300;344000;20011;7
??1?$_Tidy_guard@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_Tidy_guard<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;321800;321800;321800;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<cha;321750;300800;342700;20950;2
?_Decref@?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,cl;321700;321700;321700;0;1
??$_Destroy_in_place@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64);321600;205400;437800;116200;2
??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator==(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;321500;321500;321500;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_tra;321450;219300;423600;102150;2
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;321400;321400;321400;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > const & __ptr64);321400;321400;321400;0;1
??$assign@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@$0A@@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@1@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::assign<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,0>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64) __ptr64;321100;321100;321100;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >(void) __ptr64;321100;321100;321100;0;1
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > ><struct std::_List_node<struct std::pair<class std::basic_string<char;321000;321000;321000;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::ch;321000;321000;321000;0;1
??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z;??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z;320900;320900;320900;0;1
??$_Construct_in_place@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@AEBV123@@std@@YAXAEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@AEBV123@@Z;void __cdecl std::_Construct_in_place<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64,class cxxopts::values::standard_value<class std::basic_string;320900;320900;320900;0;1
?_Cache_locale@?$_Regex_traits@D@std@@AEAAXXZ;void __cdecl std::_Regex_traits<char>::_Cache_locale(void) __ptr64;320800;320800;320800;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct ;320800;320800;320800;0;1
??0?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAA@AEBV01@@Z;__cdecl std::shared_ptr<class cxxopts::OptionDetails>::shared_ptr<class cxxopts::OptionDetails>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;320700;320700;320700;0;1
?implicit_value@?$abstract_value@I@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<unsigned int>::implicit_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;320700;320700;320700;0;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_t;320550;266300;374800;54250;2
??1?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAA@XZ;__cdecl std::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >::~unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >(void) __ptr64;320500;320500;320500;0;1
?_Umove_if_noexcept1@?$vector@KV?$allocator@K@std@@@std@@AEAAXPEAK00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Umove_if_noexcept1(unsigned long * __ptr64,unsigned long * __ptr64,unsigned long * __ptr64,struct std::integral_constant<bool,1>) __ptr64;320500;320500;320500;0;1
??$?0V?$standard_value@_N@values@cxxopts@@$0A@@?$weak_ptr@VValue@cxxopts@@@std@@QEAA@AEBV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@1@@Z;__cdecl std::weak_ptr<class cxxopts::Value>::weak_ptr<class cxxopts::Value><class cxxopts::values::standard_value<bool>,0>(class std::shared_ptr<class cxxopts::values::standard_value<bool> > const & __ptr64) __ptr64;320500;320500;320500;0;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >(void) __ptr64;320500;320500;320500;0;1
?no_implicit_value@?$abstract_value@I@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<unsigned int>::no_implicit_value(void) __ptr64;320400;320400;320400;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(unsigned int * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;320200;320200;320200;0;1
??$_Construct_in_place@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;??$_Construct_in_place@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;320200;320200;320200;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,class std::_List_val<struct s;320200;320200;320200;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<c;320200;240700;399700;79500;2
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_trai;320200;293500;346900;26700;2
?end@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __in;320100;320100;320100;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Check_max_size(void)const __ptr64;320100;320100;320100;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Inte;320000;320000;320000;0;1
??$?0AEAPEAUDataPerFunction@?A0x5f10505a@@AEAPEAU01@$0A@@?$pair@PEAUDataPerFunction@?A0x5f10505a@@PEAU12@@std@@QEAA@AEAPEAUDataPerFunction@?A0x5f10505a@@0@Z;__cdecl std::pair<struct `anonymous namespace'::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64>::pair<struct `anonymous namespace'::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64><struct `anonymous namespace'::DataPerFunction * __ptr64 & __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64 & __ptr64,0>(struct `anonymous namespace'::DataPerFunction * __ptr64 & __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64 & __ptr64) __ptr64;320000;320000;320000;0;1
?IsNan@Double@internal@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::internal::Double::IsNan(void)const __ptr64;319800;319800;319800;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>(void) __ptr64;319800;319800;319800;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > & __ptr64,struct std::_List_node<struct;319700;319700;319700;0;1
??$?RV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;bool __cdecl std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::operator()<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std:;319700;302300;342700;13522;7
??$?0$$V@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;319700;319700;319700;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr;319500;319500;319500;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<clas;319500;319500;319500;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_p;319500;319500;319500;0;1
??$_Emplace_back@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;??$_Emplace_back@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;319300;319300;319300;0;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct;319300;319300;319300;0;1
??$_Copy_memmove@PEAPEAVTimelineEntry@@PEAPEAV1@@std@@YAPEAPEAVTimelineEntry@@PEAPEAV1@00@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Copy_memmove<class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64>(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64);318950;289100;348800;29850;2
??M?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator<(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;318700;318700;318700;0;1
??$?0V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@1@@Z;??$?0V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@1@@Z;318700;318700;318700;0;1
??B?$shared_ptr@I@std@@QEBA_NXZ;__cdecl std::shared_ptr<unsigned int>::operator bool(void)const __ptr64;318600;318600;318600;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;318600;318600;318600;0;1
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z;??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z;318600;288100;394000;32452;10
?size@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::size(void)const __ptr64;318550;295700;341400;22850;2
?bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,str;318500;315600;321400;2900;2
?pointer_to@?$pointer_traits@PEBU?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@SAPEBU?$pair@$$CB_KUProcessThreadRemap@@@2@AEBU32@@Z;static struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> const * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> const * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> const & __ptr64);318300;318300;318300;0;1
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int) __ptr64;318283;282100;373700;29671;6
??$construct@IAEBI@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SAXAEAV?$allocator@I@1@QEAIAEBI@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<unsigned int> >::construct<unsigned int,unsigned int const & __ptr64>(class std::allocator<unsigned int> & __ptr64,unsigned int * __ptr64 const,unsigned int const & __ptr64);318100;318100;318100;0;1
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;318100;318100;318100;0;1
??$PutN@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@D@rapidjson@@YAXAEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@0@D_K@Z;void __cdecl rapidjson::PutN<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,char>(class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64,char,unsigned __int64);318100;318100;318100;0;1
??$?4U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@$0A@@?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAAAEAU01@$$QEAU01@@Z;??$?4U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@$0A@@?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAAAEAU01@$$QEAU01@@Z;318100;318100;318100;0;1
??$_Unfancy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@PEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::_Unfancy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std:;318000;318000;318000;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::operator++(void) __ptr64;318000;318000;318000;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> >,class std::_List_val<struct ;317900;317900;317900;0;1
?_Unchecked_end@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::all;317850;281900;353800;35950;2
?_Effective_range@?$sub_match@PEBD@std@@QEBA?AU?$pair@PEBDPEBD@2@XZ;struct std::pair<char const * __ptr64,char const * __ptr64> __cdecl std::sub_match<char const * __ptr64>::_Effective_range(void)const __ptr64;317800;317800;317800;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@XZ;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::_Release(void) __ptr64;317800;317800;317800;0;1
??GDiyFp@internal@rapidjson@@QEBA?AU012@AEBU012@@Z;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::DiyFp::operator-(struct rapidjson::internal::DiyFp const & __ptr64)const __ptr64;317800;317800;317800;0;1
??$_Emplace_back@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;??$_Emplace_back@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;317700;317700;317700;0;1
??$construct@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAU12@@?$_Default_allocator_traits@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@SAXAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@1@QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@$$QEAPEAU31@@Z;??$construct@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAU12@@?$_Default_allocator_traits@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@SAXAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@1@QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@;317700;317700;317700;0;1
??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;317600;317600;317600;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_strin;317600;261400;373800;56200;2
?no_implicit_value@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::no_implicit_value(void) __ptr64;317500;317500;317500;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >(struct std::pair<class std::basic_string<c;317500;317500;317500;0;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KUProcessThreadRemap@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::operator*(void)const __ptr64;317500;317500;317500;0;1
??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;unsigned __int64 __cdecl std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::operator()(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;317414;301900;327200;7734;7
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr64;317400;317400;317400;0;1
??R?$_Cmp_icase@V?$regex_traits@D@std@@@std@@QEAA_NDD@Z;bool __cdecl std::_Cmp_icase<class std::regex_traits<char> >::operator()(char,char) __ptr64;317300;317300;317300;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;317200;317200;317200;0;1
?max_load_factor@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::max_load_factor(void)const __ptr64;317200;317200;317200;0;1
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z;??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z;317000;317000;317000;0;1
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@PEAU32@@Z;static struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Min(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>;317000;317000;317000;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>;317000;317000;317000;0;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct Template;316800;316800;316800;0;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::_Allocate(void) __ptr64;316800;316800;316800;0;1
?end@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct;316800;294400;339200;22400;2
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,cla;316800;309300;324300;7500;2
?_At@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAAEAV?$sub_match@PEBD@2@I@Z;class std::sub_match<char const * __ptr64> & __ptr64 __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::_At(unsigned int) __ptr64;316800;316800;316800;0;1
??$?0V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA@U_Move_allocator_tag@1@AEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@@Z;__cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > ><class std::allocator<struct std::_List_node<class std::basic_string<char,struct std:;316800;316500;317100;300;2
?_Umove_if_noexcept@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@00@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Umove_if_noexcept(struct std::pair<class std::basic_string<char,stru;316700;316700;316700;0;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __i;316700;316700;316700;0;1
??$Forward@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@?$HandlerForwarder@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SAX$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVActivity@Activities@345@$$QEAVCommandLine@SimpleEvents@345@@Z;??$Forward@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@?$HandlerForwarder@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActiv;316700;316700;316700;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::max_size(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > const & __ptr64);316700;316700;316700;0;1
?Begin@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAPEAV12@XZ;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::Begin(void) __ptr64;316600;316600;316600;0;1
??_G?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAPEAXI@Z;void * __ptr64 __cdecl rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::`scalar deleting destructor'(unsigned int) __ptr64;316600;316600;316600;0;1
??$get@$0A@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YAAEAV?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@AEAV?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@0@@Z;class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> & __ptr64 __cdecl std::get<0,class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights;316500;316500;316500;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;316300;316300;316300;0;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@B;316200;316200;316200;0;1
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;316200;316200;316200;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::cha;316200;242400;390000;73800;2
??$_Sort_heap_unchecked@PEAUDataPerFile@?A0x120c265a@@V<lambda_1fae86a0efb35da210a6f82844560f44>@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@0V<lambda_1fae86a0efb35da210a6f82844560f44>@@@Z;void __cdecl std::_Sort_heap_unchecked<struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44> >(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,class <lambda_1fae86a0efb35da210a6f82844560f44>);316100;316100;316100;0;1
??$assign@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@$0A@@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::assign<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,0>(struct std::_Tgt_state_t<class std::_String_const_iterat;316100;316100;316100;0;1
?_Pfx@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAAEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@XZ;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Pfx(void) __ptr64;316100;316100;316100;0;1
?_Beg_expr@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEBA_NXZ;bool __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Beg_expr(void)const __ptr64;316000;316000;316000;0;1
??$addressof@PEBD@std@@YAPEAPEBDAEAPEBD@Z;char const * __ptr64 * __ptr64 __cdecl std::addressof<char const * __ptr64>(char const * __ptr64 & __ptr64);315900;315900;315900;0;1
??$move@AEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@AEAPEAV1234@@Z;??$move@AEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@AEAPEAV1234@@Z;315900;315900;315900;0;1
??$?0U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > ><struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,;315800;315800;315800;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::_Release(void) __ptr64;315800;315800;315800;0;1
??0invalid_option_format_error@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::invalid_option_format_error::invalid_option_format_error(class cxxopts::invalid_option_format_error const & __ptr64) __ptr64;315800;315800;315800;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompila;315750;284900;346600;30850;2
??0_Node_if@std@@QEAA@PEAV_Node_base@1@@Z;__cdecl std::_Node_if::_Node_if(class std::_Node_base * __ptr64) __ptr64;315700;315700;315700;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;315600;266100;365100;49500;2
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class;315600;315600;315600;0;1
?_Getal@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEBAAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Getal(void)const __ptr64;315600;315600;315600;0;1
??$Top@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAAPEAULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@2@XZ;struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level * __ptr64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Top<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtA;315500;315500;315500;0;1
?_Swap@?$_Ptr_base@_N@std@@IEAAXAEAV12@@Z;void __cdecl std::_Ptr_base<bool>::_Swap(class std::_Ptr_base<bool> & __ptr64) __ptr64;315400;315400;315400;0;1
??0?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@$$QEAV01@@Z;315400;315400;315400;0;1
??1?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits;315400;315400;315400;0;1
??$?0AEAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@AEAPEAU01@$0A@@?$pair@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAU12@@std@@QEAA@AEAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@0@Z;__cdecl std::pair<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64>::pair<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * ;315400;315400;315400;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::cha;315350;291100;339600;24250;2
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::alloc;315350;304800;325900;10550;2
?begin@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@2@XZ;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::begin(void)const __ptr64;315300;315300;315300;0;1
??$_Sort_heap_unchecked@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V<lambda_b91a942b4070954e66476ae297366993>@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@0V<lambda_b91a942b4070954e66476ae297366993>@@@Z;void __cdecl std::_Sort_heap_unchecked<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae297366993> >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class <lambda_b91a942b4070954e66476ae297366;315100;315100;315100;0;1
?_Do_assert_group@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAX_N@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_assert_group(bool) __ptr64;315100;315100;315100;0;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::al;315100;315100;315100;0;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@M;315100;315100;315100;0;1
?_Buy_nonzero@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<char,class std::allocator<char> >::_Buy_nonzero(unsigned __int64) __ptr64;315000;315000;315000;0;1
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;315000;315000;315000;0;1
??$_Min_value@_J@std@@YAAEB_JAEB_J0@Z;__int64 const & __ptr64 __cdecl std::_Min_value<__int64>(__int64 const & __ptr64,__int64 const & __ptr64);315000;315000;315000;0;1
?_Null@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAAEAV?$sub_match@PEBD@2@XZ;class std::sub_match<char const * __ptr64> & __ptr64 __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Null(void) __ptr64;314900;314900;314900;0;1
??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVInvocation@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVInvocation@Activities@012@@Z@Z;314900;314900;314900;0;1
??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<char,class std::allocator<char> > >::~_Tidy_guard<class std::vector<char,class std::allocator<char> > >(void) __ptr64;314800;314800;314800;0;1
??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@$$QEAU31@@Z;??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@$$QEAU31@@Z;314400;314400;314400;0;1
?_Make_const_iter@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Make_const_iter(struct std::_List_node<struct std::pair<class ;314400;314400;314400;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Max_bucket_size(void) __ptr64;314250;280900;347600;33350;2
??0?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0>::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::al;314150;292900;335400;21250;2
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Container_proxy_ptr12<class std::allocator<struct std::_Container_proxy> >::~_Container_proxy_ptr12<class std::allocator<struct std::_Container_proxy> >(void) __ptr64;314100;278900;390700;27723;14
??0?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> >::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> >(void) __ptr64;314100;314100;314100;0;1
?_Reset@?$basic_regex@DV?$regex_traits@D@std@@@std@@AEAAXPEAV_Root_node@2@@Z;void __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Reset(class std::_Root_node * __ptr64) __ptr64;314000;314000;314000;0;1
??B?$sub_match@PEBD@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ;__cdecl std::sub_match<char const * __ptr64>::operator class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)const __ptr64;314000;314000;314000;0;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,c;313950;312900;315000;1050;2
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >;313900;313900;313900;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_tra;313800;286600;341000;27200;2
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::list<struct std::pair<class std::basic_string<char,struct std:;313800;305900;321700;7900;2
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Check_max_size(void)const __ptr64;313700;313700;313700;0;1
??$_Move_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;??$_Move_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;313500;313500;313500;0;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> ;313500;313500;313500;0;1
??0?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV01@@Z;313500;313500;313500;0;1
??1_Regex_base@std@@QEAA@XZ;__cdecl std::_Regex_base::~_Regex_base(void) __ptr64;313300;313300;313300;0;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> ><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64) ;313100;241200;385000;71900;2
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Range_eraser::_Bump_erased(void) __ptr64;313100;313100;313100;0;1
?_Unchecked_begin@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Unchecked_begin(void) __ptr64;313000;313000;313000;0;1
?Bool@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_N_N@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Bool(bool) __ptr64;313000;313000;313000;0;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@AEBU31@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::construct<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::;312900;312900;312900;0;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Check_max_size(void)con;312900;312900;312900;0;1
?empty@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEBA_NXZ;bool __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::empty(void)const __ptr64;312600;312600;312600;0;1
??$construct@VKeyValue@cxxopts@@V12@@?$_Default_allocator_traits@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@SAXAEAV?$allocator@VKeyValue@cxxopts@@@1@QEAVKeyValue@cxxopts@@$$QEAV34@@Z;??$construct@VKeyValue@cxxopts@@V12@@?$_Default_allocator_traits@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@SAXAEAV?$allocator@VKeyValue@cxxopts@@@1@QEAVKeyValue@cxxopts@@$$QEAV34@@Z;312500;312500;312500;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;312400;312400;312400;0;1
?Back@EventStack@BuildInsights@Cpp@Microsoft@@QEBA?AVRawEvent@234@XZ;class Microsoft::Cpp::BuildInsights::RawEvent __cdecl Microsoft::Cpp::BuildInsights::EventStack::Back(void)const __ptr64;312380;282200;348100;23162;5
?begin@?$vector@KV?$allocator@K@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::begin(void) __ptr64;312300;312300;312300;0;1
??$move@AEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@0@AEAV10@@Z;312300;312300;312300;0;1
??0?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<unsigned __int64> >::_Vector_val<struct std::_Simple_types<unsigned __int64> >(void) __ptr64;312200;312200;312200;0;1
??$_Sort_heap_unchecked@PEAUDataPerFunction@?A0x5f10505a@@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@0V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@@Z;void __cdecl std::_Sort_heap_unchecked<struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb> >(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,class <lambda_a33a5b45400f41721695e6a519a2a4eb>);312200;312200;312200;0;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >(void) __ptr64;312000;312000;312000;0;1
??$_Construct_in_place@_N$$V@std@@YAXAEA_N@Z;??$_Construct_in_place@_N$$V@std@@YAXAEA_N@Z;312000;312000;312000;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_trait;311866;264400;355400;37254;3
??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEAPEAU10@@Z;311800;311800;311800;0;1
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ;class std::_Facet_base * __ptr64 __cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::release(void) __ptr64;311728;292000;333400;14016;7
??$?0V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V01@$0A@@?$pair@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@QEAA@XZ;__cdecl std::pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > ><class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_Strin;311700;311700;311700;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_tra;311600;251900;371300;59700;2
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,cl;311600;311600;311600;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;311500;294600;328400;16900;2
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z;unsigned __int64 const & __ptr64 __cdecl std::_Max_value<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64);311450;260100;438900;47930;18
??R?$default_delete@V_Node_assert@std@@@std@@QEBAXPEAV_Node_assert@1@@Z;void __cdecl std::default_delete<class std::_Node_assert>::operator()(class std::_Node_assert * __ptr64)const __ptr64;311300;311300;311300;0;1
?end@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::Lo;311200;311200;311200;0;1
??0?$_Vector_val@U?$_Simple_types@U_Loop_vals_t@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::_Loop_vals_t> >::_Vector_val<struct std::_Simple_types<struct std::_Loop_vals_t> >(void) __ptr64;311200;311200;311200;0;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;311200;311200;311200;0;1
??$construct@UDataPerFunction@?A0x5f10505a@@U12@@?$_Default_allocator_traits@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@SAXAEAV?$allocator@UDataPerFunction@?A0x5f10505a@@@1@QEAUDataPerFunction@?A0x5f10505a@@$$QEAU34@@Z;??$construct@UDataPerFunction@?A0x5f10505a@@U12@@?$_Default_allocator_traits@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@SAXAEAV?$allocator@UDataPerFunction@?A0x5f10505a@@@1@QEAUDataPerFunction@?A0x5f10505a@@$$QEAU34@@Z;311100;311100;311100;0;1
??_G?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;310900;310900;310900;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,str;310800;310800;310800;0;1
??1?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAA@XZ;__cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::~MemoryPoolAllocator<class rapidjson::CrtAllocator>(void) __ptr64;310800;310800;310800;0;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@1@$$QEA_N@Z;310800;310800;310800;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<ch;310600;302800;318400;7800;2
??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::~_Uninitialized_backout_al<class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >(void) __ptr64;310600;310600;310600;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VCompiler@Activities@BuildInsights@Cpp@Microsoft@@VLinker@2345@VFrontEndPass@2345@VBackEndPass@2345@VFrontEndFile@2345@VTemplateInstantiation@2345@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Compiler,class Microsoft::Cpp::BuildInsights::Activities::Linker,class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass,class Microsoft::Cpp::BuildInsights::Activities::BackEndPass,class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiatio;310500;310500;310500;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::_Release(void) __ptr64;310300;310300;310300;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64>(void) __ptr64;310000;310000;310000;0;1
??0?$weak_ptr@VValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::weak_ptr<class cxxopts::Value>::weak_ptr<class cxxopts::Value>(void) __ptr64;310000;310000;310000;0;1
??A?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAAAEAVOptionValue@cxxopts@@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;class cxxopts::OptionValue & __ptr64 __cdecl std::unordered_map<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::operator[](class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;309900;309900;309900;0;1
??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z;??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z;309900;309900;309900;0;1
?_Umove@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@PEAU32@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits;309800;309800;309800;0;1
?OnSimpleEvent@BuildTimelineAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl BuildTimelineAnalyzer::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;309700;309700;309700;0;1
?allocate@?$allocator@U?$_List_node@_KPEAX@std@@@std@@QEAAPEAU?$_List_node@_KPEAX@2@_K@Z;struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> >::allocate(unsigned __int64) __ptr64;309700;309700;309700;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<;309600;309600;309600;0;1
??$?R_K_K@?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@QEBA_NAEB_K0@Z;bool __cdecl std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >::operator()<unsigned __int64,unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64)const __ptr64;309557;281900;333500;17987;7
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 const,unsigned __int64);309500;309500;309500;0;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;309500;309500;309500;0;1
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;309500;309500;309500;0;1
??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<24>(unsigned __int64);309450;264800;354100;44650;2
??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator!=(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64)const __ptr64;309400;309400;309400;0;1
??1?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >::~_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >(void) __ptr64;309300;309300;309300;0;1
??0?$_Bt_state_t@PEBD@std@@QEAA@AEBV01@@Z;__cdecl std::_Bt_state_t<char const * __ptr64>::_Bt_state_t<char const * __ptr64>(class std::_Bt_state_t<char const * __ptr64> const & __ptr64) __ptr64;309300;309300;309300;0;1
??0?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@$$QEAV01@@Z;309200;309200;309200;0;1
??$_Emplace_back@VKeyValue@cxxopts@@@?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAAX$$QEAVKeyValue@cxxopts@@@Z;??$_Emplace_back@VKeyValue@cxxopts@@@?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAAX$$QEAVKeyValue@cxxopts@@@Z;309100;309100;309100;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64) __ptr64;309000;309000;309000;0;1
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@V01234@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@0@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@V01234@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@0@Z;309000;309000;309000;0;1
??0?$vector@_NV?$allocator@_N@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<bool,class std::allocator<bool> >::vector<bool,class std::allocator<bool> >(class std::vector<bool,class std::allocator<bool> > const & __ptr64) __ptr64;309000;309000;309000;0;1
??$?0V?$standard_value@I@values@cxxopts@@@?$shared_ptr@V?$standard_value@I@values@cxxopts@@@std@@QEAA@AEBV01@PEAV?$standard_value@I@values@cxxopts@@@Z;__cdecl std::shared_ptr<class cxxopts::values::standard_value<unsigned int> >::shared_ptr<class cxxopts::values::standard_value<unsigned int> ><class cxxopts::values::standard_value<unsigned int> >(class std::shared_ptr<class cxxopts::values::standard_value<unsigned int> > const & __ptr64,class cxxopts::values::standard_value<unsigned int> * __ptr64) __ptr64;308900;308900;308900;0;1
??$?0U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> ><struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >;308850;232600;385100;76250;2
??$forward_as_tuple@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA?AV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@$$QEAV?$vector@_KV?$allocator@_K@std@@@0@@Z;??$forward_as_tuple@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA?AV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@$$QEAV?$vector@_KV?$allocator@_K@std@@@0@@Z;308800;308800;308800;0;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > & __ptr64,struct std::_List_node<struc;308800;308800;308800;0;1
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >::`scalar deleting destructor'(unsigned int) __ptr64;308700;308700;308700;0;1
?OnBeginAnalysis@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;308700;308700;308700;0;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;308700;308700;308700;0;1
??$_Emplace_back@UDataPerFile@?A0x120c265a@@@?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAAX$$QEAUDataPerFile@?A0x120c265a@@@Z;??$_Emplace_back@UDataPerFile@?A0x120c265a@@@?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAAX$$QEAUDataPerFile@?A0x120c265a@@@Z;308700;308700;308700;0;1
??$_Ucopy@PEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAPEAV2345@00@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Ucopy<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64>(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64) __ptr64;308700;308700;308700;0;1
?TranslateAnalysisCode@GroupCallbackSupport@Internal@BuildInsights@Cpp@Microsoft@@KA?AW4CALLBACK_CODE@345@W4AnalysisControl@345@@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::GroupCallbackSupport::TranslateAnalysisCode(enum Microsoft::Cpp::BuildInsights::AnalysisControl);308600;308600;308600;0;1
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@0@AEAV10@@Z;class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > * __ptr64 __cdecl std::addressof<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >(class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<cl;308500;308500;308500;0;1
??$_Freenode@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@?$_List_node@_KPEAX@std@@SAXAEAV?$allocator@U?$_List_node@_KPEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<unsigned __int64,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >(class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > & __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64);308400;308400;308400;0;1
??$?0V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@AEBV01@PEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@Z;__cdecl std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > ><class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<;308400;308400;308400;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;308100;308100;308100;0;1
??$?0U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > const & __ptr64) __ptr64;308100;308100;308100;0;1
?_Delete_this@?$_Ref_count_obj2@V?$standard_value@I@values@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<unsigned int> >::_Delete_this(void) __ptr64;308000;308000;308000;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$sub_match@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@PEBD@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@V?$sub_match@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@PEBD@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;308000;308000;308000;0;1
?bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allo;307900;307900;307900;0;1
??$_Copy_memmove@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAPEBU12@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@PEAPEBU10@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::_Copy_memmove<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,s;307900;307900;307900;0;1
??_G?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::`scalar deleting destructor'(unsigned int) __ptr64;307800;307800;307800;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;307700;307700;307700;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;307650;287700;327600;19950;2
??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAUFileCompilationData@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUFileCompilationData@@@1@@Z;??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAUFileCompilationData@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUFileCompilationData@@@1@@Z;307600;307600;307600;0;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >::allocate(unsigned __int64) __ptr64;307400;307400;307400;0;1
??1?$_Bt_state_t@PEBD@std@@QEAA@XZ;__cdecl std::_Bt_state_t<char const * __ptr64>::~_Bt_state_t<char const * __ptr64>(void) __ptr64;307400;307400;307400;0;1
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z;307386;246500;797600;132156;15
?empty@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBA_NXZ;bool __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::empty(void)const __ptr64;307300;307300;307300;0;1
?begin@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::begin(void) __ptr64;307200;307200;307200;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;307050;244400;369700;62650;2
?_Decref@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Decref(void) __ptr64;307000;307000;307000;0;1
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Calculate_growth(unsigned __int64)const __ptr64;306915;270600;352200;25377;13
??0?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >(void) __ptr64;306900;306900;306900;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>(st;306850;302200;311500;4650;2
??$_Insert@PEBD@?$_Buf@D@std@@QEAAXPEBD0@Z;void __cdecl std::_Buf<char>::_Insert<char const * __ptr64>(char const * __ptr64,char const * __ptr64) __ptr64;306800;306800;306800;0;1
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Max_bucket_size(void) __ptr64;306800;306800;306800;0;1
??$?0V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@@Z;??$?0V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr;306800;306800;306800;0;1
??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><unsigned int>(class std::allocator<unsigned int> const & __ptr64) __ptr64;306700;306700;306700;0;1
??1?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@QEAA@XZ;__cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::~_Parser<char const * __ptr64,char,class std::regex_traits<char> >(void) __ptr64;306600;306600;306600;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;306500;306500;306500;0;1
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >;306500;306500;306500;0;1
??0?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFilterTimelineAnalyzer@@P85@EAAXAEBVFunction@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFilterTimelineAnalyzer@@P85@EAAXAEBVFunction@Activities@234@@Z@Z;306500;306500;306500;0;1
?_Destroy@?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_t;306400;306400;306400;0;1
??$?0V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$_Tuple_val@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;??$?0V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$_Tuple_val@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@Bui;306400;306400;306400;0;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@1@XZ;struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::operator->(void)const __ptr64;306300;306300;306300;0;1
??$regex_match@DV?$allocator@V?$sub_match@PEBD@std@@@std@@V?$regex_traits@D@2@@std@@YA_NPEBDAEAV?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@0@AEBV?$basic_regex@DV?$regex_traits@D@std@@@0@W4match_flag_type@regex_constants@0@@Z;bool __cdecl std::regex_match<char,class std::allocator<class std::sub_match<char const * __ptr64> >,class std::regex_traits<char> >(char const * __ptr64,class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > & __ptr64,class std::basic_regex<char,class std::regex_traits<char> > const & __ptr64,enum std::regex_constants::match_flag_type);306300;306300;306300;0;1
??$distance@PEBD@std@@YA_JPEBD0@Z;__int64 __cdecl std::distance<char const * __ptr64>(char const * __ptr64,char const * __ptr64);306300;306300;306300;0;1
??$_Mark@E@_Bitmap@std@@QEAAXE@Z;void __cdecl std::_Bitmap::_Mark<unsigned char>(unsigned char) __ptr64;306200;306200;306200;0;1
?get@?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@IEBAPEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@2@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;306200;306200;306200;0;1
??0?$_Vector_val@U?$_Simple_types@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >(void) __ptr64;306200;306200;306200;0;1
??0?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class s;306000;306000;306000;0;1
??__Eoption_specifier@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic initializer for 'option_specifier''(void);306000;306000;306000;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_type;305900;256100;355700;49800;2
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(void) __ptr64;305800;305800;305800;0;1
?_Decref@?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::Value const >::_Decref(void) __ptr64;305700;305700;305700;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;305600;305600;305600;0;1
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std:;305500;305500;305500;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List;305450;302300;308600;3150;2
??0?$vector@IV?$allocator@I@std@@@std@@QEAA@_KAEBIAEBV?$allocator@I@1@@Z;__cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::vector<unsigned int,class std::allocator<unsigned int> >(unsigned __int64,unsigned int const & __ptr64,class std::allocator<unsigned int> const & __ptr64) __ptr64;305400;305400;305400;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr6;305400;305400;305400;0;1
?_Decref@?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::OptionDetails>::_Decref(void) __ptr64;305300;305300;305300;0;1
?bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,c;305300;305300;305300;0;1
??$MatchEventInMemberFunction@VFilterTimelineAnalyzer@@XAEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFilterTimelineAnalyzer@@P84@EAAXAEBVTemplateInstantiation@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VFilterTimelineAnalyzer@@XAEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFilterTimelineAnalyzer@@P84@EAAXAEBVTemplateInstantiation@Activities@012@@Z@Z;305300;305300;305300;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >(struct;305200;305200;305200;0;1
?Malloc@CrtAllocator@rapidjson@@QEAAPEAX_K@Z;void * __ptr64 __cdecl rapidjson::CrtAllocator::Malloc(unsigned __int64) __ptr64;305000;305000;305000;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespac;305000;305000;305000;0;1
??1_Range_eraser@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;304900;304900;304900;0;1
??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z;bool __cdecl std::operator!=<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,char const * __ptr64 const);304900;304900;304900;0;1
?_Destroy@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAXPEAU_Loop_vals_t@2@0@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Destroy(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64) __ptr64;304900;304900;304900;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::_Release(void) __ptr64;304900;304900;304900;0;1
??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<unsigned long> >::_Vector_val<struct std::_Simple_types<unsigned long> >(void) __ptr64;304800;304800;304800;0;1
??$construct@UDataPerFunction@?A0x5f10505a@@AEAU12@@?$_Default_allocator_traits@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@SAXAEAV?$allocator@UDataPerFunction@?A0x5f10505a@@@1@QEAUDataPerFunction@?A0x5f10505a@@AEAU34@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct `anonymous namespace'::DataPerFunction> >::construct<struct `anonymous namespace'::DataPerFunction,struct A0x5f10505a::DataPerFunction & __ptr64>(class std::allocator<struct `anonymous namespace'::DataPerFunction> & __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64 const,struct A0x5f10505a::DataPerFunction & __ptr64);304800;304800;304800;0;1
??$_Freenode0@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@?$_List_node@_KPEAX@std@@SAXAEAV?$allocator@U?$_List_node@_KPEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<unsigned __int64,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >(class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > & __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64);304800;304800;304800;0;1
??0?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;304725;288900;314000;9460;4
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_p;304700;304700;304700;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Range_eraser::_Range_eraser(;304700;304700;304700;0;1
?make_storage@OptionDetails@cxxopts@@QEBA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::OptionDetails::make_storage(void)const __ptr64;304700;304700;304700;0;1
??$_Get_size_of_n@$07@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<8>(unsigned __int64);304546;263400;412000;35377;13
?Tell@?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@QEBA_KXZ;unsigned __int64 __cdecl rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >::Tell(void)const __ptr64;304500;304500;304500;0;1
??0CommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::SimpleEvents::CommandLine::CommandLine(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;304400;304400;304400;0;1
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::construct<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64,class std::basic_stri;304300;304300;304300;0;1
??4?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;304100;304100;304100;0;1
?do_hash@?$collate@D@std@@MEBAJPEBD0@Z;virtual long __cdecl std::collate<char>::do_hash(char const * __ptr64,char const * __ptr64)const __ptr64;304100;304100;304100;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Rehash_for_1(void) __ptr64;304000;304000;304000;0;1
??$construct@UHelpOptionDetails@cxxopts@@U12@@?$_Default_allocator_traits@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@SAXAEAV?$allocator@UHelpOptionDetails@cxxopts@@@1@QEAUHelpOptionDetails@cxxopts@@$$QEAU34@@Z;??$construct@UHelpOptionDetails@cxxopts@@U12@@?$_Default_allocator_traits@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@SAXAEAV?$allocator@UHelpOptionDetails@cxxopts@@@1@QEAUHelpOptionDetails@cxxopts@@$$QEAU34@@Z;304000;304000;304000;0;1
??$forward@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@0@AEAPEAU10@@Z;304000;304000;304000;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `ano;303900;303900;303900;0;1
?capacity@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::capacity(void)const __ptr64;303900;303900;303900;0;1
?_Make_iter@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_Make_iter(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThre;303800;303800;303800;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Range_eraser::_Range_eraser(class std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::alloca;303700;303700;303700;0;1
?_Swap@?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEAAXAEAV12@@Z;void __cdecl std::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Swap(class std::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64) __ptr64;303700;303700;303700;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VPass2@Activities@BuildInsights@Cpp@Microsoft@@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Pass2,class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildI;303700;303700;303700;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_trait;303600;303600;303600;0;1
?_Unchecked_end@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_Unchecked_end(void) __ptr64;303600;303600;303600;0;1
??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<unsigned int,class std::allocator<unsigned int> > >::~_Tidy_guard<class std::vector<unsigned int,class std::allocator<unsigned int> > >(void) __ptr64;303600;303600;303600;0;1
?_Throw_range_error@std@@YAXQEBD@Z;void __cdecl std::_Throw_range_error(char const * __ptr64 const);303500;303500;303500;0;1
?String@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NPEBDI_N@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::String(char const * __ptr64,unsigned int,bool) __ptr64;303500;303500;303500;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<;303400;253000;353800;50400;2
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>;303400;303400;303400;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Mic;303300;303300;303300;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >::_Release(void) __ptr64;303200;303200;303200;0;1
?expired@?$weak_ptr@VValue@cxxopts@@@std@@QEBA_NXZ;bool __cdecl std::weak_ptr<class cxxopts::Value>::expired(void)const __ptr64;303100;303100;303100;0;1
??$_Find_unchecked@PEBDE@std@@YAPEBDQEBD0AEBE@Z;char const * __ptr64 __cdecl std::_Find_unchecked<char const * __ptr64,unsigned char>(char const * __ptr64 const,char const * __ptr64 const,unsigned char const & __ptr64);303100;303100;303100;0;1
??0?$_Ptr_base@VValue@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::Value>::_Ptr_base<class cxxopts::Value>(void) __ptr64;303100;303100;303100;0;1
??0?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class ;303100;303100;303100;0;1
??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;302900;302900;302900;0;1
??0?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >(void) __ptr64;302800;302800;302800;0;1
?empty@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEBA_NXZ;bool __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::empty(void)const __ptr64;302700;302700;302700;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V;302650;239800;365500;62850;2
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> ><class std::basic_string<char,struct std::c;302650;233300;372000;69350;2
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> ;302600;299300;305900;3300;2
?_Unchecked_end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA?AU_Default_sentinel@2@XZ;struct std::_Default_sentinel __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::_Unchecked_end(void)const __ptr6;302600;302600;302600;0;1
??1?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;302500;302500;302500;0;1
??1?$_Tidy_guard@V?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > >::~_Tidy_guard<class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > >(void) __ptr64;302500;302500;302500;0;1
??$_Move_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@std@@IEAAX$$QEAV01@@Z;302400;302400;302400;0;1
??$_Mark@I@_Bitmap@std@@QEAAXI@Z;void __cdecl std::_Bitmap::_Mark<unsigned int>(unsigned int) __ptr64;302400;302400;302400;0;1
?_Getal@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEBAAEBV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@2@XZ;class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > const & __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Getal(void)const __ptr64;302400;261100;327800;29459;3
??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z;void __cdecl std::_Destroy_in_place<wchar_t * __ptr64>(wchar_t * __ptr64 & __ptr64);302400;302400;302400;0;1
??0_Node_capture@std@@QEAA@I@Z;__cdecl std::_Node_capture::_Node_capture(unsigned int) __ptr64;302300;302300;302300;0;1
?empty@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::cha;302300;302300;302300;0;1
?_Umove_if_noexcept1@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAXPEAUHelpOptionDetails@cxxopts@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Umove_if_noexcept1(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64,struct std::integral_constant<bool,1>) __ptr64;302100;302100;302100;0;1
??$?0VOptionDetails@cxxopts@@$0A@@?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@QEAA@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;__cdecl std::shared_ptr<class cxxopts::OptionDetails const >::shared_ptr<class cxxopts::OptionDetails const ><class cxxopts::OptionDetails,0>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;302100;302100;302100;0;1
??$RunContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@$$V@1234@$$QEAVSymbolName@SimpleEvents@234@@Z;??$RunContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU;302000;302000;302000;0;1
??$?0V?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@I@1@@Z;??$?0V?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@I@1@@Z;301900;301900;301900;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std:;301900;301900;301900;0;1
??0_Node_assert@std@@QEAA@W4_Node_type@1@W4_Node_flags@1@@Z;__cdecl std::_Node_assert::_Node_assert(enum std::_Node_type,enum std::_Node_flags) __ptr64;301800;301800;301800;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >(class st;301800;301800;301800;0;1
?OnEndAnalysisPass@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnEndAnalysisPass(void) __ptr64;301800;301800;301800;0;1
??1?$_Tuple_val@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@XZ;__cdecl std::_Tuple_val<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::~_Tuple_val<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::Bui;301700;301700;301700;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;301600;301600;301600;0;1
??$_Sort_heap_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Sort_heap_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;301600;301600;301600;0;1
??$_Copy_memmove@PEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@PEAV123@@std@@YAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@PEAV120@00@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::_Copy_memmove<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64);301566;285400;320500;14462;3
??0?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> >::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> >(void) __ptr64;301400;301400;301400;0;1
?_Umove_if_noexcept@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAXPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@00@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Umove_if_noexcept(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::sub_match<class std::_String_const_iterator<class std::_String_val<stru;301400;301400;301400;0;1
?bucket@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$shared_ptr@VOptionDetails@cxxopts@@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::bucket(class;301400;301400;301400;0;1
??1_Range_eraser@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;301200;301200;301200;0;1
??1?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;301100;301100;301100;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_si;301000;300600;301400;400;2
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::D;301000;301000;301000;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVTimelineEntry@@@std@@@std@@SA_KAEBV?$allocator@PEAVTimelineEntry@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class TimelineEntry * __ptr64> >::max_size(class std::allocator<class TimelineEntry * __ptr64> const & __ptr64);300950;299600;302300;1350;2
?_Getal@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,;300900;300900;300900;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > ;300900;300900;300900;0;1
??1?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::~unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigne;300900;300900;300900;0;1
??__Efalsy_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic initializer for 'falsy_pattern''(void);300800;300800;300800;0;1
?_Unchecked_end@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;300800;300800;300800;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Rehash_for_1(void) __ptr64;300700;300700;300700;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;300700;300700;300700;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,stru;300600;300600;300600;0;1
??0?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class s;300500;300500;300500;0;1
??0Pass@FileCompilationData@@QEAA@XZ;__cdecl FileCompilationData::Pass::Pass(void) __ptr64;300400;300400;300400;0;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;300400;300400;300400;0;1
??$_Find@E@_Bitmap@std@@QEBA_NE@Z;bool __cdecl std::_Bitmap::_Find<unsigned char>(unsigned char)const __ptr64;300300;300300;300300;0;1
??$?0AEAPEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@$0A@@?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@AEAPEBVTimelineEntry@@$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@@Z;??$?0AEAPEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@$0A@@?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@AEAPEBVTimelineEntry@@$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@@Z;300300;300300;300300;0;1
??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@@Z;??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@@Z;300300;300300;300300;0;1
?set_default_and_implicit@?$standard_value@_N@values@cxxopts@@AEAAXXZ;void __cdecl cxxopts::values::standard_value<bool>::set_default_and_implicit(void) __ptr64;300200;300200;300200;0;1
??1?$_Ref_count_obj2@VOptionDetails@cxxopts@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class cxxopts::OptionDetails>::~_Ref_count_obj2<class cxxopts::OptionDetails>(void) __ptr64;300100;300100;300100;0;1
??$forward@V?$tuple@$$QEAPEBD@std@@@std@@YA$$QEAV?$tuple@$$QEAPEBD@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAPEBD@std@@@std@@YA$$QEAV?$tuple@$$QEAPEBD@0@AEAV10@@Z;300100;204900;395300;95200;2
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;300100;300100;300100;0;1
?_Umove@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@PEAV34567@00@Z;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Umove(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,c;300000;300000;300000;0;1
??$_Ucopy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEAV21@00@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Ucopy<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;300000;300000;300000;0;1
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ;bool __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const __ptr64;300000;300000;300000;0;1
?end@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::end(void) __ptr64;300000;300000;300000;0;1
??$_Copy_memmove@PEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAPEAV1234@@std@@YAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAPEAV1234@00@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::_Copy_memmove<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64>(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64);300000;300000;300000;0;1
??$_Copy_memmove@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@PEAPEBU10@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Copy_memmove<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __p;299900;299900;299900;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Rehash_for_1(void) __ptr64;299800;299800;299800;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_;299700;298500;300900;1200;2
??$pow@_JH$0A@@@YAN_JH@Z;double __cdecl pow<__int64,int,0>(__int64,int);299633;248100;366100;49317;3
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;299600;299600;299600;0;1
?get@?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEBAPEBVValue@cxxopts@@XZ;class cxxopts::Value const * __ptr64 __cdecl std::_Ptr_base<class cxxopts::Value const >::get(void)const __ptr64;299600;299600;299600;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>(struct std::_List_node<struct std::pair<class std::share;299500;299500;299500;0;1
?capacity@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::capacity(void)const __ptr64;299500;289900;309100;9600;2
?SetLength@ShortString@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAXI@Z;void __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::ShortString::SetLength(unsigned int) __ptr64;299400;299400;299400;0;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::cha;299300;299300;299300;0;1
??0bad_weak_ptr@std@@QEAA@XZ;__cdecl std::bad_weak_ptr::bad_weak_ptr(void) __ptr64;299200;299200;299200;0;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@_KPEAX@2@XZ;struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >::_Release(void) __ptr64;299000;299000;299000;0;1
??$_Copy_backward_memmove@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@PEAPEBU10@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Copy_backward_memmove<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> co;298900;298900;298900;0;1
??0?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(void) __ptr64;298900;298900;298900;0;1
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tree_temp_node_alloc<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::~_Tree_temp_node_alloc<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(void) __ptr64;298800;298800;298800;0;1
??_G?$_Ref_count_obj2@I@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<unsigned int>::`scalar deleting destructor'(unsigned int) __ptr64;298800;298800;298800;0;1
?_Check_max_size@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Check_max_size(void)const __ptr64;298600;298600;298600;0;1
?Realloc@CrtAllocator@rapidjson@@QEAAPEAXPEAX_K1@Z;void * __ptr64 __cdecl rapidjson::CrtAllocator::Realloc(void * __ptr64,unsigned __int64,unsigned __int64) __ptr64;298500;298500;298500;0;1
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z;unsigned __int64 const & __ptr64 __cdecl std::_Min_value<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64);298433;262300;336000;21849;18
?_Umove_if_noexcept@?$vector@KV?$allocator@K@std@@@std@@AEAAXPEAK00@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Umove_if_noexcept(unsigned long * __ptr64,unsigned long * __ptr64,unsigned long * __ptr64) __ptr64;298300;298300;298300;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits;298250;294200;302300;4050;2
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z;__cdecl std::fpos<struct _Mbstatet>::fpos<struct _Mbstatet>(__int64) __ptr64;298233;271400;346900;25535;6
??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<48>(unsigned __int64);298200;275600;337500;23449;4
?implicit_value@?$abstract_value@_N@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<bool>::implicit_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;298200;298200;298200;0;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tra;298200;292300;304100;5900;2
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;298150;275400;320900;22750;2
??$?RV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@std@@QEBA_KAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;unsigned __int64 __cdecl std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >::operator()<class std::shared_ptr<class cxxopts::OptionDetails> >(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64)const __ptr64;298100;298100;298100;0;1
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;298100;298100;298100;0;1
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@XZ;class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > const * __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<;298100;298100;298100;0;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(vo;298050;290500;305600;7550;2
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,voi;298000;298000;298000;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<uns;298000;298000;298000;0;1
??0_Node_endif@std@@QEAA@XZ;__cdecl std::_Node_endif::_Node_endif(void) __ptr64;297900;297900;297900;0;1
??$construct@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@AEAU123@@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@AEAU341@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::construct<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64>(class std::allocator<struct s;297900;297900;297900;0;1
??$RunContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@$$V@1234@$$QEAVTemplateInstantiation@Activities@234@@Z;??$RunContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler;297800;297800;297800;0;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<cl;297800;297800;297800;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;297800;297800;297800;0;1
?_Getal@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > & __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Getal(void) __ptr64;297800;297800;297800;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Max_bu;297600;297600;297600;0;1
?_Destroy@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@0@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Destroy(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>;297600;297600;297600;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;297500;297500;297500;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Max_bucket_s;297400;297400;297400;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;297400;297400;297400;0;1
??$Push@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAAPEAULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@2@_K@Z;struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level * __ptr64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Push<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::Crt;297300;297300;297300;0;1
?_IdentityEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_IdentityEscape(void) __ptr64;297300;297300;297300;0;1
??0?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> >::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> >(void) __ptr64;297250;290100;304400;7150;2
??0?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> >::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> >(void) __ptr64;297200;297200;297200;0;1
?do_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_length(struct _Mbstatet & __ptr64,char const * __ptr64,char const * __ptr64,unsigned __int64)const __ptr64;297200;297200;297200;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >(void) __ptr64;297100;297100;297100;0;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;297100;297100;297100;0;1
??1?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class ;297000;297000;297000;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct Packe;297000;297000;297000;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocato;296900;296900;296900;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::;296900;267600;326200;29300;2
?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Umove_if_noexcept(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std;296800;296800;296800;0;1
?_Swap@?$_Ptr_base@I@std@@IEAAXAEAV12@@Z;void __cdecl std::_Ptr_base<unsigned int>::_Swap(class std::_Ptr_base<unsigned int> & __ptr64) __ptr64;296800;296800;296800;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Rehash_for_1(void) __ptr64;296800;277800;315800;19000;2
??$_Emplace_back@AEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAXAEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64>::_Emplace_back<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> const & __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base;296700;296700;296700;0;1
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > const & __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allo;296700;296700;296700;0;1
?capacity@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::capacity(void)const __ptr64;296600;296600;296600;0;1
??0?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<char,struct std::;296500;292400;300600;4100;2
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::alloc;296500;296500;296500;0;1
??0?$tuple@AEAVTimelineEntry@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEAVTimelineEntry@@@std@@QEAA@$$QEAV01@@Z;296400;296400;296400;0;1
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > & __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct st;296400;296400;296400;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::alloca;296350;292300;300400;4050;2
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >::allocate(unsigned __int64) __ptr64;296300;296300;296300;0;1
??0?$_Vector_val@U?$_Simple_types@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct cxxopts::HelpOptionDetails> >::_Vector_val<struct std::_Simple_types<struct cxxopts::HelpOptionDetails> >(void) __ptr64;296300;296300;296300;0;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<cha;296250;290200;302300;6050;2
?max_size@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::max_size(class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64);296200;296200;296200;0;1
?_Umove_if_noexcept@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@00@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Umove_if_noexcept(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64) __ptr64;296100;296100;296100;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Unchecked_begin(void) __ptr64;296100;296100;296100;0;1
?_Umove_if_noexcept@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@00@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Umove_if_noexcept(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompil;296000;296000;296000;0;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;295900;295900;295900;0;1
??$MatchEventInMemberFunction@VFileCompilationsAnalyzer@@XAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFileCompilationsAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VFileCompilationsAnalyzer@@XAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFileCompilationsAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@@Z@Z;295700;295700;295700;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;295700;265500;325900;30200;2
?capacity@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::capacity(void)const __ptr64;295600;295600;295600;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator;295550;259400;331700;36150;2
??0?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >(void) __ptr64;295533;267500;325400;23673;3
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_trai;295500;286300;304700;9200;2
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@XZ;class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> >,class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >,1>::_Get_first(vo;295500;295500;295500;0;1
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::_Check_grow_by_1(void) __ptr64;295500;295500;295500;0;1
??0?$_Vector_val@U?$_Simple_types@V?$sub_match@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::sub_match<char const * __ptr64> > >::_Vector_val<struct std::_Simple_types<class std::sub_match<char const * __ptr64> > >(void) __ptr64;295400;295400;295400;0;1
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z;??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z;295300;295300;295300;0;1
??$construct@KAEBK@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAEAV?$allocator@K@1@QEAKAEBK@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<unsigned long> >::construct<unsigned long,unsigned long const & __ptr64>(class std::allocator<unsigned long> & __ptr64,unsigned long * __ptr64 const,unsigned long const & __ptr64);295200;295200;295200;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > ;295100;295100;295100;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<cha;294950;269000;320900;25950;2
??0?$tuple@$$QEAPEBD@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAPEBD@std@@QEAA@$$QEAV01@@Z;294950;278000;311900;16950;2
??$construct@V?$sub_match@PEBD@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@PEBD@std@@@1@QEAV?$sub_match@PEBD@1@$$QEAV31@@Z;??$construct@V?$sub_match@PEBD@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@PEBD@std@@@1@QEAV?$sub_match@PEBD@1@$$QEAV31@@Z;294900;294900;294900;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>;294900;294900;294900;0;1
??$construct@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@AEBV123@@?$_Default_allocator_traits@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@SAXAEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@AEBV341@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::construct<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64>(class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,class s;294900;294900;294900;0;1
??$construct@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@$$QEAV31@@Z;??$construct@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@$$QEAV31@@Z;294700;294700;294700;0;1
??$construct@_KAEB_K@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SAXAEAV?$allocator@_K@1@QEA_KAEB_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<unsigned __int64> >::construct<unsigned __int64,unsigned __int64 const & __ptr64>(class std::allocator<unsigned __int64> & __ptr64,unsigned __int64 * __ptr64 const,unsigned __int64 const & __ptr64);294700;294700;294700;0;1
?_Umove_if_noexcept@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@00@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Umove_if_noexcept(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64) __ptr64;294700;294700;294700;0;1
??$Run@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Mic;294700;294700;294700;0;1
??$_Hash_array_representation@D@std@@YA_KQEBD_K@Z;unsigned __int64 __cdecl std::_Hash_array_representation<char>(char const * __ptr64 const,unsigned __int64);294628;260400;378600;42232;7
??0_Range_eraser@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@QEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;294500;294500;294500;0;1
??0?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >(void) __ptr64;294400;294400;294400;0;1
?get@?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEBAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::get(void)const __ptr64;294400;294400;294400;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation,class Microsoft::Cpp::BuildInsights::Activities::Function,class Microsoft::Cpp::BuildInsights::Activities::Pass1,class Microsoft::Cpp::BuildInsights::Activities::Pass2,class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,clas;294400;294400;294400;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@AEAV10@@Z;294300;257700;330900;36600;2
??0TemplateInstantiationData@@QEAA@XZ;__cdecl TemplateInstantiationData::TemplateInstantiationData(void) __ptr64;294300;294300;294300;0;1
?Uint64@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_N_K@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Uint64(unsigned __int64) __ptr64;294300;294300;294300;0;1
??$_Copy_memmove@PEAKPEAK@std@@YAPEAKPEAK00@Z;unsigned long * __ptr64 __cdecl std::_Copy_memmove<unsigned long * __ptr64,unsigned long * __ptr64>(unsigned long * __ptr64,unsigned long * __ptr64,unsigned long * __ptr64);294200;294200;294200;0;1
??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::begin<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);294200;294200;294200;0;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;294150;282800;305500;11350;2
??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z;bool __cdecl std::_Ungetc<char>(char const & __ptr64,struct _iobuf * __ptr64);294083;275400;313600;13378;6
??0bad_weak_ptr@std@@QEAA@AEBV01@@Z;__cdecl std::bad_weak_ptr::bad_weak_ptr(class std::bad_weak_ptr const & __ptr64) __ptr64;294000;294000;294000;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,cl;294000;294000;294000;0;1
??_G_Node_capture@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_capture::`scalar deleting destructor'(unsigned int) __ptr64;294000;294000;294000;0;1
??_G?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAAPEAXI@Z;void * __ptr64 __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::`scalar deleting destructor'(unsigned int) __ptr64;293900;293900;293900;0;1
?bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std;293800;293800;293800;0;1
??1?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<bool> >::~_Ref_count_obj2<class cxxopts::values::standard_value<bool> >(void) __ptr64;293800;293800;293800;0;1
?length@?$sub_match@PEBD@std@@QEBA_JXZ;__int64 __cdecl std::sub_match<char const * __ptr64>::length(void)const __ptr64;293700;293700;293700;0;1
??$move@AEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@;293700;293700;293700;0;1
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z;void __cdecl std::_Delete_plain_internal<class std::allocator<struct std::_Container_proxy> >(class std::allocator<struct std::_Container_proxy> & __ptr64,struct std::_Container_proxy * __ptr64 const);293694;231100;719600;107462;18
??B?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NXZ;__cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::operator bool(void)const __ptr64;293600;293600;293600;0;1
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z;virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::imbue(class std::locale const & __ptr64) __ptr64;293316;235000;409500;59022;6
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);293216;273500;309200;12858;6
?_Umove@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAPEAPEAVTimelineEntry@@PEAPEAV3@00@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Umove(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64) __ptr64;293150;256900;329400;36250;2
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::construct<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,;293100;293100;293100;0;1
??_G?$_Node_class@DV?$regex_traits@D@std@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_class<char,class std::regex_traits<char> >::`scalar deleting destructor'(unsigned int) __ptr64;293100;293100;293100;0;1
??$_Copy_backward_memmove@PEAUDataPerFunction@?A0x5f10505a@@PEAU12@@std@@YAPEAUDataPerFunction@?A0x5f10505a@@PEAU12@00@Z;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::_Copy_backward_memmove<struct `anonymous namespace'::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64>(struct A0x5f10505a::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64);293100;293100;293100;0;1
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::operator+=(__int64) __ptr64;293100;293100;293100;0;1
?no_implicit_value@?$abstract_value@_N@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<bool>::no_implicit_value(void) __ptr64;292900;292900;292900;0;1
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >::`scalar deleting destructor'(unsigned int) __ptr64;292850;262700;323000;30150;2
??$get@$0A@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@@Z;??$get@$0A@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@@Z;292700;270000;315400;22700;2
?bucket@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;292700;292700;292700;0;1
?base@?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@2@XZ;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > __cdecl std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >::base(void)const __ptr64;292500;292500;292500;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>;292400;292400;292400;0;1
??1_Node_assert@std@@UEAA@XZ;virtual __cdecl std::_Node_assert::~_Node_assert(void) __ptr64;292400;292400;292400;0;1
?_Umove_if_noexcept@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAXPEAU_Loop_vals_t@2@00@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Umove_if_noexcept(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64) __ptr64;292300;292300;292300;0;1
??0IRelogger@BuildInsights@Cpp@Microsoft@@QEAA@AEBV0123@@Z;__cdecl Microsoft::Cpp::BuildInsights::IRelogger::IRelogger(class Microsoft::Cpp::BuildInsights::IRelogger const & __ptr64) __ptr64;292300;292300;292300;0;1
??1?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::~_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(void) __ptr64;292300;292300;292300;0;1
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z;static char * __ptr64 __cdecl std::_Narrow_char_traits<char,int>::copy(char * __ptr64 const,char const * __ptr64 const,unsigned __int64);292246;239900;624900;92259;15
?end@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std:;292200;292200;292200;0;1
??0?$_Vector_val@U?$_Simple_types@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Vector_val<struct std::_Simple_types<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(void) __ptr64;292100;292100;292100;0;1
?_Umove_if_noexcept1@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Umove_if_noexcept1(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAna;292000;292000;292000;0;1
?max_load_factor@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::max_load_factor(void)const __ptr64;292000;292000;292000;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@QEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64,struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr6;292000;230300;353700;61700;2
??0ParseResult@rapidjson@@QEAA@XZ;__cdecl rapidjson::ParseResult::ParseResult(void) __ptr64;291900;291900;291900;0;1
?_Swap@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXAEAV12@@Z;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Swap(class std::_Ptr_base<class cxxopts::Value> & __ptr64) __ptr64;291800;291800;291800;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > >(void) __ptr64;291800;291800;291800;0;1
??$construct@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V123@@?$_Default_allocator_traits@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@SAXAEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAV341@@Z;??$construct@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V123@@?$_Default_allocator_traits@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@SAXAEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAV341@@Z;291700;291300;292100;400;2
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAUDataPerTemplate@?A0x5cdd232a@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@1@@Z;??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAUDataPerTemplate@?A0x5cdd232a@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@1@@Z;291600;291600;291600;0;1
??0?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >(class std::allocator<struct std::pair<unsigned __int64 const;291500;291500;291500;0;1
??1?$_Ref_count_obj2@I@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<unsigned int>::~_Ref_count_obj2<unsigned int>(void) __ptr64;291500;291500;291500;0;1
?bucket@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;291500;291500;291500;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct;291500;291500;291500;0;1
??$_Copy_backward_memmove@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAPEBU12@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@PEAPEBU10@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::_Copy_backward_memmove<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;291400;291400;291400;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;291400;291400;291400;0;1
??_G?$_Ref_count_obj2@_N@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<bool>::`scalar deleting destructor'(unsigned int) __ptr64;291400;291400;291400;0;1
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z;static char * __ptr64 __cdecl std::_Narrow_char_traits<char,int>::move(char * __ptr64 const,char const * __ptr64 const,unsigned __int64);291269;248000;426100;50511;13
?_Umove_if_noexcept1@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::_Umove_if_noexcept1(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::all;291200;291200;291200;0;1
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_In_place_key_extract_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Extract(struct std::pair<class std::basic_string<char,struct std::;291200;291200;291200;0;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >(void) __ptr64;291200;291200;291200;0;1
??$forward_as_tuple@AEB_K@std@@YA?AV?$tuple@AEB_K@0@AEB_K@Z;class std::tuple<unsigned __int64 const & __ptr64> __cdecl std::forward_as_tuple<unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64);291125;256200;358100;40586;4
?capacity@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::capacity(void)const __ptr64;291100;291100;291100;0;1
?_Unchecked_begin@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Unchecked_beg;291000;291000;291000;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;291000;291000;291000;0;1
??$MatchEventInMemberFunction@VFileCompilationsAnalyzer@@XAEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFileCompilationsAnalyzer@@P84@EAAXAEBVBackEndPass@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VFileCompilationsAnalyzer@@XAEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFileCompilationsAnalyzer@@P84@EAAXAEBVBackEndPass@Activities@012@@Z@Z;291000;291000;291000;0;1
?_Decref@?$_Ptr_base@V?$standard_value@I@values@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::values::standard_value<unsigned int> >::_Decref(void) __ptr64;290900;290900;290900;0;1
??$_Get_size_of_n@$03@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<4>(unsigned __int64);290850;274000;307700;16850;2
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z;__cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >(char const * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;290800;290800;290800;0;1
?Int64@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_N_J@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Int64(__int64) __ptr64;290700;290700;290700;0;1
?capacity@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::capacity(void)const __ptr64;290700;290700;290700;0;1
?translate_nocase@?$_Regex_traits@D@std@@QEBADD@Z;char __cdecl std::_Regex_traits<char>::translate_nocase(char)const __ptr64;290600;290600;290600;0;1
??0_Node_base@std@@QEAA@W4_Node_type@1@W4_Node_flags@1@@Z;__cdecl std::_Node_base::_Node_base(enum std::_Node_type,enum std::_Node_flags) __ptr64;290600;290600;290600;0;1
??$?RVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVSymbolName@SimpleEvents@234@@Z;??$?RVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVSymbolName@SimpleEvents@234@@Z;290600;290600;290600;0;1
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const & __ptr64 __cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;290500;290500;290500;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_trai;290400;290400;290400;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;290400;290400;290400;0;1
??$?0AEB_K$$Z$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;??$?0AEB_K$$Z$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;290300;290300;290300;0;1
?_Getal@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Getal(void) __ptr64;290300;290300;290300;0;1
?capacity@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::capacity(void)const __ptr64;290300;290300;290300;0;1
??$_Move_construct_from@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEAAX$$QEAV01@@Z;290300;290300;290300;0;1
?_Add_coll@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXPEBD0_J@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_coll(char const * __ptr64,char const * __ptr64,__int64) __ptr64;290300;290300;290300;0;1
??_G_Node_end_group@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_end_group::`scalar deleting destructor'(unsigned int) __ptr64;290200;290200;290200;0;1
?Int@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NH@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Int(int) __ptr64;290200;290200;290200;0;1
??0HelpGroupDetails@cxxopts@@QEAA@XZ;__cdecl cxxopts::HelpGroupDetails::HelpGroupDetails(void) __ptr64;290000;290000;290000;0;1
??$construct@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@QEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@$$QEAU31@@Z;??$construct@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@QEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@$$QEAU31@@Z;289900;289900;289900;0;1
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@@std@@YA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > & __ptr64);289900;289900;289900;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VLTCG@Activities@BuildInsights@Cpp@Microsoft@@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights:;289900;289900;289900;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anony;289800;289800;289800;0;1
??0?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >(void) __ptr64;289700;289700;289700;0;1
?_Umove_if_noexcept@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXPEAVKeyValue@cxxopts@@00@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Umove_if_noexcept(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64) __ptr64;289700;289700;289700;0;1
?_Begin_group@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Node_base@2@XZ;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Begin_group(void) __ptr64;289700;289700;289700;0;1
??1?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >::~_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >(void) __ptr64;289600;289600;289600;0;1
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned __int64) __ptr64;289600;289600;289600;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct s;289600;263200;316000;26400;2
?bucket@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class s;289500;289500;289500;0;1
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z;static char * __ptr64 __cdecl std::_Narrow_char_traits<char,int>::assign(char * __ptr64 const,unsigned __int64,char);289500;262800;316200;26700;2
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ;class std::allocator<char> & __ptr64 __cdecl std::vector<char,class std::allocator<char> >::_Getal(void) __ptr64;289400;289400;289400;0;1
??$_Get_unwrapped@AEAPEAD@std@@YA@AEAPEAD@Z;__cdecl std::_Get_unwrapped<char * __ptr64 & __ptr64>(char * __ptr64 & __ptr64);289400;289400;289400;0;1
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z;bool __cdecl std::operator==<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);289342;247900;378600;47556;7
??$?RV?$shared_ptr@VOptionDetails@cxxopts@@@std@@V01@@?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@std@@QEBA_NAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@0@Z;bool __cdecl std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >::operator()<class std::shared_ptr<class cxxopts::OptionDetails>,class std::shared_ptr<class cxxopts::OptionDetails> >(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64)const __ptr64;289300;289300;289300;0;1
?get_default_value@?$abstract_value@_N@values@cxxopts@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::values::abstract_value<bool>::get_default_value(void)const __ptr64;289300;289300;289300;0;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >(void) __ptr64;289300;289300;289300;0;1
??$_Copy_memmove@PEA_KPEA_K@std@@YAPEA_KPEA_K00@Z;unsigned __int64 * __ptr64 __cdecl std::_Copy_memmove<unsigned __int64 * __ptr64,unsigned __int64 * __ptr64>(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64,unsigned __int64 * __ptr64);289200;289200;289200;0;1
??$forward@AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > const & __ptr64>(class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > const & __ptr64);289200;289200;289200;0;1
?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ;char * __ptr64 __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_Unwrapped(void)const __ptr64;289200;289200;289200;0;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Clear_guard::~_Clear_guard(v;289100;289100;289100;0;1
??1?$unordered_map@_KVTimelineEntry@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class TimelineEntry,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::~unordered_map<unsigned __int64,class TimelineEntry,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >(void) __ptr64;289100;289100;289100;0;1
?bucket@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;289100;289100;289100;0;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;289100;274500;303700;14600;2
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >::_Allocate(void) __ptr64;289100;289100;289100;0;1
?_Umove@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAPEAVKeyValue@cxxopts@@PEAV34@00@Z;class cxxopts::KeyValue * __ptr64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Umove(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64) __ptr64;289100;289100;289100;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Max_bucket_size(void) __ptr64;289100;289100;289100;0;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >(void) __ptr64;288900;288900;288900;0;1
?has_default@?$abstract_value@_N@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<bool>::has_default(void)const __ptr64;288900;288900;288900;0;1
??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;288800;288800;288800;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::size(void)const __ptr64;288750;263400;314100;25350;2
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > & __ptr64,struct std::_Tree_n;288700;288700;288700;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;288700;288700;288700;0;1
??0?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@$$QEAV01@@Z;288700;288700;288700;0;1
??$construct@V?$sub_match@PEBD@std@@$$V@?$_Default_allocator_traits@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@PEBD@std@@@1@QEAV?$sub_match@PEBD@1@@Z;??$construct@V?$sub_match@PEBD@std@@$$V@?$_Default_allocator_traits@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@PEBD@std@@@1@QEAV?$sub_match@PEBD@1@@Z;288700;288700;288700;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;288600;288600;288600;0;1
??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(class std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;288600;288600;288600;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_tr;288550;277300;299800;11250;2
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::alloca;288500;282800;294200;5700;2
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<st;288400;288400;288400;0;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@M;288300;288300;288300;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@UHelpOptionDetails@cxxopts@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@UHelpOptionDetails@cxxopts@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;288300;288300;288300;0;1
?_Getal@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEBAAEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> const & __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct ;288200;288200;288200;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile> >::Run(unsigned int);288100;246000;330200;42100;2
??0?$tuple@AEAUTemplateInstantiationData@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEAUTemplateInstantiationData@@@std@@QEAA@$$QEAV01@@Z;288100;288100;288100;0;1
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAXXZ;??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAXXZ;288100;288100;288100;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cla;288000;288000;288000;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > >(void) __ptr64;287900;287900;287900;0;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::;287900;287900;287900;0;1
??$_Move_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@IEAAX$$QEAV01@@Z;287900;287900;287900;0;1
??0?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(void) __ptr64;287900;287900;287900;0;1
?_Decref@?$_Ptr_base@_N@std@@IEAAXXZ;void __cdecl std::_Ptr_base<bool>::_Decref(void) __ptr64;287900;287900;287900;0;1
?_Umove_if_noexcept1@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Umove_if_noexcept1(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class st;287800;287800;287800;0;1
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;287800;276600;299000;11200;2
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::operator->(void)const __ptr64;287700;287700;287700;0;1
??$construct@UDataPerFile@?A0x120c265a@@AEAU12@@?$_Default_allocator_traits@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@SAXAEAV?$allocator@UDataPerFile@?A0x120c265a@@@1@QEAUDataPerFile@?A0x120c265a@@AEAU34@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct `anonymous namespace'::DataPerFile> >::construct<struct `anonymous namespace'::DataPerFile,struct A0x120c265a::DataPerFile & __ptr64>(class std::allocator<struct `anonymous namespace'::DataPerFile> & __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64 const,struct A0x120c265a::DataPerFile & __ptr64);287700;287700;287700;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFunction@Activities@BuildInsights@Cpp@Microsoft@@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Function,class Microsoft::Cpp::BuildInsights::Activities::Pass1,class Microsoft::Cpp::BuildInsights::Activities::Pass2,class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::Build;287700;287700;287700;0;1
??$toLocalString@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@cxxopts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$QEAV12@@Z;??$toLocalString@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@cxxopts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$QEAV12@@Z;287700;287700;287700;0;1
?_Mask@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@IEBAIXZ;unsigned int __cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Mask(void)const __ptr64;287700;287700;287700;0;1
??_GFilterTimelineAnalyzer@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl FilterTimelineAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;287600;287600;287600;0;1
?_Getal@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Getal(void) __ptr64;287600;287600;287600;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_Li;287600;287600;287600;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::alloca;287550;281500;293600;6050;2
??$_Move_construct_from@V?$standard_value@I@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@V?$standard_value@I@values@cxxopts@@@1@@Z;??$_Move_construct_from@V?$standard_value@I@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@V?$standard_value@I@values@cxxopts@@@1@@Z;287500;287500;287500;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;287400;287400;287400;0;1
??__Einteger_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic initializer for 'integer_pattern''(void);287400;287400;287400;0;1
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z;bool __cdecl std::operator<<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);287300;287300;287300;0;1
?_Getal@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@XZ;class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > const & __ptr64 __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Getal(void)const __ptr64;287200;287200;287200;0;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > >(void) __ptr64;287200;287200;287200;0;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;287200;287200;287200;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,class std::_List_val<stru;287150;274300;300000;12850;2
?bucket_count@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::bucket_count(void)const __ptr64;287100;287100;287100;0;1
?_Buy_nonzero@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Buy_nonzero(unsigned __int64) __ptr64;287100;287100;287100;0;1
?Uint@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NI@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Uint(unsigned int) __ptr64;287100;287100;287100;0;1
?get_default_value@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::get_default_value(void)const __ptr64;287100;287100;287100;0;1
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::operator==(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64)const __ptr64;287066;270000;314200;19397;3
?size@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::size(void)const __ptr64;287000;287000;287000;0;1
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@_K@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;287000;287000;287000;0;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<cha;287000;287000;287000;0;1
??$forward_as_tuple@UFileCompilationData@@@std@@YA?AV?$tuple@$$QEAUFileCompilationData@@@0@$$QEAUFileCompilationData@@@Z;??$forward_as_tuple@UFileCompilationData@@@std@@YA?AV?$tuple@$$QEAUFileCompilationData@@@0@$$QEAUFileCompilationData@@@Z;287000;287000;287000;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<c;286950;224800;349100;62150;2
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __pt;286950;284100;289800;2850;2
??1IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA@XZ;virtual __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::~IAnalyzer(void) __ptr64;286942;253500;338200;28390;7
?WriteStartObject@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NXZ;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteStartObject(void) __ptr64;286900;286900;286900;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::a;286900;286900;286900;0;1
??$forward_as_tuple@UDataPerTemplate@?A0x5cdd232a@@@std@@YA?AV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@0@$$QEAUDataPerTemplate@?A0x5cdd232a@@@Z;??$forward_as_tuple@UDataPerTemplate@?A0x5cdd232a@@@std@@YA?AV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@0@$$QEAUDataPerTemplate@?A0x5cdd232a@@@Z;286800;286800;286800;0;1
?capacity@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::capacity(void)const __ptr64;286800;286800;286800;0;1
??0?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@QEAA@AEBV01@@Z;__cdecl std::shared_ptr<class cxxopts::OptionDetails const >::shared_ptr<class cxxopts::OptionDetails const >(class std::shared_ptr<class cxxopts::OptionDetails const > const & __ptr64) __ptr64;286700;286700;286700;0;1
?bucket@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;286700;286700;286700;0;1
??_G_Root_node@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Root_node::`scalar deleting destructor'(unsigned int) __ptr64;286700;286700;286700;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation,class Microsoft::Cpp::BuildInsights::Activities::Function,class Microsoft::Cpp::BuildInsights::Activities::Pass1,class Microsoft::Cpp::BuildInsights::Activities::Pass2,class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Micros;286700;286700;286700;0;1
??$_Construct_in_place@V?$standard_value@_N@values@cxxopts@@$$V@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@@Z;??$_Construct_in_place@V?$standard_value@_N@values@cxxopts@@$$V@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@@Z;286600;286600;286600;0;1
??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base12@1@@Z;__cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(unsigned int const * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;286600;286600;286600;0;1
??0?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class ;286550;277800;295300;8750;2
??1?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~_Ref_count_obj2<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;286500;286500;286500;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;286500;286500;286500;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::alloca;286500;213800;359200;72700;2
?get_implicit_value@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::get_implicit_value(void)const __ptr64;286500;286500;286500;0;1
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ;struct std::_Container_base12 const * __ptr64 __cdecl std::_Iterator_base12::_Getcont(void)const __ptr64;286478;255600;409600;37393;14
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >::_Allocate(void) __ptr64;286400;286400;286400;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@SA_KAEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::max_size(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> const & __ptr64);286400;286400;286400;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned ;286300;286300;286300;0;1
?_Unchecked_begin@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_begin(void)const __ptr64;286200;286200;286200;0;1
?_Ufill@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAPEAU_Loop_vals_t@2@PEAU32@_KU_Value_init_tag@2@@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Ufill(struct std::_Loop_vals_t * __ptr64,unsigned __int64,struct std::_Value_init_tag) __ptr64;286200;286200;286200;0;1
?_Unchecked_end@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const *;286200;286200;286200;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struc;286100;286100;286100;0;1
?_Total_off@?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_JPEBV?$vector@_NV?$allocator@_N@std@@@2@@Z;__int64 __cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Total_off(class std::vector<bool,class std::allocator<bool> > const * __ptr64)const __ptr64;286100;286100;286100;0;1
?_Umove_if_noexcept@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@00@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Umove_if_noexcept(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64) __ptr64;285933;275200;295500;8328;3
??0argument_incorrect_type@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::argument_incorrect_type::argument_incorrect_type(class cxxopts::argument_incorrect_type const & __ptr64) __ptr64;285900;285900;285900;0;1
??$_Copy_memmove@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@PEAU123@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@PEAU120@00@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Copy_memmove<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64);285800;285800;285800;0;1
??R<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@QEBAXQEAD_KD@Z;void __cdecl <lambda_138c3d7c38c85abb84c7fc7bfe5747b7>::operator()(char * __ptr64 const,unsigned __int64,char)const __ptr64;285700;285700;285700;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pa;285700;285700;285700;0;1
?_Umove_if_noexcept1@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Umove_if_noexcept1(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRe;285700;285700;285700;0;1
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::size(void)const __ptr64;285700;285700;285700;0;1
??_Goption_exists_error@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::option_exists_error::`scalar deleting destructor'(unsigned int) __ptr64;285500;285500;285500;0;1
??$_Move_construct_from@VValue@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@VValue@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV01@@Z;285500;285500;285500;0;1
??1?$_Tidy_guard@V?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> > >::~_Tidy_guard<class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<stru;285200;285200;285200;0;1
??0?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64) __ptr64;285200;285200;285200;0;1
??$_Destroy_range@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@YAXPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@QEAV120@AEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > & __ptr64);285033;240300;364000;56002;3
??_G?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::`scalar deleting destructor'(unsigned int) __ptr64;285000;285000;285000;0;1
??1?$_Tidy_guard@V?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::_Builder<char const * __ptr64,char,class std::regex_traits<char> > >::~_Tidy_guard<class std::_Builder<char const * __ptr64,char,class std::regex_traits<char> > >(void) __ptr64;285000;285000;285000;0;1
??$_Copy_unchecked@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@PEAU123@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAU120@00@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Copy_unchecked<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class s;285000;285000;285000;0;1
??0_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@AEBU012@@Z;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t::_Grp_t(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t const & __ptr64) __ptr64;285000;285000;285000;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int6;285000;221900;348100;63100;2
?Destroy@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@AEAAXXZ;void __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Destroy(void) __ptr64;285000;285000;285000;0;1
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::operator!=(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64)const __ptr64;284900;284900;284900;0;1
??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::end<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);284800;284800;284800;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;284800;235800;333800;49000;2
??$construct@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@$$V@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;??$construct@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@$$V@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;284700;284700;284700;0;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::;284650;277700;291600;6950;2
?_Unchecked_end@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Unchecked_end(void)const __ptr64;284500;284500;284500;0;1
??$forward@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64>(class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64);284500;284500;284500;0;1
??0?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAV01@@Z;284500;284500;284500;0;1
?end@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::end(void) __ptr64;284400;284400;284400;0;1
??$MatchEventStackInMemberFunction@VFileInclusionsAnalyzer@@XAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV23456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVFileInclusionsAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@2@Z@Z;??$MatchEventStackInMemberFunction@VFileInclusionsAnalyzer@@XAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV23456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVFileInclusionsAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@2@Z@Z;284400;284400;284400;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::alloca;284350;273600;295100;10750;2
?_Do_ffnx@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_ND@Z;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_ffnx(char) __ptr64;284300;284300;284300;0;1
?_Unchecked_begin@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;284300;284300;284300;0;1
?_Getal@?$_Vb_val@V?$allocator@_N@std@@@std@@QEAAAEAV?$allocator@I@2@XZ;class std::allocator<unsigned int> & __ptr64 __cdecl std::_Vb_val<class std::allocator<bool> >::_Getal(void) __ptr64;284200;284200;284200;0;1
?capacity@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::capacity(void)const __ptr64;284100;284100;284100;0;1
??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;284100;284100;284100;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,stru;284050;251000;317100;33050;2
?_Get_first@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@2@XZ;class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >,class std::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,1>::_Get_first(void) __ptr64;284000;231900;373500;63569;3
?shared_from_this@?$enable_shared_from_this@VValue@cxxopts@@@std@@QEAA?AV?$shared_ptr@VValue@cxxopts@@@2@XZ;class std::shared_ptr<class cxxopts::Value> __cdecl std::enable_shared_from_this<class cxxopts::Value>::shared_from_this(void) __ptr64;284000;284000;284000;0;1
?_At@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAAEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@I@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_At(unsigned int) __ptr64;283900;283900;283900;0;1
??$_Get_size_of_n@$0IA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<128>(unsigned __int64);283800;283800;283800;0;1
??0KeyValue@cxxopts@@QEAA@$$QEAV01@@Z;??0KeyValue@cxxopts@@QEAA@$$QEAV01@@Z;283800;283800;283800;0;1
??$get@$0A@AEAUProcessThreadRemap@@@std@@YAAEAUProcessThreadRemap@@$$QEAV?$tuple@AEAUProcessThreadRemap@@@0@@Z;??$get@$0A@AEAUProcessThreadRemap@@@std@@YAAEAUProcessThreadRemap@@$$QEAV?$tuple@AEAUProcessThreadRemap@@@0@@Z;283800;283800;283800;0;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;283700;283700;283700;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VOptLBR@Activities@BuildInsights@Cpp@Microsoft@@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Micros;283700;283700;283700;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Rehash_for_1(void) __pt;283600;283600;283600;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > >::size(void)const __ptr64;283600;283600;283600;0;1
??0?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;283550;276300;290800;7250;2
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?;283500;283500;283500;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;283500;283500;283500;0;1
?empty@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_NXZ;bool __cdecl std::vector<bool,class std::allocator<bool> >::empty(void)const __ptr64;283500;283500;283500;0;1
?bucket@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;283500;278400;288600;5100;2
?capacity@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::capacity(void)const __ptr64;283400;283400;283400;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;283400;283400;283400;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VPreLTCGOptRef@Activities@BuildInsights@Cpp@Microsoft@@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildI;283400;283400;283400;0;1
??1?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >::~_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >(void) __ptr64;283300;283300;283300;0;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Range_eraser::_Range_eraser(class std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > & __ptr64,struct std::_Lis;283200;283200;283200;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;283100;283100;283100;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Range_eraser::~_Range_eraser;283100;283100;283100;0;1
??_Gbad_alloc@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::bad_alloc::`scalar deleting destructor'(unsigned int) __ptr64;283094;235900;367100;41705;18
??$_Move_construct_from@VValue@cxxopts@@@?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@VValue@cxxopts@@@1@@Z;??$_Move_construct_from@VValue@cxxopts@@@?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@VValue@cxxopts@@@1@@Z;283000;283000;283000;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;282900;282900;282900;0;1
??0?$tuple@AEB_K@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEB_K@std@@QEAA@$$QEAV01@@Z;282875;275400;297100;8551;4
?size@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::size(void)const __ptr64;282800;260300;323700;28969;3
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z;static int __cdecl std::_Narrow_char_traits<char,int>::compare(char const * __ptr64 const,char const * __ptr64 const,unsigned __int64);282742;243800;392700;49247;7
?_Unchecked_end@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_end(void)const __ptr64;282700;282700;282700;0;1
??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z;??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z;282700;237700;357100;37762;7
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@VActivity@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345;282600;282600;282600;0;1
?IsDouble@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsDouble(void)const __ptr64;282600;282600;282600;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Max_bucket_size(void)const __ptr64;282600;282600;282600;0;1
??1?$_Tidy_guard@V?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > >::~_Tidy_guard<class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > >(void) __ptr64;282500;282500;282500;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;282400;282400;282400;0;1
?_Throw_bad_cast@std@@YAXXZ;void __cdecl std::_Throw_bad_cast(void);282300;257000;318800;20410;7
??0SymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName::SymbolName(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;282200;279700;284700;2500;2
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;282100;282100;282100;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::b;282033;273600;292800;8010;3
??$_Copy_memmove@PEAU_Loop_vals_t@std@@PEAU12@@std@@YAPEAU_Loop_vals_t@0@PEAU10@00@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::_Copy_memmove<struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64>(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64);282000;282000;282000;0;1
??0runtime_error@std@@QEAA@PEBD@Z;__cdecl std::runtime_error::runtime_error(char const * __ptr64) __ptr64;282000;282000;282000;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,str;282000;282000;282000;0;1
??1bad_alloc@std@@UEAA@XZ;virtual __cdecl std::bad_alloc::~bad_alloc(void) __ptr64;281855;179000;1671100;337179;18
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::;281850;201400;362300;80450;2
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::operator==(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64)const __ptr64;281800;281800;281800;0;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,cla;281800;279000;284600;2800;2
??_G?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::`scalar deleting destructor'(unsigned int) __ptr64;281700;281700;281700;0;1
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;281700;281700;281700;0;1
??E?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator++(void) __ptr64;281700;281700;281700;0;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_trai;281700;281700;281700;0;1
?capacity@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::capacity(void)const __ptr64;281600;281600;281600;0;1
??$_Move_construct_from@VOptionDetails@cxxopts@@@?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@VOptionDetails@cxxopts@@@?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEAAX$$QEAV01@@Z;281600;281600;281600;0;1
??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<40>(unsigned __int64);281500;261700;301300;19800;2
?_Unchecked_begin@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Unchecked_begin(void)const __ptr64;281400;281400;281400;0;1
??$_Get_size_of_n@$0FI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<88>(unsigned __int64);281300;277500;285800;3424;3
??0?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >(class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > const & __ptr64) __ptr64;281300;281300;281300;0;1
??1?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<unsigned int> >::~_Uninitialized_backout_al<class std::allocator<unsigned int> >(void) __ptr64;281300;281300;281300;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Unchecked_end(void) __ptr64;281200;281200;281200;0;1
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<32>(unsigned __int64);281200;281200;281200;0;1
?_Unchecked_begin@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::all;281150;277800;284500;3350;2
??$_Copy_memmove@PEAIPEAI@std@@YAPEAIPEAI00@Z;unsigned int * __ptr64 __cdecl std::_Copy_memmove<unsigned int * __ptr64,unsigned int * __ptr64>(unsigned int * __ptr64,unsigned int * __ptr64,unsigned int * __ptr64);281100;281100;281100;0;1
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ;char const * __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const __ptr64;281100;222200;342400;29860;14
??$_Move_construct_from@V?$standard_value@I@values@cxxopts@@@?$_Ptr_base@V?$standard_value@I@values@cxxopts@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@V?$standard_value@I@values@cxxopts@@@?$_Ptr_base@V?$standard_value@I@values@cxxopts@@@std@@IEAAX$$QEAV01@@Z;281000;281000;281000;0;1
??_Gmissing_argument_exception@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::missing_argument_exception::`scalar deleting destructor'(unsigned int) __ptr64;281000;281000;281000;0;1
?_Unchecked_begin@?$list@_KV?$allocator@_K@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > > __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::_Unchecked_begin(void) __ptr64;280900;280900;280900;0;1
??$?0AEB_K$$ZAEAUProcessThreadRemap@@@?$pair@$$CB_KUProcessThreadRemap@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAUProcessThreadRemap@@@1@@Z;??$?0AEB_K$$ZAEAUProcessThreadRemap@@@?$pair@$$CB_KUProcessThreadRemap@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAUProcessThreadRemap@@@1@@Z;280900;280900;280900;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr6;280800;280800;280800;0;1
?_Umove_if_noexcept@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@00@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Umove_if_noexcept(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_con;280700;280700;280700;0;1
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ;__cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >(void) __ptr64;280700;280700;280700;0;1
?_Getal@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Getal(void) __ptr64;280700;280700;280700;0;1
??0?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0>::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equ;280700;280700;280700;0;1
?capacity@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::capacity(void)const __ptr64;280666;244400;325800;33817;3
??_5std@@YAAEAW4_Node_flags@0@AEAW410@W410@@Z;enum std::_Node_flags & __ptr64 __cdecl std::operator|=(enum std::_Node_flags & __ptr64,enum std::_Node_flags);280600;280600;280600;0;1
?_Getal@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEBAAEBV?$allocator@U_Loop_vals_t@std@@@2@XZ;class std::allocator<struct std::_Loop_vals_t> const & __ptr64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Getal(void)const __ptr64;280600;280600;280600;0;1
??$_Set_ptr_rep_and_enable_shared@_N@?$shared_ptr@_N@std@@AEAAXQEA_NQEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<bool>::_Set_ptr_rep_and_enable_shared<bool>(bool * __ptr64 const,class std::_Ref_count_base * __ptr64 const) __ptr64;280600;280600;280600;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >;280500;280500;280500;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VBackEndPass@2345@VFrontEndFile@2345@VTemplateInstantiation@2345@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass,class Microsoft::Cpp::BuildInsights::Activities::BackEndPass,class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation,class Microsoft::Cpp::BuildInsights::Activities::Function,class Microsoft::Cpp::BuildInsights::Activities::Pass1;280500;280500;280500;0;1
?_Unchecked_begin@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_Unchecked_begin(void) __ptr64;280500;280500;280500;0;1
??0?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0>::_Umap_traits<class std::shared_ptr<class cxxopts;280400;280400;280400;0;1
??$destroy@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::destroy<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsig;280400;280400;280400;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(unsigned int * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;280300;280300;280300;0;1
??1?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ;__cdecl std::vector<bool,class std::allocator<bool> >::~vector<bool,class std::allocator<bool> >(void) __ptr64;280300;280300;280300;0;1
?_Tidy@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Tidy(void) __ptr64;280300;280300;280300;0;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class;280150;280000;280300;150;2
??0?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;280100;280100;280100;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::size(void)const __ptr64;280100;271000;289200;9100;2
??1?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::values::standard_value<bool> >::~shared_ptr<class cxxopts::values::standard_value<bool> >(void) __ptr64;280100;280100;280100;0;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<cha;280000;280000;280000;0;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::;279900;279900;279900;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,clas;279850;223900;335800;55950;2
??$addressof@$$CBU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAPEBU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEBU10@@Z;struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const >(struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);279800;279800;279800;0;1
??0?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAA@PEAU_Grp_t@?$_Tgt_state_t@PEBD@1@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64) __ptr64;279800;279800;279800;0;1
??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;279800;279800;279800;0;1
??$forward@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAV10@@Z;279700;279700;279700;0;1
?_Destroy@?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Destroy(void) __ptr64;279700;279700;279700;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_p;279600;279600;279600;0;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Unchecked_end(void) __ptr64;279600;279600;279600;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,clas;279550;268200;290900;11350;2
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z;static bool __cdecl std::_Narrow_char_traits<char,int>::eq_int_type(int const & __ptr64,int const & __ptr64);279542;251400;319000;20032;7
??_G_Node_end_rep@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_end_rep::`scalar deleting destructor'(unsigned int) __ptr64;279500;279500;279500;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >;279450;276300;282600;3150;2
??_Gexception@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::exception::`scalar deleting destructor'(unsigned int) __ptr64;279427;238600;539200;70995;18
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::al;279400;279400;279400;0;1
??0?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVTemplateInstantiationsAnalyzer@@P85@EAAXAEBVSymbolName@SimpleEvents@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVTemplateInstantiationsAnalyzer@@P85@EAAXAEBVSymbolName@SimpleEvents@234@@Z@Z;279400;279400;279400;0;1
??$forward_as_tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@YA?AV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAULocalThreadData@PackedProcessThreadRemapper@@@Z;class std::tuple<struct PackedProcessThreadRemapper::LocalThreadData & __ptr64> __cdecl std::forward_as_tuple<struct PackedProcessThreadRemapper::LocalThreadData & __ptr64>(struct PackedProcessThreadRemapper::LocalThreadData & __ptr64);279300;279300;279300;0;1
?get_default_value@?$abstract_value@I@values@cxxopts@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::values::abstract_value<unsigned int>::get_default_value(void)const __ptr64;279200;279200;279200;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<stru;279175;260600;303400;16753;4
??_Goption_syntax_exception@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::option_syntax_exception::`scalar deleting destructor'(unsigned int) __ptr64;279100;279100;279100;0;1
??$SetAnalysisCallbacks@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YAXPEAUANALYSIS_CALLBACKS_TAG@123@@Z;void __cdecl Microsoft::Cpp::BuildInsights::Internal::SetAnalysisCallbacks<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >(struct Microsoft::Cpp::BuildInsights::ANALYSIS_CALLBACK;279100;279100;279100;0;1
??_G?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::`scalar deleting destructor'(unsigned int) __ptr64;279100;279100;279100;0;1
??$?0V?$vector@_KV?$allocator@_K@std@@@std@@@?$_Tuple_val@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;??$?0V?$vector@_KV?$allocator@_K@std@@@std@@@?$_Tuple_val@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;279000;279000;279000;0;1
?_Add_char_to_class@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXD@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_char_to_class(char) __ptr64;279000;279000;279000;0;1
?capacity@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::capacity(void)const __ptr64;279000;279000;279000;0;1
?_Umove_if_noexcept@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEAAXPEAUDataPerFunction@?A0x5f10505a@@00@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Umove_if_noexcept(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64) __ptr64;279000;279000;279000;0;1
??$_Get_size_of_n@$0GA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<96>(unsigned __int64);279000;268400;289600;10600;2
??$addressof@$$CBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@YAPEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@0@AEBU10@@Z;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const * __ptr64 __cdecl std::addressof<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const >(struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const & __ptr64);278900;278900;278900;0;1
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;278800;278800;278800;0;1
??$EncapsulatePtr@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@MakeStaticGroupImplSupport@Internal@BuildInsights@Cpp@Microsoft@@KA?AV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@1234@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@1234@@Z;static class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > > __cdecl Microsoft::Cpp::BuildInsights::Internal::MakeStaticGroupImplSupport::EncapsulatePtr<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cp;278800;278800;278800;0;1
??Y?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator+=(__int64) __ptr64;278600;278600;278600;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<c;278600;278600;278600;0;1
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_;278500;241700;315300;36800;2
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > const & __ptr64)const __ptr64;278500;278500;278500;0;1
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator==(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64)const __ptr64;278400;278400;278400;0;1
?parse@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBAXXZ;virtual void __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::parse(void)const __ptr64;278400;278400;278400;0;1
?_Umove_if_noexcept@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@00@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Umove_if_noexcept(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnal;278300;278300;278300;0;1
??_G?$_Ref_count_obj2@VOptionDetails@cxxopts@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class cxxopts::OptionDetails>::`scalar deleting destructor'(unsigned int) __ptr64;278300;278300;278300;0;1
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class st;278300;273100;283500;5200;2
?empty@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::empty(void)const __ptr64;278250;275500;281000;2750;2
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VC1DLL@Activities@BuildInsights@Cpp@Microsoft@@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Mic;278200;278200;278200;0;1
??1?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAA@XZ;virtual __cdecl std::codecvt_utf8<wchar_t,1114111,0>::~codecvt_utf8<wchar_t,1114111,0>(void) __ptr64;278200;278200;278200;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >(struct std::_List_node<struct std::pair<class std::basic_string<char,s;278200;278200;278200;0;1
?_Incwref@_Ref_count_base@std@@QEAAXXZ;void __cdecl std::_Ref_count_base::_Incwref(void) __ptr64;278100;278100;278100;0;1
??1exception@std@@UEAA@XZ;virtual __cdecl std::exception::~exception(void) __ptr64;278044;247100;367900;28081;18
?_Getal@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string;278000;278000;278000;0;1
??$?0U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > ><struct std::pair<unsigned __int64 const ,class;278000;278000;278000;0;1
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;278000;278000;278000;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64);277900;277900;277900;0;1
??0range_error@std@@QEAA@AEBV01@@Z;__cdecl std::range_error::range_error(class std::range_error const & __ptr64) __ptr64;277900;277900;277900;0;1
?_Umove_if_noexcept1@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAXPEAV?$sub_match@PEBD@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Umove_if_noexcept1(class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64,struct std::integral_constant<bool,1>) __ptr64;277900;277900;277900;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 const,unsigned __int64) __ptr64;277800;277800;277800;0;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class ;277800;269900;285700;7900;2
??1?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::~_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(void) __ptr64;277800;277800;277800;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;277700;265700;301200;16618;3
?OnTraceInfo@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVTraceInfo@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnTraceInfo(class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64) __ptr64;277700;277700;277700;0;1
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tra;277600;277600;277600;0;1
?_Decref@?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::values::standard_value<bool> >::_Decref(void) __ptr64;277600;277600;277600;0;1
??0?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,clas;277550;272800;282300;4750;2
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>::`scalar deleting destructor'(unsigned int) __ptr64;277500;277500;277500;0;1
?_Getal@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEBAAEBV?$allocator@UDataPerFile@?A0x120c265a@@@2@XZ;class std::allocator<struct `anonymous namespace'::DataPerFile> const & __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Getal(void)const __ptr64;277500;277500;277500;0;1
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAAXXZ;??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAAXXZ;277300;277300;277300;0;1
??$forward_as_tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;??$forward_as_tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;276966;268100;284700;6824;3
?end@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::end(void)const __ptr64;276900;276900;276900;0;1
??$Run@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@;276900;276900;276900;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_Lis;276800;276800;276800;0;1
??$?0$0BA@@?$GenericStringRef@D@rapidjson@@QEAA@AEAY0BA@$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><16>(char const (& __ptr64)[16]) __ptr64;276800;276800;276800;0;1
??$?8VValue@cxxopts@@@std@@YA_NAEBV?$shared_ptr@VValue@cxxopts@@@0@$$T@Z;??$?8VValue@cxxopts@@@std@@YA_NAEBV?$shared_ptr@VValue@cxxopts@@@0@$$T@Z;276800;276800;276800;0;1
??$move@AEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@0@AEAV10@@Z;276750;234100;319400;42650;2
??$?0AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@$$Z$$V@?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@V?$tuple@$$V@1@@Z;??$?0AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@$$Z$$V@?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@V?$tuple@$$V@1@@Z;276700;276700;276700;0;1
??0option_syntax_exception@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::option_syntax_exception::option_syntax_exception(class cxxopts::option_syntax_exception const & __ptr64) __ptr64;276700;276700;276700;0;1
??$addressof@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAPEAU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);276650;213500;339800;63150;2
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<uns;276600;276600;276600;0;1
?_Umove_if_noexcept1@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Umove_if_noexcept1(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompi;276600;276600;276600;0;1
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;276500;276500;276500;0;1
??C?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const * __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::operator->(void)const __ptr64;276500;276500;276500;0;1
??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp;276400;276400;276400;0;1
?max_load_factor@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::max_load_factor(void)const __ptr64;276300;276300;276300;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,class std::_List_val<struct std::_Lis;276200;276200;276200;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Max_bucket_size(void)const __ptr64;276200;276200;276200;0;1
??0?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;276100;276100;276100;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VTopDown@Activities@BuildInsights@Cpp@Microsoft@@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(unsigned int);276100;276100;276100;0;1
??$_Swap_adl@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@0@Z;void __cdecl std::_Swap_adl<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64);276100;276100;276100;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;276100;276100;276100;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Max_bucket_size(void) __ptr64;276100;276100;276100;0;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAAPEAU_Loop_vals_t@2@XZ;struct std::_Loop_vals_t * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >::_Release(void) __ptr64;276100;276100;276100;0;1
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<cla;276000;276000;276000;0;1
?swap@?$shared_ptr@VValue@cxxopts@@@std@@QEAAXAEAV12@@Z;void __cdecl std::shared_ptr<class cxxopts::Value>::swap(class std::shared_ptr<class cxxopts::Value> & __ptr64) __ptr64;276000;276000;276000;0;1
??$_Ucopy@PEBD@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEBD0PEAD@Z;char * __ptr64 __cdecl std::vector<char,class std::allocator<char> >::_Ucopy<char const * __ptr64>(char const * __ptr64,char const * __ptr64,char * __ptr64) __ptr64;275900;275900;275900;0;1
??$forward_as_tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YA?AV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@0@@Z;class std::tuple<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64> __cdecl std::forward_as_tuple<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64);275900;275900;275900;0;1
?_Destroy@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@0@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::_Destroy(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;275900;275900;275900;0;1
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Max_bucket_size(void)const __ptr64;275900;275900;275900;0;1
?_Unchecked_end@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Unchecked_end;275900;275900;275900;0;1
??_G?$pair@$$CB_KVTimelineEntry@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<unsigned __int64 const ,class TimelineEntry>::`scalar deleting destructor'(unsigned int) __ptr64;275800;275800;275800;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,stru;275800;275800;275800;0;1
??1?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::~_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(void) __ptr64;275800;275800;275800;0;1
??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64);275800;275800;275800;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char;275800;275800;275800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVTimelineEntry@@@2@XZ;class std::allocator<class TimelineEntry * __ptr64> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class TimelineEntry * __ptr64>,class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> >,1>::_Get_first(void) __ptr64;275700;249800;301600;25900;2
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >(void) __ptr64;275700;275700;275700;0;1
??1_Clear_guard@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;275600;275600;275600;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0>::operator++(void) __ptr64;275500;235600;315400;39900;2
?__autoclassinit2@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<char,class std::allocator<char> >::__autoclassinit2(unsigned __int64) __ptr64;275500;275500;275500;0;1
??$_Ucopy@PEAD@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEAD00@Z;char * __ptr64 __cdecl std::vector<char,class std::allocator<char> >::_Ucopy<char * __ptr64>(char * __ptr64,char * __ptr64,char * __ptr64) __ptr64;275500;275500;275500;0;1
?_Getal@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@XZ;class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > & __ptr64 __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Getal(void) __ptr64;275400;275400;275400;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,;275400;275400;275400;0;1
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > & __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<;275400;275400;275400;0;1
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@XZ;class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > * __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct;275400;275400;275400;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::size(void)const __ptr64;275350;260700;290000;14650;2
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ;class std::allocator<char> const & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Getal(void)const __ptr64;275340;240500;366300;37900;15
?_Umove_if_noexcept@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@00@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::_Umove_if_noexcept(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allo;275300;275300;275300;0;1
??$_Set_ptr_rep_and_enable_shared@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Set_ptr_rep_and_enable_shared<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,class std::_Ref_count_base * __ptr64 const) __ptr64;275100;275100;275100;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64,class std::;275100;275100;275100;0;1
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;275000;275000;275000;0;1
??0?$_Tgt_state_t@PEBD@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<char const * __ptr64>::_Tgt_state_t<char const * __ptr64>(void) __ptr64;275000;275000;275000;0;1
?deallocate@?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >::deallocate(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 const,unsigned __int64) __ptr64;275000;275000;275000;0;1
??$Run@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@Build;275000;275000;275000;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VFrontEndFile@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVFrontEndFile@Activities@234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microso;274900;274900;274900;0;1
?empty@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBA_NXZ;bool __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::empty(void)const __ptr64;274900;274900;274900;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<cl;274900;274900;274900;0;1
??0?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@$$QEAV01@@Z;274700;274700;274700;0;1
?bucket@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;274700;274700;274700;0;1
??__Fs_defaultOutputPathFileCompilations@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultOutputPathFileCompilations''(void);274700;274700;274700;0;1
??_G?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct s;274700;274700;274700;0;1
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::allocate(unsigned __int64) __ptr64;274700;274700;274700;0;1
?_Unchecked_end@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_end(void) __ptr64;274600;270200;279000;4400;2
??0_Range_eraser@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEAA@AEAV?$list@_KV?$allocator@_K@std@@@2@QEAU?$_List_node@_KPEAX@2@@Z;__cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Range_eraser::_Range_eraser(class std::list<unsigned __int64,class std::allocator<unsigned __int64> > & __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const) __ptr64;274600;274600;274600;0;1
??$construct@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAV1234@@?$_Default_allocator_traits@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@1@QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@$$QEAPEAV3456@@Z;??$construct@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAV1234@@?$_Default_allocator_traits@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@1@QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@$$QEAPEAV3456@@Z;274600;274600;274600;0;1
?_Getal@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEBAAEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> const & __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class;274500;274500;274500;0;1
?_Getal@?$list@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@U?$_List_node@_KPEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > const & __ptr64 __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::_Getal(void)const __ptr64;274400;274400;274400;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<cha;274300;246600;302000;27700;2
??0?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;274300;274300;274300;0;1
??1?$unordered_map@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~unordered_map<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned _;274250;213400;335100;60850;2
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::__autoclassinit2(unsigned __int64) __ptr64;274150;219600;328700;54550;2
??$construct@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;??$construct@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@st;274100;274100;274100;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Rehash_for_1(void) __ptr64;274100;274100;274100;0;1
??$?CVOptionDetails@cxxopts@@$0A@@?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEBAPEAVOptionDetails@cxxopts@@XZ;class cxxopts::OptionDetails * __ptr64 __cdecl std::shared_ptr<class cxxopts::OptionDetails>::operator-><class cxxopts::OptionDetails,0>(void)const __ptr64;274100;274100;274100;0;1
?allocate@?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@_K@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >::allocate(unsigned __int64) __ptr64;274100;252800;295400;21300;2
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class ;274050;271900;276200;2150;2
??R?$_Conditionally_enabled_hash@_K$00@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Conditionally_enabled_hash<unsigned __int64,1>::operator()(unsigned __int64 const & __ptr64)const __ptr64;274028;213900;431900;66868;7
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@AEAV10@@Z;274000;274000;274000;0;1
??_Goption_not_exists_exception@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::option_not_exists_exception::`scalar deleting destructor'(unsigned int) __ptr64;274000;274000;274000;0;1
??$_Destroy_in_place@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@YAXAEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@0@@Z;void __cdecl std::_Destroy_in_place<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<;274000;274000;274000;0;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > > const & __ptr64)const __ptr64;274000;274000;274000;0;1
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z;void __cdecl std::_String_val<struct std::_Simple_types<char> >::_Check_offset(unsigned __int64)const __ptr64;273933;250400;297800;15456;6
??_6std@@YAAEAW4_Node_flags@0@AEAW410@W410@@Z;enum std::_Node_flags & __ptr64 __cdecl std::operator^=(enum std::_Node_flags & __ptr64,enum std::_Node_flags);273900;273900;273900;0;1
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std:;273900;261300;286500;12600;2
??0?$list@_KV?$allocator@_K@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z;__cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::list<unsigned __int64,class std::allocator<unsigned __int64> >(class std::allocator<unsigned __int64> const & __ptr64) __ptr64;273800;273800;273800;0;1
?_Destroy@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Destroy(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64) __ptr64;273800;273800;273800;0;1
??__ELQUOTE@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic initializer for 'LQUOTE''(void);273800;273800;273800;0;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Range_eraser::_Bump_erased(void) __ptr64;273700;273700;273700;0;1
??1?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::~_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >(void) __ptr64;273700;273700;273700;0;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@XZ;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >::_Unwrapped(void)const __ptr64;273700;273700;273700;0;1
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int) __ptr64;273433;236800;343900;35414;6
??_GValue@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::Value::`scalar deleting destructor'(unsigned int) __ptr64;273400;273400;273400;0;1
?_Umove_if_noexcept1@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Umove_if_noexcept1(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,struct std::integral_constant<bool,1>) __ptr64;273400;273400;273400;0;1
??_G?$_Ref_count_obj2@V?$standard_value@I@values@cxxopts@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<unsigned int> >::`scalar deleting destructor'(unsigned int) __ptr64;273400;273400;273400;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;273400;273400;273400;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;273300;264800;281800;8500;2
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Range_eraser::_Range_eraser(class std::list<struct std::pair<unsigned __int64 const ,class std::vector<uns;273300;273300;273300;0;1
??_G?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::`scalar deleting destructor'(unsigned int) __ptr64;273300;273300;273300;0;1
??_G?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>::`scalar deleting destructor'(unsigned int) __ptr64;273300;273300;273300;0;1
??0?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0>::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std;273100;273100;273100;0;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > ;273000;273000;273000;0;1
??$_Swap_adl@PEAV_Node_base@std@@@std@@YAXAEAPEAV_Node_base@0@0@Z;void __cdecl std::_Swap_adl<class std::_Node_base * __ptr64>(class std::_Node_base * __ptr64 & __ptr64,class std::_Node_base * __ptr64 & __ptr64);272900;272900;272900;0;1
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > & __ptr64 __cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000000> >::operator+=(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64) __ptr64;272900;250900;296000;18428;3
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator==(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64)const __ptr64;272900;272900;272900;0;1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const * __ptr64 const) __ptr64;272800;272800;272800;0;1
??_GOptionDetails@cxxopts@@QEAAPEAXI@Z;void * __ptr64 __cdecl cxxopts::OptionDetails::`scalar deleting destructor'(unsigned int) __ptr64;272700;272700;272700;0;1
??_G?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >::`scalar deleting destructor'(unsigned int) __ptr64;272700;272700;272700;0;1
??$?0V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >(class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > const & __ptr64) __ptr64;272700;272700;272700;0;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > const & __ptr64)const __ptr64;272650;264800;280500;7850;2
??B?$GenericStringRef@D@rapidjson@@QEBAPEBDXZ;__cdecl rapidjson::GenericStringRef<char>::operator char const * __ptr64(void)const __ptr64;272600;272600;272600;0;1
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Getal(void) __ptr64;272600;272600;272600;0;1
??$_Refancy@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@$0A@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@PEAU120@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Refancy<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,0>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64);272500;272500;272500;0;1
?parse@?$abstract_value@I@values@cxxopts@@UEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;virtual void __cdecl cxxopts::values::abstract_value<unsigned int>::parse(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;272500;272500;272500;0;1
??1OptionDetails@cxxopts@@QEAA@XZ;__cdecl cxxopts::OptionDetails::~OptionDetails(void) __ptr64;272500;272500;272500;0;1
?bucket@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;272300;272300;272300;0;1
??B?$shared_ptr@_N@std@@QEBA_NXZ;__cdecl std::shared_ptr<bool>::operator bool(void)const __ptr64;272300;272300;272300;0;1
??$_Ucopy@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAPEAU_Grp_t@?$_Tgt_state_t@PEBD@1@PEAU231@00@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Ucopy<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64) __ptr64;272300;272300;272300;0;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >(void) __ptr64;272300;272300;272300;0;1
?max@?$numeric_limits@_J@std@@SA_JXZ;static __int64 __cdecl std::numeric_limits<__int64>::max(void);272277;204400;674000;122060;18
?_Move_construct@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Move_construct(class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > & __ptr64,struct std::integral_constant<bool,1>) __ptr64;272233;252200;303000;22084;3
?_Unchecked_begin@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Unchecked_begin(void) __ptr64;272200;272200;272200;0;1
??$forward@V?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YA$$QEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAV10@@Z;??$forward@V?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YA$$QEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAV10@@Z;272200;272200;272200;0;1
??$move@AEAV?$tuple@AEAUProcessThreadRemap@@@std@@@std@@YA$$QEAV?$tuple@AEAUProcessThreadRemap@@@0@AEAV10@@Z;??$move@AEAV?$tuple@AEAUProcessThreadRemap@@@std@@@std@@YA$$QEAV?$tuple@AEAUProcessThreadRemap@@@0@AEAV10@@Z;272200;272200;272200;0;1
?get_implicit_value@?$abstract_value@I@values@cxxopts@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::values::abstract_value<unsigned int>::get_implicit_value(void)const __ptr64;272100;272100;272100;0;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,c;272050;231300;312800;40750;2
?use_count@?$_Ptr_base@VValue@cxxopts@@@std@@QEBAJXZ;long __cdecl std::_Ptr_base<class cxxopts::Value>::use_count(void)const __ptr64;272000;272000;272000;0;1
??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator=(class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;271900;271900;271900;0;1
??1?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::Value const >::~shared_ptr<class cxxopts::Value const >(void) __ptr64;271900;271900;271900;0;1
??1?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;271800;271800;271800;0;1
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const * __ptr64 __cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::operator->(void)const __ptr64;271800;271800;271800;0;1
??$?0PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> const & __ptr64) __ptr64;271800;271800;271800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$sub_match@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@PEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$sub_match@PEBD@std@@@2@XZ;class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::sub_match<char const * __ptr64> >,class std::_Vector_val<struct std::_Simple_types<class std::sub_match<char const * __ptr64> > >,1>::_Get_first(void) __ptr64;271800;271800;271800;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > >::size(void)const __ptr64;271800;271800;271800;0;1
wmemcpy;wmemcpy;271750;252800;290700;18950;2
?_Getal@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBAAEBV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> const & __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Getal(void)const __ptr64;271700;271700;271700;0;1
??$destroy@VKeyValue@cxxopts@@@?$_Default_allocator_traits@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@SAXAEAV?$allocator@VKeyValue@cxxopts@@@1@QEAVKeyValue@cxxopts@@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class cxxopts::KeyValue> >::destroy<class cxxopts::KeyValue>(class std::allocator<class cxxopts::KeyValue> & __ptr64,class cxxopts::KeyValue * __ptr64 const);271700;271700;271700;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<class std::basi;271700;229400;314000;42300;2
??$_Get_size_of_n@$0LI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<184>(unsigned __int64);271600;271600;271600;0;1
??$_Destroy_in_place@V?$standard_value@_N@values@cxxopts@@@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@@Z;void __cdecl std::_Destroy_in_place<class cxxopts::values::standard_value<bool> >(class cxxopts::values::standard_value<bool> & __ptr64);271600;271600;271600;0;1
?mark_count@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEBAIXZ;unsigned int __cdecl std::basic_regex<char,class std::regex_traits<char> >::mark_count(void)const __ptr64;271600;271600;271600;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;271500;271500;271500;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Max_bucket_size(void)const __ptr64;271500;271500;271500;0;1
??Y?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator+=(__int64) __ptr64;271500;271500;271500;0;1
??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ;__cdecl std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;271500;271500;271500;0;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@SAPEAU?$pair@$$CB_KUProcessThreadRemap@@@2@AEAU32@@Z;static struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> & __ptr64);271400;271400;271400;0;1
?deallocate@?$allocator@U_Loop_vals_t@std@@@std@@QEAAXQEAU_Loop_vals_t@2@_K@Z;void __cdecl std::allocator<struct std::_Loop_vals_t>::deallocate(struct std::_Loop_vals_t * __ptr64 const,unsigned __int64) __ptr64;271400;271400;271400;0;1
??$_Get_size_of_n@$0FA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<80>(unsigned __int64);271400;271400;271400;0;1
??0option_not_exists_exception@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::option_not_exists_exception::option_not_exists_exception(class cxxopts::option_not_exists_exception const & __ptr64) __ptr64;271400;271400;271400;0;1
?_Decref@?$_Ptr_base@$$CBVOptionDetails@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::OptionDetails const >::_Decref(void) __ptr64;271300;271300;271300;0;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> ><struct std::pair<class std::basic_string<char,struct std::char_traits<char>,;271300;271300;271300;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;271300;271300;271300;0;1
??$forward_as_tuple@PEBD@std@@YA?AV?$tuple@$$QEAPEBD@0@$$QEAPEBD@Z;??$forward_as_tuple@PEBD@std@@YA?AV?$tuple@$$QEAPEBD@0@$$QEAPEBD@Z;271200;265400;277000;5800;2
??$exchange@PEAU?$_List_node@_KPEAX@std@@$$T@std@@YAPEAU?$_List_node@_KPEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@_KPEAX@std@@$$T@std@@YAPEAU?$_List_node@_KPEAX@0@AEAPEAU10@$$QEA$$T@Z;271200;271200;271200;0;1
??1?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@QEAA@XZ;__cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::~_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>(void) __ptr64;271200;271200;271200;0;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;__cdecl std::_Tuple_val<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>::_Tuple_val<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;271150;215800;383800;66684;4
?_Copy_assign@?$vector@_NV?$allocator@_N@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z;void __cdecl std::vector<bool,class std::allocator<bool> >::_Copy_assign(class std::vector<bool,class std::allocator<bool> > const & __ptr64,struct std::integral_constant<bool,0>) __ptr64;271100;271100;271100;0;1
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;271100;271100;271100;0;1
??1?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFile> >::~_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFile> >(void) __ptr64;271100;271100;271100;0;1
??1?$_Ref_count_obj2@_N@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<bool>::~_Ref_count_obj2<bool>(void) __ptr64;271000;271000;271000;0;1
??$Run@VInvocation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VInvocation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@;271000;271000;271000;0;1
??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z;char * __ptr64 __cdecl std::_Copy_memmove<char * __ptr64,char * __ptr64>(char * __ptr64,char * __ptr64,char * __ptr64);270900;270900;270900;0;1
??_GHelpOptionDetails@cxxopts@@QEAAPEAXI@Z;void * __ptr64 __cdecl cxxopts::HelpOptionDetails::`scalar deleting destructor'(unsigned int) __ptr64;270900;270900;270900;0;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CB_KUProcessThreadRemap@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::operator->(void)const __ptr64;270800;270800;270800;0;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;270800;270800;270800;0;1
??$construct@PEAVTimelineEntry@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVTimelineEntry@@@std@@@std@@SAXAEAV?$allocator@PEAVTimelineEntry@@@1@QEAPEAVTimelineEntry@@AEBQEAV3@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class TimelineEntry * __ptr64> >::construct<class TimelineEntry * __ptr64,class TimelineEntry * __ptr64 const & __ptr64>(class std::allocator<class TimelineEntry * __ptr64> & __ptr64,class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 const & __ptr64);270800;269200;272400;1600;2
?empty@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEBA_NXZ;bool __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::empty(void)const __ptr64;270750;268900;272600;1850;2
??$move@AEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YA$$QEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAU10@@Z;??$move@AEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YA$$QEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAU10@@Z;270700;270700;270700;0;1
?_Unchecked_begin@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Unchecked_begin(void) __ptr64;270700;270700;270700;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRe;270600;270600;270600;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@SA_KAEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::max_size(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> const & __ptr64);270600;270600;270600;0;1
??_GIAnalyzer@BuildInsights@Cpp@Microsoft@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;270585;244800;371500;42261;7
?_Umove_if_noexcept1@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Umove_if_noexcept1(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,struct std::integral_constant<bool,1>) __ptr64;270500;254700;279700;11222;3
?_Getal@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAAEAV?$allocator@PEAVTimelineEntry@@@2@XZ;class std::allocator<class TimelineEntry * __ptr64> & __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Getal(void) __ptr64;270500;265400;275600;5100;2
?_Release@?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAAPEAIXZ;unsigned int * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<unsigned int> >::_Release(void) __ptr64;270400;270400;270400;0;1
??1?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::OptionDetails>::~shared_ptr<class cxxopts::OptionDetails>(void) __ptr64;270400;270400;270400;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;270400;270400;270400;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVTimelineEntry@@@2@XZ;class std::allocator<class TimelineEntry * __ptr64> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class TimelineEntry * __ptr64>,class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> >,1>::_Get_first(void)const __ptr64;270350;233100;307600;37250;2
??$exchange@PEAV_Node_assert@std@@PEAV12@@std@@YAPEAV_Node_assert@0@AEAPEAV10@$$QEAPEAV10@@Z;??$exchange@PEAV_Node_assert@std@@PEAV12@@std@@YAPEAV_Node_assert@0@AEAPEAV10@$$QEAPEAV10@@Z;270300;270300;270300;0;1
?_Getal@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEBAAEBV?$allocator@VKeyValue@cxxopts@@@2@XZ;class std::allocator<class cxxopts::KeyValue> const & __ptr64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Getal(void)const __ptr64;270300;270300;270300;0;1
?_Unchecked_begin@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Unchecked_begin(void) __ptr64;270200;270200;270200;0;1
?_HexDigits@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXH@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_HexDigits(int) __ptr64;270200;270200;270200;0;1
??0OptionSpecException@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::OptionSpecException::OptionSpecException(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;270200;270200;270200;0;1
??$forward_as_tuple@AEAVTimelineEntry@@@std@@YA?AV?$tuple@AEAVTimelineEntry@@@0@AEAVTimelineEntry@@@Z;class std::tuple<class TimelineEntry & __ptr64> __cdecl std::forward_as_tuple<class TimelineEntry & __ptr64>(class TimelineEntry & __ptr64);270100;270100;270100;0;1
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@P;270050;258500;281600;11550;2
??1?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;270000;269600;270400;400;2
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > const;270000;270000;270000;0;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __;270000;270000;270000;0;1
?_Umove_if_noexcept@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEAAXPEAUDataPerFile@?A0x120c265a@@00@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Umove_if_noexcept(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64) __ptr64;269900;269900;269900;0;1
?resize@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::resize(unsigned __int64) __ptr64;269900;269900;269900;0;1
??0?$shared_ptr@VValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::Value>::shared_ptr<class cxxopts::Value>(void) __ptr64;269900;269900;269900;0;1
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::~_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >(void) __ptr64;269800;269800;269800;0;1
??$construct@U_Loop_vals_t@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@SAXAEAV?$allocator@U_Loop_vals_t@std@@@1@QEAU_Loop_vals_t@1@@Z;??$construct@U_Loop_vals_t@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@SAXAEAV?$allocator@U_Loop_vals_t@std@@@1@QEAU_Loop_vals_t@1@@Z;269700;269700;269700;0;1
?__autoclassinit2@?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>::__autoclassinit2(unsigned __int64) __ptr64;269700;269700;269700;0;1
??1?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::~_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >(void) __ptr64;269600;269600;269600;0;1
??$construct@UDataPerFile@?A0x120c265a@@U12@@?$_Default_allocator_traits@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@SAXAEAV?$allocator@UDataPerFile@?A0x120c265a@@@1@QEAUDataPerFile@?A0x120c265a@@$$QEAU34@@Z;??$construct@UDataPerFile@?A0x120c265a@@U12@@?$_Default_allocator_traits@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@SAXAEAV?$allocator@UDataPerFile@?A0x120c265a@@@1@QEAUDataPerFile@?A0x120c265a@@$$QEAU34@@Z;269600;269600;269600;0;1
?_Ceiling_of_log_2@std@@YAK_K@Z;unsigned long __cdecl std::_Ceiling_of_log_2(unsigned __int64);269481;237800;318900;24400;11
?_Getal@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > ;269450;254100;284800;15350;2
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::all;269300;269300;269300;0;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64>(;269100;269100;269100;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,stru;269000;269000;269000;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;269000;269000;269000;0;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;269000;269000;269000;0;1
?swap@?$weak_ptr@VValue@cxxopts@@@std@@QEAAXAEAV12@@Z;void __cdecl std::weak_ptr<class cxxopts::Value>::swap(class std::weak_ptr<class cxxopts::Value> & __ptr64) __ptr64;269000;269000;269000;0;1
?OnStartActivity@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack cons;269000;269000;269000;0;1
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64) __ptr64;269000;269000;269000;0;1
??0bad_cast@std@@QEAA@AEBV01@@Z;__cdecl std::bad_cast::bad_cast(class std::bad_cast const & __ptr64) __ptr64;268957;238300;302900;23728;7
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,s;268900;268900;268900;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VC2DLL@Activities@BuildInsights@Cpp@Microsoft@@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(;268900;268900;268900;0;1
??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<unsigned int> >::_Vector_val<struct std::_Simple_types<unsigned int> >(void) __ptr64;268800;268800;268800;0;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >(void) __ptr64;268600;268600;268600;0;1
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@$$QEAV01@@Z;268600;268600;268600;0;1
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVActivity@Activities@234@1@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVActivity@Activities@234@1@Z@Z;268600;268600;268600;0;1
??0missing_argument_exception@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::missing_argument_exception::missing_argument_exception(class cxxopts::missing_argument_exception const & __ptr64) __ptr64;268600;268600;268600;0;1
?swap@?$shared_ptr@_N@std@@QEAAXAEAV12@@Z;void __cdecl std::shared_ptr<bool>::swap(class std::shared_ptr<bool> & __ptr64) __ptr64;268500;268500;268500;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndFile@2345@VTemplateInstantiation@2345@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::BackEndPass,class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation,class Microsoft::Cpp::BuildInsights::Activities::Function,class Microsoft::Cpp::BuildInsights::Activities::Pass1,class Microsoft::Cpp::BuildInsights::Activities::Pass2,class ;268500;268500;268500;0;1
?_Getal@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Getal(void)const __ptr64;268500;268500;268500;0;1
??$_Fnv1a_append_value@_K@std@@YA_K_KAEB_K@Z;unsigned __int64 __cdecl std::_Fnv1a_append_value<unsigned __int64>(unsigned __int64,unsigned __int64 const & __ptr64);268471;234100;373700;45286;7
?_Umove_if_noexcept@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAXPEAUHelpOptionDetails@cxxopts@@00@Z;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Umove_if_noexcept(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64) __ptr64;268400;268400;268400;0;1
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z;__cdecl std::_Container_proxy::_Container_proxy(struct std::_Container_base12 * __ptr64) __ptr64;268250;223900;411900;46659;18
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;268200;268200;268200;0;1
??1?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@XZ;__cdecl rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::~GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(void) __ptr64;268200;268200;268200;0;1
?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Umove(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;268200;268200;268200;0;1
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<cl;268150;215000;321300;53150;2
??$addressof@$$CBV?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@@std@@YAPEBV?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@0@AEBV10@@Z;class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const * __ptr64 __cdecl std::addressof<class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const >(class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const &;268100;268100;268100;0;1
?OnEndAnalysis@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;268100;268100;268100;0;1
??$_Destroy_range@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@YAXPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAV12345@AEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 const,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::;268100;268100;268100;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRe;268100;268100;268100;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<stru;268000;239900;292600;22692;4
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,clas;268000;268000;268000;0;1
?_Move_construct@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Move_construct(class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > & __ptr64,struct std::integral_constant<bool,1>) __ptr64;267900;267900;267900;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_it;267900;264600;271200;3300;2
??$?0V?$allocator@VKeyValue@cxxopts@@@std@@$$V@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@VKeyValue@cxxopts@@@1@@Z;??$?0V?$allocator@VKeyValue@cxxopts@@@std@@$$V@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@VKeyValue@cxxopts@@@1@@Z;267800;267800;267800;0;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@AEAU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> * __ptr64>::pointer_to(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> & __ptr64);267800;267800;267800;0;1
??Iregex_constants@std@@YA?AW4match_flag_type@01@W4201@0@Z;enum std::regex_constants::match_flag_type __cdecl std::regex_constants::operator&(enum std::regex_constants::match_flag_type,enum std::regex_constants::match_flag_type);267800;267800;267800;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>(void) __ptr64;267700;267700;267700;0;1
?_Decwref@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Decwref(void) __ptr64;267700;267700;267700;0;1
?_Getal@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAAEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> & __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Getal(void) __ptr64;267600;267600;267600;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > ;267600;267600;267600;0;1
??$move@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YA$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@AEAPEBU10@@Z;??$move@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YA$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@AEAPEBU10@@Z;267600;267600;267600;0;1
?Sign@Double@internal@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::internal::Double::Sign(void)const __ptr64;267600;267600;267600;0;1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const * __ptr64 const) __ptr64;267500;267500;267500;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;267500;267500;267500;0;1
?push_back@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAX$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@@Z;?push_back@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAX$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@@Z;267500;267500;267500;0;1
?_Umove@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@PEAPEBU32@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cons;267500;267500;267500;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;267400;267400;267400;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<;267400;267400;267400;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$sub_match@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@PEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$sub_match@PEBD@std@@@2@XZ;class std::allocator<class std::sub_match<char const * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::sub_match<char const * __ptr64> >,class std::_Vector_val<struct std::_Simple_types<class std::sub_match<char const * __ptr64> > >,1>::_Get_first(void)const __ptr64;267200;267200;267200;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::c;267150;254600;279700;12550;2
?_Umove_if_noexcept1@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Umove_if_noexcept1(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64,unsigned __int64 * __ptr64,struct std::integral_constant<bool,1>) __ptr64;267000;267000;267000;0;1
??$_Ucopy@PEAI@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEAI00@Z;unsigned int * __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Ucopy<unsigned int * __ptr64>(unsigned int * __ptr64,unsigned int * __ptr64,unsigned int * __ptr64) __ptr64;267000;267000;267000;0;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Rehash_for_1(void) __ptr64;267000;267000;267000;0;1
??C?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CB_KUProcessThreadRemap@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> const * __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::operator->(void)const __ptr64;266800;266800;266800;0;1
??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@12;266800;266800;266800;0;1
??$_Get_unwrapped@AEBQEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YA@AEBQEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;__cdecl std::_Get_unwrapped<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const & __ptr64>(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const & __ptr64);266700;266700;266700;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;266700;266700;266700;0;1
??$Reserve@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Reserve<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level>(unsigned __int64) __ptr64;266700;266700;266700;0;1
??0OptionParseException@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::OptionParseException::OptionParseException(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;266700;266700;266700;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,class std::_List_;266650;249400;283900;17250;2
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,1>::_Get_first(void)const __ptr64;266600;266600;266600;0;1
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z;struct std::_Container_proxy * __ptr64 __cdecl std::allocator<struct std::_Container_proxy>::allocate(unsigned __int64) __ptr64;266577;227900;359800;32854;18
??$_Ucopy@PEAPEAVTimelineEntry@@@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAPEAPEAVTimelineEntry@@PEAPEAV2@00@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Ucopy<class TimelineEntry * __ptr64 * __ptr64>(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64) __ptr64;266500;266500;266500;0;1
??$_Set_ptr_rep_and_enable_shared@I@?$shared_ptr@I@std@@AEAAXQEAIQEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<unsigned int>::_Set_ptr_rep_and_enable_shared<unsigned int>(unsigned int * __ptr64 const,class std::_Ref_count_base * __ptr64 const) __ptr64;266500;266500;266500;0;1
??$_Move_construct_from@I@?$_Ptr_base@I@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@I@?$_Ptr_base@I@std@@IEAAX$$QEAV01@@Z;266500;266500;266500;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;266400;266400;266400;0;1
??$forward_as_tuple@AEAUProcessThreadRemap@@@std@@YA?AV?$tuple@AEAUProcessThreadRemap@@@0@AEAUProcessThreadRemap@@@Z;class std::tuple<struct ProcessThreadRemap & __ptr64> __cdecl std::forward_as_tuple<struct ProcessThreadRemap & __ptr64>(struct ProcessThreadRemap & __ptr64);266400;266400;266400;0;1
??_GFileInclusionsAnalyzer@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl FileInclusionsAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;266300;266300;266300;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > const & __ptr64) __ptr64;266200;266200;266200;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >(struct std::_List_node<struct std::pair<class std::basic_s;266200;266200;266200;0;1
?OnStartActivity@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;266171;220600;295000;24335;7
?IsInt@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsInt(void)const __ptr64;266100;266100;266100;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;266100;266100;266100;0;1
?capacity@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::capacity(void)const __ptr64;266100;266100;266100;0;1
??$_Get_size_of_n@$0EA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<64>(unsigned __int64);266050;250400;281700;15650;2
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::max_size(class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<ch;266000;266000;266000;0;1
?_Umove_if_noexcept1@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Umove_if_noexcept1(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_co;266000;266000;266000;0;1
??_G_Node_assert@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_assert::`scalar deleting destructor'(unsigned int) __ptr64;266000;266000;266000;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineE;265900;265900;265900;0;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsig;265900;265900;265900;0;1
??$get@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::get<0,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);265900;265900;265900;0;1
??1?$shared_ptr@VValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::Value>::~shared_ptr<class cxxopts::Value>(void) __ptr64;265800;265800;265800;0;1
??1?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::~_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct;265800;256400;275200;9400;2
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;265800;231500;311600;33696;3
??$iter_swap@PEAUDataPerFile@?A0x120c265a@@PEAU12@@std@@YAXPEAUDataPerFile@?A0x120c265a@@0@Z;void __cdecl std::iter_swap<struct `anonymous namespace'::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64>(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64);265700;265700;265700;0;1
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;265700;265700;265700;0;1
?WriteEndArray@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NXZ;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteEndArray(void) __ptr64;265700;265700;265700;0;1
??0?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0>::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0>(class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int6;265700;265700;265700;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64) __ptr64;265600;265600;265600;0;1
??1?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFunction> >::~_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFunction> >(void) __ptr64;265600;265600;265600;0;1
?IsString@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsString(void)const __ptr64;265600;265600;265600;0;1
?Null@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NXZ;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Null(void) __ptr64;265400;265400;265400;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;265350;259000;271700;6350;2
??$move@AEAV?$tuple@AEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$tuple@AEAVTimelineEntry@@@0@AEAV10@@Z;??$move@AEAV?$tuple@AEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$tuple@AEAVTimelineEntry@@@0@AEAV10@@Z;265300;265300;265300;0;1
??$get@$0A@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@YA$$QEAUDataPerTemplate@?A0x5cdd232a@@$$QEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@0@@Z;??$get@$0A@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@YA$$QEAUDataPerTemplate@?A0x5cdd232a@@$$QEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@0@@Z;265100;265100;265100;0;1
?_Destroy@?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Destroy(void) __ptr64;265100;265100;265100;0;1
?_Umove@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEAAPEAUDataPerFunction@?A0x5f10505a@@PEAU34@00@Z;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Umove(struct A0x5f10505a::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64) __ptr64;265100;265100;265100;0;1
?data@?$vector@IV?$allocator@I@std@@@std@@QEAAPEAIXZ;unsigned int * __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::data(void) __ptr64;265100;265100;265100;0;1
??_Gbad_weak_ptr@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::bad_weak_ptr::`scalar deleting destructor'(unsigned int) __ptr64;265100;265100;265100;0;1
??_GBuildTimelineAnalyzer@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl BuildTimelineAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;265000;265000;265000;0;1
?_Getal@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAAEAV?$allocator@V?$sub_match@PEBD@std@@@2@XZ;class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Getal(void) __ptr64;265000;265000;265000;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;264950;260000;269900;4950;2
??1argument_incorrect_type@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::argument_incorrect_type::~argument_incorrect_type(void) __ptr64;264900;264900;264900;0;1
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >(struct std::_Tree_node<struct std::pair<class ;264900;264900;264900;0;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct ;264900;264900;264900;0;1
??_GOptionParseException@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::OptionParseException::`scalar deleting destructor'(unsigned int) __ptr64;264900;264900;264900;0;1
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const __ptr64;264838;215300;390900;41811;13
??4?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::operator=(class std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;264800;264800;264800;0;1
??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;264800;264800;264800;0;1
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic;264800;264800;264800;0;1
?allocate@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QEAAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@_K@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::allocate(unsigned __int64) __ptr64;264700;264700;264700;0;1
?_Unchecked_begin@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEBAPEBUHelpOptionDetails@cxxopts@@XZ;struct cxxopts::HelpOptionDetails const * __ptr64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Unchecked_begin(void)const __ptr64;264700;264700;264700;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;264600;264600;264600;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;264600;264600;264600;0;1
?Take@?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@QEAADXZ;char __cdecl rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >::Take(void) __ptr64;264600;264600;264600;0;1
?_Getal@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBAAEBV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > const & __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Getal(void)const __ptr64;264500;264500;264500;0;1
??0_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@$$QEAU012@@Z;??0_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@$$QEAU012@@Z;264500;264500;264500;0;1
??$destroy@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::destroy<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >(class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > & __ptr64,class std::sub_match<class std::_String_co;264500;264500;264500;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,s;264450;260300;268600;4150;2
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,cla;264400;264400;264400;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Max_bucket_size(void) __ptr64;264400;264400;264400;0;1
?_Umove@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAPEAV3456@00@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Umove(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64) __ptr64;264400;264400;264400;0;1
??1?$shared_ptr@_N@std@@QEAA@XZ;__cdecl std::shared_ptr<bool>::~shared_ptr<bool>(void) __ptr64;264300;264300;264300;0;1
??0?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >(class std::allocator;264300;264300;264300;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 & __ptr64);264300;264300;264300;0;1
?IsUint@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsUint(void)const __ptr64;264300;264300;264300;0;1
??_Gbad_cast@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::bad_cast::`scalar deleting destructor'(unsigned int) __ptr64;264214;235900;299200;17800;7
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ;class std::allocator<wchar_t> & __ptr64 __cdecl std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::_Getal(void) __ptr64;264200;264200;264200;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > const & __ptr64);264200;229100;299300;35100;2
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VPass1@Activities@BuildInsights@Cpp@Microsoft@@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Pass1,class Microsoft::Cpp::BuildInsights::Activities::Pass2,class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildIn;264200;264200;264200;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;264200;264200;264200;0;1
??$?0U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> >(class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > const & __ptr64) __ptr64;264200;264200;264200;0;1
??$_Hash_representation@_K@std@@YA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash_representation<unsigned __int64>(unsigned __int64 const & __ptr64);264142;230100;352300;41105;7
??$?0U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > ><struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >(;264100;264100;264100;0;1
??AEventStack@BuildInsights@Cpp@Microsoft@@QEBA?AVRawEvent@123@_K@Z;class Microsoft::Cpp::BuildInsights::RawEvent __cdecl Microsoft::Cpp::BuildInsights::EventStack::operator[](unsigned __int64)const __ptr64;264000;254000;274000;10000;2
??0?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::OptionDetails>::shared_ptr<class cxxopts::OptionDetails>(void) __ptr64;264000;264000;264000;0;1
??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(voi;263900;263900;263900;0;1
?_Get_max_bucket_size@?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBMXZ;float const & __ptr64 __cdecl std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Get_max_bucket_size(void)const __ptr64;263814;227300;335800;34095;7
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(void) __ptr64;263800;263800;263800;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;263800;263800;263800;0;1
??$checked_negate@IAEAI@values@cxxopts@@YAAEAIAEAIAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$integral_constant@_N$0A@@3@@Z;unsigned int & __ptr64 __cdecl cxxopts::values::checked_negate<unsigned int,unsigned int & __ptr64>(unsigned int & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,struct std::integral_constant<bool,0>);263800;263800;263800;0;1
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ;char const * __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const __ptr64;263714;232300;292600;20625;7
??E?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator++(void) __ptr64;263700;263700;263700;0;1
??$get@$0A@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;??$get@$0A@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;263625;224000;367300;60021;4
??1?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::~_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::;263600;263600;263600;0;1
??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_JAEBV01@@Z;__int64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator-(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64)const __ptr64;263600;263600;263600;0;1
?_Getal@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEBAAEBV?$allocator@UHelpOptionDetails@cxxopts@@@2@XZ;class std::allocator<struct cxxopts::HelpOptionDetails> const & __ptr64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Getal(void)const __ptr64;263600;263600;263600;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<c;263600;239200;288000;24400;2
??0OptionSpecException@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::OptionSpecException::OptionSpecException(class cxxopts::OptionSpecException const & __ptr64) __ptr64;263500;263500;263500;0;1
?_Umove_if_noexcept1@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEAAXPEAUDataPerFunction@?A0x5f10505a@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Umove_if_noexcept1(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64,struct std::integral_constant<bool,1>) __ptr64;263500;263500;263500;0;1
??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@@Z;??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@@Z;263500;263500;263500;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >,class std::_Tree_val<struct std::_Tree_simple_types<st;263400;263400;263400;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;263400;263400;263400;0;1
??$destroy@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::destroy<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr64,;263300;263300;263300;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Max_bucket_size(void) __ptr64;263300;263300;263300;0;1
??0bad_array_new_length@std@@QEAA@AEBV01@@Z;__cdecl std::bad_array_new_length::bad_array_new_length(class std::bad_array_new_length const & __ptr64) __ptr64;263300;238000;312000;22723;18
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@AEAU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> * __ptr64>::pointer_to(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anon;263300;263300;263300;0;1
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<cl;263300;263300;263300;0;1
??0Function@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::Function::Function(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;263266;251300;280900;12731;3
??0?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@AEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::allocator<class std::sub_;263200;263200;263200;0;1
??__EEXECUTABLE_EXTENSION_LENGTH@?A0x31623763@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 'EXECUTABLE_EXTENSION_LENGTH''(void);263200;263200;263200;0;1
??$?0H$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBH@Z;__cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000000> >::duration<__int64,struct std::ratio<1,1000000000> ><int,0>(int const & __ptr64) __ptr64;263140;224800;354400;46654;5
?GetRange@?$UTF8@D@rapidjson@@SAEE@Z;static unsigned char __cdecl rapidjson::UTF8<char>::GetRange(unsigned char);263000;263000;263000;0;1
??$_Get_size_of_n@$0BAI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<264>(unsigned __int64);262900;262900;262900;0;1
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >(void) __ptr64;262900;262900;262900;0;1
?Destroy@?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@rapidjson@@AEAAXXZ;void __cdecl rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>::Destroy(void) __ptr64;262800;262800;262800;0;1
?_Getal@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > & __ptr64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Getal(void) __ptr64;262800;262800;262800;0;1
??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Int;262700;262700;262700;0;1
??$forward@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@@Z;262700;262700;262700;0;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > > const & __ptr64,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_t;262600;262600;262600;0;1
?_Use_count@_Ref_count_base@std@@QEBAJXZ;long __cdecl std::_Ref_count_base::_Use_count(void)const __ptr64;262600;262600;262600;0;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::_Allocate(void) __ptr64;262600;262600;262600;0;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;262600;262600;262600;0;1
??$Forward@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$HandlerForwarder@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SAX$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVSymbolName@SimpleEvents@345@@Z;??$Forward@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$HandlerForwarder@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal;262500;262500;262500;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,cla;262500;246500;278500;16000;2
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>;262500;262500;262500;0;1
??1HelpGroupDetails@cxxopts@@QEAA@XZ;__cdecl cxxopts::HelpGroupDetails::~HelpGroupDetails(void) __ptr64;262500;262500;262500;0;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@2@AEAU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std;262500;262500;262500;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cons;262450;234000;290900;28450;2
??0?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAA@PEAIAEAV?$allocator@I@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<unsigned int> >::_Uninitialized_backout_al<class std::allocator<unsigned int> >(unsigned int * __ptr64,class std::allocator<unsigned int> & __ptr64) __ptr64;262400;262400;262400;0;1
?_Unchecked_end@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Unchecked_end(void) __ptr64;262300;262300;262300;0;1
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::;262300;262300;262300;0;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64)const __ptr64;262300;262300;262300;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@Buil;262300;262300;262300;0;1
??_G_Node_back@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_back::`scalar deleting destructor'(unsigned int) __ptr64;262200;262200;262200;0;1
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > const & __ptr64>(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<c;262200;262200;262200;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigne;262200;262200;262200;0;1
?__autoclassinit2@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::__autoclassinit2(unsigned __int64) __ptr64;262200;262200;262200;0;1
?pointer_to@?$pointer_traits@PEBU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAPEBU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@AEBU32@@Z;static struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);262100;262100;262100;0;1
??_GIRelogger@BuildInsights@Cpp@Microsoft@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::IRelogger::`scalar deleting destructor'(unsigned int) __ptr64;262028;240600;287700;15297;7
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64>(void) __ptr64;262000;262000;262000;0;1
??4?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::operator=(class std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;262000;262000;262000;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;262000;257000;267000;5000;2
??1?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::~_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allo;262000;262000;262000;0;1
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::max_load_factor(void)co;261900;261900;261900;0;1
??0?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAA@PEAUDataPerFunction@?A0x5f10505a@@AEAV?$allocator@UDataPerFunction@?A0x5f10505a@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFunction> >(struct `anonymous namespace'::DataPerFunction * __ptr64,class std::allocator<struct `anonymous namespace'::DataPerFunction> & __ptr64) __ptr64;261900;261900;261900;0;1
??_G?$_Buf@D@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::_Buf<char>::`scalar deleting destructor'(unsigned int) __ptr64;261800;261800;261800;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;261800;261800;261800;0;1
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::a;261800;261800;261800;0;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;261800;261800;261800;0;1
?_Ufill@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@PEAU342@_KU_Value_init_tag@2@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Ufill(struct std::_Tgt_state_t<class std::_String_const_iterator<class;261700;261700;261700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VKeyValue@cxxopts@@@2@XZ;class std::allocator<class cxxopts::KeyValue> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class cxxopts::KeyValue>,class std::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> >,1>::_Get_first(void) __ptr64;261600;261600;261600;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64>,class std::_Vector_val<struct std::_Simple_types<struct std::pair<clas;261600;261600;261600;0;1
?IsNanOrInf@Double@internal@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::internal::Double::IsNanOrInf(void)const __ptr64;261500;261500;261500;0;1
?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ;class std::allocator<unsigned int> & __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Getal(void) __ptr64;261400;261400;261400;0;1
??$forward@AEAUDataPerFunction@?A0x5f10505a@@@std@@YAAEAUDataPerFunction@?A0x5f10505a@@AEAU12@@Z;struct `anonymous namespace'::DataPerFunction & __ptr64 __cdecl std::forward<struct `anonymous namespace'::DataPerFunction & __ptr64>(struct A0x5f10505a::DataPerFunction & __ptr64);261300;261300;261300;0;1
??__Etruthy_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic initializer for 'truthy_pattern''(void);261300;261300;261300;0;1
?_Unchecked_begin@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const *;261300;261300;261300;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > const & __ptr64);261200;261200;261200;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __;261100;261100;261100;0;1
??$_Destroy_range@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@QEAPEBU10@AEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::alloca;261100;261100;261100;0;1
??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::allocator<struct std::;261100;261100;261100;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::size(void)const __ptr64;261000;261000;261000;0;1
?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@2@_K@Z;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64 __cdecl std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> >::allocate(unsigned __int64) __ptr64;261000;261000;261000;0;1
??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NU_Default_sentinel@1@@Z;bool __cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0>::operator!=(struct std::_Default_sentinel)const __ptr64;261000;261000;261000;0;1
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;261000;261000;261000;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > >(class std::allocator<cl;260900;236200;285600;24700;2
??$exchange@_K_K@std@@YA_KAEA_K$$QEA_K@Z;??$exchange@_K_K@std@@YA_KAEA_K$$QEA_K@Z;260850;256600;265100;4250;2
??_Goption_requires_argument_exception@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::option_requires_argument_exception::`scalar deleting destructor'(unsigned int) __ptr64;260800;260800;260800;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std::_;260800;260800;260800;0;1
??0?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;260800;260800;260800;0;1
??0?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::values::standard_value<bool> >::shared_ptr<class cxxopts::values::standard_value<bool> >(void) __ptr64;260800;260800;260800;0;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@C;260700;260700;260700;0;1
??0?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;260700;260700;260700;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >::allocate(unsigned __int6;260700;251600;269800;9100;2
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VBottomUp@Activities@BuildInsights@Cpp@Microsoft@@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(unsigned int);260600;260600;260600;0;1
??$_Destroy_in_place@VOptionDetails@cxxopts@@@std@@YAXAEAVOptionDetails@cxxopts@@@Z;void __cdecl std::_Destroy_in_place<class cxxopts::OptionDetails>(class cxxopts::OptionDetails & __ptr64);260600;260600;260600;0;1
??_Gbad_array_new_length@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::bad_array_new_length::`scalar deleting destructor'(unsigned int) __ptr64;260516;239800;315000;18433;18
??$move@AEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAV10@@Z;??$move@AEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAV10@@Z;260500;260500;260500;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,stru;260500;260500;260500;0;1
?_Destroy@?$_Ref_count_obj2@I@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<unsigned int>::_Destroy(void) __ptr64;260400;260400;260400;0;1
??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;260400;260400;260400;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64;260400;260400;260400;0;1
??R?$_Conditionally_enabled_hash@PEAVOptionDetails@cxxopts@@$00@std@@QEBA_KAEBQEAVOptionDetails@cxxopts@@@Z;unsigned __int64 __cdecl std::_Conditionally_enabled_hash<class cxxopts::OptionDetails * __ptr64,1>::operator()(class cxxopts::OptionDetails * __ptr64 const & __ptr64)const __ptr64;260300;260300;260300;0;1
??0?$standard_value@I@values@cxxopts@@QEAA@PEAI@Z;__cdecl cxxopts::values::standard_value<unsigned int>::standard_value<unsigned int>(unsigned int * __ptr64) __ptr64;260300;260300;260300;0;1
?_Kfn@?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::ch;260250;257100;263400;3150;2
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::__autoclassinit2(unsigned __int64) __ptr64;260200;260200;260200;0;1
?capacity@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::capacity(void)const __ptr64;260200;260200;260200;0;1
?resize@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::resize(unsigned __int64) __ptr64;260200;260200;260200;0;1
?_Expect@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXW4_Meta_type@2@W4error_type@regex_constants@2@@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Expect(enum std::_Meta_type,enum std::regex_constants::error_type) __ptr64;260200;260200;260200;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::bucket_count(void)const __ptr64;260100;260100;260100;0;1
??$_Destroy_in_place@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@YAXAEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@Z;void __cdecl std::_Destroy_in_place<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);260000;260000;260000;0;1
??$move@AEAV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$ch;260000;260000;260000;0;1
??1?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAA@XZ;__cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::~Stack<class rapidjson::CrtAllocator>(void) __ptr64;260000;260000;260000;0;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> >::allocate(unsigned __int64) __ptr64;259900;249500;270300;10400;2
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,cl;259900;259900;259900;0;1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;259900;259900;259900;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;259900;259900;259900;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompila;259850;244600;275100;15250;2
?_Umove_if_noexcept1@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Umove_if_noexcept1(unsigned int * __ptr64,unsigned int * __ptr64,unsigned int * __ptr64,struct std::integral_constant<bool,1>) __ptr64;259800;259800;259800;0;1
??_G?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::`scalar deleting destructor'(unsigned int) __ptr64;259700;259700;259700;0;1
??0CompilerPass@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::CompilerPass::CompilerPass(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;259700;259700;259700;0;1
?OnEndAnalysisPass@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;259700;259700;259700;0;1
?_Umove@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@PEAPEBU32@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const *;259600;259600;259600;0;1
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;259600;259600;259600;0;1
??$?O_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z;bool __cdecl std::chrono::operator><__int64,struct std::ratio<1,1000000000>,__int64,struct std::ratio<1,1000000000> >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);259525;242700;292800;19733;4
??_G?$abstract_value@_N@values@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::values::abstract_value<bool>::`scalar deleting destructor'(unsigned int) __ptr64;259500;259500;259500;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;259500;259500;259500;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >(struct std::_List_;259400;259400;259400;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Max_bucket_size(void)const __ptr64;259400;254100;264700;5300;2
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@std@@QEAA@PEAUDataPerFile@?A0x120c265a@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >(struct `anonymous namespace'::DataPerFile * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;259400;259400;259400;0;1
??$_Move_unchecked@PEAIPEAI@std@@YAPEAIPEAI00@Z;unsigned int * __ptr64 __cdecl std::_Move_unchecked<unsigned int * __ptr64,unsigned int * __ptr64>(unsigned int * __ptr64,unsigned int * __ptr64,unsigned int * __ptr64);259400;259400;259400;0;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Range_eraser::_Bump_erased(void) __ptr64;259300;259300;259300;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `ano;259300;259300;259300;0;1
?_Getal@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEBAAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> const & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Getal(void)const __ptr64;259300;259300;259300;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::_Vector_val<struct std:;259300;259300;259300;0;1
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 & __ptr64);259300;259300;259300;0;1
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_;259200;246900;271500;12300;2
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;259200;259200;259200;0;1
??$_Get_size_of_n@$0EI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<72>(unsigned __int64);259200;259200;259200;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,vo;259150;221200;297100;37950;2
??0?$allocator@_W@std@@QEAA@XZ;__cdecl std::allocator<wchar_t>::allocator<wchar_t>(void) __ptr64;259100;259100;259100;0;1
??0?$enable_shared_from_this@VValue@cxxopts@@@std@@IEAA@XZ;__cdecl std::enable_shared_from_this<class cxxopts::Value>::enable_shared_from_this<class cxxopts::Value>(void) __ptr64;259100;259100;259100;0;1
?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@_K@Z;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 __cdecl std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >::allocate(unsigned __int64) __ptr64;259000;246000;272000;13000;2
??0IAnalyzer@BuildInsights@Cpp@Microsoft@@QEAA@AEBV0123@@Z;__cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::IAnalyzer(class Microsoft::Cpp::BuildInsights::IAnalyzer const & __ptr64) __ptr64;258900;258900;258900;0;1
??0?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;258900;258900;258900;0;1
?_Umove@?$vector@_KV?$allocator@_K@std@@@std@@AEAAPEA_KPEA_K00@Z;unsigned __int64 * __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Umove(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64,unsigned __int64 * __ptr64) __ptr64;258800;258800;258800;0;1
??$?RVFunction@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFunction@Activities@234@@Z;??$?RVFunction@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFunction@Activities@234@@Z;258800;258800;258800;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allo;258800;258800;258800;0;1
??$forward@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@0@AEAPEAU10@@Z;258800;258800;258800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> >,class std::_List_val<s;258800;258800;258800;0;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::_Allocate(void) __ptr64;258700;258700;258700;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::size(void)const __ptr64;258700;258700;258700;0;1
??$_Move_construct_from@_N@?$_Ptr_base@_N@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@_N@?$_Ptr_base@_N@std@@IEAAX$$QEAV01@@Z;258700;258700;258700;0;1
?capacity@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::capacity(void)const __ptr64;258600;258600;258600;0;1
??9?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NV?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@@Z;bool __cdecl rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator!=(class rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >)const __ptr64;258600;258600;258600;0;1
?_Destroy@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Destroy(unsigned int * __ptr64,unsigned int * __ptr64) __ptr64;258600;258600;258600;0;1
?_Ufill@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@PEAU342@_KU_Value_init_tag@2@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Ufill(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,unsigned __int64,struct std::_Value_init_tag) __ptr64;258600;258600;258600;0;1
??$exchange@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;258500;258500;258500;0;1
??0Value@cxxopts@@QEAA@XZ;__cdecl cxxopts::Value::Value(void) __ptr64;258400;258400;258400;0;1
?_Getal@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Getal(void) __ptr64;258400;258400;258400;0;1
?OnBeginAnalysisPass@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;258300;258300;258300;0;1
?_Getal@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_Getal(void)const __ptr64;258300;258300;258300;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >,class st;258300;258300;258300;0;1
?push_back@?$vector@_KV?$allocator@_K@std@@@std@@QEAAXAEB_K@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::push_back(unsigned __int64 const & __ptr64) __ptr64;258300;258300;258300;0;1
??0?$_Ptr_base@I@std@@IEAA@XZ;__cdecl std::_Ptr_base<unsigned int>::_Ptr_base<unsigned int>(void) __ptr64;258300;258300;258300;0;1
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const __ptr64;258200;258200;258200;0;1
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z;bool __cdecl std::operator==<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,char const * __ptr64 const);258100;258100;258100;0;1
??4_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAAEAU012@AEBU012@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64 __cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t::operator=(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t const & __ptr64) __ptr64;258100;258100;258100;0;1
??4?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;258100;258100;258100;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned _;258100;258100;258100;0;1
?_Getal@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAAEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@2@XZ;class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > & __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Getal(void) __ptr64;258066;242600;272100;12085;3
??$_Set_ptr_rep_and_enable_shared@VOptionDetails@cxxopts@@@?$shared_ptr@VOptionDetails@cxxopts@@@std@@AEAAXQEAVOptionDetails@cxxopts@@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class cxxopts::OptionDetails>::_Set_ptr_rep_and_enable_shared<class cxxopts::OptionDetails>(class cxxopts::OptionDetails * __ptr64 const,class std::_Ref_count_base * __ptr64 const) __ptr64;258000;258000;258000;0;1
??_G_Node_rep@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_rep::`scalar deleting destructor'(unsigned int) __ptr64;258000;258000;258000;0;1
??P?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator>=(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;258000;258000;258000;0;1
?_Destroy@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Destroy(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64) __ptr64;258000;258000;258000;0;1
??0exception@std@@QEAA@XZ;__cdecl std::exception::exception(void) __ptr64;258000;258000;258000;0;1
??$_Unfancy@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAPEAV1234@@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::_Unfancy<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64);257900;257900;257900;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@SA_KAEBV?$allocator@UDataPerFile@?A0x120c265a@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct `anonymous namespace'::DataPerFile> >::max_size(class std::allocator<struct `anonymous namespace'::DataPerFile> const & __ptr64);257900;257900;257900;0;1
?_Umove_if_noexcept@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI00@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Umove_if_noexcept(unsigned int * __ptr64,unsigned int * __ptr64,unsigned int * __ptr64) __ptr64;257900;257900;257900;0;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;257800;257800;257800;0;1
??$_Unfancy@I@std@@YAPEAIPEAI@Z;unsigned int * __ptr64 __cdecl std::_Unfancy<unsigned int>(unsigned int * __ptr64);257800;257800;257800;0;1
?_Destroy@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAXPEAUHelpOptionDetails@cxxopts@@0@Z;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Destroy(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64) __ptr64;257700;257700;257700;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64>(void) __ptr64;257700;257700;257700;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class Timeli;257700;257700;257700;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VOptRef@Activities@BuildInsights@Cpp@Microsoft@@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp;257700;257700;257700;0;1
??0Activity@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::Activity::Activity(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;257666;251700;268400;6410;6
??1?$_Ref_count_obj2@V?$standard_value@I@values@cxxopts@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<unsigned int> >::~_Ref_count_obj2<class cxxopts::values::standard_value<unsigned int> >(void) __ptr64;257600;257600;257600;0;1
?OnStopActivity@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;257600;226300;293700;22961;7
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_Lis;257550;251500;263600;6050;2
??$?RVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVBackEndPass@Activities@234@@Z;??$?RVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVBackEndPass@Activities@234@@Z;257500;257500;257500;0;1
?_Getal@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Getal(void) __ptr64;257500;257500;257500;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;257450;253700;261200;3750;2
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > >::size(void)const __ptr64;257400;257400;257400;0;1
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::all;257400;257400;257400;0;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Unchecked_end(void) __p;257400;257400;257400;0;1
??$iter_swap@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0@Z;void __cdecl std::iter_swap<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * _;257400;257400;257400;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QEAAAEAV?$allocator@K@2@XZ;class std::allocator<unsigned long> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned long>,class std::_Vector_val<struct std::_Simple_types<unsigned long> >,1>::_Get_first(void) __ptr64;257400;257400;257400;0;1
??$forward_as_tuple@AEAUTemplateInstantiationData@@@std@@YA?AV?$tuple@AEAUTemplateInstantiationData@@@0@AEAUTemplateInstantiationData@@@Z;class std::tuple<struct TemplateInstantiationData & __ptr64> __cdecl std::forward_as_tuple<struct TemplateInstantiationData & __ptr64>(struct TemplateInstantiationData & __ptr64);257400;257400;257400;0;1
?allocate@?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@_K@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64>::allocate(unsigned __int64) __ptr64;257400;257400;257400;0;1
??_G?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::`scalar deleting destructor'(unsigned int) __pt;257300;257300;257300;0;1
??0FrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::FrontEndPass::FrontEndPass(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;257300;257300;257300;0;1
??1?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::~_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::h;257300;257300;257300;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std;257300;257300;257300;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simpl;257300;257300;257300;0;1
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z;char * __ptr64 __cdecl std::allocator<char>::allocate(unsigned __int64) __ptr64;257206;226700;340600;27837;15
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;257200;257200;257200;0;1
??$_Destroy_range@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YAXPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@QEAPEAV1234@AEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> & __ptr64);257200;257200;257200;0;1
??$_Destroy_in_place@V?$standard_value@I@values@cxxopts@@@std@@YAXAEAV?$standard_value@I@values@cxxopts@@@Z;void __cdecl std::_Destroy_in_place<class cxxopts::values::standard_value<unsigned int> >(class cxxopts::values::standard_value<unsigned int> & __ptr64);257200;257200;257200;0;1
??_G?$standard_value@I@values@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::values::standard_value<unsigned int>::`scalar deleting destructor'(unsigned int) __ptr64;257200;257200;257200;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@PEAKPEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >(unsigned long * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;257200;257200;257200;0;1
?_Umove@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@PEAV342@00@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Umove(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr;257033;238800;273300;14153;3
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Unchecked_begin(void) __ptr64;257000;257000;257000;0;1
??_GFunctionCompilationsAnalyzer@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl FunctionCompilationsAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;257000;257000;257000;0;1
??$_Adl_verify_range@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64);257000;257000;257000;0;1
?_Destroy@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXPEAVKeyValue@cxxopts@@0@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Destroy(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64) __ptr64;256900;256900;256900;0;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;256900;256900;256900;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;256900;256900;256900;0;1
?capacity@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::capacity(void)const __ptr64;256900;256900;256900;0;1
??__Eoption_matcher@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic initializer for 'option_matcher''(void);256900;256900;256900;0;1
?_End_pattern@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Root_node@2@XZ;class std::_Root_node * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_End_pattern(void) __ptr64;256800;256800;256800;0;1
??1?$enable_shared_from_this@VValue@cxxopts@@@std@@IEAA@XZ;__cdecl std::enable_shared_from_this<class cxxopts::Value>::~enable_shared_from_this<class cxxopts::Value>(void) __ptr64;256800;256800;256800;0;1
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>::`scalar deleting destructor'(unsigned int) __ptr64;256800;256800;256800;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > > >::size(void)const __ptr64;256700;256700;256700;0;1
?_DecimalDigits@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_DecimalDigits(void) __ptr64;256700;256700;256700;0;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous n;256700;256700;256700;0;1
??$forward@V?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUDataPerTemplate@?A0x5cdd232a@@@0@AEAV10@@Z;256600;256600;256600;0;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Unchecked_begin(void) _;256600;256600;256600;0;1
??$move@AEAPEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@AEAPEAV12345@@Z;??$move@AEAPEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@AEAPEAV12345@@Z;256600;256600;256600;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct;256600;256600;256600;0;1
??1?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~unordered_set<class std::basic_string<char,struct std::char_tr;256550;225800;287300;30750;2
??$_Get_size_of_n@$0II@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<136>(unsigned __int64);256500;256500;256500;0;1
?_Ufill@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEAI_KAEBI@Z;unsigned int * __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Ufill(unsigned int * __ptr64,unsigned __int64,unsigned int const & __ptr64) __ptr64;256500;256500;256500;0;1
?allocate@?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@QEAAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@_K@Z;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> >::allocate(unsigned __int64) __ptr64;256500;256500;256500;0;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEBAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > >::_Unwrapped(void)const __ptr64;256500;256500;256500;0;1
?resize@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::resize(unsigned __int64) __ptr64;256500;256500;256500;0;1
?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ;__int64 __cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000> >::count(void)const __ptr64;256400;256400;256400;0;1
??0?$shared_ptr@V?$standard_value@I@values@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::values::standard_value<unsigned int> >::shared_ptr<class cxxopts::values::standard_value<unsigned int> >(void) __ptr64;256400;256400;256400;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > >::allocate(unsigned __int64) __ptr64;256300;256300;256300;0;1
?_Destroy@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAXPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@0@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Destroy(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_S;256200;256200;256200;0;1
??$_Seek_wrapped@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@AEAV12@@std@@YAXAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z;void __cdecl std::_Seek_wrapped<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64>(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64);256200;256200;256200;0;1
??$?RVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVInvocation@Activities@234@@Z;??$?RVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVInvocation@Activities@234@@Z;256200;256200;256200;0;1
??0?$standard_value@_N@values@cxxopts@@QEAA@AEBV012@@Z;__cdecl cxxopts::values::standard_value<bool>::standard_value<bool>(class cxxopts::values::standard_value<bool> const & __ptr64) __ptr64;256200;256200;256200;0;1
??4?$_Tgt_state_t@PEBD@std@@QEAAAEAV01@AEBV01@@Z;class std::_Tgt_state_t<char const * __ptr64> & __ptr64 __cdecl std::_Tgt_state_t<char const * __ptr64>::operator=(class std::_Tgt_state_t<char const * __ptr64> const & __ptr64) __ptr64;256200;256200;256200;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64,class s;256200;256200;256200;0;1
??$addressof@PEAU?$_Sequence@D@std@@@std@@YAPEAPEAU?$_Sequence@D@0@AEAPEAU10@@Z;struct std::_Sequence<char> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_Sequence<char> * __ptr64>(struct std::_Sequence<char> * __ptr64 & __ptr64);256100;256100;256100;0;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous nam;256100;256100;256100;0;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;256100;256100;256100;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::max_size(class std::allocator<;256050;219600;292500;36450;2
?_Umove_if_noexcept1@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Umove_if_noexcept1(struct std::pair<class std::basic_string<char,str;256000;256000;256000;0;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64)const __ptr64;256000;256000;256000;0;1
??_G?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::`scalar deleting destructor'(unsigned int) __ptr64;256000;256000;256000;0;1
?_Getal@?$list@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::_Getal(void)const __ptr64;256000;256000;256000;0;1
??0_Container_proxy@std@@QEAA@XZ;__cdecl std::_Container_proxy::_Container_proxy(void) __ptr64;255900;255900;255900;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64>(void) __ptr64;255900;255900;255900;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_trai;255850;224500;287200;31350;2
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;255800;255800;255800;0;1
??_G_Node_if@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_if::`scalar deleting destructor'(unsigned int) __ptr64;255800;255800;255800;0;1
?_Getal@?$list@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::_Getal(void) __ptr64;255800;255800;255800;0;1
??$Forward@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$HandlerForwarder@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SAX$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVTemplateInstantiation@Activities@345@@Z;??$Forward@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$HandlerForwarder@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsof;255800;255800;255800;0;1
??$addressof@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@YAPEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@0@AEAV10@@Z;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;255800;255800;255800;0;1
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z;static unsigned __int64 __cdecl std::_Narrow_char_traits<char,int>::length(char const * __ptr64 const);255750;225400;312600;23972;12
??$forward@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YA$$QEAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@AEAPEAU10@@Z;??$forward@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YA$$QEAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@AEAPEAU10@@Z;255700;255700;255700;0;1
??$addressof@V?$standard_value@_N@values@cxxopts@@@std@@YAPEAV?$standard_value@_N@values@cxxopts@@AEAV123@@Z;class cxxopts::values::standard_value<bool> * __ptr64 __cdecl std::addressof<class cxxopts::values::standard_value<bool> >(class cxxopts::values::standard_value<bool> & __ptr64);255700;255700;255700;0;1
??1?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA@XZ;virtual __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::~DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >(void) __ptr64;255600;255600;255600;0;1
??$move@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;255550;200300;364800;66893;4
??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64;255500;255500;255500;0;1
??0?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0>::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_co;255500;255500;255500;0;1
?deallocate@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QEAAXQEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@_K@Z;void __cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::deallocate(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 const,unsigned __int64) __ptr64;255500;255500;255500;0;1
??1?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::~_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<uns;255400;255400;255400;0;1
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::operator->(void)const _;255400;255400;255400;0;1
?_Throw_bad_array_new_length@std@@YAXXZ;void __cdecl std::_Throw_bad_array_new_length(void);255344;226900;325000;25940;18
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,c;255300;255300;255300;0;1
?_Umove@?$vector@KV?$allocator@K@std@@@std@@AEAAPEAKPEAK00@Z;unsigned long * __ptr64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Umove(unsigned long * __ptr64,unsigned long * __ptr64,unsigned long * __ptr64) __ptr64;255200;255200;255200;0;1
??$_LStrcoll@D@std@@YAHPEBD000PEBU_Collvec@@@Z;int __cdecl std::_LStrcoll<char>(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64,struct _Collvec const * __ptr64);255200;255200;255200;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct s;255200;255200;255200;0;1
??$move@AEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;255100;255100;255100;0;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > > const & __ptr64);255100;255100;255100;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >(void) __ptr64;255100;208300;301900;46800;2
??1KeyValue@cxxopts@@QEAA@XZ;__cdecl cxxopts::KeyValue::~KeyValue(void) __ptr64;255000;255000;255000;0;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;254900;254900;254900;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;254900;248100;261700;6800;2
?swap@?$shared_ptr@I@std@@QEAAXAEAV12@@Z;void __cdecl std::shared_ptr<unsigned int>::swap(class std::shared_ptr<unsigned int> & __ptr64) __ptr64;254800;254800;254800;0;1
?_Unchecked_end@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Unchecked_end(void) __ptr64;254800;254800;254800;0;1
?_Destroy@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@0@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Destroy(struct std::pair<class std::basic_string<char,struct std::ch;254800;254800;254800;0;1
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z;static void __cdecl std::_Narrow_char_traits<char,int>::assign(char & __ptr64,char const & __ptr64);254737;218000;301700;23037;16
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Range_eraser::_Bump_erased(void) __ptr64;254700;254700;254700;0;1
?_Throw_bad_weak_ptr@std@@YAXXZ;void __cdecl std::_Throw_bad_weak_ptr(void);254700;254700;254700;0;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 & __ptr64);254700;254700;254700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::cha;254650;228100;281200;26550;2
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVActivity@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVActivity@Activities@234@@Z@Z;254600;254600;254600;0;1
??$_Move_backward_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@PEAPEBU10@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Move_backward_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> ;254600;254600;254600;0;1
?_Getal@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAAEAV?$allocator@U_Loop_vals_t@std@@@2@XZ;class std::allocator<struct std::_Loop_vals_t> & __ptr64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Getal(void) __ptr64;254600;254600;254600;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > >(stru;254600;254600;254600;0;1
??0OptionParseException@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::OptionParseException::OptionParseException(class cxxopts::OptionParseException const & __ptr64) __ptr64;254600;254600;254600;0;1
?allocate@?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>::allocate(unsigned __int64) __ptr64;254600;254600;254600;0;1
??$?0H$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z;__cdecl std::chrono::duration<__int64,struct std::ratio<1,1000> >::duration<__int64,struct std::ratio<1,1000> ><int,0>(int const & __ptr64) __ptr64;254500;254500;254500;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64,class std::_List_unchecked_ite;254500;254500;254500;0;1
?allocate@?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@_K@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>::allocate(unsigned __int64) __ptr64;254500;254500;254500;0;1
?_Getal@?$list@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_;254400;254200;254600;200;2
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Range_eraser::_Bump_era;254400;254400;254400;0;1
??0?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::OptionDetails>::_Ptr_base<class cxxopts::OptionDetails>(void) __ptr64;254400;254400;254400;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >,1>::_Get_first(void) __ptr64;254300;254300;254300;0;1
??$forward@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@;254200;254200;254200;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@std@@QEAA@PEAUDataPerFunction@?A0x5f10505a@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >(struct `anonymous namespace'::DataPerFunction * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;254200;254200;254200;0;1
?OnSimpleEvent@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const ;254200;254200;254200;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;254200;254200;254200;0;1
?swap@?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::swap(class std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64) __ptr64;254200;254200;254200;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void *;254100;254100;254100;0;1
??$move@AEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@0@AEAV10@@Z;254100;254100;254100;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > >::allocate(unsigned __int64) __ptr64;254100;254100;254100;0;1
??$_Swap_adl@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@YAXAEAPEAULocalThreadData@PackedProcessThreadRemapper@@0@Z;void __cdecl std::_Swap_adl<struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>(struct PackedProcessThreadRemapper::LocalThreadData * __ptr64 & __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64 & __ptr64);254100;254100;254100;0;1
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ;__int64 __cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000000> >::count(void)const __ptr64;254100;226100;320100;29616;7
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std:;254000;254000;254000;0;1
?max_load_factor@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::max_load_factor(void)const __ptr64;254000;254000;254000;0;1
??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z;char * __ptr64 __cdecl std::_Refancy<char * __ptr64,0>(char * __ptr64);253900;253900;253900;0;1
?_Umove_if_noexcept@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAXPEAV?$sub_match@PEBD@2@00@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Umove_if_noexcept(class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64) __ptr64;253900;253900;253900;0;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEA;253900;253900;253900;0;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsig;253900;253900;253900;0;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;253800;253800;253800;0;1
??$?0I$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBI@Z;__cdecl std::chrono::duration<__int64,struct std::ratio<1,1000> >::duration<__int64,struct std::ratio<1,1000> ><unsigned int,0>(unsigned int const & __ptr64) __ptr64;253800;253800;253800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >,class std::_Vector_val<struc;253800;253800;253800;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;253700;237800;269600;15900;2
??$EntityCanMaterializeId@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName>(unsigned int);253650;203700;303600;49950;2
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64;253650;244800;262500;8850;2
??$Run@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp;253500;253500;253500;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::size(void)const __ptr64;253500;253500;253500;0;1
??$_Within_limits@E@std@@YA_NAEBEU?$integral_constant@_N$00@0@U?$integral_constant@_N$0A@@0@2@Z;bool __cdecl std::_Within_limits<unsigned char>(unsigned char const & __ptr64,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,0>);253500;253500;253500;0;1
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@AEAAXPEAK0@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Destroy(unsigned long * __ptr64,unsigned long * __ptr64) __ptr64;253500;253500;253500;0;1
??1?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >::~_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >(void) __ptr64;253400;253400;253400;0;1
?deallocate@?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@QEAAXQEAUDataPerFunction@?A0x5f10505a@@_K@Z;void __cdecl std::allocator<struct `anonymous namespace'::DataPerFunction>::deallocate(struct `anonymous namespace'::DataPerFunction * __ptr64 const,unsigned __int64) __ptr64;253400;253400;253400;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ;class std::allocator<char> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<char>,class std::_String_val<struct std::_Simple_types<char> >,1>::_Get_first(void)const __ptr64;253353;213800;389600;43767;15
??$forward@AEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAAEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr64 __cdecl std::forward<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr64>(class std::_List_unchecked;253350;225200;281500;28150;2
?_Umove@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAPEAUHelpOptionDetails@cxxopts@@PEAU34@00@Z;struct cxxopts::HelpOptionDetails * __ptr64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Umove(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64) __ptr64;253300;253300;253300;0;1
??_G_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t::`scalar deleting destructor'(unsigned int) __ptr64;253300;253300;253300;0;1
?max_load_factor@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_s;253300;253300;253300;0;1
?_Getal@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEAAAEAV?$allocator@UDataPerFunction@?A0x5f10505a@@@2@XZ;class std::allocator<struct `anonymous namespace'::DataPerFunction> & __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Getal(void) __ptr64;253200;253200;253200;0;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Micro;253200;253200;253200;0;1
??4?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator=(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64) __ptr64;253100;253100;253100;0;1
??$forward@UDataPerFunction@?A0x5f10505a@@@std@@YA$$QEAUDataPerFunction@?A0x5f10505a@@AEAU12@@Z;??$forward@UDataPerFunction@?A0x5f10505a@@@std@@YA$$QEAUDataPerFunction@?A0x5f10505a@@AEAU12@@Z;253100;253100;253100;0;1
??_G?$standard_value@_N@values@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::values::standard_value<bool>::`scalar deleting destructor'(unsigned int) __ptr64;253000;253000;253000;0;1
??_G?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::`scalar deleting destructor'(unsigned int) __ptr64;253000;253000;253000;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;252900;252900;252900;0;1
??N?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator<=(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;252900;252900;252900;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namesp;252900;252900;252900;0;1
?_Insert_node@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@CAXPEAV_Node_base@2@0@Z;static void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Insert_node(class std::_Node_base * __ptr64,class std::_Node_base * __ptr64);252900;252900;252900;0;1
?allocate@?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@QEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@_K@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>::allocate(unsigned __int64) __ptr64;252800;252800;252800;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVCommandLine@SimpleEvents@234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@I;252800;252800;252800;0;1
??$construct@U_Grp_t@?$_Tgt_state_t@PEBD@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@PEBD@1@@Z;??$construct@U_Grp_t@?$_Tgt_state_t@PEBD@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@PEBD@1@@Z;252800;252800;252800;0;1
?Flush@?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@QEAAXXZ;void __cdecl rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >::Flush(void) __ptr64;252800;252800;252800;0;1
??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Micro;252800;252800;252800;0;1
??4?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;252800;252800;252800;0;1
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::_Unfancy<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64);252700;252700;252700;0;1
??0?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Ptr_base<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;252700;252700;252700;0;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::_Allocate(void) __ptr64;252600;252600;252600;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>,class std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >,1>::_Get_first(void)const __ptr64;252600;252600;252600;0;1
??0?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileInclusionsAnalyzer@@P85@EAAXAEBVFrontEndFile@Activities@234@1@Z@Z;??0?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileInclusionsAnalyzer@@P85@EAAXAEBVFrontEndFile@Activities@234@1@Z@Z;252500;252500;252500;0;1
?_Move_construct@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Move_construct(class std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> > & __ptr64,struct std::integral_constant<bool,1>) __ptr64;252500;252500;252500;0;1
?_Getal@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > const & __ptr64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Getal(void)const __ptr64;252500;252500;252500;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<;252500;252500;252500;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 const & __ptr64);252500;252500;252500;0;1
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > >(class std::allocator<struct std::_List_node<struct s;252400;252400;252400;0;1
?_Unchecked_end@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Unchecked_end(void) __ptr64;252400;252400;252400;0;1
??0option_exists_error@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::option_exists_error::option_exists_error(class cxxopts::option_exists_error const & __ptr64) __ptr64;252400;252400;252400;0;1
??1IRelogger@BuildInsights@Cpp@Microsoft@@UEAA@XZ;virtual __cdecl Microsoft::Cpp::BuildInsights::IRelogger::~IRelogger(void) __ptr64;252371;199100;396900;62570;7
??$forward@AEBQEAVTimelineEntry@@@std@@YAAEBQEAVTimelineEntry@@AEBQEAV1@@Z;class TimelineEntry * __ptr64 const & __ptr64 __cdecl std::forward<class TimelineEntry * __ptr64 const & __ptr64>(class TimelineEntry * __ptr64 const & __ptr64);252350;232400;272300;19950;2
??$move@AEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;252300;252300;252300;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >::allocate(unsigned __int64) __ptr64;252300;252300;252300;0;1
??$addressof@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > >(class std::_Vector_va;252300;252300;252300;0;1
?_Ufill@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@PEAV32@_KU_Value_init_tag@2@@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Ufill(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_t;252300;252300;252300;0;1
??$forward@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YA$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@AEAV10@@Z;??$forward@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YA$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@AEAV10@@Z;252300;252300;252300;0;1
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Destroy(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64) __ptr64;252300;252300;252300;0;1
?_Destroy@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@0@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Destroy(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64) __ptr64;252266;240800;272600;14416;3
??$forward@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@AEAPEAV1234@@Z;??$forward@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@AEAPEAV1234@@Z;252200;252200;252200;0;1
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ;__cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::~_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >(void) __ptr64;252100;252100;252100;0;1
?push_back@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAX$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@@Z;?push_back@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAX$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@@Z;252000;252000;252000;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails>;252000;252000;252000;0;1
?Usable@ShortString@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@SA_NI@Z;static bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::ShortString::Usable(unsigned int);252000;252000;252000;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64 const & __ptr6;252000;252000;252000;0;1
??1Value@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::Value::~Value(void) __ptr64;252000;252000;252000;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const;251900;251900;251900;0;1
?OnActivityStartNested@BuildTimelineAnalyzer@@AEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl BuildTimelineAnalyzer::OnActivityStartNested(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64,class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;251800;251800;251800;0;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::_Allocate(void) __ptr64;251800;251800;251800;0;1
??$_Destroy_range@V?$allocator@PEAVTimelineEntry@@@std@@@std@@YAXPEAPEAVTimelineEntry@@QEAPEAV1@AEAV?$allocator@PEAVTimelineEntry@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class TimelineEntry * __ptr64> >(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64 const,class std::allocator<class TimelineEntry * __ptr64> & __ptr64);251800;237000;266600;14800;2
?_Getal@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Getal(void)const __ptr64;251800;251800;251800;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std;251800;251800;251800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,1>::_Get_first(void) __ptr64;251600;251600;251600;0;1
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@0@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::exchange<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64,struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>;251600;251600;251600;0;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class;251500;251500;251500;0;1
??$addressof@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAU10@@Z;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::addressof<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> & __ptr64);251500;251500;251500;0;1
??$?0AEB_K$$ZAEAULocalThreadData@PackedProcessThreadRemapper@@@?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@@Z;??$?0AEB_K$$ZAEAULocalThreadData@PackedProcessThreadRemapper@@@?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@1@@Z;251400;251400;251400;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;251400;244000;258800;7400;2
??$_Adl_verify_range@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>(class std::_List_unchec;251350;237400;265300;13950;2
??_G?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<bool> >::`scalar deleting destructor'(unsigned int) __ptr64;251300;251300;251300;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class s;251300;235000;267600;16300;2
?SetElementsPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAPEAV12@PEAV12@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::SetElementsPointer(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64) __ptr64;251300;251300;251300;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,str;251250;239900;262600;11350;2
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VWholeProgramAnalysis@Activities@BuildInsights@Cpp@Microsoft@@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(unsigned int);251200;251200;251200;0;1
??1?$shared_ptr@V?$standard_value@I@values@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::values::standard_value<unsigned int> >::~shared_ptr<class cxxopts::values::standard_value<unsigned int> >(void) __ptr64;251200;251200;251200;0;1
??0runtime_error@std@@QEAA@AEBV01@@Z;__cdecl std::runtime_error::runtime_error(class std::runtime_error const & __ptr64) __ptr64;251100;251100;251100;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Max_bucket_size(void)const __ptr64;251100;251100;251100;0;1
??$?9V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@V01@@std@@YA_NAEBV?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@0@0@Z;bool __cdecl std::operator!=<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >(class std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > > const & __ptr64,class std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vecto;251100;251100;251100;0;1
?_Negate@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Negate(void) __ptr64;251100;251100;251100;0;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > >::size(void)const __ptr64;251000;251000;251000;0;1
??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;251000;251000;251000;0;1
??0IAnalyzer@BuildInsights@Cpp@Microsoft@@QEAA@XZ;__cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::IAnalyzer(void) __ptr64;250985;234400;272800;12582;7
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > >,class std::_Vector_val<struct std::_Simple_types;250900;250900;250900;0;1
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompil;250900;250900;250900;0;1
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ;class std::allocator<char> const & __ptr64 __cdecl std::vector<char,class std::allocator<char> >::_Getal(void)const __ptr64;250800;250800;250800;0;1
?_Destroy@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0@Z;void __cdecl std::vector<char,class std::allocator<char> >::_Destroy(char * __ptr64,char * __ptr64) __ptr64;250700;250700;250700;0;1
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAAXPEBQEAVTimelineEntry@@@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Seek_to(class TimelineEntry * __ptr64 const * __ptr64) __ptr64;250700;215800;285600;34900;2
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >(void) __ptr64;250700;250700;250700;0;1
?parse@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;virtual void __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::parse(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;250700;250700;250700;0;1
??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVTemplateInstantiation@Activities@234@@Z;??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVTemplateInstantiation@Activities@234@@Z;250600;250600;250600;0;1
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::`scalar deleting destructor'(unsigned int) __ptr64;250550;246400;254700;4150;2
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ;250500;250500;250500;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;250333;194200;281300;39762;3
??$get@$0A@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA$$QEAV?$vector@_KV?$allocator@_K@std@@@0@$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@@Z;??$get@$0A@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA$$QEAV?$vector@_KV?$allocator@_K@std@@@0@$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@@Z;250300;250300;250300;0;1
?allocate@?$allocator@UHelpOptionDetails@cxxopts@@@std@@QEAAPEAUHelpOptionDetails@cxxopts@@_K@Z;struct cxxopts::HelpOptionDetails * __ptr64 __cdecl std::allocator<struct cxxopts::HelpOptionDetails>::allocate(unsigned __int64) __ptr64;250300;250300;250300;0;1
??$move@AEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@0@AEAV10@@Z;250250;245600;254900;4650;2
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > const & __ptr64) __ptr64;250200;250200;250200;0;1
?get_deleter@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAAAEAU?$default_delete@V_Node_assert@std@@@2@XZ;struct std::default_delete<class std::_Node_assert> & __ptr64 __cdecl std::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >::get_deleter(void) __ptr64;250100;250100;250100;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct st;250000;250000;250000;0;1
??0?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;250000;250000;250000;0;1
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ;void __cdecl std::_Basic_container_proxy_ptr12::_Release(void) __ptr64;249935;204200;459400;61991;14
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_bas;249900;227100;272700;22800;2
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >::_Allocate(void) __ptr64;249900;249900;249900;0;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> & __ptr64);249900;249900;249900;0;1
??_G?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::`scalar deleting destructor'(unsigned int) __ptr64;249850;245300;254400;4550;2
??$?0AEAULocalThreadData@PackedProcessThreadRemapper@@@?$_Tuple_val@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@QEAA@AEAULocalThreadData@PackedProcessThreadRemapper@@@Z;__cdecl std::_Tuple_val<struct PackedProcessThreadRemapper::LocalThreadData & __ptr64>::_Tuple_val<struct PackedProcessThreadRemapper::LocalThreadData & __ptr64><struct PackedProcessThreadRemapper::LocalThreadData & __ptr64>(struct PackedProcessThreadRemapper::LocalThreadData & __ptr64) __ptr64;249800;249800;249800;0;1
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEADXZ;char & __ptr64 __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator*(void)const __ptr64;249700;249700;249700;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class Time;249700;249700;249700;0;1
?OnSimpleEvent@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;249685;228500;266000;13309;7
?_Unchecked_end@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBAPEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const * __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Unchecked_end(void)const __ptr64;249650;234600;264700;15050;2
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ;249600;249600;249600;0;1
??_Ginvalid_option_format_error@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::invalid_option_format_error::`scalar deleting destructor'(unsigned int) __ptr64;249600;249600;249600;0;1
?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAXQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> >::deallocate(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64 const,unsigned __int64) __ptr64;249600;249600;249600;0;1
??$forward@AEAVTimelineEntry@@@std@@YAAEAVTimelineEntry@@AEAV1@@Z;class TimelineEntry & __ptr64 __cdecl std::forward<class TimelineEntry & __ptr64>(class TimelineEntry & __ptr64);249600;249600;249600;0;1
?pointer_to@?$pointer_traits@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@SAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@2@AEBU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const * __ptr64>::pointer_to(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupD;249500;249500;249500;0;1
??0?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0>::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int;249500;249500;249500;0;1
??_G?$abstract_value@I@values@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::values::abstract_value<unsigned int>::`scalar deleting destructor'(unsigned int) __ptr64;249500;249500;249500;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >(struct std::;249400;249400;249400;0;1
??0?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0>::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class Ti;249400;249400;249400;0;1
?OnStartActivity@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;249400;249400;249400;0;1
??$?0UFileCompilationData@@@?$_Tuple_val@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAUFileCompilationData@@@Z;??$?0UFileCompilationData@@@?$_Tuple_val@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAUFileCompilationData@@@Z;249300;249300;249300;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<c;249300;249300;249300;0;1
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>::`scalar deleting destructor'(unsigned int) __ptr64;249300;249300;249300;0;1
?_Getal@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Getal(void) __ptr64;249100;249100;249100;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Container_proxy> >::deallocate(class std::allocator<struct std::_Container_proxy> & __ptr64,struct std::_Container_proxy * __ptr64 const,unsigned __int64);249094;208600;319400;33188;18
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;249000;249000;249000;0;1
?OnStopActivity@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;249000;249000;249000;0;1
??_Grange_error@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::range_error::`scalar deleting destructor'(unsigned int) __ptr64;249000;249000;249000;0;1
?Double@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NN@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Double(double) __ptr64;249000;249000;249000;0;1
??$_Get_unwrapped@AEBQEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@YA@AEBQEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z;__cdecl std::_Get_unwrapped<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const & __ptr64>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const & __ptr64);248966;193800;315500;50329;3
??$?CVValue@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEBAPEAVValue@cxxopts@@XZ;class cxxopts::Value * __ptr64 __cdecl std::shared_ptr<class cxxopts::Value>::operator-><class cxxopts::Value,0>(void)const __ptr64;248900;248900;248900;0;1
??$_Get_unwrapped@AEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA@AEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64>(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64);248900;248900;248900;0;1
??_G_Node_base@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_base::`scalar deleting destructor'(unsigned int) __ptr64;248800;248800;248800;0;1
??4?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator=(class std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;248800;248800;248800;0;1
?_Getal@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAAEAV?$allocator@VKeyValue@cxxopts@@@2@XZ;class std::allocator<class cxxopts::KeyValue> & __ptr64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Getal(void) __ptr64;248800;248800;248800;0;1
?length@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBA_J_K@Z;__int64 __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::length(unsigned __int64)const __ptr64;248800;248800;248800;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_type;248800;220400;277200;28400;2
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::operator!=(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64)const __ptr64;248700;248700;248700;0;1
?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<char,class std::allocator<char> >::size(void)const __ptr64;248700;248700;248700;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;248700;248700;248700;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;248600;248600;248600;0;1
??$?0PEBDPEBD$0A@@?$pair@PEBDPEBD@std@@QEAA@XZ;__cdecl std::pair<char const * __ptr64,char const * __ptr64>::pair<char const * __ptr64,char const * __ptr64><char const * __ptr64,char const * __ptr64,0>(void) __ptr64;248600;248600;248600;0;1
?GetMembersPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEBAPEAU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@XZ;struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetMembersPointer(void)const __ptr64;248600;248600;248600;0;1
??1range_error@std@@UEAA@XZ;virtual __cdecl std::range_error::~range_error(void) __ptr64;248600;248600;248600;0;1
?_Getal@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAAEAV?$allocator@UHelpOptionDetails@cxxopts@@@2@XZ;class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Getal(void) __ptr64;248500;248500;248500;0;1
?deallocate@?$allocator@UHelpOptionDetails@cxxopts@@@std@@QEAAXQEAUHelpOptionDetails@cxxopts@@_K@Z;void __cdecl std::allocator<struct cxxopts::HelpOptionDetails>::deallocate(struct cxxopts::HelpOptionDetails * __ptr64 const,unsigned __int64) __ptr64;248500;248500;248500;0;1
??0_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t::_Grp_t(void) __ptr64;248500;248500;248500;0;1
??0?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >(void) __ptr64;248400;248400;248400;0;1
??$forward@V?$tuple@$$QEAUFileCompilationData@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAUFileCompilationData@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@AEAV10@@Z;248400;248400;248400;0;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::Op;248300;248300;248300;0;1
??0?$allocator@UDataPerFile@?A0x120c265a@@@std@@QEAA@XZ;__cdecl std::allocator<struct `anonymous namespace'::DataPerFile>::allocator<struct `anonymous namespace'::DataPerFile>(void) __ptr64;248300;248300;248300;0;1
?_Move_construct@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Move_construct(class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > & __ptr64,struct std::integral_constant<bool,1>) __ptr64;248300;248300;248300;0;1
??$forward@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@YA$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@AEAV10@@Z;??$forward@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@YA$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@AEAV10@@Z;248233;213200;286000;29783;3
??0_Clear_guard@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;248200;248200;248200;0;1
??$Validate@U?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@2@@?$Transcoder@U?$UTF8@D@rapidjson@@U12@@rapidjson@@SA_NAEAU?$GenericStringStream@U?$UTF8@D@rapidjson@@@1@AEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@1@@Z;static bool __cdecl rapidjson::Transcoder<struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char> >::Validate<struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > >(struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > & __ptr64,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64);248200;248200;248200;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@QEAA@PEAU?$_List_node@_KPEAX@1@PEBV?$_List_val@U?$_List_simple_types@_K@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<unsigned __int64> > const * __ptr64) __ptr64;248150;223000;273300;25150;2
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;248150;245300;251000;2850;2
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >(struct std::_List_node<struct std::pair<class std:;248100;248100;248100;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,1>::_Get_first(void)const __ptr64;248100;248100;248100;0;1
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ;virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Lock(void) __ptr64;248083;235300;272600;12709;6
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;248000;248000;248000;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > ;248000;248000;248000;0;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@2@AEAU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > * __ptr64>::pointer_to(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const;247900;247900;247900;0;1
??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVTemplateInstantiation@Activities@234@@Z;??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVTemplateInstantiation@Activities@234@@Z;247900;247900;247900;0;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;247900;247900;247900;0;1
??$get@$00V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::get<1,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);247900;247900;247900;0;1
?__autoclassinit2@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;247800;247800;247800;0;1
??0?$EventDurationProvider@VRawEvent@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::EventDurationProvider<class Microsoft::Cpp::BuildInsights::RawEvent>::EventDurationProvider<class Microsoft::Cpp::BuildInsights::RawEvent>(class Microsoft::Cpp::BuildInsights::RawEvent const * __ptr64) __ptr64;247800;187400;343400;57593;6
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;247750;243900;251600;3850;2
??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAA@PEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@AEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(stru;247700;247700;247700;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@AEAV10@@Z;247700;247700;247700;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,clas;247600;237400;257800;10200;2
?_Init@?$collate@D@std@@IEAAXAEBV_Locinfo@2@@Z;void __cdecl std::collate<char>::_Init(class std::_Locinfo const & __ptr64) __ptr64;247600;247600;247600;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::bucket_count(void)const __ptr64;247400;247400;247400;0;1
?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEBAAEBV?$allocator@I@2@XZ;class std::allocator<unsigned int> const & __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Getal(void)const __ptr64;247400;247400;247400;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std;247300;247300;247300;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<;247300;247300;247300;0;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@2@AEAU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,st;247300;241200;253400;6100;2
?RawAssign@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAXAEAV12@@Z;void __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::RawAssign(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64) __ptr64;247300;247300;247300;0;1
??$?0U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > const & __ptr64) __ptr64;247300;247300;247300;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned ;247300;234500;260100;12800;2
??$move@AEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AEAV10@@Z;??$move@AEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_;247250;232500;262000;14750;2
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ;struct std::default_delete<class std::_Facet_base> & __ptr64 __cdecl std::_Compressed_pair<struct std::default_delete<class std::_Facet_base>,class std::_Facet_base * __ptr64,1>::_Get_first(void) __ptr64;247214;219900;286400;19726;7
?what@bad_weak_ptr@std@@UEBAPEBDXZ;virtual char const * __ptr64 __cdecl std::bad_weak_ptr::what(void)const __ptr64;247200;247200;247200;0;1
?OnStopActivity@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const;247200;247200;247200;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;247150;238900;255400;8250;2
?OnTraceInfo@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVTraceInfo@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnTraceInfo(class Microsoft::Cpp::BuildInsights::TraceInfo const & _;247100;247100;247100;0;1
?allocate@?$allocator@VKeyValue@cxxopts@@@std@@QEAAPEAVKeyValue@cxxopts@@_K@Z;class cxxopts::KeyValue * __ptr64 __cdecl std::allocator<class cxxopts::KeyValue>::allocate(unsigned __int64) __ptr64;247000;247000;247000;0;1
??0?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileCompilationsAnalyzer@@P85@EAAXAEBVBackEndPass@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileCompilationsAnalyzer@@P85@EAAXAEBVBackEndPass@Activities@234@@Z@Z;247000;247000;247000;0;1
??$distance@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@YA_JPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@0@Z;__int64 __cdecl std::distance<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64);247000;247000;247000;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64 const & __ptr64);247000;247000;247000;0;1
?get_implicit_value@?$abstract_value@_N@values@cxxopts@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::values::abstract_value<bool>::get_implicit_value(void)const __ptr64;247000;247000;247000;0;1
?_Sfx@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAAEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@XZ;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Sfx(void) __ptr64;247000;247000;247000;0;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::_Allocate(void) __ptr64;246900;246900;246900;0;1
??_G?$_Node_str@D@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_str<char>::`scalar deleting destructor'(unsigned int) __ptr64;246900;246900;246900;0;1
??$forward@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;246900;246900;246900;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_;246850;245100;248600;1750;2
??0?$standard_value@I@values@cxxopts@@QEAA@AEBV012@@Z;__cdecl cxxopts::values::standard_value<unsigned int>::standard_value<unsigned int>(class cxxopts::values::standard_value<unsigned int> const & __ptr64) __ptr64;246800;246800;246800;0;1
??_G_Node_endif@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_endif::`scalar deleting destructor'(unsigned int) __ptr64;246800;246800;246800;0;1
?_Unchecked_begin@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ;unsigned __int64 * __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Unchecked_begin(void) __ptr64;246700;246700;246700;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >(void);246700;246700;246700;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAA@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64;246700;224800;268600;21900;2
?what@exception@std@@UEBAPEBDXZ;virtual char const * __ptr64 __cdecl std::exception::what(void)const __ptr64;246644;213300;299300;20655;18
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::al;246500;242300;250700;4200;2
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVTemplateInstantiation@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVTemplateInstantiation@Activities@234@@Z@Z;246500;246500;246500;0;1
?_Get_first@?$_Compressed_pair@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@2@$00@std@@QEBAAEBU?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_Compressed_pair<struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::_Compressed_pair<struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,float,1>,1>::_Get_first(void)const __ptr64;246485;217200;266900;16965;7
?__autoclassinit2@_Node_back@std@@QEAAX_K@Z;void __cdecl std::_Node_back::__autoclassinit2(unsigned __int64) __ptr64;246400;246400;246400;0;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::_Allocate(void) __ptr64;246400;223900;268900;22500;2
??1?$_Tgt_state_t@PEBD@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<char const * __ptr64>::~_Tgt_state_t<char const * __ptr64>(void) __ptr64;246400;246400;246400;0;1
??$forward@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEBU10@@Z;struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::forward<struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);246400;246400;246400;0;1
??$?0PEBD@?$_Tuple_val@$$QEAPEBD@std@@QEAA@$$QEAPEBD@Z;??$?0PEBD@?$_Tuple_val@$$QEAPEBD@std@@QEAA@$$QEAPEBD@Z;246350;222200;270500;24150;2
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@XZ;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::operator*(void)const __ptr64;246300;246300;246300;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;246300;246300;246300;0;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Max_bucket_size(void) __ptr64;246200;246200;246200;0;1
??$get@$0A@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YAAEBV?$shared_ptr@VOptionDetails@cxxopts@@@0@$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@@Z;??$get@$0A@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YAAEBV?$shared_ptr@VOptionDetails@cxxopts@@@0@$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@@Z;246200;246200;246200;0;1
?allocate@?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@QEAAPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@_K@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>::allocate(unsigned __int64) __ptr64;246100;246100;246100;0;1
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVActivity@Activities@234@AEBVCommandLine@SimpleEvents@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVActivity@Activities@234@AEBVCommandLine@SimpleEvents@234@@Z@Z;246100;246100;246100;0;1
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;246100;246100;246100;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >::alloca;246000;246000;246000;0;1
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator!=(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64)const __ptr64;246000;246000;246000;0;1
?_Beg_expr@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEBA_NPEAV_Node_base@2@@Z;bool __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Beg_expr(class std::_Node_base * __ptr64)const __ptr64;246000;246000;246000;0;1
?_Is_word@std@@YA_NE@Z;bool __cdecl std::_Is_word(unsigned char);245900;245900;245900;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_Lis;245850;232700;259000;13150;2
??_GTemplateInstantiationsAnalyzer@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl TemplateInstantiationsAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;245800;245800;245800;0;1
?_Umove_if_noexcept1@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXPEAVKeyValue@cxxopts@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Umove_if_noexcept1(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64,struct std::integral_constant<bool,1>) __ptr64;245800;245800;245800;0;1
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<c;245750;245600;245900;150;2
??0?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAA@PEAU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@@Z;__cdecl rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64) __ptr64;245700;245700;245700;0;1
??_GFileCompilationsAnalyzer@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl FileCompilationsAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;245700;245700;245700;0;1
??$?C$$CBVOptionDetails@cxxopts@@$0A@@?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@QEBAPEBVOptionDetails@cxxopts@@XZ;class cxxopts::OptionDetails const * __ptr64 __cdecl std::shared_ptr<class cxxopts::OptionDetails const >::operator-><class cxxopts::OptionDetails const ,0>(void)const __ptr64;245700;245700;245700;0;1
??0?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::Value const >::_Ptr_base<class cxxopts::Value const >(void) __ptr64;245700;245700;245700;0;1
??_GOptionSpecException@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::OptionSpecException::`scalar deleting destructor'(unsigned int) __ptr64;245600;245600;245600;0;1
??$forward@AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > const & __ptr64>(class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > const & __ptr64);245600;245600;245600;0;1
??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V;245600;245600;245600;0;1
??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;245600;245600;245600;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,str;245550;241400;249700;4150;2
??4?$_Bt_state_t@PEBD@std@@QEAAAEAV01@AEBV01@@Z;class std::_Bt_state_t<char const * __ptr64> & __ptr64 __cdecl std::_Bt_state_t<char const * __ptr64>::operator=(class std::_Bt_state_t<char const * __ptr64> const & __ptr64) __ptr64;245500;245500;245500;0;1
??_GOptionException@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::OptionException::`scalar deleting destructor'(unsigned int) __ptr64;245500;245500;245500;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;245400;245400;245400;0;1
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base12>::~_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >;245300;245300;245300;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > & __ptr64,struct std::_List_node<struct s;245300;245300;245300;0;1
??0?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;245300;245300;245300;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;245300;222200;268400;23100;2
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@QEAA@PEAU?$_List_node@_KPEAX@1@PEBV?$_List_val@U?$_List_simple_types@_K@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<unsigned __int64> > const * __ptr64) __ptr64;245300;245300;245300;0;1
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Getal(void)const __ptr64;245300;245300;245300;0;1
?_Destroy@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Destroy(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_iterato;245200;245200;245200;0;1
??$_Hash_representation@PEAVOptionDetails@cxxopts@@@std@@YA_KAEBQEAVOptionDetails@cxxopts@@@Z;unsigned __int64 __cdecl std::_Hash_representation<class cxxopts::OptionDetails * __ptr64>(class cxxopts::OptionDetails * __ptr64 const & __ptr64);245200;245200;245200;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineE;245200;245200;245200;0;1
??$move@AEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@@Z;??$move@AEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@@Z;245200;226300;264100;18900;2
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KUTemplateInstantiationData@@@1@XZ;struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;245200;204300;286100;40900;2
??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z;__cdecl std::fpos<struct _Mbstatet>::fpos<struct _Mbstatet>(struct _Mbstatet,__int64) __ptr64;245066;225500;266700;13279;6
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::operator++(void) __ptr64;245050;237900;252200;7150;2
?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::__autoclassinit2(unsigned __int64) __ptr64;245028;201900;355700;47232;7
?_Destroy@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<bool> >::_Destroy(void) __ptr64;245000;245000;245000;0;1
?allocate@?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@_K@Z;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::allocate(unsigned __int64) __ptr64;245000;245000;245000;0;1
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ;virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Unlock(void) __ptr64;244983;223000;274800;15617;6
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >::deallocate(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;244900;244900;244900;0;1
??$forward@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@0@AEAPEAU10@@Z;244900;217400;272400;27500;2
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::ch;244900;244900;244900;0;1
??$?0U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > const & __ptr64) __ptr64;244900;244900;244900;0;1
?size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<bool,class std::allocator<bool> >::size(void)const __ptr64;244900;244900;244900;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namesp;244900;244900;244900;0;1
??0RawEvent@BuildInsights@Cpp@Microsoft@@QEAA@AEBUEVENT_DATA_TAG@123@@Z;__cdecl Microsoft::Cpp::BuildInsights::RawEvent::RawEvent(struct Microsoft::Cpp::BuildInsights::EVENT_DATA_TAG const & __ptr64) __ptr64;244883;217000;275500;17847;6
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;244800;244800;244800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U_Loop_vals_t@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Loop_vals_t@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U_Loop_vals_t@std@@@2@XZ;class std::allocator<struct std::_Loop_vals_t> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Loop_vals_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Loop_vals_t> >,1>::_Get_first(void) __ptr64;244800;244800;244800;0;1
??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct st;244800;244800;244800;0;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator->(void)const __ptr64;244800;244800;244800;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_trait;244766;237200;253400;6656;3
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct ;244750;230600;258900;14150;2
??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_;244700;244700;244700;0;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,s;244600;244600;244600;0;1
?_Getmark@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEBAPEAV_Node_base@2@XZ;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Getmark(void)const __ptr64;244600;244600;244600;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionVa;244600;244600;244600;0;1
??1?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA@XZ;virtual __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::~StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Inte;244600;244600;244600;0;1
??$_Pocca@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@YAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@AEBV10@@Z;void __cdecl std::_Pocca<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64);244600;244600;244600;0;1
??$Run@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@12;244600;244600;244600;0;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>;244600;244600;244600;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::sh;244500;244500;244500;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VCompiler@Activities@BuildInsights@Cpp@Microsoft@@VLinker@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Compiler,class Microsoft::Cpp::BuildInsights::Activities::Linker> >::Run(unsigned int);244400;244400;244400;0;1
??$?0U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > const & __ptr64) __ptr64;244400;244400;244400;0;1
??C?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEBAPEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@1234@XZ;class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPt;244400;244400;244400;0;1
?__autoclassinit2@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::__autoclassinit2(unsigned __int64) __ptr64;244400;244400;244400;0;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::_Allocate(void) __ptr64;244400;244400;244400;0;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;244400;244400;244400;0;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_typ;244300;244300;244300;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;244300;244300;244300;0;1
??$?0PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>(class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> const & __ptr64) __ptr64;244100;244100;244100;0;1
??$?0$04@?$GenericStringRef@D@rapidjson@@QEAA@AEAY04$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><5>(char const (& __ptr64)[5]) __ptr64;244100;244100;244100;0;1
?_Nw@?$_Vb_val@V?$allocator@_N@std@@@std@@SA_K_K@Z;static unsigned __int64 __cdecl std::_Vb_val<class std::allocator<bool> >::_Nw(unsigned __int64);244100;244100;244100;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >::allocate(unsigned __int64) __ptr64;244000;244000;244000;0;1
??R<lambda_b91a942b4070954e66476ae297366993>@@QEBA_NAEBU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@0@Z;bool __cdecl <lambda_b91a942b4070954e66476ae297366993>::operator()(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> const & __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> const & __ptr64)const __ptr64;243900;243900;243900;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName> >::Run(unsigned int);243900;205100;282700;38800;2
?_Do_hash@?$hash@PEAVOptionDetails@cxxopts@@@std@@SA_KAEBQEAVOptionDetails@cxxopts@@@Z;static unsigned __int64 __cdecl std::hash<class cxxopts::OptionDetails * __ptr64>::_Do_hash(class cxxopts::OptionDetails * __ptr64 const & __ptr64);243900;243900;243900;0;1
??$next@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAU120@_J@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::next<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,__int64);243900;243900;243900;0;1
??$_Fnv1a_append_value@PEAVOptionDetails@cxxopts@@@std@@YA_K_KAEBQEAVOptionDetails@cxxopts@@@Z;unsigned __int64 __cdecl std::_Fnv1a_append_value<class cxxopts::OptionDetails * __ptr64>(unsigned __int64,class cxxopts::OptionDetails * __ptr64 const & __ptr64);243900;243900;243900;0;1
??$_Destroy_range@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@QEAPEBU10@AEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilat;243900;243900;243900;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> >;243800;243800;243800;0;1
??$addressof@$$CBV?$vector@_NV?$allocator@_N@std@@@std@@@std@@YAPEBV?$vector@_NV?$allocator@_N@std@@@0@AEBV10@@Z;class std::vector<bool,class std::allocator<bool> > const * __ptr64 __cdecl std::addressof<class std::vector<bool,class std::allocator<bool> > const >(class std::vector<bool,class std::allocator<bool> > const & __ptr64);243800;243800;243800;0;1
?allocate@?$allocator@I@std@@QEAAPEAI_K@Z;unsigned int * __ptr64 __cdecl std::allocator<unsigned int>::allocate(unsigned __int64) __ptr64;243700;243700;243700;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class st;243700;243700;243700;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base12>(void) __ptr64;243650;224500;262800;19150;2
??0?$shared_ptr@_N@std@@QEAA@XZ;__cdecl std::shared_ptr<bool>::shared_ptr<bool>(void) __ptr64;243600;243600;243600;0;1
??$_Destroy_range@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@YAXPEAV?$sub_match@PEBD@0@QEAV10@AEAV?$allocator@V?$sub_match@PEBD@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class std::sub_match<char const * __ptr64> > >(class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64 const,class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64);243600;243600;243600;0;1
?capacity@?$vector@KV?$allocator@K@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::capacity(void)const __ptr64;243500;243500;243500;0;1
?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ;void __cdecl std::vector<bool,class std::allocator<bool> >::_Xlen(void)const __ptr64;243500;243500;243500;0;1
??$Run@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Mi;243400;243400;243400;0;1
??$move@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AEAV10@@Z;??$move@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AEAV10@@Z;243400;243400;243400;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@PEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>;243400;243400;243400;0;1
?resize@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::resize(unsigned __int64) __ptr64;243400;243400;243400;0;1
?deallocate@?$allocator@I@std@@QEAAXQEAI_K@Z;void __cdecl std::allocator<unsigned int>::deallocate(unsigned int * __ptr64 const,unsigned __int64) __ptr64;243400;243400;243400;0;1
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z;char * __ptr64 * __ptr64 __cdecl std::addressof<char * __ptr64>(char * __ptr64 & __ptr64);243393;190500;334000;43556;15
?OnEndRelogging@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnEndRelogging(void) __ptr64;243228;169500;524000;124213;7
??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ;??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ;243200;243200;243200;0;1
??0?$regex_traits@D@std@@QEAA@XZ;__cdecl std::regex_traits<char>::regex_traits<char>(void) __ptr64;243100;243100;243100;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@_KPEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,1>::_Get_first(void)const __ptr64;243000;243000;243000;0;1
??0Invocation@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::Invocation::Invocation(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;243000;243000;243000;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned ;243000;242700;243300;300;2
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > ;243000;243000;243000;0;1
??1?$standard_value@_N@values@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::values::standard_value<bool>::~standard_value<bool>(void) __ptr64;242900;242900;242900;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct st;242900;238300;247500;4600;2
??$?0PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64>(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> const & __ptr64) __ptr64;242900;242900;242900;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,1>::_Get_first(void)const __ptr64;242900;242900;242900;0;1
??$EntityCanMaterializeId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass>(unsigned int);242800;242800;242800;0;1
??$?RVFunction@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFunction@Activities@234@@Z;??$?RVFunction@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFunction@Activities@234@@Z;242800;242800;242800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_Lis;242700;242700;242700;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;242700;242700;242700;0;1
??$_Swap_adl@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YAXAEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Swap_adl<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 & __ptr64,class std::_List_unchecked_iterator<class std::_List_va;242700;242700;242700;0;1
?_Ufill@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAPEAV?$sub_match@PEBD@2@PEAV32@_KU_Value_init_tag@2@@Z;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Ufill(class std::sub_match<char const * __ptr64> * __ptr64,unsigned __int64,struct std::_Value_init_tag) __ptr64;242600;242600;242600;0;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@;242600;242600;242600;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64>::_Release(void) __ptr64;242600;242600;242600;0;1
??C?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@XZ;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const * __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::operator->(void)const __ptr64;242600;242600;242600;0;1
?allocate@?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@QEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@_K@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >::allocate(unsigned __int64) __ptr64;242600;230800;254300;9594;3
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::;242600;237800;247400;4800;2
??1?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;242500;242500;242500;0;1
??$_Refancy@PEAK$0A@@std@@YAPEAKPEAK@Z;unsigned long * __ptr64 __cdecl std::_Refancy<unsigned long * __ptr64,0>(unsigned long * __ptr64);242500;242500;242500;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64 const,unsigned __int64) __ptr64;242500;242500;242500;0;1
??$_Destroy_range@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@YAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@QEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64);242500;242500;242500;0;1
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> >(void) __ptr64;242500;242500;242500;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > ;242500;242500;242500;0;1
??0?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFilterTimelineAnalyzer@@P85@EAAXAEBVTemplateInstantiation@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFilterTimelineAnalyzer@@P85@EAAXAEBVTemplateInstantiation@Activities@234@@Z@Z;242500;242500;242500;0;1
??0?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>(void) __ptr64;242400;242400;242400;0;1
?deallocate@?$allocator@K@std@@QEAAXQEAK_K@Z;void __cdecl std::allocator<unsigned long>::deallocate(unsigned long * __ptr64 const,unsigned __int64) __ptr64;242400;242400;242400;0;1
??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;242300;242300;242300;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct;242300;242300;242300;0;1
??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z;class std::codecvt<char,char,struct _Mbstatet> const * __ptr64 __cdecl std::addressof<class std::codecvt<char,char,struct _Mbstatet> const >(class std::codecvt<char,char,struct _Mbstatet> const & __ptr64);242183;212900;325800;38013;6
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<ch;242100;242100;242100;0;1
??1?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::~_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;242100;242100;242100;0;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared;242000;242000;242000;0;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > & __ptr64);242000;242000;242000;0;1
??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64>(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64);242000;242000;242000;0;1
??$?0V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >(class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;241950;240500;243400;1450;2
?_Getal@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEBAAEBV?$allocator@UDataPerFunction@?A0x5f10505a@@@2@XZ;class std::allocator<struct `anonymous namespace'::DataPerFunction> const & __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Getal(void)const __ptr64;241900;241900;241900;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64,class std::_List_va;241900;241900;241900;0;1
?_Unchecked_begin@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBAPEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const * __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Unchecked_begin(void)const __ptr64;241900;230300;253500;11600;2
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::al;241850;227800;255900;14050;2
??R?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;bool __cdecl std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::operator()(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;241814;206600;339600;40906;7
?_Do_hash@?$hash@_K@std@@SA_KAEB_K@Z;static unsigned __int64 __cdecl std::hash<unsigned __int64>::_Do_hash(unsigned __int64 const & __ptr64);241814;226200;262300;13103;7
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const & __ptr64);241800;241800;241800;0;1
?_Umove_if_noexcept1@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEAAXPEAUDataPerFile@?A0x120c265a@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Umove_if_noexcept1(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64,struct std::integral_constant<bool,1>) __ptr64;241800;241800;241800;0;1
??$forward@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@YA$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@AEAV10@@Z;??$forward@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@YA$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@AEAV10@@Z;241700;241700;241700;0;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Range_eraser::_Bump_erased(void) __ptr64;241600;241600;241600;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >,class std::_Vector_val;241600;241600;241600;0;1
??$move@AEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@AEAV10@@Z;241600;216800;266400;24800;2
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;241600;239800;243400;1800;2
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;241550;233300;249800;8250;2
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > >::allocate(unsigned __int64) __ptr64;241500;241500;241500;0;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Release(void) __ptr64;241500;241500;241500;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::alloc;241500;241500;241500;0;1
??$forward@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microso;241500;241500;241500;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;241450;229500;253400;11950;2
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@XZ;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Release(void) __ptr64;241400;241400;241400;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::operator--(void) __ptr64;241400;241400;241400;0;1
??0?$shared_ptr@I@std@@QEAA@XZ;__cdecl std::shared_ptr<unsigned int>::shared_ptr<unsigned int>(void) __ptr64;241300;241300;241300;0;1
?_Move_construct@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Move_construct(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64,struct std::integral_constant<bool,1>);241300;241300;241300;0;1
?GetType@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA?AW4Type@2@XZ;enum rapidjson::Type __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetType(void)const __ptr64;241200;241200;241200;0;1
??9?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator!=(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;241200;241200;241200;0;1
?OnEndAnalysis@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnal;241200;241200;241200;0;1
?GetLength@ShortString@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAIXZ;unsigned int __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::ShortString::GetLength(void)const __ptr64;241100;241100;241100;0;1
??$_Destroy_in_place@I@std@@YAXAEAI@Z;void __cdecl std::_Destroy_in_place<unsigned int>(unsigned int & __ptr64);241100;241100;241100;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;241000;241000;241000;0;1
?_Get_max_bucket_size@?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@QEAAAEAMXZ;float & __ptr64 __cdecl std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >::_Get_max_bucket_size(void) __ptr64;240940;210900;320400;40253;5
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 con;240900;233800;245000;5040;3
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > const >(class std::_List_va;240900;240900;240900;0;1
??$?0U_Loop_vals_t@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U_Loop_vals_t@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_Loop_vals_t>(class std::allocator<struct std::_Loop_vals_t> const & __ptr64) __ptr64;240900;240900;240900;0;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;240900;240900;240900;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,;240850;209200;272500;31650;2
??$forward@AEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAAEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> const & __ptr64 __cdecl std::forward<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> const & __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> const & __ptr64);240800;240800;240800;0;1
?__autoclassinit2@_Node_end_group@std@@QEAAX_K@Z;void __cdecl std::_Node_end_group::__autoclassinit2(unsigned __int64) __ptr64;240700;240700;240700;0;1
??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base12@1@@Z;__cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(unsigned int const * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;240700;240700;240700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > ;240700;240700;240700;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64>::_R;240650;233200;248100;7450;2
?_Get_first@?$_Compressed_pair@U?$hash@_K@std@@V?$_Compressed_pair@U?$equal_to@_K@std@@M$00@2@$00@std@@QEBAAEBU?$hash@_K@2@XZ;struct std::hash<unsigned __int64> const & __ptr64 __cdecl std::_Compressed_pair<struct std::hash<unsigned __int64>,class std::_Compressed_pair<struct std::equal_to<unsigned __int64>,float,1>,1>::_Get_first(void)const __ptr64;240614;212400;292300;27107;7
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 const & __ptr64);240600;240600;240600;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >(struct std::_List_no;240600;240600;240600;0;1
?OnBeginAnalysisPass@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAn;240600;240600;240600;0;1
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const * __ptr64 __cdecl std::addressof<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);240600;224200;257000;16400;2
?__autoclassinit2@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::__autoclassinit2(unsigned __int64) __ptr64;240500;240500;240500;0;1
?allocate@?$allocator@V?$sub_match@PEBD@std@@@std@@QEAAPEAV?$sub_match@PEBD@2@_K@Z;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::allocator<class std::sub_match<char const * __ptr64> >::allocate(unsigned __int64) __ptr64;240500;240500;240500;0;1
?allocate@?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >::allocate(unsigned __int64) __ptr64;240400;240400;240400;0;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> ><struct std::pair<class std::basic_string<char,struct std::char;240400;240400;240400;0;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::__autoclassinit2(unsigned __int64) __ptr64;240300;240300;240300;0;1
??$_Adl_verify_range@PEAIPEAI@std@@YAXAEBQEAI0@Z;void __cdecl std::_Adl_verify_range<unsigned int * __ptr64,unsigned int * __ptr64>(unsigned int * __ptr64 const & __ptr64,unsigned int * __ptr64 const & __ptr64);240300;240300;240300;0;1
??1runtime_error@std@@UEAA@XZ;virtual __cdecl std::runtime_error::~runtime_error(void) __ptr64;240300;240300;240300;0;1
?_Destroy@?$_Ref_count_obj2@_N@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<bool>::_Destroy(void) __ptr64;240300;240300;240300;0;1
?OnBeginRelogging@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnBeginRelogging(void) __ptr64;240257;215400;316600;32492;7
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >::_Allocate(void) __ptr64;240200;240200;240200;0;1
??_Gruntime_error@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::runtime_error::`scalar deleting destructor'(unsigned int) __ptr64;240200;240200;240200;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>,class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_tr;240200;240200;240200;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * ;240100;240100;240100;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class st;240100;238100;242100;2000;2
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>(cl;240100;240100;240100;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std;240100;240100;240100;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;240000;240000;240000;0;1
?_Unchecked_end@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@XZ;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Unchecked_end(void) __ptr64;240000;240000;240000;0;1
??1?$pair@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@QEAA@XZ;__cdecl std::pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::~pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;240000;240000;240000;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;239900;239900;239900;0;1
??$check_signed_range@II@detail@values@cxxopts@@YAX_NIAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void __cdecl cxxopts::values::detail::check_signed_range<unsigned int,unsigned int>(bool,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);239800;239800;239800;0;1
?_Del@?$_Buf@D@std@@QEAADXZ;char __cdecl std::_Buf<char>::_Del(void) __ptr64;239800;239800;239800;0;1
??1?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::~_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;239800;239800;239800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEBAAEBV?$allocator@VKeyValue@cxxopts@@@2@XZ;class std::allocator<class cxxopts::KeyValue> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class cxxopts::KeyValue>,class std::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> >,1>::_Get_first(void)const __ptr64;239800;239800;239800;0;1
??$addressof@$$CBV?$ctype@D@std@@@std@@YAPEBV?$ctype@D@0@AEBV10@@Z;class std::ctype<char> const * __ptr64 __cdecl std::addressof<class std::ctype<char> const >(class std::ctype<char> const & __ptr64);239700;239700;239700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ;class std::allocator<unsigned __int64> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned __int64>,class std::_Vector_val<struct std::_Simple_types<unsigned __int64> >,1>::_Get_first(void) __ptr64;239700;239700;239700;0;1
?Key@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NPEBDI_N@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Key(char const * __ptr64,unsigned int,bool) __ptr64;239700;239700;239700;0;1
??0?$allocator@UHelpOptionDetails@cxxopts@@@std@@QEAA@XZ;__cdecl std::allocator<struct cxxopts::HelpOptionDetails>::allocator<struct cxxopts::HelpOptionDetails>(void) __ptr64;239600;239600;239600;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > & _;239600;239600;239600;0;1
?_Destroy@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Destroy(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __;239600;239600;239600;0;1
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z;??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z;239572;187400;413500;58389;11
?get@?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEBAPEAVOptionDetails@cxxopts@@XZ;class cxxopts::OptionDetails * __ptr64 __cdecl std::_Ptr_base<class cxxopts::OptionDetails>::get(void)const __ptr64;239500;239500;239500;0;1
??0?$allocator@U_Loop_vals_t@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::_Loop_vals_t>::allocator<struct std::_Loop_vals_t>(void) __ptr64;239500;239500;239500;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;239500;239500;239500;0;1
??0?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAA@PEAUDataPerFile@?A0x120c265a@@AEAV?$allocator@UDataPerFile@?A0x120c265a@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFile> >(struct `anonymous namespace'::DataPerFile * __ptr64,class std::allocator<struct `anonymous namespace'::DataPerFile> & __ptr64) __ptr64;239500;239500;239500;0;1
??$_Swap_adl@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXAEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::_Swap_adl<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 & __ptr64,class std::_List_unch;239450;237000;241900;2450;2
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z;??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z;239400;239400;239400;0;1
??$move@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YA$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAPEBU10@@Z;??$move@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YA$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAPEBU10@@Z;239400;239400;239400;0;1
?_Unchecked_begin@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cons;239300;239300;239300;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64;239300;239300;239300;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;239300;239300;239300;0;1
??1OptionException@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::OptionException::~OptionException(void) __ptr64;239300;239300;239300;0;1
??0?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@PEAUHelpOptionDetails@cxxopts@@AEAV?$allocator@UHelpOptionDetails@cxxopts@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >::_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >(struct cxxopts::HelpOptionDetails * __ptr64,class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64) __ptr64;239300;239300;239300;0;1
??0?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@PEAVKeyValue@cxxopts@@AEAV?$allocator@VKeyValue@cxxopts@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >::_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >(class cxxopts::KeyValue * __ptr64,class std::allocator<class cxxopts::KeyValue> & __ptr64) __ptr64;239100;239100;239100;0;1
?_Destroy@?$_Ref_count_obj2@VOptionDetails@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::OptionDetails>::_Destroy(void) __ptr64;239100;239100;239100;0;1
??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z;void __cdecl std::_Adl_verify_range<char const * __ptr64,char const * __ptr64>(char const * __ptr64 const & __ptr64,char const * __ptr64 const & __ptr64);239050;234500;243600;4550;2
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;239000;239000;239000;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_;239000;227600;250400;11400;2
?max_size@?$_Default_allocator_traits@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@SA_KAEBV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::max_size(class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > const & __ptr64);238966;212600;288900;35326;3
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,voi;238950;235500;242400;3450;2
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::sha;238900;238900;238900;0;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >(void) __ptr64;238900;238900;238900;0;1
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAAXPEBK@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::_Seek_to(unsigned long const * __ptr64) __ptr64;238900;238900;238900;0;1
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@PEAPEAVTimelineEntry@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@$$QEAPEAPEAVTimelineEntry@@@Z;??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@PEAPEAVTimelineEntry@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@$$QEAPEAPEAVTimelineEntry@@@Z;238850;222000;255700;16850;2
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_Compressed_pair<struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::_Compressed_pair<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >,class std::_Tr;238800;238800;238800;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::max_size(class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> const & __ptr64);238800;238800;238800;0;1
??1?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::~unordered_map<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,struct std::hash<class std::shared;238800;238800;238800;0;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@VCommandLine@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microso;238800;238800;238800;0;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * _;238750;230300;247200;8450;2
??1_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t::~_Grp_t(void) __ptr64;238600;238600;238600;0;1
?OnBeginAnalysis@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnBeginAnalysis(void) __ptr64;238600;238600;238600;0;1
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z;void __cdecl std::_Pocma<class std::allocator<char> >(class std::allocator<char> & __ptr64,class std::allocator<char> & __ptr64);238500;238500;238500;0;1
??0?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>(void) __ptr64;238500;238500;238500;0;1
??0?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::values::standard_value<bool> >::_Ptr_base<class cxxopts::values::standard_value<bool> >(void) __ptr64;238400;238400;238400;0;1
??0?$_Ptr_base@V?$standard_value@I@values@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::values::standard_value<unsigned int> >::_Ptr_base<class cxxopts::values::standard_value<unsigned int> >(void) __ptr64;238400;238400;238400;0;1
?get@?$_Ptr_base@I@std@@IEBAPEAIXZ;unsigned int * __ptr64 __cdecl std::_Ptr_base<unsigned int>::get(void)const __ptr64;238300;238300;238300;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct ;238200;215000;261400;23200;2
?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::size(void)const __ptr64;238200;238200;238200;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationDat;238200;218100;258300;20100;2
??__Fs_defaultOutputPathTemplateInstantiations@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultOutputPathTemplateInstantiations''(void);238100;238100;238100;0;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> ><struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,st;238100;238100;238100;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64,class ;238100;220600;255600;17500;2
??$forward@AEBV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@YAAEBV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@AEBV123@@Z;class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::forward<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);238100;238100;238100;0;1
?allocate@?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@QEAAPEAUDataPerFunction@?A0x5f10505a@@_K@Z;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::allocator<struct `anonymous namespace'::DataPerFunction>::allocate(unsigned __int64) __ptr64;238100;238100;238100;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::;238100;238100;238100;0;1
?what@OptionException@cxxopts@@UEBAPEBDXZ;virtual char const * __ptr64 __cdecl cxxopts::OptionException::what(void)const __ptr64;238000;238000;238000;0;1
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z;class std::_Facet_base * __ptr64 & __ptr64 __cdecl std::forward<class std::_Facet_base * __ptr64 & __ptr64>(class std::_Facet_base * __ptr64 & __ptr64);237942;201600;327000;38271;7
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct;237900;237900;237900;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>;237833;201300;282200;33488;3
??$advance@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@_J@std@@YAXAEAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@_J@Z;void __cdecl std::advance<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,__int64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 & __ptr64,__int64);237800;237800;237800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@2@XZ;class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >,class std::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,1>::_Get_first(void)const __ptr64;237700;210500;259500;20365;3
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::a;237700;237700;237700;0;1
??0Double@internal@rapidjson@@QEAA@N@Z;__cdecl rapidjson::internal::Double::Double(double) __ptr64;237700;237700;237700;0;1
?OnActivityStartRoot@BuildTimelineAnalyzer@@AEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnActivityStartRoot(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;237700;237700;237700;0;1
?_OctalDigits@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_OctalDigits(void) __ptr64;237700;237700;237700;0;1
??$_Move_backward_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAPEBU12@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@PEAPEBU10@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::_Move_backward_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;237600;237600;237600;0;1
??$_Get_unwrapped@AEBQEAPEAVTimelineEntry@@@std@@YA@AEBQEAPEAVTimelineEntry@@@Z;__cdecl std::_Get_unwrapped<class TimelineEntry * __ptr64 * __ptr64 const & __ptr64>(class TimelineEntry * __ptr64 * __ptr64 const & __ptr64);237600;222100;253100;15500;2
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64>::_Release(void) __ptr64;237600;237600;237600;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared;237600;237600;237600;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>,class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::c;237500;237500;237500;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;237400;225200;249600;12200;2
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::destroy<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const);237400;237400;237400;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymo;237400;237400;237400;0;1
??$forward@AEBVEventStack@BuildInsights@Cpp@Microsoft@@@std@@YAAEBVEventStack@BuildInsights@Cpp@Microsoft@@AEBV1234@@Z;class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64 __cdecl std::forward<class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64>(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64);237300;198600;295700;42017;3
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVSymbolName@SimpleEvents@012@@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVSymbolName@SimpleEvents@012@@Z@Z;237300;237300;237300;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEBAAEBV?$allocator@I@2@XZ;class std::allocator<unsigned int> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned int>,class std::_Vector_val<struct std::_Simple_types<unsigned int> >,1>::_Get_first(void)const __ptr64;237300;237300;237300;0;1
?StopTimestamp@Activity@Activities@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::Activity::StopTimestamp(void)const __ptr64;237066;214600;290700;25134;6
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@AEBVCommandLine@SimpleEvents@012@@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@AEBVCommandLine@SimpleEvents@012@@Z@Z;237000;237000;237000;0;1
??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPEAIQEAIAEAV?$allocator@I@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<unsigned int> >(unsigned int * __ptr64,unsigned int * __ptr64 const,class std::allocator<unsigned int> & __ptr64);237000;237000;237000;0;1
??Tstd@@YA?AW4_Node_flags@0@W410@0@Z;enum std::_Node_flags __cdecl std::operator^(enum std::_Node_flags,enum std::_Node_flags);237000;237000;237000;0;1
?_Umove@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEAAPEAUDataPerFile@?A0x120c265a@@PEAU34@00@Z;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Umove(struct A0x120c265a::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64) __ptr64;237000;237000;237000;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basi;237000;228800;245200;8200;2
?_Unchecked_end@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@XZ;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Unchecked_end(void) __ptr64;236900;236900;236900;0;1
??$distance@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA_JPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@0@Z;__int64 __cdecl std::distance<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64);236900;236900;236900;0;1
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ;class std::allocator<unsigned __int64> & __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Getal(void) __ptr64;236900;236900;236900;0;1
?OnBeginAnalysisPass@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnBeginAnalysisPass(void) __ptr64;236900;236900;236900;0;1
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::destroy<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64,class std::basic_string<char,struct std::char_tr;236900;219300;254500;17600;2
??0?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAA@PEBU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@@Z;__cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > const * __ptr64) __ptr64;236800;236800;236800;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64);236800;236800;236800;0;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ra;236800;225900;247700;10900;2
??$_Adl_verify_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64);236700;236700;236700;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std:;236625;219300;245900;10280;4
?_Get_first@?$_Compressed_pair@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@2@$00@std@@QEBAAEBU?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@XZ;struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> > const & __ptr64 __cdecl std::_Compressed_pair<struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,class std::_Compressed_pair<struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >,float,1>,1>::_Get_first(void)const __ptr64;236600;236600;236600;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::__autoclassinit2(unsigned __int64) __ptr64;236600;236600;236600;0;1
??0?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> >::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> >(void) __ptr64;236600;236600;236600;0;1
??$?RVFunction@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFunction@Activities@234@@Z;??$?RVFunction@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFunction@Activities@234@@Z;236600;236600;236600;0;1
??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::forward<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);236600;236600;236600;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::max_size(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);236600;236600;236600;0;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class st;236600;221500;251700;15100;2
?__autoclassinit2@_Node_rep@std@@QEAAX_K@Z;void __cdecl std::_Node_rep::__autoclassinit2(unsigned __int64) __ptr64;236600;236600;236600;0;1
??E?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@XZ;class rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator++(void) __ptr64;236500;236500;236500;0;1
?Empty@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Empty(void)const __ptr64;236500;236500;236500;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >(class s;236500;236500;236500;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0>::operator++(void) __ptr64;236400;236400;236400;0;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > const & __ptr64)const __ptr64;236400;236400;236400;0;1
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z;??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z;236316;196400;397500;56558;18
??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z;void __cdecl <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()(char * __ptr64 const,char const * __ptr64 const,unsigned __int64)const __ptr64;236300;236300;236300;0;1
??$?0_K@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z;__cdecl std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> >::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> ><unsigned __int64>(class std::allocator<unsigned __int64> const & __ptr64) __ptr64;236300;236300;236300;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;236300;236300;236300;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::max_size(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >;236300;236300;236300;0;1
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>(void) __ptr64;236300;236300;236300;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<char> >::max_size(class std::allocator<char> const & __ptr64);236220;191800;406800;51007;15
??0?$_Ptr_base@_N@std@@IEAA@XZ;__cdecl std::_Ptr_base<bool>::_Ptr_base<bool>(void) __ptr64;236200;236200;236200;0;1
??$?0AEAVTimelineEntry@@@?$_Tuple_val@AEAVTimelineEntry@@@std@@QEAA@AEAVTimelineEntry@@@Z;__cdecl std::_Tuple_val<class TimelineEntry & __ptr64>::_Tuple_val<class TimelineEntry & __ptr64><class TimelineEntry & __ptr64>(class TimelineEntry & __ptr64) __ptr64;236200;236200;236200;0;1
??1?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::OptionDetails const >::~shared_ptr<class cxxopts::OptionDetails const >(void) __ptr64;236200;236200;236200;0;1
?_Unchecked_begin@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBAPEBQEAVTimelineEntry@@XZ;class TimelineEntry * __ptr64 const * __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Unchecked_begin(void)const __ptr64;236150;232100;240200;4050;2
?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z;static void __cdecl std::_WChar_traits<wchar_t>::assign(wchar_t & __ptr64,wchar_t const & __ptr64);236100;236100;236100;0;1
??$addressof@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64);236100;232900;239300;3200;2
??$move@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;236033;205700;273700;28241;3
??$forward@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@0@AEAPEAU10@@Z;236000;236000;236000;0;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> & __ptr64);236000;236000;236000;0;1
??$_Move_backward_unchecked@PEAUDataPerFile@?A0x120c265a@@PEAU12@@std@@YAPEAUDataPerFile@?A0x120c265a@@PEAU12@00@Z;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::_Move_backward_unchecked<struct `anonymous namespace'::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64>(struct A0x120c265a::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64);236000;236000;236000;0;1
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;236000;236000;236000;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >::operator++(void) __ptr64;235900;235900;235900;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::operator++(void) __ptr64;235900;235900;235900;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;235800;235800;235800;0;1
??$?D$$CBVValue@cxxopts@@$0A@@?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEBAAEBVValue@cxxopts@@XZ;class cxxopts::Value const & __ptr64 __cdecl std::shared_ptr<class cxxopts::Value const >::operator*<class cxxopts::Value const ,0>(void)const __ptr64;235800;235800;235800;0;1
?_Destroy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K0@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Destroy(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64) __ptr64;235800;235800;235800;0;1
??$get@$0A@$$QEAUFileCompilationData@@@std@@YA$$QEAUFileCompilationData@@$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@@Z;??$get@$0A@$$QEAUFileCompilationData@@@std@@YA$$QEAUFileCompilationData@@$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@@Z;235800;235800;235800;0;1
??1?$_Buf@D@std@@QEAA@XZ;__cdecl std::_Buf<char>::~_Buf<char>(void) __ptr64;235800;235800;235800;0;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64);235800;235800;235800;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;235800;235800;235800;0;1
?_Unchecked_begin@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Unchecked_begin(void) __ptr64;235800;235800;235800;0;1
??$_Adl_verify_range@PEADPEAD@std@@YAXAEBQEAD0@Z;void __cdecl std::_Adl_verify_range<char * __ptr64,char * __ptr64>(char * __ptr64 const & __ptr64,char * __ptr64 const & __ptr64);235800;235800;235800;0;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class st;235700;235700;235700;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,stru;235700;235200;236200;500;2
?OnEndAnalysis@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnEndAnalysis(void) __ptr64;235700;235700;235700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,1>;235700;235700;235700;0;1
??0?$_Ptr_base@$$CBVOptionDetails@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::OptionDetails const >::_Ptr_base<class cxxopts::OptionDetails const >(void) __ptr64;235700;235700;235700;0;1
??$addressof@V?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@@std@@YAPEAV?$_Builder@PEBDDV?$regex_traits@D@std@@@0@AEAV10@@Z;class std::_Builder<char const * __ptr64,char,class std::regex_traits<char> > * __ptr64 __cdecl std::addressof<class std::_Builder<char const * __ptr64,char,class std::regex_traits<char> > >(class std::_Builder<char const * __ptr64,char,class std::regex_traits<char> > & __ptr64);235700;235700;235700;0;1
??$?RVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVSymbolName@SimpleEvents@234@@Z;??$?RVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVSymbolName@SimpleEvents@234@@Z;235700;235700;235700;0;1
??$forward@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;235500;235500;235500;0;1
?__autoclassinit2@?$_Node_class@DV?$regex_traits@D@std@@@std@@QEAAX_K@Z;void __cdecl std::_Node_class<char,class std::regex_traits<char> >::__autoclassinit2(unsigned __int64) __ptr64;235500;235500;235500;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,clas;235400;235400;235400;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __in;235400;235400;235400;0;1
?OnBeginAnalysis@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnBeginAnalysis(void) __ptr64;235400;235400;235400;0;1
?_Get_max_bucket_size@?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@std@@QEAAAEAMXZ;float & __ptr64 __cdecl std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >::_Get_max_bucket_size(void) __ptr64;235400;235400;235400;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::bucket_count;235300;235300;235300;0;1
?_Empty@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEBA_NXZ;bool __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Empty(void)const __ptr64;235300;235300;235300;0;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace';235300;235300;235300;0;1
?_Umove_if_noexcept1@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Umove_if_noexcept1(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::integral_constant<bool,1>) __ptr64;235300;235300;235300;0;1
?push_back@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;?push_back@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;235300;235300;235300;0;1
?allocate@?$allocator@K@std@@QEAAPEAK_K@Z;unsigned long * __ptr64 __cdecl std::allocator<unsigned long>::allocate(unsigned __int64) __ptr64;235200;235200;235200;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ;class std::allocator<char> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<char>,class std::_Vector_val<struct std::_Simple_types<char> >,1>::_Get_first(void) __ptr64;235200;235200;235200;0;1
?__autoclassinit2@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >::__autoclassinit2(unsigned __int64) __ptr64;235200;235200;235200;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;235100;235100;235100;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > & __ptr;235000;235000;235000;0;1
?SetStringPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAPEBDPEBD@Z;char const * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::SetStringPointer(char const * __ptr64) __ptr64;235000;235000;235000;0;1
??0EventStack@BuildInsights@Cpp@Microsoft@@QEAA@AEBUEVENT_COLLECTION_DATA_TAG@123@@Z;__cdecl Microsoft::Cpp::BuildInsights::EventStack::EventStack(struct Microsoft::Cpp::BuildInsights::EVENT_COLLECTION_DATA_TAG const & __ptr64) __ptr64;235000;235000;235000;0;1
??4?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAXAEBV?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;void __cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::operator=(class std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;234900;234900;234900;0;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __pt;234900;234900;234900;0;1
?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ;static void __cdecl std::vector<char,class std::allocator<char> >::_Xlength(void);234900;234900;234900;0;1
?_Getal@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEBAAEBV?$allocator@V?$sub_match@PEBD@std@@@2@XZ;class std::allocator<class std::sub_match<char const * __ptr64> > const & __ptr64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Getal(void)const __ptr64;234900;234900;234900;0;1
?_Get_first@?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@std@@QEBAAEBU?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_Compressed_pair<struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,float,1>::_Get_first(void)const __ptr64;234842;212800;280700;22203;7
?allocate@?$allocator@UDataPerFile@?A0x120c265a@@@std@@QEAAPEAUDataPerFile@?A0x120c265a@@_K@Z;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::allocator<struct `anonymous namespace'::DataPerFile>::allocate(unsigned __int64) __ptr64;234800;234800;234800;0;1
??0_Ref_count_base@std@@IEAA@XZ;__cdecl std::_Ref_count_base::_Ref_count_base(void) __ptr64;234800;234800;234800;0;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > ><stru;234700;234700;234700;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;234650;208400;245900;15365;4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;234600;234600;234600;0;1
??0?$_Bt_state_t@PEBD@std@@QEAA@XZ;__cdecl std::_Bt_state_t<char const * __ptr64>::_Bt_state_t<char const * __ptr64>(void) __ptr64;234600;234600;234600;0;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@std@@QEBAPEAUDataPerFunction@?A0x5f10505a@@XZ;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >::_Unwrapped(void)const __ptr64;234600;234600;234600;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64 const,un;234500;223200;245800;11300;2
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::;234500;234500;234500;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,c;234500;234500;234500;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >(class std::_List_unchecked_iterator<class std::_L;234500;234500;234500;0;1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char) __ptr64;234500;234500;234500;0;1
??Uregex_constants@std@@YA?AW4match_flag_type@01@W4201@0@Z;enum std::regex_constants::match_flag_type __cdecl std::regex_constants::operator|(enum std::regex_constants::match_flag_type,enum std::regex_constants::match_flag_type);234300;234300;234300;0;1
??0?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@QEAA@PEBD@Z;__cdecl rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >::GenericStringStream<struct rapidjson::UTF8<char> >(char const * __ptr64) __ptr64;234300;234300;234300;0;1
?deallocate@?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@QEAAXQEAU_Grp_t@?$_Tgt_state_t@PEBD@2@_K@Z;void __cdecl std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>::deallocate(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,unsigned __int64) __ptr64;234200;234200;234200;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;234200;234200;234200;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >,bool>(void) __ptr64;234200;222200;246200;12000;2
?OnEndAnalysisPass@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnEndAnalysisPass(void) __ptr64;234100;234100;234100;0;1
?_Getal@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEAAAEAV?$allocator@UDataPerFile@?A0x120c265a@@@2@XZ;class std::allocator<struct `anonymous namespace'::DataPerFile> & __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Getal(void) __ptr64;234100;234100;234100;0;1
??$?0U?$_List_node@_KPEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@_KPEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<unsigned __int64,void * __ptr64> >(class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > const & __ptr64) __ptr64;234100;234100;234100;0;1
?_Getal@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Getal(void) __ptr64;234000;234000;234000;0;1
??0?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFunctionCompilationsAnalyzer@@P85@EAAXAEBVFunction@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFunctionCompilationsAnalyzer@@P85@EAAXAEBVFunction@Activities@234@@Z@Z;234000;234000;234000;0;1
??$?0_K@?$allocator@U?$_List_node@_KPEAX@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z;__cdecl std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> >::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> ><unsigned __int64>(class std::allocator<unsigned __int64> const & __ptr64) __ptr64;234000;234000;234000;0;1
??E?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > > & __ptr64 __cdecl std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >::operator++(void) __ptr64;234000;234000;234000;0;1
??$?0U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > const & __ptr64) __ptr64;234000;210000;258000;24000;2
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,1>::_Get_first(void) __ptr64;233900;233900;233900;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,stru;233900;233900;233900;0;1
??0?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >(void) __ptr64;233900;233900;233900;0;1
??0?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAA@PEAV?$sub_match@PEBD@1@AEAV?$allocator@V?$sub_match@PEBD@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >::_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >(class std::sub_match<char const * __ptr64> * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64) __ptr64;233900;233900;233900;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@AEAV10@@Z;233900;233900;233900;0;1
??$move@AEAV?$tuple@AEB_K@std@@@std@@YA$$QEAV?$tuple@AEB_K@0@AEAV10@@Z;??$move@AEAV?$tuple@AEB_K@std@@@std@@YA$$QEAV?$tuple@AEB_K@0@AEAV10@@Z;233875;201400;295500;36770;4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;233850;226900;240800;6950;2
?__autoclassinit2@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::__autoclassinit2(unsigned __int64) __ptr64;233800;233800;233800;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cla;233800;233800;233800;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;233800;232000;235600;1800;2
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const;233800;230800;236800;3000;2
?OnEndAnalysis@BuildTimelineAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl BuildTimelineAnalyzer::OnEndAnalysis(void) __ptr64;233700;233700;233700;0;1
??$addressof@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@YAPEAU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@0@AEAU10@@Z;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> * __ptr64 __cdecl std::addressof<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >(struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> & __ptr64);233700;233700;233700;0;1
?GetSymbolNames@TemplateInstantiationsAnalyzer@@QEBAAEBV?$unordered_map@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@XZ;class std::unordered_map<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64 __cdecl TemplateInstantiationsAnalyzer::GetSymbolNames(void)const __ptr64;233700;233700;233700;0;1
?_Xlength@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Xlength(void);233700;233700;233700;0;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >(void) __ptr64;233700;233700;233700;0;1
?_Get_first@?$_Compressed_pair@U?$equal_to@_K@std@@M$00@std@@QEBAAEBU?$equal_to@_K@2@XZ;struct std::equal_to<unsigned __int64> const & __ptr64 __cdecl std::_Compressed_pair<struct std::equal_to<unsigned __int64>,float,1>::_Get_first(void)const __ptr64;233600;197600;340100;45670;7
??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > & __ptr64);233600;210800;256400;22800;2
??$addressof@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@YAPEAU?$pair@$$CB_KVTimelineEntry@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,class TimelineEntry> * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,class TimelineEntry> >(struct std::pair<unsigned __int64 const ,class TimelineEntry> & __ptr64);233500;233500;233500;0;1
?deallocate@?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@QEAAXQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@_K@Z;void __cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>::deallocate(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 const,unsigned __int64) __ptr64;233500;233500;233500;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >(void) __ptr64;233500;216000;248200;13293;3
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><char>(class std::allocator<char> const & __ptr64) __ptr64;233462;201900;280800;21552;16
?_Getal@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > const & __ptr64 __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Getal(void)const __ptr64;233400;233400;233400;0;1
??$?0U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > const & __ptr64) __ptr64;233350;232900;233800;450;2
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >;233300;233300;233300;0;1
?get@?$_Ptr_base@_N@std@@IEBAPEA_NXZ;bool * __ptr64 __cdecl std::_Ptr_base<bool>::get(void)const __ptr64;233300;233300;233300;0;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@PEAPEAVTimelineEntry@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(class TimelineEntry * __ptr64 * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;233250;230700;235800;2550;2
?_Get_first@?$_Compressed_pair@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >,1>::_Get_first(void) __;233200;233200;233200;0;1
??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z;??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z;233200;233200;233200;0;1
??$?0V?$sub_match@PEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$sub_match@PEBD@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::sub_match<char const * __ptr64> >(class std::allocator<class std::sub_match<char const * __ptr64> > const & __ptr64) __ptr64;233200;233200;233200;0;1
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > >(void) __ptr64;233200;233200;233200;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VThread@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(unsigned int);233200;233200;233200;0;1
?_Mark_count@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@QEBAIXZ;unsigned int __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Mark_count(void)const __ptr64;233100;233100;233100;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,1>::_Get_first(void) __ptr64;233100;233100;233100;0;1
?IsZero@Double@internal@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::internal::Double::IsZero(void)const __ptr64;233100;233100;233100;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;233000;233000;233000;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64 const,unsigned __int64) __ptr64;233000;233000;233000;0;1
??$_Kfn@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0>::_Kfn<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>(struct std::pair<unsigned __int64 const ,struct Packe;233000;233000;233000;0;1
??$move@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@AEAV10@@Z;??$move@AEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@AEAV10@@Z;233000;233000;233000;0;1
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const;233000;233000;233000;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >(void) __ptr64;232800;232800;232800;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 const,unsigned __int64) __ptr64;232700;232700;232700;0;1
??$forward@AEBQEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const & __ptr64);232700;232700;232700;0;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::operator*(void)const __ptr64;232700;232700;232700;0;1
??$forward@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;232700;232700;232700;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 & __ptr64);232600;232600;232600;0;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEBAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >::_Unwrapped(void)const __ptr64;232600;232600;232600;0;1
??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@QEAA@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@1@AEAV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Uninitialized_backout_al<class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,class std::allocator<struct std::pai;232600;232600;232600;0;1
?_Getal@?$list@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@U?$_List_node@_KPEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > & __ptr64 __cdecl std::list<unsigned __int64,class std::allocator<unsigned __int64> >::_Getal(void) __ptr64;232600;232600;232600;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;232500;232500;232500;0;1
?__autoclassinit2@?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::__autoclassinit2(unsigned __int64) __ptr64;232500;232500;232500;0;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;232500;232500;232500;0;1
??0?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>(void) __ptr64;232500;232500;232500;0;1
??R<lambda_a33a5b45400f41721695e6a519a2a4eb>@@QEBA_NAEBUDataPerFunction@?A0x5f10505a@@0@Z;bool __cdecl <lambda_a33a5b45400f41721695e6a519a2a4eb>::operator()(struct `anonymous namespace'::DataPerFunction const & __ptr64,struct `anonymous namespace'::DataPerFunction const & __ptr64)const __ptr64;232400;232400;232400;0;1
??$forward@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AEAV10@@Z;??$forward@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_;232400;232400;232400;0;1
??$_Adl_verify_range@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@PEAU123@@std@@YAXAEBQEAU_Grp_t@?$_Tgt_state_t@PEBD@0@0@Z;void __cdecl std::_Adl_verify_range<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const & __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const & __ptr64);232400;232400;232400;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KVTimelineEntry@@@1@XZ;struct std::pair<unsigned __int64 const ,class TimelineEntry> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;232300;232300;232300;0;1
??$move@AEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z;??$move@AEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z;232300;232300;232300;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;232300;232300;232300;0;1
??0_Bitmap@std@@QEAA@XZ;__cdecl std::_Bitmap::_Bitmap(void) __ptr64;232300;232300;232300;0;1
??$?0AEB_K$$ZAEAUTemplateInstantiationData@@@?$pair@$$CB_KUTemplateInstantiationData@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAUTemplateInstantiationData@@@1@@Z;??$?0AEB_K$$ZAEAUTemplateInstantiationData@@@?$pair@$$CB_KUTemplateInstantiationData@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAUTemplateInstantiationData@@@1@@Z;232300;232300;232300;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA@AEBQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 const & __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 const & __ptr64;232250;199600;264900;32650;2
??$_Kfn@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0>::_Kfn<unsigned __int64 const ,class std::basic_string<char,stru;232233;226500;242200;7074;3
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits;232200;232200;232200;0;1
??0?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@PEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights:;232200;232200;232200;0;1
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_;232100;232100;232100;0;1
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > const & __ptr64) __ptr64;232100;232100;232100;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::;232100;232100;232100;0;1
?EventInstanceId@Event@BuildInsights@Cpp@Microsoft@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::EventInstanceId(void)const __ptr64;232000;215200;259400;18065;4
??1?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA@XZ;virtual __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::~AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cp;231900;231900;231900;0;1
?allocate@?$allocator@U_Loop_vals_t@std@@@std@@QEAAPEAU_Loop_vals_t@2@_K@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::allocator<struct std::_Loop_vals_t>::allocate(unsigned __int64) __ptr64;231900;231900;231900;0;1
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z;class std::_String_val<struct std::_Simple_types<char> > const * __ptr64 __cdecl std::addressof<class std::_String_val<struct std::_Simple_types<char> > const >(class std::_String_val<struct std::_Simple_types<char> > const & __ptr64);231900;202000;251500;18431;5
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@2@$00@std@@QEAAAEAU?$default_delete@V_Node_assert@std@@@2@XZ;struct std::default_delete<class std::_Node_assert> & __ptr64 __cdecl std::_Compressed_pair<struct std::default_delete<class std::_Node_assert>,class std::_Node_assert * __ptr64,1>::_Get_first(void) __ptr64;231900;231900;231900;0;1
??$_Destroy_range@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@YAXPEAU_Loop_vals_t@0@QEAU10@AEAV?$allocator@U_Loop_vals_t@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::_Loop_vals_t> >(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64 const,class std::allocator<struct std::_Loop_vals_t> & __ptr64);231800;231800;231800;0;1
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::push_back(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;231800;231800;231800;0;1
?OnEndRelogging@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnEndRelogging(void) __ptr64;231714;199500;264600;20386;7
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VCodeGeneration@Activities@BuildInsights@Cpp@Microsoft@@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(unsigned int);231700;231700;231700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@_K@2@XZ;class std::allocator<unsigned __int64> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned __int64>,class std::_Vector_val<struct std::_Simple_types<unsigned __int64> >,1>::_Get_first(void)const __ptr64;231700;231700;231700;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>::_Release(void) __ptr64;231650;208500;254800;23150;2
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > > const & __ptr64,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ;231600;231600;231600;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;231600;231600;231600;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base12>(void) __ptr64;231600;231600;231600;0;1
?OnBeginAnalysis@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAn;231500;231500;231500;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct st;231500;227500;235500;4000;2
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > ;231500;231500;231500;0;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & ;231450;227900;235000;3550;2
?GetThreadId@TimelineEntry@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl TimelineEntry::GetThreadId(void)const __ptr64;231400;231400;231400;0;1
?OnEndAnalysis@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnEndAnalysis(void) __ptr64;231400;231400;231400;0;1
?_Unchecked_end@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@XZ;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Unchecked_end(void) __ptr64;231400;231400;231400;0;1
?Begin@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAPEBV12@XZ;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > const * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::Begin(void)const __ptr64;231400;231400;231400;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;231350;230000;232700;1350;2
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr6;231300;231300;231300;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;231300;231300;231300;0;1
??$_Get_unwrapped@AEAPEAI@std@@YA@AEAPEAI@Z;__cdecl std::_Get_unwrapped<unsigned int * __ptr64 & __ptr64>(unsigned int * __ptr64 & __ptr64);231200;231200;231200;0;1
??$move@AEAPEBVTimelineEntry@@@std@@YA$$QEAPEBVTimelineEntry@@AEAPEBV1@@Z;??$move@AEAPEBVTimelineEntry@@@std@@YA$$QEAPEBVTimelineEntry@@AEAPEBV1@@Z;231200;231200;231200;0;1
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr6;231200;231200;231200;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __p;231100;193300;268900;37800;2
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iter;231100;231100;231100;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 const & __ptr64);231100;231100;231100;0;1
??4?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;231100;231100;231100;0;1
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;231025;200700;256600;25004;4
??9?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NV01@@Z;bool __cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator!=(class rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >)const __ptr64;231000;231000;231000;0;1
?_Unchecked_end@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cons;231000;231000;231000;0;1
??1?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::~match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >(void) __ptr64;231000;231000;231000;0;1
??$_Unfancy@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@PEAPEBU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 __cdecl std::_Unfancy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymo;230900;230900;230900;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pa;230800;230800;230800;0;1
??$addressof@$$CBV?$collate@D@std@@@std@@YAPEBV?$collate@D@0@AEBV10@@Z;class std::collate<char> const * __ptr64 __cdecl std::addressof<class std::collate<char> const >(class std::collate<char> const & __ptr64);230700;230700;230700;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct `anonymous namespace'::DataPerTemplate,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >;230600;230600;230600;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;230600;230600;230600;0;1
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z;void __cdecl std::allocator<wchar_t>::deallocate(wchar_t * __ptr64 const,unsigned __int64) __ptr64;230600;230600;230600;0;1
??0?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileCompilationsAnalyzer@@P85@EAAXAEBVFrontEndPass@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileCompilationsAnalyzer@@P85@EAAXAEBVFrontEndPass@Activities@234@@Z@Z;230600;230600;230600;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cl;230600;230600;230600;0;1
??$forward@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAU120@@Z;??$forward@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAU120@@Z;230500;230500;230500;0;1
??$addressof@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@YAPEAU?$pair@$$CB_KUTemplateInstantiationData@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >(struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> & __ptr64);230500;230500;230500;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,1>::_Get;230400;230400;230400;0;1
?__autoclassinit2@ParseResult@cxxopts@@QEAAX_K@Z;void __cdecl cxxopts::ParseResult::__autoclassinit2(unsigned __int64) __ptr64;230400;230400;230400;0;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > & __ptr64);230400;230400;230400;0;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >::operator->(void)const __ptr64;230300;230300;230300;0;1
??1?$_Regex_traits@D@std@@QEAA@XZ;__cdecl std::_Regex_traits<char>::~_Regex_traits<char>(void) __ptr64;230300;230300;230300;0;1
??$?0AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@?$_Tuple_val@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;__cdecl std::_Tuple_val<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64>::_Tuple_val<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64><class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;230200;230200;230200;0;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEA;230200;230200;230200;0;1
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > & __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::operator+=(__int64) __ptr64;230200;230200;230200;0;1
?bucket_count@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class s;230200;230200;230200;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<st;230200;230200;230200;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::operator++(void) __ptr64;230100;214000;246200;16100;2
??$EntityCanMaterializeId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::Function>(unsigned int);230100;212300;243700;13158;3
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::_Vector_val<struc;230100;230100;230100;0;1
??$_Destroy_in_place@PEAU?$_List_node@_KPEAX@std@@@std@@YAXAEAPEAU?$_List_node@_KPEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64>(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 & __ptr64);230100;230100;230100;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<c;230100;230100;230100;0;1
??$addressof@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@YAPEAU?$pair@$$CB_KUProcessThreadRemap@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >(struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> & __ptr64);230000;230000;230000;0;1
?IsArray@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsArray(void)const __ptr64;230000;230000;230000;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >,class std::_Li;230000;230000;230000;0;1
??$forward@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@YA$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@AEAV120@@Z;??$forward@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@YA$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@AEAV120@@Z;229950;205800;254100;24150;2
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@AEAV10@@Z;229900;229900;229900;0;1
??$?0U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> ><struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >(class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadD;229900;229900;229900;0;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64 const,unsigned __int64) __ptr64;229900;229900;229900;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,cl;229800;219900;239700;9900;2
??0?$allocator@D@std@@QEAA@XZ;__cdecl std::allocator<char>::allocator<char>(void) __ptr64;229761;193000;298600;29664;13
?deallocate@?$allocator@PEAVTimelineEntry@@@std@@QEAAXQEAPEAVTimelineEntry@@_K@Z;void __cdecl std::allocator<class TimelineEntry * __ptr64>::deallocate(class TimelineEntry * __ptr64 * __ptr64 const,unsigned __int64) __ptr64;229700;223600;235800;6100;2
??$forward@AEBV?$allocator@I@std@@@std@@YAAEBV?$allocator@I@0@AEBV10@@Z;class std::allocator<unsigned int> const & __ptr64 __cdecl std::forward<class std::allocator<unsigned int> const & __ptr64>(class std::allocator<unsigned int> const & __ptr64);229700;229700;229700;0;1
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::addressof<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);229700;224200;235200;5500;2
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > const & __ptr64>(class ;229650;213300;246000;16350;2
?__autoclassinit2@?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;229600;229600;229600;0;1
??$_Move_backward_unchecked@PEAUDataPerFunction@?A0x5f10505a@@PEAU12@@std@@YAPEAUDataPerFunction@?A0x5f10505a@@PEAU12@00@Z;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::_Move_backward_unchecked<struct `anonymous namespace'::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64>(struct A0x5f10505a::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64);229600;229600;229600;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,clas;229600;229600;229600;0;1
?_Get_max_bucket_size@?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@std@@QEBAAEBMXZ;float const & __ptr64 __cdecl std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >::_Get_max_bucket_size(void)const __ptr64;229600;229600;229600;0;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 & __ptr64);229500;229500;229500;0;1
??$_LStrxfrm@D@std@@YA_KPEAD0PEBD1PEBU_Collvec@@@Z;unsigned __int64 __cdecl std::_LStrxfrm<char>(char * __ptr64,char * __ptr64,char const * __ptr64,char const * __ptr64,struct _Collvec const * __ptr64);229500;229500;229500;0;1
?length@?$_Regex_traits@D@std@@SA_KPEBD@Z;static unsigned __int64 __cdecl std::_Regex_traits<char>::length(char const * __ptr64);229500;229500;229500;0;1
?_Mark_final@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Mark_final(void) __ptr64;229500;229500;229500;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,bool>(void) __ptr64;229400;229400;229400;0;1
?_Unchecked_begin@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@XZ;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Unchecked_begin(void) __ptr64;229400;229400;229400;0;1
?__autoclassinit2@_Root_node@std@@QEAAX_K@Z;void __cdecl std::_Root_node::__autoclassinit2(unsigned __int64) __ptr64;229400;229400;229400;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;229400;229400;229400;0;1
?_Unchecked_begin@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@XZ;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Unchecked_begin(void) __ptr64;229400;229400;229400;0;1
?SetMembersPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAPEAU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@PEAU32@@Z;struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::SetMembersPointer(struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64) __ptr64;229400;229400;229400;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ;229300;229300;229300;0;1
??$move@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@0@AEAV10@@Z;229300;229300;229300;0;1
??$get@$0A@AEB_K@std@@YAAEB_K$$QEAV?$tuple@AEB_K@0@@Z;??$get@$0A@AEB_K@std@@YAAEB_K$$QEAV?$tuple@AEB_K@0@@Z;229300;211600;257300;18201;4
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z;??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z;229263;200800;268100;22602;11
??__FLQUOTE@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic atexit destructor for 'LQUOTE''(void);229200;229200;229200;0;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;229200;229200;229200;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64>,class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std:;229200;229200;229200;0;1
??0Event@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@123@@Z;__cdecl Microsoft::Cpp::BuildInsights::Event::Event(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;229133;212500;241800;10611;6
??1OptionAdder@cxxopts@@QEAA@XZ;__cdecl cxxopts::OptionAdder::~OptionAdder(void) __ptr64;229100;229100;229100;0;1
??$_Kfn@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0>::_Kfn<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<u;229000;229000;229000;0;1
??$?0K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@K@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><unsigned long>(class std::allocator<unsigned long> const & __ptr64) __ptr64;229000;229000;229000;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >,class std::_Tree_val<struct std::_Tree_simple_ty;228900;228900;228900;0;1
?_Destroy@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAXPEAV?$sub_match@PEBD@2@0@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Destroy(class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64) __ptr64;228900;228900;228900;0;1
??1?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >,bool>::~pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >,bool>(void) __ptr64;228900;228900;228900;0;1
??R<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@QEBA_NPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@0@Z;bool __cdecl <lambda_5b04ced4049247d028dd2b0acc74b1e0>::operator()(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64)const __ptr64;228900;228900;228900;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared;228900;228900;228900;0;1
?deallocate@?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@QEAAXQEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@_K@Z;void __cdecl std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >::deallocate(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,unsigned __int64) __ptr64;228866;215800;242700;10995;3
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simp;228800;228800;228800;0;1
??$forward@PEAV_Node_assert@std@@@std@@YA$$QEAPEAV_Node_assert@0@AEAPEAV10@@Z;??$forward@PEAV_Node_assert@std@@@std@@YA$$QEAPEAV_Node_assert@0@AEAPEAV10@@Z;228800;228800;228800;0;1
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> >(void) __ptr64;228800;228800;228800;0;1
?do_unshift@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_unshift(struct _Mbstatet & __ptr64,char * __ptr64,char * __ptr64,char * __ptr64 & __ptr64)const __ptr64;228800;228800;228800;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0>::operator--(void) __ptr64;228800;228800;228800;0;1
??$?0U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > const & __ptr64) __ptr64;228800;228800;228800;0;1
??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::forward<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);228750;205100;257200;19078;4
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;228700;228700;228700;0;1
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVSymbolName@SimpleEvents@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVSymbolName@SimpleEvents@234@@Z@Z;228700;228700;228700;0;1
??$_Destroy_range@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked;228700;226000;231400;2700;2
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CB_KVTimelineEntry@@@1@XZ;struct std::pair<unsigned __int64 const ,class TimelineEntry> * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator->(void)const __ptr64;228600;228600;228600;0;1
?__autoclassinit2@TimelineEntry@@QEAAX_K@Z;void __cdecl TimelineEntry::__autoclassinit2(unsigned __int64) __ptr64;228600;228600;228600;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::;228550;228300;228800;250;2
??$_Kfn@$$CB_KUTemplateInstantiationData@@@?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KUTemplateInstantiationData@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0>::_Kfn<unsigned __int64 const ,struct TemplateInstantiationData>(struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> const & __ptr64);228500;228500;228500;0;1
??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<ch;228500;228500;228500;0;1
?__autoclassinit2@?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::__autoclassinit2(unsigned __int64) __ptr64;228400;228400;228400;0;1
??$forward@U?$default_delete@V_Node_assert@std@@@std@@@std@@YA$$QEAU?$default_delete@V_Node_assert@std@@@0@AEAU10@@Z;??$forward@U?$default_delete@V_Node_assert@std@@@std@@@std@@YA$$QEAU?$default_delete@V_Node_assert@std@@@0@AEAU10@@Z;228400;228400;228400;0;1
??R?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEBA_NAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@0@Z;bool __cdecl std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >::operator()(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64)const __ptr64;228400;228400;228400;0;1
??$forward@AEAUProcessThreadRemap@@@std@@YAAEAUProcessThreadRemap@@AEAU1@@Z;struct ProcessThreadRemap & __ptr64 __cdecl std::forward<struct ProcessThreadRemap & __ptr64>(struct ProcessThreadRemap & __ptr64);228400;228400;228400;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::bucket_count(void)const __ptr64;228300;228300;228300;0;1
?Put@?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@QEAAXD@Z;void __cdecl rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >::Put(char) __ptr64;228300;228300;228300;0;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > & __ptr64);228300;228300;228300;0;1
??$get@$0A@AEAUTemplateInstantiationData@@@std@@YAAEAUTemplateInstantiationData@@$$QEAV?$tuple@AEAUTemplateInstantiationData@@@0@@Z;??$get@$0A@AEAUTemplateInstantiationData@@@std@@YAAEAUTemplateInstantiationData@@$$QEAV?$tuple@AEAUTemplateInstantiationData@@@0@@Z;228200;228200;228200;0;1
?OnBeginReloggingPass@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnBeginReloggingPass(void) __ptr64;228185;202700;254800;15753;7
??$move@AEAUDataPerFile@?A0x120c265a@@@std@@YA$$QEAUDataPerFile@?A0x120c265a@@AEAU12@@Z;??$move@AEAUDataPerFile@?A0x120c265a@@@std@@YA$$QEAUDataPerFile@?A0x120c265a@@AEAU12@@Z;228100;228100;228100;0;1
?OnStopActivity@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStopAct;228000;228000;228000;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;228000;228000;228000;0;1
??$addressof@$$CBU?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@YAPEBU?$pair@$$CB_KUProcessThreadRemap@@@0@AEBU10@@Z;struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> const * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> const >(struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> const & __ptr64);228000;228000;228000;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<ch;228000;228000;228000;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > & __ptr64) __ptr64;228000;228000;228000;0;1
??$?0AEAUProcessThreadRemap@@@?$_Tuple_val@AEAUProcessThreadRemap@@@std@@QEAA@AEAUProcessThreadRemap@@@Z;__cdecl std::_Tuple_val<struct ProcessThreadRemap & __ptr64>::_Tuple_val<struct ProcessThreadRemap & __ptr64><struct ProcessThreadRemap & __ptr64>(struct ProcessThreadRemap & __ptr64) __ptr64;227900;227900;227900;0;1
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::~map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,;227800;227800;227800;0;1
??$_Seek_wrapped@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@$$QEAV10@@Z;??$_Seek_wrapped@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@$$QEAV10@@Z;227800;227800;227800;0;1
?_Setlong@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Setlong(void) __ptr64;227800;227800;227800;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;227800;227800;227800;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::operator++(void) __ptr64;227700;227700;227700;0;1
??1?$unordered_map@_KUTemplateInstantiationData@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,struct TemplateInstantiationData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >::~unordered_map<unsigned __int64,struct TemplateInstantiationData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >(void) __ptr64;227700;227700;227700;0;1
??$addressof@_K@std@@YAPEA_KAEA_K@Z;unsigned __int64 * __ptr64 __cdecl std::addressof<unsigned __int64>(unsigned __int64 & __ptr64);227700;227700;227700;0;1
??$_Destroy_range@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@QEAU10@AEAV?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 const,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,stru;227700;227700;227700;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>;227700;222700;232700;5000;2
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;227650;218300;237000;9350;2
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > const & __ptr64);227600;227600;227600;0;1
??1?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::~_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(void) __ptr64;227600;227600;227600;0;1
??0?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,cl;227600;227600;227600;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > >::max_size(class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > const & __ptr64);227500;227500;227500;0;1
??$?0UDataPerTemplate@?A0x5cdd232a@@@?$_Tuple_val@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@$$QEAUDataPerTemplate@?A0x5cdd232a@@@Z;??$?0UDataPerTemplate@?A0x5cdd232a@@@?$_Tuple_val@$$QEAUDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@$$QEAUDataPerTemplate@?A0x5cdd232a@@@Z;227500;227500;227500;0;1
?_Getal@?$vector@KV?$allocator@K@std@@@std@@AEAAAEAV?$allocator@K@2@XZ;class std::allocator<unsigned long> & __ptr64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Getal(void) __ptr64;227400;227400;227400;0;1
??1?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::~sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;227400;227400;227400;0;1
??$move@AEAV?$tuple@$$QEAPEBD@std@@@std@@YA$$QEAV?$tuple@$$QEAPEBD@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAPEBD@std@@@std@@YA$$QEAV?$tuple@$$QEAPEBD@0@AEAV10@@Z;227400;212500;242300;14900;2
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > const & __ptr64) __pt;227300;227300;227300;0;1
??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z;char const * __ptr64 __cdecl std::_Unfancy<char const >(char const * __ptr64);227300;227300;227300;0;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(struct std::pair<class std::basic_string<char,struct std::char_traits<c;227050;221000;233100;6050;2
?_Destroy@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@AEAAXPEAUDataPerFunction@?A0x5f10505a@@0@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Destroy(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64) __ptr64;227000;227000;227000;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>(class std::_List_unchecked_itera;227000;227000;227000;0;1
??0?$tuple@$$V@std@@QEAA@AEBV01@@Z;??0?$tuple@$$V@std@@QEAA@AEBV01@@Z;226945;198600;314200;30321;11
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned;226900;226900;226900;0;1
??$_Get_unwrapped@AEBQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YA@AEBQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@@Z;__cdecl std::_Get_unwrapped<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 const & __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 const & __ptr64);226900;226900;226900;0;1
??$?0U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> ><struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >(class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::Optio;226900;226900;226900;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > const & __ptr64);226900;215300;238500;11600;2
??$_Unfancy@_K@std@@YAPEA_KPEA_K@Z;unsigned __int64 * __ptr64 __cdecl std::_Unfancy<unsigned __int64>(unsigned __int64 * __ptr64);226900;226900;226900;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Umap_traits<unsigned __int6;226850;215100;238600;11750;2
?pointer_to@?$pointer_traits@PEAU?$pair@$$CB_KVTimelineEntry@@@std@@@std@@SAPEAU?$pair@$$CB_KVTimelineEntry@@@2@AEAU32@@Z;static struct std::pair<unsigned __int64 const ,class TimelineEntry> * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,class TimelineEntry> * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,class TimelineEntry> & __ptr64);226800;226800;226800;0;1
?__autoclassinit2@?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class cxxopts::OptionDetails>::__autoclassinit2(unsigned __int64) __ptr64;226800;226800;226800;0;1
??$_Idl_distance@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA@AEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z;__cdecl std::_Idl_distance<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64);226800;226800;226800;0;1
?parse_value@values@cxxopts@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAI@Z;void __cdecl cxxopts::values::parse_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,unsigned int & __ptr64);226800;226800;226800;0;1
??$addressof@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >(class std::_Vector_val<struct std::_Simple_types<struct std;226700;226700;226700;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::;226700;226700;226700;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;226700;226700;226700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> >,class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_t;226600;226600;226600;0;1
?_Pfx@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAAEAV?$sub_match@PEBD@2@XZ;class std::sub_match<char const * __ptr64> & __ptr64 __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Pfx(void) __ptr64;226600;226600;226600;0;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >(void) __ptr64;226600;226600;226600;0;1
?_Getal@?$vector@KV?$allocator@K@std@@@std@@AEBAAEBV?$allocator@K@2@XZ;class std::allocator<unsigned long> const & __ptr64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Getal(void)const __ptr64;226600;226600;226600;0;1
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;226550;207400;245700;19150;2
?pointer_to@?$pointer_traits@PEAU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@SAPEAU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@2@AEAU32@@Z;static struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> & __ptr64);226500;226500;226500;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UDataPerFunction@?A0x5f10505a@@@2@XZ;class std::allocator<struct `anonymous namespace'::DataPerFunction> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct `anonymous namespace'::DataPerFunction>,class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> >,1>::_Get_first(void)const __ptr64;226400;226400;226400;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 & __ptr64);226400;226400;226400;0;1
??$addressof@$$CBV?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@@std@@YAPEBV?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@0@AEBV10@@Z;class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> > const * __ptr64 __cdecl std::addressof<class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct;226300;226300;226300;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate;226300;226300;226300;0;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator*(void)const __ptr64;226300;226300;226300;0;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 & __ptr64);226300;226300;226300;0;1
??$?0$0M@@?$GenericStringRef@D@rapidjson@@QEAA@AEAY0M@$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><12>(char const (& __ptr64)[12]) __ptr64;226300;226300;226300;0;1
??1?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>::~pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>(void) __ptr64;226300;226300;226300;0;1
?_Get_max_bucket_size@?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@QEBAAEBMXZ;float const & __ptr64 __cdecl std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >::_Get_max_bucket_size(void)const __ptr64;226240;206900;254100;16533;5
??Ustd@@YA?AW4_Node_flags@0@W410@0@Z;enum std::_Node_flags __cdecl std::operator|(enum std::_Node_flags,enum std::_Node_flags);226200;226200;226200;0;1
??1?$_Node_str@D@std@@UEAA@XZ;virtual __cdecl std::_Node_str<char>::~_Node_str<char>(void) __ptr64;226200;226200;226200;0;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator*(void)const __ptr64;226100;226100;226100;0;1
?Free@CrtAllocator@rapidjson@@SAXPEAX@Z;static void __cdecl rapidjson::CrtAllocator::Free(void * __ptr64);226100;226100;226100;0;1
??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@;226050;223900;228200;2150;2
?_Getal@?$list@U?$pair@$$CB_KUProcessThreadRemap@@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::_Getal(void)const __ptr64;226000;226000;226000;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,str;225900;225900;225900;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,1>::_Get_first(void) __ptr;225900;221000;230800;4900;2
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;225875;207000;242600;12715;4
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z;static int __cdecl std::_Narrow_char_traits<char,int>::to_int_type(char const & __ptr64);225816;199100;254500;18882;6
??$forward@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@YA$$QEAV?$allocator@VKeyValue@cxxopts@@@0@AEAV10@@Z;??$forward@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@YA$$QEAV?$allocator@VKeyValue@cxxopts@@@0@AEAV10@@Z;225800;225800;225800;0;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >(class std::_List_val<struct std;225800;225800;225800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > >,class std::_Vector_val<struct std::_Simple;225800;225800;225800;0;1
?deallocate@?$allocator@U?$_List_node@_KPEAX@std@@@std@@QEAAXQEAU?$_List_node@_KPEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> >::deallocate(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;225800;225800;225800;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<str;225800;225800;225800;0;1
??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@0@AEAPEAU10@@Z;225800;225800;225800;0;1
?bucket_count@?$_Hash@V?$_Umap_traits@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,0> >::bucket_count(void)const __ptr64;225750;209800;241700;15950;2
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<c;225700;225700;225700;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base12>(void) __ptr64;225650;207200;244100;18450;2
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> >(class std::allocator<struct std::_List_node<struct std::pair<class;225600;225600;225600;0;1
?TickFrequency@Event@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::TickFrequency(void)const __ptr64;225566;202600;281500;27607;6
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,;225500;212100;238900;13400;2
??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;225500;225500;225500;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;225500;225500;225500;0;1
??$addressof@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAPEAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@AEAV10@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > * __ptr64 __cdecl std::addressof<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64);225400;225400;225400;0;1
?get@?$_Ptr_base@VValue@cxxopts@@@std@@IEBAPEAVValue@cxxopts@@XZ;class cxxopts::Value * __ptr64 __cdecl std::_Ptr_base<class cxxopts::Value>::get(void)const __ptr64;225400;225400;225400;0;1
??$_Kfn@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@SAAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@AEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@@Z;static class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64 __cdecl std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class c;225400;225400;225400;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > con;225400;220900;229900;4500;2
?GetTimeData@FileInclusionsAnalyzer@@QEBAAEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;225400;225400;225400;0;1
??Istd@@YA?AW4_Node_flags@0@W410@0@Z;enum std::_Node_flags __cdecl std::operator&(enum std::_Node_flags,enum std::_Node_flags);225400;225400;225400;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,1>::_Get_first(void)const __ptr64;225400;225400;225400;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allo;225400;225400;225400;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const >(class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64);225350;218900;231800;6450;2
?__autoclassinit2@_Node_endif@std@@QEAAX_K@Z;void __cdecl std::_Node_endif::__autoclassinit2(unsigned __int64) __ptr64;225200;225200;225200;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > const & __ptr64) __ptr64;225200;225200;225200;0;1
??0SimpleEvent@SimpleEvents@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::SimpleEvents::SimpleEvent::SimpleEvent(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;225200;206400;244000;18800;2
??$forward@AEBI@std@@YAAEBIAEBI@Z;unsigned int const & __ptr64 __cdecl std::forward<unsigned int const & __ptr64>(unsigned int const & __ptr64);225000;225000;225000;0;1
??$move@AEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@AEAV10@@Z;225000;225000;225000;0;1
??0?$allocator@I@std@@QEAA@XZ;__cdecl std::allocator<unsigned int>::allocator<unsigned int>(void) __ptr64;225000;225000;225000;0;1
?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAXQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >::deallocate(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 const,unsigned __int64) __pt;224900;221100;228700;3800;2
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;224900;221500;228300;3400;2
??$move@AEAV?$sub_match@PEBD@std@@@std@@YA$$QEAV?$sub_match@PEBD@0@AEAV10@@Z;??$move@AEAV?$sub_match@PEBD@std@@@std@@YA$$QEAV?$sub_match@PEBD@0@AEAV10@@Z;224800;224800;224800;0;1
??1?$unordered_map@_KUProcessThreadRemap@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,struct ProcessThreadRemap,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >::~unordered_map<unsigned __int64,struct ProcessThreadRemap,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >(void) __ptr64;224800;224800;224800;0;1
??0?$allocator@VKeyValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::allocator<class cxxopts::KeyValue>::allocator<class cxxopts::KeyValue>(void) __ptr64;224800;224800;224800;0;1
??$?0PEAVTimelineEntry@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVTimelineEntry@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class TimelineEntry * __ptr64>(class std::allocator<class TimelineEntry * __ptr64> const & __ptr64) __ptr64;224700;210500;238900;14200;2
??1?$shared_ptr@I@std@@QEAA@XZ;__cdecl std::shared_ptr<unsigned int>::~shared_ptr<unsigned int>(void) __ptr64;224700;224700;224700;0;1
??C?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAPEAU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@XZ;struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator->(void)const __ptr64;224700;224700;224700;0;1
??0?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@AEBV?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@@Z;__cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(class rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > const & __ptr64) __ptr64;224600;224600;224600;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;224500;224500;224500;0;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator*(void)const __ptr64;224500;224500;224500;0;1
??$forward@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@0@AEAV10@@Z;??$forward@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@0@AEAV10@@Z;224500;213000;236000;11500;2
?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ;__int64 __cdecl std::chrono::duration<__int64,struct std::ratio<1,1000> >::count(void)const __ptr64;224400;224400;224400;0;1
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFunction@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFunction@Activities@234@@Z@Z;224400;224400;224400;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;224350;222900;225800;1450;2
??$iter_swap@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAPEBU12@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@0@Z;void __cdecl std::iter_swap<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ;224300;224300;224300;0;1
??$move@AEAV?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@0@AEAV10@@Z;??$move@AEAV?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxo;224300;224300;224300;0;1
?__autoclassinit2@?$vector@KV?$allocator@K@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::__autoclassinit2(unsigned __int64) __ptr64;224300;224300;224300;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;224250;223600;224900;650;2
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator->(void)const __ptr64;224200;224200;224200;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::O;224200;224200;224200;0;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV23456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@2@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV23456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@2@Z@Z;224200;224200;224200;0;1
??$forward@AEB_N@std@@YAAEB_NAEB_N@Z;bool const & __ptr64 __cdecl std::forward<bool const & __ptr64>(bool const & __ptr64);224111;192400;281600;30728;9
??$?0$03@?$GenericStringRef@D@rapidjson@@QEAA@AEAY03$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><4>(char const (& __ptr64)[4]) __ptr64;224100;224100;224100;0;1
?__autoclassinit2@_Node_capture@std@@QEAAX_K@Z;void __cdecl std::_Node_capture::__autoclassinit2(unsigned __int64) __ptr64;224100;224100;224100;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr;224100;224100;224100;0;1
??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@@Z;224100;224100;224100;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<;224100;224100;224100;0;1
??R?$equal_to@_K@std@@QEBA_NAEB_K0@Z;bool __cdecl std::equal_to<unsigned __int64>::operator()(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64)const __ptr64;224085;200100;247800;14326;7
??1?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA@XZ;__cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::~Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>(void) __ptr64;224000;224000;224000;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;224000;224000;224000;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAAAEAV?$allocator@I@2@XZ;class std::allocator<unsigned int> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned int>,class std::_Vector_val<struct std::_Simple_types<unsigned int> >,1>::_Get_first(void) __ptr64;224000;224000;224000;0;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@XZ;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Release(void) __ptr64;224000;224000;224000;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;224000;224000;224000;0;1
??$_Unfancy@VKeyValue@cxxopts@@@std@@YAPEAVKeyValue@cxxopts@@PEAV12@@Z;class cxxopts::KeyValue * __ptr64 __cdecl std::_Unfancy<class cxxopts::KeyValue>(class cxxopts::KeyValue * __ptr64);224000;224000;224000;0;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class std;224000;224000;224000;0;1
??Y?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator+=(__int64) __ptr64;223900;223900;223900;0;1
?count@OptionValue@cxxopts@@QEBA_KXZ;unsigned __int64 __cdecl cxxopts::OptionValue::count(void)const __ptr64;223900;223900;223900;0;1
??$move@AEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z;??$move@AEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z;223900;223900;223900;0;1
??$move@AEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;223900;223900;223900;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<c;223850;223200;224500;650;2
?OnSimpleEvent@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;223800;223800;223800;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >(void) __ptr64;223600;223600;223600;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;223600;223600;223600;0;1
?_Destroy@?$_Ref_count_obj2@V?$standard_value@I@values@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<unsigned int> >::_Destroy(void) __ptr64;223600;223600;223600;0;1
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFrontEndFile@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFrontEndFile@Activities@234@@Z@Z;223500;223500;223500;0;1
?has_implicit@?$abstract_value@_N@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<bool>::has_implicit(void)const __ptr64;223500;223500;223500;0;1
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@_K@2@XZ;class std::allocator<unsigned __int64> const & __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Getal(void)const __ptr64;223500;223500;223500;0;1
??$move@AEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAU120@@Z;??$move@AEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAU120@@Z;223400;223400;223400;0;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64);223400;223400;223400;0;1
??$_Unfancy@K@std@@YAPEAKPEAK@Z;unsigned long * __ptr64 __cdecl std::_Unfancy<unsigned long>(unsigned long * __ptr64);223300;223300;223300;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;223300;223300;223300;0;1
??0OptionValue@cxxopts@@QEAA@XZ;__cdecl cxxopts::OptionValue::OptionValue(void) __ptr64;223300;223300;223300;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > & __ptr64) __ptr64;223300;223300;223300;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pai;223300;223300;223300;0;1
??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><unsigned __int64>(class std::allocator<unsigned __int64> const & __ptr64) __ptr64;223200;223200;223200;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>;223200;223200;223200;0;1
??0?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;223200;204700;241700;18500;2
??$_Destroy_range@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@YAXPEAUDataPerFile@?A0x120c265a@@QEAU12@AEAV?$allocator@UDataPerFile@?A0x120c265a@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct `anonymous namespace'::DataPerFile> >(struct `anonymous namespace'::DataPerFile * __ptr64,struct A0x120c265a::DataPerFile * __ptr64 const,class std::allocator<struct `anonymous namespace'::DataPerFile> & __ptr64);223200;223200;223200;0;1
??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<char> >(char * __ptr64,char * __ptr64 const,class std::allocator<char> & __ptr64);223100;223100;223100;0;1
??1?$weak_ptr@VValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::weak_ptr<class cxxopts::Value>::~weak_ptr<class cxxopts::Value>(void) __ptr64;223100;223100;223100;0;1
?OnEndAnalysisPass@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnal;223000;223000;223000;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned _;223000;223000;223000;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;223000;203900;242100;19100;2
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVInvocation@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVInvocation@Activities@234@@Z@Z;223000;223000;223000;0;1
?__autoclassinit2@?$_Node_str@D@std@@QEAAX_K@Z;void __cdecl std::_Node_str<char>::__autoclassinit2(unsigned __int64) __ptr64;223000;223000;223000;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std;222950;221800;224100;1150;2
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_si;222900;222900;222900;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxo;222900;222900;222900;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;222900;222900;222900;0;1
??1?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::~_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int;222900;222900;222900;0;1
??$move@AEAV?$allocator@VKeyValue@cxxopts@@@std@@@std@@YA$$QEAV?$allocator@VKeyValue@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$allocator@VKeyValue@cxxopts@@@std@@@std@@YA$$QEAV?$allocator@VKeyValue@cxxopts@@@0@AEAV10@@Z;222800;222800;222800;0;1
??$forward@UHelpOptionDetails@cxxopts@@@std@@YA$$QEAUHelpOptionDetails@cxxopts@@AEAU12@@Z;??$forward@UHelpOptionDetails@cxxopts@@@std@@YA$$QEAUHelpOptionDetails@cxxopts@@AEAU12@@Z;222800;222800;222800;0;1
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64>(class ;222800;221100;224500;1700;2
??$move@AEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;222800;222800;222800;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;222700;222700;222700;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@_KPEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > const & __ptr64);222600;222600;222600;0;1
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;222600;222600;222600;0;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 & __ptr64);222600;222600;222600;0;1
?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z;static char __cdecl std::_Narrow_char_traits<char,int>::to_char_type(int const & __ptr64);222550;207500;239800;12006;6
?__autoclassinit2@?$_Tgt_state_t@PEBD@std@@QEAAX_K@Z;void __cdecl std::_Tgt_state_t<char const * __ptr64>::__autoclassinit2(unsigned __int64) __ptr64;222500;222500;222500;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;222500;222500;222500;0;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::operator*(void)const __ptr64;222500;222500;222500;0;1
??$?0U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> ><struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >(class std::allocator<struct std::pa;222400;222400;222400;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > const & __ptr64) __ptr64;222400;222400;222400;0;1
??$?0AEB_K@?$_Tuple_val@AEB_K@std@@QEAA@AEB_K@Z;__cdecl std::_Tuple_val<unsigned __int64 const & __ptr64>::_Tuple_val<unsigned __int64 const & __ptr64><unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64) __ptr64;222300;200500;239800;15168;4
??0Level@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA@_N@Z;__cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level::Level(bool) __ptr64;222300;222300;222300;0;1
??$forward@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@std@@@std@@YAAEAV?$shared_ptr@$$CBVValue@cxxopts@@@0@AEAV10@@Z;class std::shared_ptr<class cxxopts::Value const > & __ptr64 __cdecl std::forward<class std::shared_ptr<class cxxopts::Value const > & __ptr64>(class std::shared_ptr<class cxxopts::Value const > & __ptr64);222200;222200;222200;0;1
?parse@?$abstract_value@I@values@cxxopts@@UEBAXXZ;virtual void __cdecl cxxopts::values::abstract_value<unsigned int>::parse(void)const __ptr64;222200;222200;222200;0;1
??__Es_defaultOutputPathBuildTimeline@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultOutputPathBuildTimeline''(void);222200;222200;222200;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Clear_guard::_Clear_guard(cl;222200;222200;222200;0;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64);222150;219800;224500;2350;2
?__autoclassinit2@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::__autoclassinit2(unsigned __int64) __ptr64;222100;222100;222100;0;1
?OnStartActivity@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStartAc;222100;222100;222100;0;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEBAPEAPEAVTimelineEntry@@XZ;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Unwrapped(void)const __ptr64;222050;221900;222200;150;2
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z;??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z;221950;196500;255100;19655;10
??$forward@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@YA$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@AEAPEAU12@@Z;??$forward@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@YA$$QEAPEAULocalThreadData@PackedProcessThreadRemapper@@AEAPEAU12@@Z;221900;221900;221900;0;1
??1_Node_base@std@@UEAA@XZ;virtual __cdecl std::_Node_base::~_Node_base(void) __ptr64;221900;221900;221900;0;1
?deallocate@?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >::deallocate(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;221800;221800;221800;0;1
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ;__cdecl std::fpos<struct _Mbstatet>::operator __int64(void)const __ptr64;221766;186800;296500;36527;6
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 const,unsigned __int64);221700;221700;221700;0;1
?_Error@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXW4error_type@regex_constants@2@@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Error(enum std::regex_constants::error_type) __ptr64;221700;221700;221700;0;1
??R?$_Cmp_cs@V?$regex_traits@D@std@@@std@@QEAA_NDD@Z;bool __cdecl std::_Cmp_cs<class std::regex_traits<char> >::operator()(char,char) __ptr64;221700;221700;221700;0;1
??$forward@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEBV10@@Z;class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::forward<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);221600;216600;226600;5000;2
??$EntityCanMaterializeId@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::BackEndPass>(unsigned int);221600;221600;221600;0;1
??$move@AEAV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$standard_value@I@values@cxxopts@@@0@AEAV10@@Z;221600;221600;221600;0;1
??$addressof@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YAPEAU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >(struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> & __ptr64);221600;221600;221600;0;1
?OnEndReloggingPass@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnEndReloggingPass(void) __ptr64;221571;194800;236200;13968;7
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;221500;221500;221500;0;1
?_Unchecked_end@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEBAPEBUHelpOptionDetails@cxxopts@@XZ;struct cxxopts::HelpOptionDetails const * __ptr64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Unchecked_end(void)const __ptr64;221400;221400;221400;0;1
??$_Pocca@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Pocca<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> & __ptr64,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> const & __ptr64);221400;221400;221400;0;1
?_Umove_if_noexcept1@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAXPEAU_Loop_vals_t@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Umove_if_noexcept1(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64,struct std::integral_constant<bool,1>) __ptr64;221400;221400;221400;0;1
?_Resize@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAXI@Z;void __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Resize(unsigned int) __ptr64;221400;221400;221400;0;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > > const & __ptr64);221400;221400;221400;0;1
??$forward@V?$tuple@AEB_K@std@@@std@@YA$$QEAV?$tuple@AEB_K@0@AEAV10@@Z;??$forward@V?$tuple@AEB_K@std@@@std@@YA$$QEAV?$tuple@AEB_K@0@AEAV10@@Z;221325;207600;230900;8636;4
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@PEAK@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@$$QEAPEAK@Z;??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@PEAK@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@$$QEAPEAK@Z;221300;221300;221300;0;1
??$distance@PEAD@std@@YA_JPEAD0@Z;__int64 __cdecl std::distance<char * __ptr64>(char * __ptr64,char * __ptr64);221300;221300;221300;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct s;221250;211900;230600;9350;2
??$_Swap_adl@PEBVTimelineEntry@@@std@@YAXAEAPEBVTimelineEntry@@0@Z;void __cdecl std::_Swap_adl<class TimelineEntry const * __ptr64>(class TimelineEntry const * __ptr64 & __ptr64,class TimelineEntry const * __ptr64 & __ptr64);221200;221200;221200;0;1
??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;221200;221200;221200;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass> >::Run(unsigned int);221100;221100;221100;0;1
??0?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAA@PEAU_Loop_vals_t@1@AEAV?$allocator@U_Loop_vals_t@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >::_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >(struct std::_Loop_vals_t * __ptr64,class std::allocator<struct std::_Loop_vals_t> & __ptr64) __ptr64;221100;221100;221100;0;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >(void) __ptr64;221000;221000;221000;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation> >::Run(unsigned int);220933;212800;227100;6001;3
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBVCommandLine@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;220900;220900;220900;0;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>(class std::_List_unchecked_;220900;220900;220900;0;1
??0?$allocator@PEAVTimelineEntry@@@std@@QEAA@XZ;__cdecl std::allocator<class TimelineEntry * __ptr64>::allocator<class TimelineEntry * __ptr64>(void) __ptr64;220850;207600;234100;13250;2
?_Get_first@?$_Compressed_pair@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UDataPerFile@?A0x120c265a@@@2@XZ;class std::allocator<struct `anonymous namespace'::DataPerFile> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct `anonymous namespace'::DataPerFile>,class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> >,1>::_Get_first(void) __ptr64;220800;220800;220800;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;220800;220800;220800;0;1
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z;static void * __ptr64 __cdecl std::_Default_allocate_traits::_Allocate(unsigned __int64);220772;189600;376300;40908;18
??0?$allocator@V?$sub_match@PEBD@std@@@std@@QEAA@XZ;__cdecl std::allocator<class std::sub_match<char const * __ptr64> >::allocator<class std::sub_match<char const * __ptr64> >(void) __ptr64;220700;220700;220700;0;1
??4?$_Tgt_state_t@PEBD@std@@QEAAXAEBV?$_Bt_state_t@PEBD@1@@Z;void __cdecl std::_Tgt_state_t<char const * __ptr64>::operator=(class std::_Bt_state_t<char const * __ptr64> const & __ptr64) __ptr64;220700;220700;220700;0;1
?__autoclassinit2@?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::__autoclassinit2(unsigned __int64) __ptr64;220700;220700;220700;0;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::__autoclassinit2(unsigned __int64) __ptr64;220700;220700;220700;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0>::operator--(void) __ptr64;220700;220700;220700;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > >(class std::_List_unchecke;220650;218600;222700;2050;2
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ;static void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void);220630;182900;282600;27145;13
?_Release@?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAAPEAUDataPerFunction@?A0x5f10505a@@XZ;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Release(void) __ptr64;220600;220600;220600;0;1
?_Add_bol@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_bol(void) __ptr64;220600;220600;220600;0;1
?__autoclassinit2@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX_K@Z;void __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::__autoclassinit2(unsigned __int64) __ptr64;220600;220600;220600;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;220600;220600;220600;0;1
??$?0V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> >(class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > const & __ptr64) __ptr64;220600;220600;220600;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std:;220550;209900;231200;10650;2
??$_Get_unwrapped@AEBQEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA@AEBQEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;__cdecl std::_Get_unwrapped<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 const & __ptr64>(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 const & __ptr64);220500;220500;220500;0;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAAPEAVKeyValue@cxxopts@@XZ;class cxxopts::KeyValue * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >::_Release(void) __ptr64;220500;220500;220500;0;1
??0?$sub_match@PEBD@std@@QEAA@XZ;__cdecl std::sub_match<char const * __ptr64>::sub_match<char const * __ptr64>(void) __ptr64;220400;220400;220400;0;1
??$_Destroy_in_place@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;void __cdecl std::_Destroy_in_place<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);220400;220400;220400;0;1
??$addressof@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@I@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<unsigned int> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(class std::_Vector_val<struct std::_Simple_types<unsigned int> > & __ptr64);220400;220400;220400;0;1
?Significand@Double@internal@rapidjson@@QEBA_KXZ;unsigned __int64 __cdecl rapidjson::internal::Double::Significand(void)const __ptr64;220400;220400;220400;0;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64) __ptr64;220300;220300;220300;0;1
??0?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >(void) __ptr64;220300;220300;220300;0;1
??$forward@V?$allocator@I@std@@@std@@YA$$QEAV?$allocator@I@0@AEAV10@@Z;??$forward@V?$allocator@I@std@@@std@@YA$$QEAV?$allocator@I@0@AEAV10@@Z;220300;220300;220300;0;1
??$forward@AEBV?$standard_value@_N@values@cxxopts@@@std@@YAAEBV?$standard_value@_N@values@cxxopts@@AEBV123@@Z;class cxxopts::values::standard_value<bool> const & __ptr64 __cdecl std::forward<class cxxopts::values::standard_value<bool> const & __ptr64>(class cxxopts::values::standard_value<bool> const & __ptr64);220300;220300;220300;0;1
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >(class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper:;220300;220300;220300;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U_Loop_vals_t@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Loop_vals_t@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U_Loop_vals_t@std@@@2@XZ;class std::allocator<struct std::_Loop_vals_t> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Loop_vals_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Loop_vals_t> >,1>::_Get_first(void)const __ptr64;220300;220300;220300;0;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::operator*(void)const __ptr64;220250;217500;223000;2750;2
??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z;void __cdecl std::_Pocca<class std::allocator<char> >(class std::allocator<char> & __ptr64,class std::allocator<char> const & __ptr64);220250;208100;232400;12150;2
?StopTimestamp@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::StopTimestamp(void)const __ptr64;220250;193300;239200;16220;6
??$destroy@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >::destroy<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > & __ptr64,struct std::pair<unsigned __in;220200;220200;220200;0;1
??$forward@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;220200;211300;231500;8419;3
??$_Convert_size@_K@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Convert_size<unsigned __int64>(unsigned __int64);220157;200100;305700;35388;7
??$?0UHelpOptionDetails@cxxopts@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UHelpOptionDetails@cxxopts@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct cxxopts::HelpOptionDetails>(class std::allocator<struct cxxopts::HelpOptionDetails> const & __ptr64) __ptr64;220100;220100;220100;0;1
?_Resize@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAXI@Z;void __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Resize(unsigned int) __ptr64;220100;220100;220100;0;1
??0?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@QEAA@XZ;__cdecl std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >(void) __ptr64;220066;217100;224800;3382;3
??$forward@AEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YAAEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAPEAPEBU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 & __ptr64 __cdecl std::forward<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 & __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationDa;220000;220000;220000;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > const & __ptr64);220000;220000;220000;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >,1>::_Get_first(vo;220000;220000;220000;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;220000;220000;220000;0;1
??$?0U?$pair@$$CB_KUProcessThreadRemap@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > ><struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >(class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessTh;219900;219900;219900;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >,1>::_Get_first(void)const __ptr64;219900;219900;219900;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@_KPEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >(class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > & __ptr64) __ptr64;219800;219800;219800;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tra;219800;210300;229300;9500;2
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 const,unsigned __int64) __ptr64;219800;219800;219800;0;1
??$move@AEAPEAVValue@cxxopts@@@std@@YA$$QEAPEAVValue@cxxopts@@AEAPEAV12@@Z;??$move@AEAPEAVValue@cxxopts@@@std@@YA$$QEAPEAVValue@cxxopts@@AEAPEAV12@@Z;219800;219800;219800;0;1
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@2@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_In_place_key_extract_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails> >::_Extract(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::share;219800;219800;219800;0;1
?parse_value@values@cxxopts@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV34@@Z;void __cdecl cxxopts::values::parse_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);219700;219700;219700;0;1
?deallocate@?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAAXQEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@_K@Z;void __cdecl std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::deallocate(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 const,unsigned __int64) __ptr64;219700;219700;219700;0;1
??$addressof@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@K@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<unsigned long> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >(class std::_Vector_val<struct std::_Simple_types<unsigned long> > & __ptr64);219700;219700;219700;0;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;219700;219700;219700;0;1
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPEAKQEAKAEAV?$allocator@K@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<unsigned long> >(unsigned long * __ptr64,unsigned long * __ptr64 const,class std::allocator<unsigned long> & __ptr64);219600;219600;219600;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 const & __ptr64);219600;219600;219600;0;1
?flags@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEBA?AW4syntax_option_type@regex_constants@2@XZ;enum std::regex_constants::syntax_option_type __cdecl std::basic_regex<char,class std::regex_traits<char> >::flags(void)const __ptr64;219500;219500;219500;0;1
?deallocate@?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@QEAAXQEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@_K@Z;void __cdecl std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>::deallocate(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,unsigned __int64) __ptr64;219400;219400;219400;0;1
??$forward@V?$tuple@$$V@std@@@std@@YA$$QEAV?$tuple@$$V@0@AEAV10@@Z;??$forward@V?$tuple@$$V@std@@@std@@YA$$QEAV?$tuple@$$V@0@AEAV10@@Z;219400;219400;219400;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator++(void) __ptr64;219400;219400;219400;0;1
??$_Kfn@$$CB_KUProcessThreadRemap@@@?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KUProcessThreadRemap@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0>::_Kfn<unsigned __int64 const ,struct ProcessThreadRemap>(struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> const & __ptr64);219300;212800;225800;6500;2
??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;219200;219200;219200;0;1
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>(void) __ptr64;219200;219200;219200;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >;219100;219100;219100;0;1
??0DiyFp@internal@rapidjson@@QEAA@_KH@Z;__cdecl rapidjson::internal::DiyFp::DiyFp(unsigned __int64,int) __ptr64;219100;219100;219100;0;1
?GetTemplateInstantiations@TemplateInstantiationsAnalyzer@@QEBAAEBV?$unordered_map@_KUTemplateInstantiationData@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@@std@@XZ;class std::unordered_map<unsigned __int64,struct TemplateInstantiationData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > const & __ptr64 __cdecl TemplateInstantiationsAnalyzer::GetTemplateInstantiations(void)const __ptr64;219000;219000;219000;0;1
??$?0$01@?$GenericStringRef@D@rapidjson@@QEAA@AEAY01$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><2>(char const (& __ptr64)[2]) __ptr64;219000;219000;219000;0;1
??$_Unfancy@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@PEAU10@@Z;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::_Unfancy<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> >(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64);218900;218900;218900;0;1
??$_Adl_verify_range@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@PEAU123@@std@@YAXAEBQEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const & __ptr64,struct std::_Tgt_state_t<class std::_String;218900;218900;218900;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@AEAV10@@Z;218900;218900;218900;0;1
??0?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@1234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal;218800;218800;218800;0;1
??$?0U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > ><struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >(class std::allocator<struct std::pair<unsigned __int64 co;218800;218800;218800;0;1
??0?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64>::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64>(void) __ptr64;218800;218800;218800;0;1
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z;void __cdecl std::_Iterator_base0::_Adopt(void const * __ptr64) __ptr64;218756;183100;325600;35461;16
?_Unchecked_end@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBAPEBQEAVTimelineEntry@@XZ;class TimelineEntry * __ptr64 const * __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Unchecked_end(void)const __ptr64;218750;195300;242200;23450;2
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base12>;218700;191800;238000;19611;3
??$swap@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@$0A@@std@@YAXAEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@0@Z;void __cdecl std::swap<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64,0>(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> & __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> & __ptr64);218700;218700;218700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> >;218600;218600;218600;0;1
??$forward@_N@std@@YA$$QEA_NAEA_N@Z;??$forward@_N@std@@YA$$QEA_NAEA_N@Z;218563;196000;340000;38703;11
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@SA_KAEBV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::max_size(class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> const & __ptr64);218500;218500;218500;0;1
??$toLocalString@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@cxxopts@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl cxxopts::toLocalString<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);218500;218500;218500;0;1
??1option_not_exists_exception@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::option_not_exists_exception::~option_not_exists_exception(void) __ptr64;218500;218500;218500;0;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >:;218450;195500;241400;22950;2
??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > c;218400;218400;218400;0;1
?_Unchecked_begin@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAAPEAUDataPerFunction@?A0x5f10505a@@XZ;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Unchecked_begin(void) __ptr64;218400;218400;218400;0;1
??0?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@QEAA@XZ;__cdecl std::allocator<struct `anonymous namespace'::DataPerFunction>::allocator<struct `anonymous namespace'::DataPerFunction>(void) __ptr64;218400;218400;218400;0;1
??$_Destroy_in_place@_N@std@@YAXAEA_N@Z;void __cdecl std::_Destroy_in_place<bool>(bool & __ptr64);218400;218400;218400;0;1
?max@?$numeric_limits@D@std@@SADXZ;static char __cdecl std::numeric_limits<char>::max(void);218400;218400;218400;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>::operator++(void) __ptr64;218300;218300;218300;0;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVTemplateInstantiation@Activities@012@@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVTemplateInstantiation@Activities@012@@Z@Z;218300;218300;218300;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@AEAV10@@Z;218300;218300;218300;0;1
?_Xlength@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Xlength(void);218300;218300;218300;0;1
??4?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator=(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64) __ptr64;218200;218200;218200;0;1
?GetElementsPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEBAPEAV12@XZ;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetElementsPointer(void)const __ptr64;218200;218200;218200;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::max_size(class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > const & __ptr64);218200;218200;218200;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_trai;218200;218200;218200;0;1
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > const & __ptr64>(class std::allocator<struct std::pair<class std::basic_string<char,struct std:;218200;218200;218200;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@SA_KAEBV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::max_size(class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > const & __ptr64);218100;218100;218100;0;1
??$move@AEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@AEAV10@@Z;218100;218100;218100;0;1
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >(void) __ptr64;218000;218000;218000;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >,1>::_Get_first(void) __ptr64;218000;218000;218000;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAA@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>;217900;217900;217900;0;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEBAPEAKXZ;unsigned long * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::_Unwrapped(void)const __ptr64;217900;217900;217900;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@_K@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<unsigned __int64> > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > const >(class std::_List_val<struct std::_List_simple_types<unsigned __int64> > const & __ptr64);217850;193300;242400;24550;2
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z;void __cdecl std::allocator<char>::deallocate(char * __ptr64 const,unsigned __int64) __ptr64;217818;190400;262000;19316;16
??$_Adl_verify_range@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXAEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struc;217800;217800;217800;0;1
?_Xlength@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Xlength(void);217800;217800;217800;0;1
??$?0VKeyValue@cxxopts@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VKeyValue@cxxopts@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class cxxopts::KeyValue>(class std::allocator<class cxxopts::KeyValue> const & __ptr64) __ptr64;217800;217800;217800;0;1
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z;struct std::_Container_base12 * __ptr64 __cdecl std::addressof<struct std::_Container_base12>(struct std::_Container_base12 & __ptr64);217771;190500;253900;17254;14
?__autoclassinit2@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;217700;217700;217700;0;1
??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@YAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@0@AEBU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const & __ptr64);217700;217700;217700;0;1
?push_back@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAAXAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::push_back(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64) __ptr64;217600;217600;217600;0;1
?GetProcessThreadRemappings@BuildTimeline@@QEBAAEBV?$unordered_map@_KUProcessThreadRemap@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@@std@@XZ;class std::unordered_map<unsigned __int64,struct ProcessThreadRemap,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > const & __ptr64 __cdecl BuildTimeline::GetProcessThreadRemappings(void)const __ptr64;217600;217600;217600;0;1
??$_Get_unwrapped@AEBQEBD@std@@YA@AEBQEBD@Z;__cdecl std::_Get_unwrapped<char const * __ptr64 const & __ptr64>(char const * __ptr64 const & __ptr64);217600;217600;217600;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>::operator*(void)const __ptr64;217600;217600;217600;0;1
??$distance@PEAI@std@@YA_JPEAI0@Z;__int64 __cdecl std::distance<unsigned int * __ptr64>(unsigned int * __ptr64,unsigned int * __ptr64);217500;217500;217500;0;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >::operator*(void)const __ptr64;217500;217500;217500;0;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate;217500;217500;217500;0;1
?GetDigitsLut@internal@rapidjson@@YAPEBDXZ;char const * __ptr64 __cdecl rapidjson::internal::GetDigitsLut(void);217400;217400;217400;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@UHelpOptionDetails@cxxopts@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UHelpOptionDetails@cxxopts@@@2@XZ;class std::allocator<struct cxxopts::HelpOptionDetails> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct cxxopts::HelpOptionDetails>,class std::_Vector_val<struct std::_Simple_types<struct cxxopts::HelpOptionDetails> >,1>::_Get_first(void)const __ptr64;217400;217400;217400;0;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAAPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@XZ;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Release(void) __ptr64;217400;217400;217400;0;1
??0FileCompilationData@@QEAA@XZ;__cdecl FileCompilationData::FileCompilationData(void) __ptr64;217400;217400;217400;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >(void) __ptr64;217400;217400;217400;0;1
??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z;??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z;217350;207600;227100;9750;2
??$_Destroy_range@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64 const);217300;217300;217300;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std:;217300;203700;230900;13600;2
?_Kfn@?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@SAAEB_KAEB_K@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0>::_Kfn(unsigned __int64 const & __ptr64);217200;217000;217400;200;2
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > & __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator++(void) __ptr64;217200;217200;217200;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;217200;217200;217200;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<un;217100;217100;217100;0;1
??1_Node_endif@std@@UEAA@XZ;virtual __cdecl std::_Node_endif::~_Node_endif(void) __ptr64;217000;217000;217000;0;1
??$forward@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z;??$forward@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z;217000;217000;217000;0;1
?deallocate@?$allocator@V?$sub_match@PEBD@std@@@std@@QEAAXQEAV?$sub_match@PEBD@2@_K@Z;void __cdecl std::allocator<class std::sub_match<char const * __ptr64> >::deallocate(class std::sub_match<char const * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;217000;217000;217000;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsi;217000;217000;217000;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64;216900;216900;216900;0;1
?_Unchecked_end@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAAPEAUDataPerFunction@?A0x5f10505a@@XZ;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Unchecked_end(void) __ptr64;216900;216900;216900;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __i;216900;216900;216900;0;1
?GetFileInclusionsData@FileInclusionsAnalyzer@@QEBAAEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char;216900;216900;216900;0;1
?GetStringPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEBAPEBDXZ;char const * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetStringPointer(void)const __ptr64;216900;216900;216900;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1;216800;216800;216800;0;1
??4?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;216800;216800;216800;0;1
?max@?$numeric_limits@E@std@@SAEXZ;static unsigned char __cdecl std::numeric_limits<unsigned char>::max(void);216800;216800;216800;0;1
??$_Atomic_address_as@$$CBJ$$CCJ@std@@YAPEDJAECJ@Z;long const volatile * __ptr64 __cdecl std::_Atomic_address_as<long const ,long volatile >(long volatile & __ptr64);216700;216700;216700;0;1
??$?0UDataPerFile@?A0x120c265a@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UDataPerFile@?A0x120c265a@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct `anonymous namespace'::DataPerFile>(class std::allocator<struct `anonymous namespace'::DataPerFile> const & __ptr64) __ptr64;216700;216700;216700;0;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class ;216700;216700;216700;0;1
??$addressof@D@std@@YAPEADAEAD@Z;char * __ptr64 __cdecl std::addressof<char>(char & __ptr64);216700;216700;216700;0;1
??$addressof@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@AEAV10@@Z;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 __cdecl std::addressof<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >(class std::_List_unchecked_const_iterator<cla;216700;209400;224000;7300;2
??R<lambda_1fae86a0efb35da210a6f82844560f44>@@QEBA_NAEBUDataPerFile@?A0x120c265a@@0@Z;bool __cdecl <lambda_1fae86a0efb35da210a6f82844560f44>::operator()(struct `anonymous namespace'::DataPerFile const & __ptr64,struct `anonymous namespace'::DataPerFile const & __ptr64)const __ptr64;216700;216700;216700;0;1
??$forward@PEAI@std@@YA$$QEAPEAIAEAPEAI@Z;??$forward@PEAI@std@@YA$$QEAPEAIAEAPEAI@Z;216700;216700;216700;0;1
??C?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAPEBU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@XZ;struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > const * __ptr64 __cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator->(void)const __ptr64;216700;216700;216700;0;1
??$forward@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;216700;216700;216700;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<cl;216550;214200;218900;2350;2
??$_Unfancy@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAU120@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Unfancy<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64);216500;216500;216500;0;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,;216300;216300;216300;0;1
??$forward@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YA$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAPEBU10@@Z;??$forward@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YA$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAPEBU10@@Z;216300;216300;216300;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64>(class std::_List_unchecked_ite;216300;216300;216300;0;1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;216200;216200;216200;0;1
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64) __ptr64;216200;216200;216200;0;1
?_Unchecked_end@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ;unsigned __int64 * __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Unchecked_end(void) __ptr64;216100;216100;216100;0;1
??$forward@AEAUTemplateInstantiationData@@@std@@YAAEAUTemplateInstantiationData@@AEAU1@@Z;struct TemplateInstantiationData & __ptr64 __cdecl std::forward<struct TemplateInstantiationData & __ptr64>(struct TemplateInstantiationData & __ptr64);216100;216100;216100;0;1
??__ERQUOTE@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic initializer for 'RQUOTE''(void);216100;216100;216100;0;1
?ProcessId@Event@BuildInsights@Cpp@Microsoft@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::ProcessId(void)const __ptr64;216000;216000;216000;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;216000;216000;216000;0;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxx;216000;216000;216000;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;215900;215900;215900;0;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;215900;215900;215900;0;1
??$forward@AEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@YAAEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@0@AEAPEAPEBU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 & __ptr64 __cdecl std::forward<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 & __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<c;215900;215900;215900;0;1
??$_Refancy@PEAI$0A@@std@@YAPEAIPEAI@Z;unsigned int * __ptr64 __cdecl std::_Refancy<unsigned int * __ptr64,0>(unsigned int * __ptr64);215800;215800;215800;0;1
??$forward@AEAPEAV_Node_assert@std@@@std@@YAAEAPEAV_Node_assert@0@AEAPEAV10@@Z;class std::_Node_assert * __ptr64 & __ptr64 __cdecl std::forward<class std::_Node_assert * __ptr64 & __ptr64>(class std::_Node_assert * __ptr64 & __ptr64);215800;215800;215800;0;1
?_End_assert_group@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXPEAV_Node_base@2@@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_End_assert_group(class std::_Node_base * __ptr64) __ptr64;215700;215700;215700;0;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@1@XZ;struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::operator*(void)const __ptr64;215700;215700;215700;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::all;215600;215600;215600;0;1
?_Unchecked_begin@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@XZ;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Unchecked_begin(void) __ptr64;215600;215600;215600;0;1
??$forward@M@std@@YA$$QEAMAEAM@Z;??$forward@M@std@@YA$$QEAMAEAM@Z;215581;183100;288200;30109;11
??$?0U?$pair@$$CB_KUProcessThreadRemap@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> ><struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >(class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > const & __ptr64) __ptr64;215500;215500;215500;0;1
?deallocate@?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@QEAAXQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@2@_K@Z;void __cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64>::deallocate(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64 * __ptr64 const,unsigned __int64) __ptr64;215500;215500;215500;0;1
??$?0U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> ><struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >(class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > const & __ptr64) __ptr64;215500;215500;215500;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<;215500;215500;215500;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > > const & __ptr64);215500;215500;215500;0;1
??$addressof@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@YAPEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >(struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > & __ptr64);215400;215400;215400;0;1
??$forward@AEAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YAAEAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAPEAU10@@Z;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 & __ptr64>(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 & __ptr64);215400;215400;215400;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@SA_KAEBV?$allocator@V?$sub_match@PEBD@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::sub_match<char const * __ptr64> > >::max_size(class std::allocator<class std::sub_match<char const * __ptr64> > const & __ptr64);215400;215400;215400;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,str;215350;211400;219300;3950;2
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::alloc;215300;215300;215300;0;1
??$move@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@VOptionDetails@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@VOptionDetails@cxxopts@@@0@AEAV10@@Z;215300;215300;215300;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0>::operator++(void) __ptr64;215300;215300;215300;0;1
??1DataPerTemplate@?A0x5cdd232a@@QEAA@XZ;__cdecl `anonymous namespace'::DataPerTemplate::~DataPerTemplate(void) __ptr64;215300;215300;215300;0;1
??0BackEndPass@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::BackEndPass::BackEndPass(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;215300;215300;215300;0;1
??$move@AEAVKeyValue@cxxopts@@@std@@YA$$QEAVKeyValue@cxxopts@@AEAV12@@Z;??$move@AEAVKeyValue@cxxopts@@@std@@YA$$QEAVKeyValue@cxxopts@@AEAV12@@Z;215200;215200;215200;0;1
??$forward@AEBUpiecewise_construct_t@std@@@std@@YAAEBUpiecewise_construct_t@0@AEBU10@@Z;struct std::piecewise_construct_t const & __ptr64 __cdecl std::forward<struct std::piecewise_construct_t const & __ptr64>(struct std::piecewise_construct_t const & __ptr64);215170;190700;259200;21927;10
?GetRoots@BuildTimeline@@QEBAAEBV?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@XZ;class std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> > const & __ptr64 __cdecl BuildTimeline::GetRoots(void)const __ptr64;215150;189600;240700;25550;2
?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ;static void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Xlength(void);215100;215100;215100;0;1
??$forward@AEB_K@std@@YAAEB_KAEB_K@Z;unsigned __int64 const & __ptr64 __cdecl std::forward<unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64);214920;194400;246900;19430;5
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > const & __ptr64;214900;214900;214900;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 & __ptr64);214900;214900;214900;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,clas;214900;214900;214900;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base12>(void) __ptr64;214850;202700;227000;12150;2
?max_size@?$_Default_allocator_traits@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@SA_KAEBV?$allocator@VKeyValue@cxxopts@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class cxxopts::KeyValue> >::max_size(class std::allocator<class cxxopts::KeyValue> const & __ptr64);214800;214800;214800;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >(void) __ptr64;214800;214800;214800;0;1
??1?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::~_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(void) __ptr64;214800;214800;214800;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;214700;214700;214700;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std:;214600;214600;214600;0;1
??$move@AEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YA$$QEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@AEAPEAV10@@Z;??$move@AEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YA$$QEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@AEAPEAV10@@Z;214600;214600;214600;0;1
??1OptionParseException@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::OptionParseException::~OptionParseException(void) __ptr64;214600;214600;214600;0;1
?_Xlength@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Xlength(void);214600;214600;214600;0;1
??$destroy@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > >::destroy<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct s;214500;212800;216200;1700;2
?parse@?$abstract_value@_N@values@cxxopts@@UEBAXXZ;virtual void __cdecl cxxopts::values::abstract_value<bool>::parse(void)const __ptr64;214500;214500;214500;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >,1>::_Get_first(void)const __ptr64;214400;214400;214400;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA_KAEBV?$allocator@I@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<unsigned int> >::max_size(class std::allocator<unsigned int> const & __ptr64);214400;214400;214400;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std:;214350;207600;221100;6750;2
??$forward@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;214333;203500;225500;8984;3
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@_KPEAX@std@@@2@QEAU?$_List_node@_KPEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > & __ptr64,struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const,unsigned __int64);214300;214300;214300;0;1
?InputSourcePath@CompilerPass@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEB_WXZ;wchar_t const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::CompilerPass::InputSourcePath(void)const __ptr64;214300;214300;214300;0;1
??$move@AEAPEAI@std@@YA$$QEAPEAIAEAPEAI@Z;??$move@AEAPEAI@std@@YA$$QEAPEAIAEAPEAI@Z;214300;214300;214300;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::operator++(void) __ptr64;214300;214300;214300;0;1
?GetTimeline@BuildTimelineAnalyzer@@QEBAAEBVBuildTimeline@@XZ;class BuildTimeline const & __ptr64 __cdecl BuildTimelineAnalyzer::GetTimeline(void)const __ptr64;214200;214200;214200;0;1
??$destroy@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KUProcessThreadRemap@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >::destroy<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > & __ptr64,struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> * __ptr64 const);214200;214200;214200;0;1
??$get@$0A@AEAVTimelineEntry@@@std@@YAAEAVTimelineEntry@@$$QEAV?$tuple@AEAVTimelineEntry@@@0@@Z;??$get@$0A@AEAVTimelineEntry@@@std@@YAAEAVTimelineEntry@@$$QEAV?$tuple@AEAVTimelineEntry@@@0@@Z;214200;214200;214200;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;214200;214200;214200;0;1
?stringAppend@cxxopts@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV23@_KD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl cxxopts::stringAppend(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,unsigned __int64,char);214200;214200;214200;0;1
??$_Pocca@V?$allocator@I@std@@@std@@YAXAEAV?$allocator@I@0@AEBV10@@Z;void __cdecl std::_Pocca<class std::allocator<unsigned int> >(class std::allocator<unsigned int> & __ptr64,class std::allocator<unsigned int> const & __ptr64);214100;214100;214100;0;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>;214100;214100;214100;0;1
??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;214100;214100;214100;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;214100;214100;214100;0;1
?_Incref@_Ref_count_base@std@@QEAAXXZ;void __cdecl std::_Ref_count_base::_Incref(void) __ptr64;214000;214000;214000;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Function> >::Run(unsigned int);213933;203400;226900;9746;3
??1?$unordered_map@_KULocalThreadData@PackedProcessThreadRemapper@@U?$hash@_K@std@@U?$equal_to@_K@4@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >::~unordered_map<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,;213900;213900;213900;0;1
??F?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator--(void) __ptr64;213700;213700;213700;0;1
??$forward@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@@Z;213700;213700;213700;0;1
??$forward@AEAPEAUDataPerFile@?A0x120c265a@@@std@@YAAEAPEAUDataPerFile@?A0x120c265a@@AEAPEAU12@@Z;struct `anonymous namespace'::DataPerFile * __ptr64 & __ptr64 __cdecl std::forward<struct `anonymous namespace'::DataPerFile * __ptr64 & __ptr64>(struct A0x120c265a::DataPerFile * __ptr64 & __ptr64);213700;213700;213700;0;1
??0?$tuple@$$V@std@@QEAA@XZ;??0?$tuple@$$V@std@@QEAA@XZ;213600;213600;213600;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@AEAV10@@Z;213600;213600;213600;0;1
??$?0U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > const & __ptr64) __ptr64;213600;213600;213600;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >(void) __ptr64;213500;213500;213500;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@AEAV10@@Z;213500;213500;213500;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationDat;213400;213400;213400;0;1
?_Unchecked_end@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAAPEAUDataPerFile@?A0x120c265a@@XZ;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Unchecked_end(void) __ptr64;213400;213400;213400;0;1
??$?0_N@?$allocator@I@std@@QEAA@AEBV?$allocator@_N@1@@Z;__cdecl std::allocator<unsigned int>::allocator<unsigned int><bool>(class std::allocator<bool> const & __ptr64) __ptr64;213400;213400;213400;0;1
?IsInt64@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsInt64(void)const __ptr64;213300;213300;213300;0;1
?__autoclassinit2@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;213200;213200;213200;0;1
??E?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@XZ;class rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator++(void) __ptr64;213200;213200;213200;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >(void) __ptr64;213200;213200;213200;0;1
??$destroy@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::destroy<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>(class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> & __ptr64,struct st;213200;213200;213200;0;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@SA?AV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@AEBV32@@Z;static class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> __cdecl std::_Default_allocator_traits<class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::select_on_container_copy_construction(class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> const & __ptr64);213100;213100;213100;0;1
??4?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator=(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;213100;213100;213100;0;1
?Name@Function@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::Function::Name(void)const __ptr64;213100;206900;219300;6200;2
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@std@@QEBAPEAUDataPerFile@?A0x120c265a@@XZ;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >::_Unwrapped(void)const __ptr64;212900;212900;212900;0;1
?resize@?$vector@IV?$allocator@I@std@@@std@@QEAAX_KAEBI@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::resize(unsigned __int64,unsigned int const & __ptr64) __ptr64;212900;212900;212900;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __in;212900;212900;212900;0;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@0@AEAV10@@Z;212900;212900;212900;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ;class std::allocator<char> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<char>,class std::_Vector_val<struct std::_Simple_types<char> >,1>::_Get_first(void)const __ptr64;212900;212900;212900;0;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char;212900;212900;212900;0;1
?EventId@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEBGXZ;unsigned short const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::EventId(void)const __ptr64;212766;168000;287900;37654;6
?TickFrequency@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::TickFrequency(void)const __ptr64;212716;183900;286300;34407;6
?__autoclassinit2@?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;212700;212700;212700;0;1
??$_Const_cast@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA@PEBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z;__cdecl std::_Const_cast<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const * __ptr64);212700;212700;212700;0;1
?__autoclassinit2@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEAAX_K@Z;void __cdecl std::basic_regex<char,class std::regex_traits<char> >::__autoclassinit2(unsigned __int64) __ptr64;212700;212700;212700;0;1
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z;??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z;212640;189300;247300;20680;5
??$move@AEAV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;212500;212500;212500;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;212500;212500;212500;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ;212500;212500;212500;0;1
??0?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;212500;212500;212500;0;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > const & __ptr64) __ptr64;212400;212400;212400;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > > const & __ptr64);212300;212300;212300;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KUProcessThreadRemap@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;212300;212300;212300;0;1
?ProcessorIndex@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEBGXZ;unsigned short const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::ProcessorIndex(void)const __ptr64;212300;212300;212300;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@SA_KAEBV?$allocator@UHelpOptionDetails@cxxopts@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct cxxopts::HelpOptionDetails> >::max_size(class std::allocator<struct cxxopts::HelpOptionDetails> const & __ptr64);212200;212200;212200;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SA_KAEBV?$allocator@K@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<unsigned long> >::max_size(class std::allocator<unsigned long> const & __ptr64);212200;212200;212200;0;1
??$move@AEAV?$tuple@$$QEAUFileCompilationData@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAUFileCompilationData@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@AEAV10@@Z;212200;212200;212200;0;1
??0?$_Cmp_collate@V?$regex_traits@D@std@@@std@@QEAA@AEBV?$regex_traits@D@1@@Z;__cdecl std::_Cmp_collate<class std::regex_traits<char> >::_Cmp_collate<class std::regex_traits<char> >(class std::regex_traits<char> const & __ptr64) __ptr64;212100;212100;212100;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >(void) __ptr64;212100;212100;212100;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<str;212100;212100;212100;0;1
??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<unsigned __int64> >(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64 const,class std::allocator<unsigned __int64> & __ptr64);211900;211900;211900;0;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Release(void) __ptr64;211900;211900;211900;0;1
??$forward@V?$tuple@AEAUProcessThreadRemap@@@std@@@std@@YA$$QEAV?$tuple@AEAUProcessThreadRemap@@@0@AEAV10@@Z;??$forward@V?$tuple@AEAUProcessThreadRemap@@@std@@@std@@YA$$QEAV?$tuple@AEAUProcessThreadRemap@@@0@AEAV10@@Z;211900;211900;211900;0;1
?_Extract@?$_In_place_key_extract_set@_K_K@std@@SAAEB_KAEB_K@Z;static unsigned __int64 const & __ptr64 __cdecl std::_In_place_key_extract_set<unsigned __int64,unsigned __int64>::_Extract(unsigned __int64 const & __ptr64);211900;211900;211900;0;1
?OnSimpleEvent@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnSimpleE;211900;211900;211900;0;1
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@YA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > & __ptr64);211900;205900;217900;6000;2
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_str;211800;211800;211800;0;1
?Path@FrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::FrontEndFile::Path(void)const __ptr64;211800;200600;223000;11200;2
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> >,class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_si;211700;211700;211700;0;1
?OnBeginAnalysisPass@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnBeginAnalysisPass(void) __ptr64;211700;211700;211700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>,class std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >,1>::_Get_first(void) __ptr64;211700;211700;211700;0;1
??$?0AEAUTemplateInstantiationData@@@?$_Tuple_val@AEAUTemplateInstantiationData@@@std@@QEAA@AEAUTemplateInstantiationData@@@Z;__cdecl std::_Tuple_val<struct TemplateInstantiationData & __ptr64>::_Tuple_val<struct TemplateInstantiationData & __ptr64><struct TemplateInstantiationData & __ptr64>(struct TemplateInstantiationData & __ptr64) __ptr64;211700;211700;211700;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >,bool>(void) __ptr64;211700;211700;211700;0;1
??$move@AEAV?$shared_ptr@VValue@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@VValue@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@VValue@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@VValue@cxxopts@@@0@AEAV10@@Z;211700;211700;211700;0;1
??$move@AEAV?$shared_ptr@I@std@@@std@@YA$$QEAV?$shared_ptr@I@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@I@std@@@std@@YA$$QEAV?$shared_ptr@I@0@AEAV10@@Z;211600;211600;211600;0;1
??1missing_argument_exception@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::missing_argument_exception::~missing_argument_exception(void) __ptr64;211600;211600;211600;0;1
??$addressof@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@0@AEAV10@@Z;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64 __cdecl std::addressof<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> >(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> & __ptr64);211500;211500;211500;0;1
?ProcessId@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::ProcessId(void)const __ptr64;211400;211400;211400;0;1
??$move@AEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@AEAV10@@Z;211400;211400;211400;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::SimpleEvents::CommandLine> >::Run(unsigned int);211400;211400;211400;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,st;211400;211400;211400;0;1
?__autoclassinit2@?$_Bt_state_t@PEBD@std@@QEAAX_K@Z;void __cdecl std::_Bt_state_t<char const * __ptr64>::__autoclassinit2(unsigned __int64) __ptr64;211400;211400;211400;0;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;211200;211200;211200;0;1
??$?0UDataPerFunction@?A0x5f10505a@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UDataPerFunction@?A0x5f10505a@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct `anonymous namespace'::DataPerFunction>(class std::allocator<struct `anonymous namespace'::DataPerFunction> const & __ptr64) __ptr64;211100;211100;211100;0;1
?_Destroy@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@AEAAXPEAUDataPerFile@?A0x120c265a@@0@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Destroy(struct `anonymous namespace'::DataPerFile * __ptr64,struct `anonymous namespace'::DataPerFile * __ptr64) __ptr64;211100;211100;211100;0;1
??$forward@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YAAEAV?$shared_ptr@VOptionDetails@cxxopts@@@0@AEAV10@@Z;class std::shared_ptr<class cxxopts::OptionDetails> & __ptr64 __cdecl std::forward<class std::shared_ptr<class cxxopts::OptionDetails> & __ptr64>(class std::shared_ptr<class cxxopts::OptionDetails> & __ptr64);210900;210900;210900;0;1
??$destroy@U?$pair@$$CB_KVTimelineEntry@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KVTimelineEntry@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::destroy<struct std::pair<unsigned __int64 const ,class TimelineEntry> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64,struct std::pair<unsigned __int64 const ,class TimelineEntry> * __ptr64 const);210900;210900;210900;0;1
??$forward@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA$$QEAV?$vector@_KV?$allocator@_K@std@@@0@AEAV10@@Z;??$forward@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA$$QEAV?$vector@_KV?$allocator@_K@std@@@0@AEAV10@@Z;210900;210900;210900;0;1
?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ;struct _Mbstatet __cdecl std::fpos<struct _Mbstatet>::state(void)const __ptr64;210750;196800;238200;13729;6
??$forward@AEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YAAEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAU120@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64 __cdecl std::forward<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64);210700;210700;210700;0;1
?__autoclassinit2@?$vector@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64>,class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::__autoclassinit2(unsigned __int64) __ptr64;210600;210600;210600;0;1
?empty@cxxopts@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl cxxopts::empty(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);210600;210600;210600;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > ;210600;210600;210600;0;1
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ;bool __cdecl std::_String_val<struct std::_Simple_types<wchar_t> >::_Large_string_engaged(void)const __ptr64;210600;210600;210600;0;1
??0?$_Buf@D@std@@QEAA@XZ;__cdecl std::_Buf<char>::_Buf<char>(void) __ptr64;210500;210500;210500;0;1
??0?$allocator@_N@std@@QEAA@XZ;__cdecl std::allocator<bool>::allocator<bool>(void) __ptr64;210500;210500;210500;0;1
??$addressof@V?$standard_value@I@values@cxxopts@@@std@@YAPEAV?$standard_value@I@values@cxxopts@@AEAV123@@Z;class cxxopts::values::standard_value<unsigned int> * __ptr64 __cdecl std::addressof<class cxxopts::values::standard_value<unsigned int> >(class cxxopts::values::standard_value<unsigned int> & __ptr64);210500;210500;210500;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,v;210450;202300;218600;8150;2
??1?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;210450;200800;220100;9650;2
??$forward@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > const & __ptr64>(class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > const & __ptr64);210400;210400;210400;0;1
??$move@AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;??$move@AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;210400;210400;210400;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>;210400;210400;210400;0;1
??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;210400;210400;210400;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > const & __ptr64);210400;210400;210400;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::Op;210300;210300;210300;0;1
??0_Clear_guard@?$_Hash@V?$_Uset_traits@_KV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@_K@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Uset_traits<unsigned __int64,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<unsigned __int64>,0> > * __ptr64 const) __ptr64;210300;210300;210300;0;1
??$addressof@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@YAPEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@AEAV123@@Z;class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::addressof<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);210300;210300;210300;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >(void) __ptr64;210300;210300;210300;0;1
??$forward@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@AEAV10@@Z;210300;210300;210300;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64>::_Release(void) __ptr64;210200;210200;210200;0;1
??$destroy@UHelpOptionDetails@cxxopts@@@?$_Default_allocator_traits@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@SAXAEAV?$allocator@UHelpOptionDetails@cxxopts@@@1@QEAUHelpOptionDetails@cxxopts@@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct cxxopts::HelpOptionDetails> >::destroy<struct cxxopts::HelpOptionDetails>(class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64,struct cxxopts::HelpOptionDetails * __ptr64 const);210200;210200;210200;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> > const & __ptr64);210200;210200;210200;0;1
??1option_syntax_exception@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::option_syntax_exception::~option_syntax_exception(void) __ptr64;210200;210200;210200;0;1
??$forward@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > const & __ptr64>(class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > const & __ptr64);210200;210200;210200;0;1
??1?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA@XZ;__cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::~PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>(void) __ptr64;210100;210100;210100;0;1
??$forward@PEBVTimelineEntry@@@std@@YA$$QEAPEBVTimelineEntry@@AEAPEBV1@@Z;??$forward@PEBVTimelineEntry@@@std@@YA$$QEAPEBVTimelineEntry@@AEAPEBV1@@Z;210100;210100;210100;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,1>::_Get_first(void) __ptr64;210100;210100;210100;0;1
??$?0_J$0A@@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z;__cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000> >::duration<__int64,struct std::ratio<1,1000000> ><__int64,0>(__int64 const & __ptr64) __ptr64;210100;210100;210100;0;1
?OnActivityFinished@BuildTimelineAnalyzer@@AEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnActivityFinished(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;210000;210000;210000;0;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64);210000;210000;210000;0;1
??$forward@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@YAAEAULocalThreadData@PackedProcessThreadRemapper@@AEAU12@@Z;struct PackedProcessThreadRemapper::LocalThreadData & __ptr64 __cdecl std::forward<struct PackedProcessThreadRemapper::LocalThreadData & __ptr64>(struct PackedProcessThreadRemapper::LocalThreadData & __ptr64);210000;210000;210000;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,str;210000;210000;210000;0;1
?get@?$_Ptr_base@$$CBVOptionDetails@cxxopts@@@std@@IEBAPEBVOptionDetails@cxxopts@@XZ;class cxxopts::OptionDetails const * __ptr64 __cdecl std::_Ptr_base<class cxxopts::OptionDetails const >::get(void)const __ptr64;209900;209900;209900;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > const >(class std::_List_val<struct std::;209900;209900;209900;0;1
??$_Get_unwrapped@AEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA@AEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@U_Iterator_base0@2@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0> & __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,st;209900;209900;209900;0;1
?__autoclassinit2@?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >::__autoclassinit2(unsigned __int64) __ptr64;209800;209800;209800;0;1
?deallocate@?$allocator@UDataPerFile@?A0x120c265a@@@std@@QEAAXQEAUDataPerFile@?A0x120c265a@@_K@Z;void __cdecl std::allocator<struct `anonymous namespace'::DataPerFile>::deallocate(struct `anonymous namespace'::DataPerFile * __ptr64 const,unsigned __int64) __ptr64;209800;209800;209800;0;1
??$_Unfancy@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@PEAU120@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Unfancy<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64);209800;209800;209800;0;1
??$forward@PEA_N@std@@YA$$QEAPEA_NAEAPEA_N@Z;??$forward@PEA_N@std@@YA$$QEAPEA_NAEAPEA_N@Z;209700;209700;209700;0;1
??$_Get_unwrapped@AEBQEAK@std@@YA@AEBQEAK@Z;__cdecl std::_Get_unwrapped<unsigned long * __ptr64 const & __ptr64>(unsigned long * __ptr64 const & __ptr64);209700;209700;209700;0;1
?deallocate@?$allocator@VKeyValue@cxxopts@@@std@@QEAAXQEAVKeyValue@cxxopts@@_K@Z;void __cdecl std::allocator<class cxxopts::KeyValue>::deallocate(class cxxopts::KeyValue * __ptr64 const,unsigned __int64) __ptr64;209700;209700;209700;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >(void) __ptr64;209600;209600;209600;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@_KPEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,1>::_Get_first(void) __ptr64;209600;209600;209600;0;1
?End@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAPEBV12@XZ;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > const * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::End(void)const __ptr64;209500;209500;209500;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > const & __ptr64);209400;209400;209400;0;1
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<wchar_t> >::~_String_val<struct std::_Simple_types<wchar_t> >(void) __ptr64;209400;209400;209400;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>::_Release(void) __ptr64;209300;209300;209300;0;1
??$_Get_unwrapped@AEBQEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA@AEBQEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const & __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const & __ptr64);209300;209300;209300;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;209250;200300;218200;8950;2
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > > >(void) __ptr64;209200;209200;209200;0;1
?deallocate@?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAAXQEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>::deallocate(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const,unsigned __int64) __ptr64;209200;209200;209200;0;1
??1?$unordered_set@_KU?$hash@_K@std@@U?$equal_to@_K@2@V?$allocator@_K@2@@std@@QEAA@XZ;__cdecl std::unordered_set<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<unsigned __int64> >::~unordered_set<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<unsigned __int64> >(void) __ptr64;209100;209100;209100;0;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >::operator*(void)const __ptr64;209100;209100;209100;0;1
??$forward@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@YAAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@AEBV120@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64 __cdecl std::forward<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);209000;209000;209000;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<class std::b;209000;209000;209000;0;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 & __ptr64);208900;208900;208900;0;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 & __ptr64);208900;208900;208900;0;1
??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::_Tuple_val<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~_Tuple_val<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;208900;208900;208900;0;1
?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z;virtual void * __ptr64 __cdecl std::_Ref_count_base::_Get_deleter(class type_info const & __ptr64)const __ptr64;208800;208800;208800;0;1
??$move@AEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@YA$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@YA$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@AEAV10@@Z;208733;198300;222300;10045;3
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@1@XZ;struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::operator*(void)const __ptr64;208700;208700;208700;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base12>(void) __ptr64;208700;208700;208700;0;1
??$forward@VFunction@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFunction@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VFunction@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFunction@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;208633;202200;220400;8332;3
??$?0U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>(class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> const & __ptr64) __ptr64;208600;208600;208600;0;1
??$forward@V?$sub_match@PEBD@std@@@std@@YA$$QEAV?$sub_match@PEBD@0@AEAV10@@Z;??$forward@V?$sub_match@PEBD@std@@@std@@YA$$QEAV?$sub_match@PEBD@0@AEAV10@@Z;208600;208600;208600;0;1
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;bool __cdecl std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::operator()(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;208500;208500;208500;0;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std:;208500;208500;208500;0;1
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ;__cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::~_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >(void) __ptr64;208500;208500;208500;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;208450;193300;223600;15150;2
??$_Unfancy@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@YAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@PEAV120@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::_Unfancy<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64);208400;200000;222400;9965;3
?_Throw_tree_length_error@std@@YAXXZ;void __cdecl std::_Throw_tree_length_error(void);208300;208300;208300;0;1
??F?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator--(void) __ptr64;208200;208200;208200;0;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >(void) __ptr64;208200;208200;208200;0;1
?_Extract@?$_In_place_key_extract_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_In_place_key_extract_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Extract(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);208100;208100;208100;0;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char;208100;208100;208100;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(void) __ptr64;208100;208100;208100;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator++(void) __ptr64;208100;208100;208100;0;1
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;208050;192600;226500;12615;4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KVTimelineEntry@@@1@XZ;struct std::pair<unsigned __int64 const ,class TimelineEntry> & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator*(void)const __ptr64;208000;208000;208000;0;1
??$_Destroy_range@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@QEAU12@AEAV?$allocator@UDataPerFunction@?A0x5f10505a@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct `anonymous namespace'::DataPerFunction> >(struct `anonymous namespace'::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64 const,class std::allocator<struct `anonymous namespace'::DataPerFunction> & __ptr64);208000;208000;208000;0;1
??$forward@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;207950;198700;217200;9250;2
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct;207900;207900;207900;0;1
??$_Unfancy@U_Loop_vals_t@std@@@std@@YAPEAU_Loop_vals_t@0@PEAU10@@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::_Unfancy<struct std::_Loop_vals_t>(struct std::_Loop_vals_t * __ptr64);207900;207900;207900;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >(void) __ptr64;207800;200300;215300;7500;2
??$?0U?$pair@$$CB_KVTimelineEntry@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> ><struct std::pair<unsigned __int64 const ,class TimelineEntry> >(class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64) __ptr64;207700;207700;207700;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::__autoclassinit2(unsigned __int64) __ptr64;207700;207700;207700;0;1
??$forward@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@0@AEAV10@@Z;??$forward@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@0@AEAV10@@Z;207600;207600;207600;0;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > > const & __ptr64);207600;207600;207600;0;1
??$forward@AEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > const & __ptr64>(class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > const & __ptr64);207600;207600;207600;0;1
??$_Pass_fn@U?$_Cmp_icase@V?$_Regex_traits@D@std@@@std@@$0A@@std@@YA?AU?$_Cmp_icase@V?$_Regex_traits@D@std@@@0@U10@@Z;struct std::_Cmp_icase<class std::_Regex_traits<char> > __cdecl std::_Pass_fn<struct std::_Cmp_icase<class std::_Regex_traits<char> >,0>(struct std::_Cmp_icase<class std::_Regex_traits<char> >);207400;207400;207400;0;1
??__Es_defaultOutputPathFileCompilations@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultOutputPathFileCompilations''(void);207300;207300;207300;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@SA_KAEBV?$allocator@U_Loop_vals_t@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Loop_vals_t> >::max_size(class std::allocator<struct std::_Loop_vals_t> const & __ptr64);207100;207100;207100;0;1
??$move@AEAV?$allocator@_K@std@@@std@@YA$$QEAV?$allocator@_K@0@AEAV10@@Z;??$move@AEAV?$allocator@_K@std@@@std@@YA$$QEAV?$allocator@_K@0@AEAV10@@Z;207100;207100;207100;0;1
??$_Unfancy@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAV10@@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::_Unfancy<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64);207100;207100;207100;0;1
??0LocalThreadData@PackedProcessThreadRemapper@@QEAA@XZ;__cdecl PackedProcessThreadRemapper::LocalThreadData::LocalThreadData(void) __ptr64;207000;207000;207000;0;1
?is_boolean@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::is_boolean(void)const __ptr64;207000;207000;207000;0;1
??0?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@XZ;__cdecl std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >(void) __ptr64;206900;206900;206900;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >,bool>(void) __ptr64;206900;206900;206900;0;1
??0?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >(void) __ptr64;206900;206900;206900;0;1
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ;static void __cdecl std::_String_val<struct std::_Simple_types<char> >::_Xran(void);206816;184000;223400;14092;6
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator*(void)const __ptr64;206800;206800;206800;0;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> * __ptr64 & __ptr64);206800;203900;209700;2900;2
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KUTemplateInstantiationData@@@1@XZ;struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >::operator*(void)const __ptr64;206800;206800;206800;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;206750;198800;214700;7950;2
??$forward@UDataPerFile@?A0x120c265a@@@std@@YA$$QEAUDataPerFile@?A0x120c265a@@AEAU12@@Z;??$forward@UDataPerFile@?A0x120c265a@@@std@@YA$$QEAUDataPerFile@?A0x120c265a@@AEAU12@@Z;206700;206700;206700;0;1
??0?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >(void) __ptr64;206700;206700;206700;0;1
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@0@AEBV10@@Z;class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > const * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > const >(class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > const & __ptr64);206600;206600;206600;0;1
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const * __ptr64 const) __ptr64;206500;206500;206500;0;1
??$_Unfancy@UHelpOptionDetails@cxxopts@@@std@@YAPEAUHelpOptionDetails@cxxopts@@PEAU12@@Z;struct cxxopts::HelpOptionDetails * __ptr64 __cdecl std::_Unfancy<struct cxxopts::HelpOptionDetails>(struct cxxopts::HelpOptionDetails * __ptr64);206400;206400;206400;0;1
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z;void __cdecl std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::deallocate(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,unsigned __int64) __ptr64;206200;206200;206200;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namesp;206200;206200;206200;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(void) __ptr64;206200;206200;206200;0;1
??$addressof@$$CBV?$vector@IV?$allocator@I@std@@@std@@@std@@YAPEBV?$vector@IV?$allocator@I@std@@@0@AEBV10@@Z;class std::vector<unsigned int,class std::allocator<unsigned int> > const * __ptr64 __cdecl std::addressof<class std::vector<unsigned int,class std::allocator<unsigned int> > const >(class std::vector<unsigned int,class std::allocator<unsigned int> > const & __ptr64);206200;206200;206200;0;1
?_Get_first@?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@std@@QEBAAEBU?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@XZ;struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > const & __ptr64 __cdecl std::_Compressed_pair<struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >,float,1>::_Get_first(void)const __ptr64;206100;206100;206100;0;1
??__Es_defaultOutputPathFileInclusionGraph@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultOutputPathFileInclusionGraph''(void);206100;206100;206100;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@UHelpOptionDetails@cxxopts@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UHelpOptionDetails@cxxopts@@@2@XZ;class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct cxxopts::HelpOptionDetails>,class std::_Vector_val<struct std::_Simple_types<struct cxxopts::HelpOptionDetails> >,1>::_Get_first(void) __ptr64;206000;206000;206000;0;1
?PrimaryTemplateSymbolKey@TemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation::PrimaryTemplateSymbolKey(void)const __ptr64;206000;206000;206000;0;1
??$forward@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@0@AEAV10@@Z;??$forward@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@0@AEAV10@@Z;206000;205000;207000;1000;2
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64);206000;206000;206000;0;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List;205900;205900;205900;0;1
??$_Refancy@PEAPEAVTimelineEntry@@$0A@@std@@YAPEAPEAVTimelineEntry@@PEAPEAV1@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Refancy<class TimelineEntry * __ptr64 * __ptr64,0>(class TimelineEntry * __ptr64 * __ptr64);205900;189600;222200;16300;2
??$_Idl_distance@PEBDPEBD@std@@YA@AEBQEBD0@Z;__cdecl std::_Idl_distance<char const * __ptr64,char const * __ptr64>(char const * __ptr64 const & __ptr64,char const * __ptr64 const & __ptr64);205800;205800;205800;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>::operator--(void) __ptr64;205800;205800;205800;0;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > & __ptr64);205700;205700;205700;0;1
?__autoclassinit2@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;205700;205700;205700;0;1
??$?0U_Grp_t@?$_Tgt_state_t@PEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>(class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64) __ptr64;205600;205600;205600;0;1
??1?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@XZ;__cdecl std::tuple<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::~tuple<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights;205600;205600;205600;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > >::operator++(void) __ptr64;205500;205500;205500;0;1
??4?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator=(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;205400;205400;205400;0;1
??$_Get_size_of_n@$00@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<1>(unsigned __int64);205393;181000;241300;18900;15
??$_Get_unwrapped@AEBQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YA@AEBQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@@Z;__cdecl std::_Get_unwrapped<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 const & __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 const & __ptr64);205300;205300;205300;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0>::operator--(void) __ptr64;205300;205300;205300;0;1
??$addressof@V?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@@std@@YAPEAV?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@0@AEAV10@@Z;class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > * __ptr64 __cdecl std::addressof<class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > >(class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > & __ptr64);205200;205200;205200;0;1
??$move@AEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;205200;205200;205200;0;1
?GetSize@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEBA_KXZ;unsigned __int64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::GetSize(void)const __ptr64;205100;205100;205100;0;1
??$forward@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@AEAV10@@Z;205000;205000;205000;0;1
??1invalid_option_format_error@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::invalid_option_format_error::~invalid_option_format_error(void) __ptr64;205000;205000;205000;0;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::operator++(void) __ptr64;205000;205000;205000;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::__autoclassinit2(unsigned __int64) __ptr64;204900;204900;204900;0;1
??$forward@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YAAEBV?$shared_ptr@VOptionDetails@cxxopts@@@0@AEBV10@@Z;class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64 __cdecl std::forward<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64);204800;204800;204800;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UDataPerFunction@?A0x5f10505a@@@2@XZ;class std::allocator<struct `anonymous namespace'::DataPerFunction> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct `anonymous namespace'::DataPerFunction>,class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> >,1>::_Get_first(void) __ptr64;204700;204700;204700;0;1
??$forward@AEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64>(class std::allocator<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;204700;203800;205600;900;2
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;204600;204600;204600;0;1
?_Xlength@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::_Xlength(void);204600;204600;204600;0;1
??1bad_array_new_length@std@@UEAA@XZ;virtual __cdecl std::bad_array_new_length::~bad_array_new_length(void) __ptr64;204538;173300;247300;20117;18
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct T;204500;204500;204500;0;1
??$forward@AEBV?$standard_value@I@values@cxxopts@@@std@@YAAEBV?$standard_value@I@values@cxxopts@@AEBV123@@Z;class cxxopts::values::standard_value<unsigned int> const & __ptr64 __cdecl std::forward<class cxxopts::values::standard_value<unsigned int> const & __ptr64>(class cxxopts::values::standard_value<unsigned int> const & __ptr64);204500;204500;204500;0;1
?WriteStartArray@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NXZ;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteStartArray(void) __ptr64;204500;204500;204500;0;1
?__autoclassinit2@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::__autoclassinit2(unsigned __int64) __ptr64;204500;204500;204500;0;1
?do_always_noconv@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBA_NXZ;virtual bool __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_always_noconv(void)const __ptr64;204500;204500;204500;0;1
?_Xlength@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Xlength(void);204500;204500;204500;0;1
?GetChildren@TimelineEntry@@QEBAAEBV?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@XZ;class std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> > const & __ptr64 __cdecl TimelineEntry::GetChildren(void)const __ptr64;204450;191400;217500;13050;2
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> * __ptr64 & __ptr64);204400;204400;204400;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::BackEndPass> >::Run(unsigned int);204400;204400;204400;0;1
??$move@AEAV?$tuple@AEAUTemplateInstantiationData@@@std@@@std@@YA$$QEAV?$tuple@AEAUTemplateInstantiationData@@@0@AEAV10@@Z;??$move@AEAV?$tuple@AEAUTemplateInstantiationData@@@std@@@std@@YA$$QEAV?$tuple@AEAUTemplateInstantiationData@@@0@AEAV10@@Z;204300;204300;204300;0;1
??0?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@QEAA@XZ;__cdecl std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>(void) __ptr64;204300;204300;204300;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base12>(void) __ptr64;204300;204300;204300;0;1
?GetId@TimelineEntry@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl TimelineEntry::GetId(void)const __ptr64;204300;180300;228300;24000;2
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;204200;204200;204200;0;1
??$forward@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;204100;204100;204100;0;1
?__autoclassinit2@_Node_assert@std@@QEAAX_K@Z;void __cdecl std::_Node_assert::__autoclassinit2(unsigned __int64) __ptr64;204100;204100;204100;0;1
??E?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator++(void) __ptr64;203900;203900;203900;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64;203900;203900;203900;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;203900;203900;203900;0;1
?_Get_ncap@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEBAIXZ;unsigned int __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Get_ncap(void)const __ptr64;203800;203800;203800;0;1
?ToolPath@Invocation@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEB_WXZ;wchar_t const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::Invocation::ToolPath(void)const __ptr64;203800;203800;203800;0;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous na;203800;203800;203800;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >::__autoclassinit2(unsigned __int64) __ptr64;203800;203800;203800;0;1
??$_Unfancy@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@PEAV12345@@Z;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::_Unfancy<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64);203700;203700;203700;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >(void) __ptr64;203700;203700;203700;0;1
??0?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVTemplateInstantiationsAnalyzer@@P85@EAAXAEBVTemplateInstantiation@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VTemplateInstantiationsAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVTemplateInstantiationsAnalyzer@@P85@EAAXAEBVTemplateInstantiation@Activities@234@@Z@Z;203600;203600;203600;0;1
?__autoclassinit2@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@QEAAX_K@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::__autoclassinit2(unsigned __int64) __ptr64;203600;203600;203600;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >(void) __ptr64;203500;203500;203500;0;1
??0?$EventDurationProvider@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEBVActivity@Activities@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::EventDurationProvider<class Microsoft::Cpp::BuildInsights::Activities::Activity>::EventDurationProvider<class Microsoft::Cpp::BuildInsights::Activities::Activity>(class Microsoft::Cpp::BuildInsights::Activities::Activity const * __ptr64) __ptr64;203450;190400;225700;11919;6
??$move@AEAV?$shared_ptr@_N@std@@@std@@YA$$QEAV?$shared_ptr@_N@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@_N@std@@@std@@YA$$QEAV?$shared_ptr@_N@0@AEAV10@@Z;203400;203400;203400;0;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VLinker@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Linker> >::Run(unsigned int);203400;203400;203400;0;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;203400;203400;203400;0;1
??$_Get_unwrapped_n@AEBQEBD_J@std@@YA@AEBQEBD_J@Z;__cdecl std::_Get_unwrapped_n<char const * __ptr64 const & __ptr64,__int64>(char const * __ptr64 const & __ptr64,__int64);203300;203300;203300;0;1
?GetName@TimelineEntry@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl TimelineEntry::GetName(void)const __ptr64;203200;203200;203200;0;1
??$move@AEAUHelpOptionDetails@cxxopts@@@std@@YA$$QEAUHelpOptionDetails@cxxopts@@AEAU12@@Z;??$move@AEAUHelpOptionDetails@cxxopts@@@std@@YA$$QEAUHelpOptionDetails@cxxopts@@AEAU12@@Z;203200;203200;203200;0;1
??$_Get_unwrapped@AEBQEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA@AEBQEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z;__cdecl std::_Get_unwrapped<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 const & __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 const & __ptr64);203200;203200;203200;0;1
?__autoclassinit2@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::__autoclassinit2(unsigned __int64) __ptr64;203200;203200;203200;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate>,void * __pt;203200;203200;203200;0;1
??$move@AEAPEAV_Node_base@std@@@std@@YA$$QEAPEAV_Node_base@0@AEAPEAV10@@Z;??$move@AEAPEAV_Node_base@std@@@std@@YA$$QEAPEAV_Node_base@0@AEAPEAV10@@Z;203200;203200;203200;0;1
??$addressof@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >(class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > & __ptr64);203200;203200;203200;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFile> >::__autoclassinit2(unsigned __int64) __ptr64;203100;203100;203100;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(void) __ptr64;203000;203000;203000;0;1
??$move@AEAVCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAVCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;202900;202900;202900;0;1
?stringLength@cxxopts@@YA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;unsigned __int64 __cdecl cxxopts::stringLength(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);202800;202800;202800;0;1
??$_Unfancy@V?$sub_match@PEBD@std@@@std@@YAPEAV?$sub_match@PEBD@0@PEAV10@@Z;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::_Unfancy<class std::sub_match<char const * __ptr64> >(class std::sub_match<char const * __ptr64> * __ptr64);202700;202700;202700;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;202700;202700;202700;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;202650;202100;203200;550;2
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::__autoclassinit2(unsigned __int64) __ptr64;202600;202600;202600;0;1
??$forward@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@AEAV10@@Z;202600;202600;202600;0;1
??$forward@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YA$$QEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAU10@@Z;??$forward@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YA$$QEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAU10@@Z;202600;202600;202600;0;1
??1?$pair@$$CB_KVTimelineEntry@@@std@@QEAA@XZ;__cdecl std::pair<unsigned __int64 const ,class TimelineEntry>::~pair<unsigned __int64 const ,class TimelineEntry>(void) __ptr64;202400;202400;202400;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::opera;202400;202400;202400;0;1
??1_Node_end_group@std@@UEAA@XZ;virtual __cdecl std::_Node_end_group::~_Node_end_group(void) __ptr64;202400;202400;202400;0;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;202400;202400;202400;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;202300;202300;202300;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >(void) __ptr64;202300;199500;205100;2800;2
?EventName@Event@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::EventName(void)const __ptr64;202200;202200;202200;0;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@QEAA@PEAU?$_List_node@_KPEAX@1@PEBV?$_List_val@U?$_List_simple_types@_K@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<unsigned __int64> > const * __ptr64) __ptr64;202200;202200;202200;0;1
??$EntityCanMaterializeId@VInvocation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::Invocation>(unsigned int);202100;202100;202100;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData>,void * __ptr64> > const & __ptr64);202100;202100;202100;0;1
??1?$standard_value@I@values@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::values::standard_value<unsigned int>::~standard_value<unsigned int>(void) __ptr64;202100;202100;202100;0;1
?_Add_dot@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_dot(void) __ptr64;202100;202100;202100;0;1
?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Xlength(void);202100;202100;202100;0;1
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ;__cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::operator bool(void)const __ptr64;202050;177100;245800;25777;6
??$_Unfancy@PEAVTimelineEntry@@@std@@YAPEAPEAVTimelineEntry@@PEAPEAV1@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Unfancy<class TimelineEntry * __ptr64>(class TimelineEntry * __ptr64 * __ptr64);202050;192400;211700;9650;2
?_Release@?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAPEAUHelpOptionDetails@cxxopts@@XZ;struct cxxopts::HelpOptionDetails * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >::_Release(void) __ptr64;202000;202000;202000;0;1
??__Es_defaultoutputPathFileInclusionTimes@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultoutputPathFileInclusionTimes''(void);202000;202000;202000;0;1
??0?$_Cmp_icase@V?$_Regex_traits@D@std@@@std@@QEAA@AEBV?$_Regex_traits@D@1@@Z;__cdecl std::_Cmp_icase<class std::_Regex_traits<char> >::_Cmp_icase<class std::_Regex_traits<char> >(class std::_Regex_traits<char> const & __ptr64) __ptr64;202000;202000;202000;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@SA_KAEBV?$allocator@UDataPerFunction@?A0x5f10505a@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct `anonymous namespace'::DataPerFunction> >::max_size(class std::allocator<struct `anonymous namespace'::DataPerFunction> const & __ptr64);202000;202000;202000;0;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;202000;202000;202000;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >::__autoclassinit2(unsigned __int64) __ptr64;201800;201800;201800;0;1
?_Xlength@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@CAXXZ;static void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Xlength(void);201800;201800;201800;0;1
??$_Refancy@PEBD$0A@@std@@YAPEBDPEBD@Z;char const * __ptr64 __cdecl std::_Refancy<char const * __ptr64,0>(char const * __ptr64);201800;201800;201800;0;1
??$_Get_unwrapped@AEAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA@AEAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 & __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 & __ptr64);201700;201700;201700;0;1
??$forward@AEAPEBVTimelineEntry@@@std@@YAAEAPEBVTimelineEntry@@AEAPEBV1@@Z;class TimelineEntry const * __ptr64 & __ptr64 __cdecl std::forward<class TimelineEntry const * __ptr64 & __ptr64>(class TimelineEntry const * __ptr64 & __ptr64);201700;201700;201700;0;1
??$_Unfancy@UDataPerFile@?A0x120c265a@@@std@@YAPEAUDataPerFile@?A0x120c265a@@PEAU12@@Z;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::_Unfancy<struct `anonymous namespace'::DataPerFile>(struct A0x120c265a::DataPerFile * __ptr64);201700;201700;201700;0;1
?GetData@FunctionCompilationsAnalyzer@@QEBAAEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;201700;201700;201700;0;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> > >(voi;201600;201600;201600;0;1
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::__autoclassinit2(unsigned __int64) __ptr64;201600;201600;201600;0;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::operator--(void) __ptr64;201500;201500;201500;0;1
?GetData@FileCompilationsAnalyzer@@QEBAAEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilat;201500;201500;201500;0;1
??0?$allocator@_K@std@@QEAA@XZ;__cdecl std::allocator<unsigned __int64>::allocator<unsigned __int64>(void) __ptr64;201500;194500;208500;7000;2
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >,bool>(void) __ptr64;201500;201500;201500;0;1
??$iter_swap@PEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAU12@@std@@YAXPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@0@Z;void __cdecl std::iter_swap<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64>(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64,struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadDat;201400;201400;201400;0;1
??$_Prev_iter@PEBD@std@@YAPEBDPEBD@Z;char const * __ptr64 __cdecl std::_Prev_iter<char const * __ptr64>(char const * __ptr64);201400;201400;201400;0;1
??$forward@AEBK@std@@YAAEBKAEBK@Z;unsigned long const & __ptr64 __cdecl std::forward<unsigned long const & __ptr64>(unsigned long const & __ptr64);201400;201400;201400;0;1
??$forward@AEBV?$allocator@_K@std@@@std@@YAAEBV?$allocator@_K@0@AEBV10@@Z;class std::allocator<unsigned __int64> const & __ptr64 __cdecl std::forward<class std::allocator<unsigned __int64> const & __ptr64>(class std::allocator<unsigned __int64> const & __ptr64);201400;201400;201400;0;1
?__autoclassinit2@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::__autoclassinit2(unsigned __int64) __ptr64;201400;201400;201400;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > * __ptr64 const & __ptr64);201300;201300;201300;0;1
??$forward@V?$allocator@_K@std@@@std@@YA$$QEAV?$allocator@_K@0@AEAV10@@Z;??$forward@V?$allocator@_K@std@@@std@@YA$$QEAV?$allocator@_K@0@AEAV10@@Z;201300;201300;201300;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;201300;197000;205600;4300;2
??$iter_swap@PEAUDataPerFunction@?A0x5f10505a@@PEAU12@@std@@YAXPEAUDataPerFunction@?A0x5f10505a@@0@Z;void __cdecl std::iter_swap<struct `anonymous namespace'::DataPerFunction * __ptr64,struct A0x5f10505a::DataPerFunction * __ptr64>(struct `anonymous namespace'::DataPerFunction * __ptr64,struct `anonymous namespace'::DataPerFunction * __ptr64);201200;201200;201200;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > > > const & __ptr;201200;201200;201200;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > const & __ptr64);201200;201200;201200;0;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(void) __ptr64;201100;191200;210600;7925;3
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(void) __ptr64;200950;187200;214700;13750;2
?GetRemappings@PackedProcessThreadRemapper@@QEBAAEBV?$unordered_map@_KUProcessThreadRemap@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@@std@@XZ;class std::unordered_map<unsigned __int64,struct ProcessThreadRemap,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > const & __ptr64 __cdecl PackedProcessThreadRemapper::GetRemappings(void)const __ptr64;200950;189100;212800;11850;2
??$forward@V?$tuple@AEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$tuple@AEAVTimelineEntry@@@0@AEAV10@@Z;??$forward@V?$tuple@AEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$tuple@AEAVTimelineEntry@@@0@AEAV10@@Z;200800;200800;200800;0;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KUTemplateInstantiationData@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@3@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> >,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Umap_traits<unsigned __int64,struct TemplateInstantiationData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64;200800;200800;200800;0;1
?has_default@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::has_default(void)const __ptr64;200800;200800;200800;0;1
?ProcessorIndex@Event@BuildInsights@Cpp@Microsoft@@QEBAAEBGXZ;unsigned short const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::ProcessorIndex(void)const __ptr64;200800;200800;200800;0;1
?__autoclassinit2@?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,c;200700;200700;200700;0;1
?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QEBAAEBV?$allocator@K@2@XZ;class std::allocator<unsigned long> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned long>,class std::_Vector_val<struct std::_Simple_types<unsigned long> >,1>::_Get_first(void)const __ptr64;200700;200700;200700;0;1
?__autoclassinit2@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@QEAAX_K@Z;void __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;200500;200500;200500;0;1
??$move@AEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;200500;200500;200500;0;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SA?AV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@AEBV32@@Z;static class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::select_on_container_copy_construction(class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple;200500;200500;200500;0;1
??$_Get_unwrapped@AEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA@AEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64>(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64);200500;200500;200500;0;1
??1bad_cast@std@@UEAA@XZ;virtual __cdecl std::bad_cast::~bad_cast(void) __ptr64;200400;185800;235000;17058;7
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SA?AV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@AEBV32@@Z;static class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,void * __ptr64> > __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::basic_string<char,struct std::ch;200400;200400;200400;0;1
?__autoclassinit2@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::__autoclassinit2(unsigned __int64) __ptr64;200200;200200;200200;0;1
?GetCapacity@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEBA_KXZ;unsigned __int64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::GetCapacity(void)const __ptr64;200200;200200;200200;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<cl;200200;200200;200200;0;1
?Value@CommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@QEBAPEB_WXZ;wchar_t const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::SimpleEvents::CommandLine::Value(void)const __ptr64;200200;200200;200200;0;1
?OnBeginReloggingPass@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnBeginReloggingPass(void) __ptr64;200142;148300;415500;88337;7
?__autoclassinit2@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::__autoclassinit2(unsigned __int64) __ptr64;200100;200100;200100;0;1
??$forward@W4_Node_type@std@@@std@@YA$$QEAW4_Node_type@0@AEAW410@@Z;??$forward@W4_Node_type@std@@@std@@YA$$QEAW4_Node_type@0@AEAW410@@Z;200100;200100;200100;0;1
??$forward@AEA_N@std@@YAAEA_NAEA_N@Z;bool & __ptr64 __cdecl std::forward<bool & __ptr64>(bool & __ptr64);200050;197300;202800;2750;2
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(void) __ptr64;200000;200000;200000;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base12>(void) __ptr64;200000;200000;200000;0;1
??1OptionValue@cxxopts@@QEAA@XZ;__cdecl cxxopts::OptionValue::~OptionValue(void) __ptr64;200000;200000;200000;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;200000;200000;200000;0;1
?_Add_eol@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_eol(void) __ptr64;199900;199900;199900;0;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@QEAAPEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@2@XZ;struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::_Release(void) __ptr64;199900;199900;199900;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;199900;199900;199900;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::__autoclassinit2(unsigned __int64) __ptr64;199800;199800;199800;0;1
?__autoclassinit2@Options@cxxopts@@QEAAX_K@Z;void __cdecl cxxopts::Options::__autoclassinit2(unsigned __int64) __ptr64;199800;199800;199800;0;1
??$forward@AEBQEAU?$_List_node@_KPEAX@std@@@std@@YAAEBQEAU?$_List_node@_KPEAX@0@AEBQEAU10@@Z;struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 const & __ptr64);199700;199700;199700;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@XZ;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;199600;199600;199600;0;1
??$EntityCanMaterializeId@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation>(unsigned int);199566;189900;212500;9511;3
?__autoclassinit2@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::__autoclassinit2(unsigned __int64) __ptr64;199500;199500;199500;0;1
??$addressof@_N@std@@YAPEA_NAEA_N@Z;bool * __ptr64 __cdecl std::addressof<bool>(bool & __ptr64);199400;199400;199400;0;1
?__autoclassinit2@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::__autoclassinit2(unsigned __int64) __ptr64;199300;199300;199300;0;1
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ;static int __cdecl std::_Narrow_char_traits<char,int>::eof(void);199285;183600;218600;11325;7
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KUProcessThreadRemap@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@3@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> >,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessThreadRemap,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_t;199200;199200;199200;0;1
?push_back@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAAXAEBQEAVTimelineEntry@@@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::push_back(class TimelineEntry * __ptr64 const & __ptr64) __ptr64;199100;197700;200500;1400;2
??$forward@AEAUDataPerFile@?A0x120c265a@@@std@@YAAEAUDataPerFile@?A0x120c265a@@AEAU12@@Z;struct `anonymous namespace'::DataPerFile & __ptr64 __cdecl std::forward<struct `anonymous namespace'::DataPerFile & __ptr64>(struct A0x120c265a::DataPerFile & __ptr64);199100;199100;199100;0;1
??$move@AEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;199000;199000;199000;0;1
??$_Get_unwrapped@AEBQEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YA@AEBQEAU?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@0@@Z;__cdecl std::_Get_unwrapped<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 const & __ptr64>(struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> * __ptr64 const & __ptr64);199000;199000;199000;0;1
?_Xlength@?$vector@KV?$allocator@K@std@@@std@@CAXXZ;static void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Xlength(void);198900;198900;198900;0;1
?_Xlength@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@CAXXZ;static void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Xlength(void);198900;198900;198900;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> > const & __ptr64);198900;198900;198900;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::__autoclassinit2(unsigned __int64) __ptr64;198700;198700;198700;0;1
??$addressof@VOptionDetails@cxxopts@@@std@@YAPEAVOptionDetails@cxxopts@@AEAV12@@Z;class cxxopts::OptionDetails * __ptr64 __cdecl std::addressof<class cxxopts::OptionDetails>(class cxxopts::OptionDetails & __ptr64);198600;198600;198600;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >,bool>(void) __ptr64;198600;198600;198600;0;1
??$forward@VKeyValue@cxxopts@@@std@@YA$$QEAVKeyValue@cxxopts@@AEAV12@@Z;??$forward@VKeyValue@cxxopts@@@std@@YA$$QEAVKeyValue@cxxopts@@AEAV12@@Z;198600;198600;198600;0;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base12>(void) __ptr64;198500;198500;198500;0;1
?Data@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAPEBXXZ;void const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::Data(void)const __ptr64;198416;184900;217200;13582;6
??0?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >(void) __ptr64;198400;198400;198400;0;1
??$move@AEAPEA_N@std@@YA$$QEAPEA_NAEAPEA_N@Z;??$move@AEAPEA_N@std@@YA$$QEAPEA_NAEAPEA_N@Z;198400;198400;198400;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;198300;198300;198300;0;1
?_Xlength@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@CAXXZ;static void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Xlength(void);198300;198300;198300;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>::_Release(void) __ptr64;198200;198200;198200;0;1
?WriteEndObject@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NXZ;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteEndObject(void) __ptr64;198100;198100;198100;0;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KUProcessThreadRemap@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap>,void * __ptr64> * __ptr64 const & __ptr64);198100;198100;198100;0;1
??0?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@QEAA@AEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z;__cdecl rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64) __ptr64;198000;198000;198000;0;1
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > const & __ptr64>(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cons;197900;197900;197900;0;1
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ;__cdecl std::_Compressed_pair<class std::allocator<wchar_t>,class std::_String_val<struct std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<class std::allocator<wchar_t>,class std::_String_val<struct std::_Simple_types<wchar_t> >,1>(void) __ptr64;197800;197800;197800;0;1
?_Xlength@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@CAXXZ;static void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Xlength(void);197800;197800;197800;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEBVTimelineEntry@@PEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class TimelineEntry const * __ptr64,struct PackedProcessThreadRemapper::LocalThreadData * __ptr64> > >::__autoclassinit2(unsigned __int64) __ptr64;197800;197800;197800;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>::_Release(void) __ptr64;197700;197700;197700;0;1
??$_Unfancy@UDataPerFunction@?A0x5f10505a@@@std@@YAPEAUDataPerFunction@?A0x5f10505a@@PEAU12@@Z;struct `anonymous namespace'::DataPerFunction * __ptr64 __cdecl std::_Unfancy<struct `anonymous namespace'::DataPerFunction>(struct A0x5f10505a::DataPerFunction * __ptr64);197700;197700;197700;0;1
?__autoclassinit2@BuildAnalyzer@@QEAAX_K@Z;void __cdecl BuildAnalyzer::__autoclassinit2(unsigned __int64) __ptr64;197500;197500;197500;0;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >,bool>(void) __ptr64;197500;197500;197500;0;1
?Key@SymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName::Key(void)const __ptr64;197250;187100;207400;10150;2
??1_Root_node@std@@UEAA@XZ;virtual __cdecl std::_Root_node::~_Root_node(void) __ptr64;197200;197200;197200;0;1
??1?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@XZ;__cdecl std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >::~pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >(void) __ptr64;197200;197200;197200;0;1
?StartTimestamp@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::StartTimestamp(void)const __ptr64;197166;164000;223100;23785;6
?__autoclassinit2@_Node_end_rep@std@@QEAAX_K@Z;void __cdecl std::_Node_end_rep::__autoclassinit2(unsigned __int64) __ptr64;197100;197100;197100;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > > >::__autoclassinit2(unsigned __int64) __ptr64;197000;197000;197000;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > > >::__autoclassinit2(unsigned __int64) __ptr64;197000;197000;197000;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;196900;196900;196900;0;1
??$forward@AEAPEAU?$_List_node@_KPEAX@std@@@std@@YAAEAPEAU?$_List_node@_KPEAX@0@AEAPEAU10@@Z;struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 & __ptr64);196800;196800;196800;0;1
??1_Node_capture@std@@UEAA@XZ;virtual __cdecl std::_Node_capture::~_Node_capture(void) __ptr64;196800;196800;196800;0;1
?Name@SymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName::Name(void)const __ptr64;196750;176400;217100;20350;2
??$move@AEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YA$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@AEAV10@@Z;??$move@AEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YA$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@AEAV10@@Z;196700;196700;196700;0;1
?Size@EventStack@BuildInsights@Cpp@Microsoft@@QEBA_KXZ;unsigned __int64 __cdecl Microsoft::Cpp::BuildInsights::EventStack::Size(void)const __ptr64;196650;190800;202500;5850;2
??$forward@UDataPerTemplate@?A0x5cdd232a@@@std@@YA$$QEAUDataPerTemplate@?A0x5cdd232a@@AEAU12@@Z;??$forward@UDataPerTemplate@?A0x5cdd232a@@@std@@YA$$QEAUDataPerTemplate@?A0x5cdd232a@@AEAU12@@Z;196600;196600;196600;0;1
??$addressof@PEAU?$_List_node@_KPEAX@std@@@std@@YAPEAPEAU?$_List_node@_KPEAX@0@AEAPEAU10@@Z;struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64>(struct std::_List_node<unsigned __int64,void * __ptr64> * __ptr64 & __ptr64);196600;196600;196600;0;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > > const & __ptr;196600;196600;196600;0;1
??$forward@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;196550;193100;200000;3450;2
?OnEndReloggingPass@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnEndReloggingPass(void) __ptr64;196400;164600;285600;37615;7
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUTemplateInstantiationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct TemplateInstantiationData> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;196400;180600;212200;15800;2
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFunction> >::__autoclassinit2(unsigned __int64) __ptr64;196200;196200;196200;0;1
?max_size@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SA_KAEBV?$allocator@_K@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<unsigned __int64> >::max_size(class std::allocator<unsigned __int64> const & __ptr64);196100;196100;196100;0;1
?GetProperties@TimelineEntry@@QEBAAEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<;196100;196100;196100;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > > * __ptr64 const & __ptr64);196100;196100;196100;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;196050;194900;197200;1150;2
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;195900;195900;195900;0;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::opera;195800;195800;195800;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::__autoclassinit2(unsigned __int64) __ptr64;195800;195800;195800;0;1
?EventInstanceId@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::EventInstanceId(void)const __ptr64;195700;186700;202500;6421;4
?_Is_word@std@@YA_ND@Z;bool __cdecl std::_Is_word(char);195600;195600;195600;0;1
??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;195600;195600;195600;0;1
??$_Get_unwrapped_n@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_J@std@@YA@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@_J@Z;__cdecl std::_Get_unwrapped_n<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64,__int64>(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64,__int64);195500;195500;195500;0;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@1@XZ;struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;195400;195400;195400;0;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::__autoclassinit2(unsigned __int64) __ptr64;195200;195200;195200;0;1
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData>,void * __ptr64> * __ptr64 & __ptr64);195000;195000;195000;0;1
??$addressof@I@std@@YAPEAIAEAI@Z;unsigned int * __ptr64 __cdecl std::addressof<unsigned int>(unsigned int & __ptr64);195000;195000;195000;0;1
?__autoclassinit2@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::__autoclassinit2(unsigned __int64) __ptr64;195000;195000;195000;0;1
?_Xlength@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Xlength(void);194800;194800;194800;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA@AEBQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64 const & __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64 const & __ptr64);194800;194800;194800;0;1
??$move@AEAUDataPerFunction@?A0x5f10505a@@@std@@YA$$QEAUDataPerFunction@?A0x5f10505a@@AEAU12@@Z;??$move@AEAUDataPerFunction@?A0x5f10505a@@@std@@YA$$QEAUDataPerFunction@?A0x5f10505a@@AEAU12@@Z;194800;194800;194800;0;1
??1?$_Sequence@D@std@@QEAA@XZ;__cdecl std::_Sequence<char>::~_Sequence<char>(void) __ptr64;194800;194800;194800;0;1
?OnBeginAnalysisPass@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnBeginAnalysisPass(void) __ptr64;194771;154500;322500;55068;7
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KULocalThreadData@PackedProcessThreadRemapper@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KULocalThreadData@PackedProcessThreadRemapper@@@std@@@4@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct PackedProcessThreadRemapper::LocalThreadData> >,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Umap_traits<unsigned __int64,struct PackedProcessThreadRemapper::LocalThreadData,class std::_Uhash_c;194600;194600;194600;0;1
?is_container@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::is_container(void)const __ptr64;194500;194500;194500;0;1
?ThreadId@Event@BuildInsights@Cpp@Microsoft@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::ThreadId(void)const __ptr64;194500;194500;194500;0;1
?GetFinishTimestamp@TimelineEntry@@QEBAAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64 __cdecl TimelineEntry::GetFinishTimestamp(void)const __ptr64;194450;193400;195500;1050;2
??1?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,bool>::~pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,bool>(void) __ptr64;194400;194400;194400;0;1
??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z;??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z;194350;194000;194700;350;2
??$OnEndAnalysisPassImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnalysisPass;194100;194100;194100;0;1
?long_name@OptionDetails@cxxopts@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl cxxopts::OptionDetails::long_name(void)const __ptr64;194000;194000;194000;0;1
??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64);194000;194000;194000;0;1
??1_Node_rep@std@@UEAA@XZ;virtual __cdecl std::_Node_rep::~_Node_rep(void) __ptr64;193900;193900;193900;0;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KUProcessThreadRemap@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::operator*(void)const __ptr64;193800;193800;193800;0;1
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>(void) __ptr64;193800;193800;193800;0;1
?_Add_wbound@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_wbound(void) __ptr64;193700;193700;193700;0;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 const & __ptr64);193700;193700;193700;0;1
??$forward@AEA_K@std@@YAAEA_KAEA_K@Z;unsigned __int64 & __ptr64 __cdecl std::forward<unsigned __int64 & __ptr64>(unsigned __int64 & __ptr64);193650;183500;203800;10150;2
??1option_requires_argument_exception@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::option_requires_argument_exception::~option_requires_argument_exception(void) __ptr64;193600;193600;193600;0;1
??$forward@V?$tuple@AEAUTemplateInstantiationData@@@std@@@std@@YA$$QEAV?$tuple@AEAUTemplateInstantiationData@@@0@AEAV10@@Z;??$forward@V?$tuple@AEAUTemplateInstantiationData@@@std@@@std@@YA$$QEAV?$tuple@AEAUTemplateInstantiationData@@@0@AEAV10@@Z;193500;193500;193500;0;1
?_Xlength@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@CAXXZ;static void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Xlength(void);193400;189300;198100;3617;3
?_Xlength@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@CAXXZ;static void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Xlength(void);193300;193300;193300;0;1
?_Xlength@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@CAXXZ;static void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Xlength(void);193100;193100;193100;0;1
??$_Get_unwrapped@AEBQEA_K@std@@YA@AEBQEA_K@Z;__cdecl std::_Get_unwrapped<unsigned __int64 * __ptr64 const & __ptr64>(unsigned __int64 * __ptr64 const & __ptr64);193000;193000;193000;0;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@?A0x120c265a@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFile> > >(void) __ptr64;192700;192700;192700;0;1
?_Get_bmax@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEBAIXZ;unsigned int __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Get_bmax(void)const __ptr64;192600;192600;192600;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;192500;192500;192500;0;1
??$_Get_unwrapped@AEBQEAU_Loop_vals_t@std@@@std@@YA@AEBQEAU_Loop_vals_t@0@@Z;__cdecl std::_Get_unwrapped<struct std::_Loop_vals_t * __ptr64 const & __ptr64>(struct std::_Loop_vals_t * __ptr64 const & __ptr64);192300;192300;192300;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<unsigned int> >::__autoclassinit2(unsigned __int64) __ptr64;192200;192200;192200;0;1
?has_implicit@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::has_implicit(void)const __ptr64;192200;192200;192200;0;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(void) __ptr64;192000;192000;192000;0;1
??$move@AEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;191800;191800;191800;0;1
?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;191800;191800;191800;0;1
??1?$reverse_iterator@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >::~reverse_iterator<class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >(void) __ptr64;191800;191800;191800;0;1
??$PutUnsafe@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@@rapidjson@@YAXAEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@0@D@Z;void __cdecl rapidjson::PutUnsafe<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > >(class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64,char);191800;191800;191800;0;1
?_Getctype@?$_Regex_traits@D@std@@QEBAPEBV?$ctype@D@2@XZ;class std::ctype<char> const * __ptr64 __cdecl std::_Regex_traits<char>::_Getctype(void)const __ptr64;191600;191600;191600;0;1
??1_Ref_count_base@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_base::~_Ref_count_base(void) __ptr64;191500;191500;191500;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >::__autoclassinit2(unsigned __int64) __ptr64;191500;191500;191500;0;1
??$_Get_unwrapped@AEBQEAD@std@@YA@AEBQEAD@Z;__cdecl std::_Get_unwrapped<char * __ptr64 const & __ptr64>(char * __ptr64 const & __ptr64);191500;191500;191500;0;1
?__autoclassinit2@?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::__autoclassinit2(unsigned __int64) __ptr64;191300;191300;191300;0;1
??0?$_Cmp_icase@V?$regex_traits@D@std@@@std@@QEAA@AEBV?$regex_traits@D@1@@Z;__cdecl std::_Cmp_icase<class std::regex_traits<char> >::_Cmp_icase<class std::regex_traits<char> >(class std::regex_traits<char> const & __ptr64) __ptr64;191100;191100;191100;0;1
??$_Get_unwrapped@AEBQEAUDataPerFile@?A0x120c265a@@@std@@YA@AEBQEAUDataPerFile@?A0x120c265a@@@Z;__cdecl std::_Get_unwrapped<struct `anonymous namespace'::DataPerFile * __ptr64 const & __ptr64>(struct `anonymous namespace'::DataPerFile * __ptr64 const & __ptr64);191000;191000;191000;0;1
??$EntityCanMaterializeId@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::SimpleEvents::CommandLine>(unsigned int);191000;191000;191000;0;1
??__Ffalsy_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic atexit destructor for 'falsy_pattern''(void);190900;190900;190900;0;1
?_Get_traits@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEBAAEBV?$regex_traits@D@2@XZ;class std::regex_traits<char> const & __ptr64 __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Get_traits(void)const __ptr64;190700;190700;190700;0;1
??0TraceInfo@BuildInsights@Cpp@Microsoft@@QEAA@AEBUTRACE_INFO_DATA_TAG@123@@Z;__cdecl Microsoft::Cpp::BuildInsights::TraceInfo::TraceInfo(struct Microsoft::Cpp::BuildInsights::TRACE_INFO_DATA_TAG const & __ptr64) __ptr64;190600;190600;190600;0;1
??$_Get_unwrapped@AEBQEAUDataPerFunction@?A0x5f10505a@@@std@@YA@AEBQEAUDataPerFunction@?A0x5f10505a@@@Z;__cdecl std::_Get_unwrapped<struct `anonymous namespace'::DataPerFunction * __ptr64 const & __ptr64>(struct `anonymous namespace'::DataPerFunction * __ptr64 const & __ptr64);190600;190600;190600;0;1
??1bad_weak_ptr@std@@UEAA@XZ;virtual __cdecl std::bad_weak_ptr::~bad_weak_ptr(void) __ptr64;190600;190600;190600;0;1
??$OnStartActivityImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStartActivityIm;190300;190300;190300;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFilterTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;190200;190200;190200;0;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> > >(void) __ptr64;190200;190200;190200;0;1
?__autoclassinit2@?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class cxxopts::values::standard_value<bool> >::__autoclassinit2(unsigned __int64) __ptr64;190100;190100;190100;0;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::__autoclassinit2(unsigned __int64) __ptr64;190000;190000;190000;0;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >(void) __ptr64;190000;190000;190000;0;1
?__autoclassinit2@?$shared_ptr@_N@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<bool>::__autoclassinit2(unsigned __int64) __ptr64;189900;189900;189900;0;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >::__autoclassinit2(unsigned __int64) __ptr64;189900;189900;189900;0;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@QEAAPEAUDataPerFile@?A0x120c265a@@XZ;struct `anonymous namespace'::DataPerFile * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Release(void) __ptr64;189900;189900;189900;0;1
?OnEndAnalysis@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnEndAnalysis(void) __ptr64;189885;165800;248000;25531;7
?__autoclassinit2@?$shared_ptr@I@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<unsigned int>::__autoclassinit2(unsigned __int64) __ptr64;189800;189800;189800;0;1
?_Xlength@?$vector@UDataPerFunction@?A0x5f10505a@@V?$allocator@UDataPerFunction@?A0x5f10505a@@@std@@@std@@CAXXZ;static void __cdecl std::vector<struct `anonymous namespace'::DataPerFunction,class std::allocator<struct `anonymous namespace'::DataPerFunction> >::_Xlength(void);189700;189700;189700;0;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAPEAV?$sub_match@PEBD@2@XZ;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >::_Release(void) __ptr64;189600;189600;189600;0;1
??$forward@AEAPEAUDataPerFunction@?A0x5f10505a@@@std@@YAAEAPEAUDataPerFunction@?A0x5f10505a@@AEAPEAU12@@Z;struct `anonymous namespace'::DataPerFunction * __ptr64 & __ptr64 __cdecl std::forward<struct `anonymous namespace'::DataPerFunction * __ptr64 & __ptr64>(struct A0x5f10505a::DataPerFunction * __ptr64 & __ptr64);189600;189600;189600;0;1
?GetProcessId@TimelineEntry@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl TimelineEntry::GetProcessId(void)const __ptr64;189600;189600;189600;0;1
??$forward@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;189500;189500;189500;0;1
??$_Get_unwrapped@AEBQEAVKeyValue@cxxopts@@@std@@YA@AEBQEAVKeyValue@cxxopts@@@Z;__cdecl std::_Get_unwrapped<class cxxopts::KeyValue * __ptr64 const & __ptr64>(class cxxopts::KeyValue * __ptr64 const & __ptr64);189500;189500;189500;0;1
?__autoclassinit2@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@QEAAX_K@Z;void __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::__autoclassinit2(unsigned __int64) __ptr64;189400;189400;189400;0;1
??$addressof@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UDataPerFunction@?A0x5f10505a@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > >(class std::_Vector_val<struct std::_Simple_types<struct `anonymous namespace'::DataPerFunction> > & __ptr64);189100;189100;189100;0;1
??$_Pass_fn@V<lambda_b91a942b4070954e66476ae297366993>@@$0A@@std@@YA?AV<lambda_b91a942b4070954e66476ae297366993>@@V1@@Z;class <lambda_b91a942b4070954e66476ae297366993> __cdecl std::_Pass_fn<class <lambda_b91a942b4070954e66476ae297366993>,0>(class <lambda_b91a942b4070954e66476ae297366993>);189100;189100;189100;0;1
?GetIgnoredEntries@FilterTimelineAnalyzer@@QEBAAEBV?$unordered_set@_KU?$hash@_K@std@@U?$equal_to@_K@2@V?$allocator@_K@2@@std@@XZ;class std::unordered_set<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<unsigned __int64> > const & __ptr64 __cdecl FilterTimelineAnalyzer::GetIgnoredEntries(void)const __ptr64;188900;188900;188900;0;1
??$_Get_unwrapped@AEBQEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 const & __ptr64>(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 const & __ptr64);188900;188900;188900;0;1
??$_Get@D@_Cl_names@std@@QEBAPEBDXZ;char const * __ptr64 __cdecl std::_Cl_names::_Get<char>(void)const __ptr64;188900;188900;188900;0;1
?GetStartTimestamp@TimelineEntry@@QEBAAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64 __cdecl TimelineEntry::GetStartTimestamp(void)const __ptr64;188850;188600;189100;250;2
?_Xlength@?$vector@UDataPerFile@?A0x120c265a@@V?$allocator@UDataPerFile@?A0x120c265a@@@std@@@std@@CAXXZ;static void __cdecl std::vector<struct `anonymous namespace'::DataPerFile,class std::allocator<struct `anonymous namespace'::DataPerFile> >::_Xlength(void);188700;188700;188700;0;1
??$_Pass_fn@V<lambda_9480883bff83c29d8fc89bed48609766>@@$0A@@std@@YA?AV<lambda_9480883bff83c29d8fc89bed48609766>@@V1@@Z;class <lambda_9480883bff83c29d8fc89bed48609766> __cdecl std::_Pass_fn<class <lambda_9480883bff83c29d8fc89bed48609766>,0>(class <lambda_9480883bff83c29d8fc89bed48609766>);188700;188700;188700;0;1
??$_Get_unwrapped@AEBQEAV?$sub_match@PEBD@std@@@std@@YA@AEBQEAV?$sub_match@PEBD@0@@Z;__cdecl std::_Get_unwrapped<class std::sub_match<char const * __ptr64> * __ptr64 const & __ptr64>(class std::sub_match<char const * __ptr64> * __ptr64 const & __ptr64);188500;188500;188500;0;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;188500;188500;188500;0;1
?OnSimpleEvent@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;188328;172600;216000;12396;7
??0?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVIAnalyzer@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64) __ptr64;188300;188300;188300;0;1
??1option_exists_error@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::option_exists_error::~option_exists_error(void) __ptr64;188000;188000;188000;0;1
??$_Get_unwrapped@AEBQEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@YA@AEBQEAU_Grp_t@?$_Tgt_state_t@PEBD@0@@Z;__cdecl std::_Get_unwrapped<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const & __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const & __ptr64);188000;188000;188000;0;1
?_Size@?$_Buf@D@std@@QEBAIXZ;unsigned int __cdecl std::_Buf<char>::_Size(void)const __ptr64;187700;187700;187700;0;1
??$_Seek_wrapped@PEBDPEBD@std@@YAXAEAPEBD$$QEAPEBD@Z;??$_Seek_wrapped@PEBDPEBD@std@@YAXAEAPEBD$$QEAPEBD@Z;187400;187400;187400;0;1
?__autoclassinit2@?$shared_ptr@V?$standard_value@I@values@cxxopts@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class cxxopts::values::standard_value<unsigned int> >::__autoclassinit2(unsigned __int64) __ptr64;187200;187200;187200;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;186900;186900;186900;0;1
??$OnStopActivityImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStopActivityImp;186800;186800;186800;0;1
??$forward@AEBVTraceInfo@BuildInsights@Cpp@Microsoft@@@std@@YAAEBVTraceInfo@BuildInsights@Cpp@Microsoft@@AEBV1234@@Z;class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64 __cdecl std::forward<class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64>(class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64);186700;186700;186700;0;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > > >::__autoclassinit2(unsigned __int64) __ptr64;186700;186700;186700;0;1
??0ProcessThreadRemap@@QEAA@XZ;__cdecl ProcessThreadRemap::ProcessThreadRemap(void) __ptr64;186600;186600;186600;0;1
??1_Node_back@std@@UEAA@XZ;virtual __cdecl std::_Node_back::~_Node_back(void) __ptr64;186100;186100;186100;0;1
?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ;static void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Xlength(void);185900;185900;185900;0;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0> * __ptr64>::_Release(void) __ptr64;185900;185900;185900;0;1
?OnStartActivity@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;185714;173100;206900;10174;7
??0DiyFp@internal@rapidjson@@QEAA@XZ;__cdecl rapidjson::internal::DiyFp::DiyFp(void) __ptr64;185600;185600;185600;0;1
??$_Get_unwrapped@AEBQEAI@std@@YA@AEBQEAI@Z;__cdecl std::_Get_unwrapped<unsigned int * __ptr64 const & __ptr64>(unsigned int * __ptr64 const & __ptr64);185500;185500;185500;0;1
?OnStopActivity@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;184857;173500;203300;11041;7
?ThreadId@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::ThreadId(void)const __ptr64;184600;184600;184600;0;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA?AV?$allocator@I@2@AEBV32@@Z;static class std::allocator<unsigned int> __cdecl std::_Default_allocator_traits<class std::allocator<unsigned int> >::select_on_container_copy_construction(class std::allocator<unsigned int> const & __ptr64);184400;184400;184400;0;1
?EventName@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::EventName(void)const __ptr64;183800;183800;183800;0;1
??$move@AEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YA$$QEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAV10@@Z;??$move@AEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@std@@@std@@YA$$QEAV?$tuple@AEAULocalThreadData@PackedProcessThreadRemapper@@@0@AEAV10@@Z;183700;183700;183700;0;1
?_Str@?$_Buf@D@std@@QEBAPEBDXZ;char const * __ptr64 __cdecl std::_Buf<char>::_Str(void)const __ptr64;183600;183600;183600;0;1
?has_default@?$abstract_value@I@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<unsigned int>::has_default(void)const __ptr64;183400;183400;183400;0;1
??$_Get_unwrapped@AEAPEBD@std@@YA@AEAPEBD@Z;__cdecl std::_Get_unwrapped<char const * __ptr64 & __ptr64>(char const * __ptr64 & __ptr64);183400;183400;183400;0;1
?OnStartActivity@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;183142;169000;201900;10968;7
?GetGroup@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@CAPEAV?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@345@PEAX@Z;static class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> > * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Internal::Analyze;183100;183100;183100;0;1
?_Get_ncap@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEBAIXZ;unsigned int __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Get_ncap(void)const __ptr64;183000;183000;183000;0;1
?OnStopActivity@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;182857;167400;196900;11661;7
??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;182300;182300;182300;0;1
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<wchar_t> >::_Bxty::_Bxty(void) __ptr64;182200;182200;182200;0;1
??$?RI@?$SignedCheck@I$0A@@detail@values@cxxopts@@QEAAX_NIAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void __cdecl cxxopts::values::detail::SignedCheck<unsigned int,0>::operator()<unsigned int>(bool,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;182100;182100;182100;0;1
?ToolVersionString@Invocation@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::Invocation::ToolVersionString(void)const __ptr64;181900;181900;181900;0;1
??$_Get_unwrapped@AEBQEAUHelpOptionDetails@cxxopts@@@std@@YA@AEBQEAUHelpOptionDetails@cxxopts@@@Z;__cdecl std::_Get_unwrapped<struct cxxopts::HelpOptionDetails * __ptr64 const & __ptr64>(struct cxxopts::HelpOptionDetails * __ptr64 const & __ptr64);181900;181900;181900;0;1
?Free@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@SAXPEAX@Z;static void __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::Free(void * __ptr64);181700;181700;181700;0;1
?__autoclassinit2@_Node_if@std@@QEAAX_K@Z;void __cdecl std::_Node_if::__autoclassinit2(unsigned __int64) __ptr64;181700;181700;181700;0;1
?__autoclassinit2@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDataPerTemplate@?A0x5cdd232a@@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct `anonymous namespace'::DataPerTemplate> const * __ptr64> >::__autoclassinit2(unsigned __int64) __ptr64;181500;181500;181500;0;1
?OnEndAnalysisPass@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnEndAnalysisPass(void) __ptr64;181371;155200;202100;16143;7
??1_Node_end_rep@std@@UEAA@XZ;virtual __cdecl std::_Node_end_rep::~_Node_end_rep(void) __ptr64;181300;181300;181300;0;1
?SpecializationSymbolKey@TemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation::SpecializationSymbolKey(void)const __ptr64;180500;172200;188800;8300;2
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUProcessThreadRemap@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessThreadRemap> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;180300;180300;180300;0;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA?AV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@AEBV32@@Z;static class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > __cdecl std::_Default_allocator_traits<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::select_on_container_copy_construction(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);180200;180200;180200;0;1
?_Get@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEBAPEAV_Root_node@2@XZ;class std::_Root_node * __ptr64 __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Get(void)const __ptr64;179900;179900;179900;0;1
??1OptionSpecException@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::OptionSpecException::~OptionSpecException(void) __ptr64;179900;179900;179900;0;1
?__autoclassinit2@_Node_base@std@@QEAAX_K@Z;void __cdecl std::_Node_base::__autoclassinit2(unsigned __int64) __ptr64;179600;179600;179600;0;1
?is_container@?$abstract_value@I@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<unsigned int>::is_container(void)const __ptr64;179600;179600;179600;0;1
?do_encoding@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_encoding(void)const __ptr64;179500;179500;179500;0;1
??$_Pass_fn@V<lambda_a33a5b45400f41721695e6a519a2a4eb>@@$0A@@std@@YA?AV<lambda_a33a5b45400f41721695e6a519a2a4eb>@@V1@@Z;class <lambda_a33a5b45400f41721695e6a519a2a4eb> __cdecl std::_Pass_fn<class <lambda_a33a5b45400f41721695e6a519a2a4eb>,0>(class <lambda_a33a5b45400f41721695e6a519a2a4eb>);179300;179300;179300;0;1
?__autoclassinit2@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::__autoclassinit2(unsigned __int64) __ptr64;178900;178900;178900;0;1
?OnBeginAnalysis@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnBeginAnalysis(void) __ptr64;178500;167700;189800;7593;7
??$PutReserve@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@@rapidjson@@YAXAEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@0@_K@Z;void __cdecl rapidjson::PutReserve<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > >(class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64,unsigned __int64);178300;178300;178300;0;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >(void) __ptr64;178000;178000;178000;0;1
?OnSimpleEvent@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;177700;163300;210900;14573;7
??1?$regex_traits@D@std@@QEAA@XZ;__cdecl std::regex_traits<char>::~regex_traits<char>(void) __ptr64;177400;177400;177400;0;1
??$forward@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVCommandLine@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;177300;177300;177300;0;1
??$_Get_unwrapped@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64>(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64);177300;177300;177300;0;1
?_Get_tmax@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEBAIXZ;unsigned int __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Get_tmax(void)const __ptr64;177200;177200;177200;0;1
??$_Pass_fn@V<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@$0A@@std@@YA?AV<lambda_5b04ced4049247d028dd2b0acc74b1e0>@@V1@@Z;class <lambda_5b04ced4049247d028dd2b0acc74b1e0> __cdecl std::_Pass_fn<class <lambda_5b04ced4049247d028dd2b0acc74b1e0>,0>(class <lambda_5b04ced4049247d028dd2b0acc74b1e0>);176900;176900;176900;0;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@_K@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<unsigned __int64> >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;176500;176500;176500;0;1
??$_Pass_fn@V<lambda_1fae86a0efb35da210a6f82844560f44>@@$0A@@std@@YA?AV<lambda_1fae86a0efb35da210a6f82844560f44>@@V1@@Z;class <lambda_1fae86a0efb35da210a6f82844560f44> __cdecl std::_Pass_fn<class <lambda_1fae86a0efb35da210a6f82844560f44>,0>(class <lambda_1fae86a0efb35da210a6f82844560f44>);176400;176400;176400;0;1
?WorkingDirectory@Invocation@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEB_WXZ;wchar_t const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::Invocation::WorkingDirectory(void)const __ptr64;176200;176200;176200;0;1
?OutputObjectPath@CompilerPass@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEB_WXZ;wchar_t const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::CompilerPass::OutputObjectPath(void)const __ptr64;175200;175200;175200;0;1
??$_Unfancy_maybe_null@I@std@@YAPEAIPEAI@Z;unsigned int * __ptr64 __cdecl std::_Unfancy_maybe_null<unsigned int>(unsigned int * __ptr64);175200;175200;175200;0;1
?OnBeginRelogging@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnBeginRelogging(void) __ptr64;174957;161800;197900;14361;7
??$_Get_unwrapped@AEAPEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@YA@AEAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@@Z;__cdecl std::_Get_unwrapped<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 & __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 & __ptr64);174600;174600;174600;0;1
??$OnSimpleEventImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnSimpleEventImpl;173900;173900;173900;0;1
?is_container@?$abstract_value@_N@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<bool>::is_container(void)const __ptr64;173700;173700;173700;0;1
??__Finteger_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic atexit destructor for 'integer_pattern''(void);173200;173200;173200;0;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVTimelineEntry@@@std@@@std@@SA?AV?$allocator@PEAVTimelineEntry@@@2@AEBV32@@Z;static class std::allocator<class TimelineEntry * __ptr64> __cdecl std::_Default_allocator_traits<class std::allocator<class TimelineEntry * __ptr64> >::select_on_container_copy_construction(class std::allocator<class TimelineEntry * __ptr64> const & __ptr64);172400;172400;172400;0;1
??$OnTraceInfoImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVTraceInfo@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnTraceInfoImpl<1;172300;172300;172300;0;1
??$OnBeginAnalysisPassImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAnalysisPa;172300;172300;172300;0;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@SA?AV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@AEBV32@@Z;static class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::select_on_container_copy_construction(class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64);171900;171900;171900;0;1
?is_boolean@?$abstract_value@I@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<unsigned int>::is_boolean(void)const __ptr64;171200;171200;171200;0;1
??$destroy@_K@?$_Default_allocator_traits@V?$allocator@U?$_List_node@_KPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@_KPEAX@std@@@1@QEA_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > >::destroy<unsigned __int64>(class std::allocator<struct std::_List_node<unsigned __int64,void * __ptr64> > & __ptr64,unsigned __int64 * __ptr64 const);171200;171200;171200;0;1
?has_implicit@?$abstract_value@I@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<unsigned int>::has_implicit(void)const __ptr64;170500;170500;170500;0;1
?is_boolean@?$abstract_value@_N@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<bool>::is_boolean(void)const __ptr64;170100;170100;170100;0;1
??__Fs_defaultOutputPathFileInclusionGraph@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultOutputPathFileInclusionGraph''(void);169800;169800;169800;0;1
??$OnEndAnalysisImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnalysisImpl;169100;169100;169100;0;1
??D?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEBAAEAVIAnalyzer@234@XZ;class Microsoft::Cpp::BuildInsights::IAnalyzer & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>::operator*(void)const __ptr64;168900;168900;168900;0;1
??$OnBeginAnalysisImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAnalysisIm;168000;168000;168000;0;1
?_Getcoll@?$_Regex_traits@D@std@@QEBAPEBV?$collate@D@2@XZ;class std::collate<char> const * __ptr64 __cdecl std::_Regex_traits<char>::_Getcoll(void)const __ptr64;167900;167900;167900;0;1
??$_Unfancy_maybe_null@D@std@@YAPEADPEAD@Z;char * __ptr64 __cdecl std::_Unfancy_maybe_null<char>(char * __ptr64);163200;163200;163200;0;1
??__FRQUOTE@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic atexit destructor for 'RQUOTE''(void);162100;162100;162100;0;1
??__Fs_defaultoutputPathFileInclusionTimes@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultoutputPathFileInclusionTimes''(void);157800;157800;157800;0;1
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z;[thunk]:virtual void * __ptr64 __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'`vtordisp{4294967292,0}' (unsigned int) __ptr64;152316;120100;243900;43367;6
??__Foption_matcher@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic atexit destructor for 'option_matcher''(void);149500;149500;149500;0;1
??__Fs_defaultOutputPathBuildTimeline@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultOutputPathBuildTimeline''(void);149300;149300;149300;0;1
??__Ftruthy_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic atexit destructor for 'truthy_pattern''(void);149000;149000;149000;0;1
??__Foption_specifier@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic atexit destructor for 'option_specifier''(void);148600;148600;148600;0;1
??__Fs_defaultOutputPathFunctionCompilations@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultOutputPathFunctionCompilations''(void);135700;135700;135700;0;1
??_9IRelogger@BuildInsights@Cpp@Microsoft@@$BBI@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IRelogger::`vcall'{24,{flat}}' }';112900;112900;112900;0;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BEI@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{72,{flat}}' }';107700;107700;107700;0;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BGI@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{104,{flat}}' }';104200;104200;104200;0;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BFA@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{80,{flat}}' }';101100;101100;101100;0;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BHA@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{112,{flat}}' }';94200;94200;94200;0;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BGA@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{96,{flat}}' }';90600;90600;90600;0;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BFI@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{88,{flat}}' }';84200;84200;84200;0;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BHI@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{120,{flat}}' }';73900;73900;73900;0;1
