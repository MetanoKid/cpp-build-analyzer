Decorated function name;Undecorated function name;Total elapsed time (nanoseconds);Average elapsed time (nanoseconds);Occurrences
?max_load_factor@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::max_load_factor(void)const __ptr64;34083454;34083454;1
??$construct@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEBU12@@?$_Default_allocator_traits@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@SAXAEAV?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@$$QEAPEBU34@@Z;??$construct@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEBU12@@?$_Default_allocator_traits@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@SAXAEAV?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@$$QEAPEBU34@@Z;32311195;32311195;1
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEBAXAEBV12@@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::_Compat(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64)const __ptr64;29610316;29610316;1
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFrontEndPass@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFrontEndPass@Activities@234@@Z@Z;28426347;28426347;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_m;25053841;25053841;1
main;main;24782070;24782070;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >(void) __ptr64;23841955;23841955;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > >::allocate(unsigned __int64) __ptr64;19364712;19364712;1
?_Add_rep@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXHH_N@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_rep(int,int,bool) __ptr64;17450820;17450820;1
?ExportTo@BuildTimelineExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildTimelineExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;17166733;17166733;1
??$_Resize@U_Value_init_tag@std@@@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Resize<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;15848520;15848520;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_s;15006523;15006523;1
?_Match_pat@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NPEAV_Node_base@2@@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Match_pat(class std::_Node_base * __ptr64) __ptr64;14144820;14144820;1
??A?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEAAAEAU_Loop_vals_t@1@_K@Z;struct std::_Loop_vals_t & __ptr64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::operator[](unsigned __int64) __ptr64;13561456;13561456;1
??0?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@QEAA@PEBD0AEBV?$regex_traits@D@1@PEAV_Root_node@1@IW4syntax_option_type@regex_constants@1@W4match_flag_type@51@@Z;__cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>(char const * __ptr64,char const * __ptr64,class std::regex_traits<char> const & __ptr64,class std::_Root_node * __ptr64,unsigned int,enum std::regex_constants::syntax_option_type,enum std::regex_constants::match_flag_type) __ptr64;13549961;13549961;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEBDU?$_Cmp_collate@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0PEBD1U?$_Cmp_collate@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,struct std::_Cmp_collate<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,char const;13041314;13041314;1
??0?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA@$$QEAV01@@Z;??0?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA@$$QEAV01@@Z;13013398;13013398;1
??0?$shared_ptr@_N@std@@QEAA@XZ;__cdecl std::shared_ptr<bool>::shared_ptr<bool>(void) __ptr64;12649669;12649669;1
??0?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> >::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> >(void) __ptr64;24697911;12348955;2
?format_description@?A0xe8409837@cxxopts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBUHelpOptionDetails@2@_K1@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::`anonymous namespace'::format_description(struct cxxopts::HelpOptionDetails const & __ptr64,unsigned __int64,unsigned __int64);12002262;12002262;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;11293277;11293277;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;10845388;10845388;1
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<c;10374099;10374099;1
??0?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@QEAA@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$regex_traits@D@1@PEAV_Root_node@1@IW4syntax_option_type@regex_constants@1@W4match_flag_type@61@@Z;__cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterato;10362604;10362604;1
??$_Emplace_back_with_unused_capacity@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAA@$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@@Z;??$_Emplace_back_with_unused_capacity@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAA@$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@@Z;20522817;10261408;2
??1?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::~vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >(void) __ptr64;9620366;9620366;1
?parse_value@values@cxxopts@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEA_N@Z;void __cdecl cxxopts::values::parse_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,bool & __ptr64);9572334;9572334;1
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::destroy<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const);9113771;9113771;1
?deallocate@?$allocator@U_Loop_vals_t@std@@@std@@QEAAXQEAU_Loop_vals_t@2@_K@Z;void __cdecl std::allocator<struct std::_Loop_vals_t>::deallocate(struct std::_Loop_vals_t * __ptr64 const,unsigned __int64) __ptr64;9079697;9079697;1
??0?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vb_val<class std::allocator<bool> >::_Vb_val<class std::allocator<bool> >(class std::_Vb_val<class std::allocator<bool> > const & __ptr64) __ptr64;9019349;9019349;1
?format_option@?A0xe8409837@cxxopts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBUHelpOptionDetails@2@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::`anonymous namespace'::format_option(struct cxxopts::HelpOptionDetails const & __ptr64);8835021;8835021;1
??$?4V?$standard_value@_N@values@cxxopts@@@?$weak_ptr@VValue@cxxopts@@@std@@QEAAAEAV01@AEBV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@1@@Z;class std::weak_ptr<class cxxopts::Value> & __ptr64 __cdecl std::weak_ptr<class cxxopts::Value>::operator=<class cxxopts::values::standard_value<bool> >(class std::shared_ptr<class cxxopts::values::standard_value<bool> > const & __ptr64) __ptr64;8598556;8598556;1
?IsInt64@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsInt64(void)const __ptr64;8550524;8550524;1
??R<lambda_4bb6aed2334c12b27f73b7e46d64fdf0>@@QEBA?AV?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@AEBV?$sub_match@PEBD@2@0@Z;class std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > __cdecl <lambda_4bb6aed2334c12b27f73b7e46d64fdf0>::operator()(class std::sub_match<char const * __ptr64> const & __ptr64,class std::sub_match<char const * __ptr64> const & __ptr64)const __ptr64;8344438;8344438;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;24110852;8036950;3
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base12>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,clas;15905994;7952997;2
?WriteString@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NPEBDI@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteString(char const * __ptr64,unsigned int) __ptr64;7844001;7844001;1
?ExportTo@FileCompilationsExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl FileCompilationsExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;7798432;7798432;1
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@std@@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@0@0V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;void __cdecl std::sort<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >,class <lambda_a2eef00bb02357da46910e5eb8f40a83> >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >,class <lambda_a2eef00bb02357da46;7681021;7681021;1
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z;void __cdecl std::time_get<char,class std::istreambuf_iterator<char,struct std::char_traits<char> > >::_Getvals<wchar_t>(wchar_t,class std::_Locinfo const & __ptr64) __ptr64;15295536;7647768;2
?parse@ParseResult@cxxopts@@AEAAXAEAHAEAPEAPEAD@Z;void __cdecl cxxopts::ParseResult::parse(int & __ptr64,char * __ptr64 * __ptr64 & __ptr64) __ptr64;7353418;7353418;1
?_Match_pat@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NPEAV_Node_base@2@@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Match_pat(class std::_Node_base * __ptr64) __ptr64;7042236;7042236;1
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z;void __cdecl std::time_get<wchar_t,class std::istreambuf_iterator<wchar_t,struct std::char_traits<wchar_t> > >::_Getvals<wchar_t>(wchar_t,class std::_Locinfo const & __ptr64) __ptr64;13974038;6987019;2
?help_one_group@Options@cxxopts@@AEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::Options::help_one_group(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;6906761;6906761;1
??0ParseResult@cxxopts@@QEAA@V?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@_NAEAHAEAPEAPEAD@Z;__cdecl cxxopts::ParseResult::ParseResult(class std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<c;6849286;6849286;1
?capacity@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::capacity(void)const __ptr64;6828760;6828760;1
?AddEntry@BuildTimelineExporter@@AEBAXPEBVTimelineEntry@@AEAV?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAV?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@4@AEBVProcessIdThreadIdRecalculation@@@Z;void __cdecl BuildTimelineExporter::AddEntry(class TimelineEntry const * __ptr64,class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,class rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator> & __ptr64,class ProcessIdThreadIdRecalculation const & __ptr64)const __ptr64;6609537;6609537;1
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z;wchar_t * __ptr64 __cdecl std::_Maklocstr<wchar_t>(char const * __ptr64,wchar_t * __ptr64,struct _Cvtvec const & __ptr64);13043367;6521683;2
??H?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV01@_J@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator+(__int64)const __ptr64;6409198;6409198;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Forced_rehash(unsigned __int64) __ptr64;5519579;5519579;1
?BuildAnalyzerList@BuildAnalyzer@@AEAA?AV?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBUAnalysisOptions@1@@Z;class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > __cdecl BuildAnalyzer::BuildAnalyzerList(struct BuildAnalyzer::AnalysisOptions const & __ptr64) __ptr64;5366451;5366451;1
??__Es_defaultOutputPathFunctionCompilations@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultOutputPathFunctionCompilations''(void);5256840;5256840;1
??$fill@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >(class std::_List_unchecked_const_iterator<cla;10059632;5029816;2
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Forced_rehash(unsigned ;4558117;4558117;1
?ExportTo@FileInclusionTimesExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl FileInclusionTimesExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;4547033;4547033;1
?clear@?$vector@KV?$allocator@K@std@@@std@@QEAAXXZ;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::clear(void) __ptr64;4404168;4404168;1
?u64toa@internal@rapidjson@@YAPEAD_KPEAD@Z;char * __ptr64 __cdecl rapidjson::internal::u64toa(unsigned __int64,char * __ptr64);4296199;4296199;1
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Construct_lv_contents(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;25630635;4271772;6
?CalculateThreadIdRemaps@ProcessIdThreadIdRecalculation@@AEAAXXZ;void __cdecl ProcessIdThreadIdRecalculation::CalculateThreadIdRemaps(void) __ptr64;4156208;4156208;1
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@@Z;void __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Erase_tree<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_;4048238;4048238;1
??0?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@QEAA@AEBV?$regex_traits@D@1@PEBD1W4syntax_option_type@regex_constants@1@@Z;__cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Parser<char const * __ptr64,char,class std::regex_traits<char> >(class std::regex_traits<char> const & __ptr64,char const * __ptr64,char const * __ptr64,enum std::regex_constants::syntax_option_type) __ptr64;4005954;4005954;1
?add_option@Options@cxxopts@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00V34@V?$shared_ptr@$$CBVValue@cxxopts@@@4@1@Z;void __cdecl cxxopts::Options::add_option(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::Value const >,class std::basic_;3918100;3918100;1
?ExportTo@FileInclusionGraphExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl FileInclusionGraphExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;3746499;3746499;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVTimelineEntry@@@2@XZ;class std::allocator<class TimelineEntry * __ptr64> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class TimelineEntry * __ptr64>,class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> >,1>::_Get_first(void) __ptr64;7492997;3746498;2
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z;class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64);18679945;3735989;5
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >(void) __ptr64;3706677;3706677;1
?UndecorateFunction@CppBuildInsightsDataConversion@Utilities@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl Utilities::CppBuildInsightsDataConversion::UndecorateFunction(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);3610203;3610203;1
??$_Try_emplace@AEB_KAEAPEBVTimelineEntry@@AEAK@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@_N@1@AEB_KAEAPEBVTimelineEntry@@AEAK@Z;struct std::pair<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64,bool> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int;3577360;3577360;1
?ExportTo@FunctionCompilationsExporter@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl FunctionCompilationsExporter::ExportTo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;3549034;3549034;1
??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z;class std::ctype<char> const & __ptr64 __cdecl std::use_facet<class std::ctype<char> >(class std::locale const & __ptr64);3529739;3529739;1
?_Do_class@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NPEAV_Node_base@2@@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Do_class(class std::_Node_base * __ptr64) __ptr64;3483349;3483349;1
??0FileInclusionTimesExporter@@QEAA@AEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@@Z;__cdecl FileInclusionTimesExporter::FileInclusionTimesExporter(class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string;3338842;3338842;1
?_Do_if@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NPEAV_Node_if@2@@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Do_if(class std::_Node_if * __ptr64) __ptr64;3291631;3291631;1
?ApplyThreadIdRemap@ProcessIdThreadIdRecalculation@@AEAAKPEBVTimelineEntry@@AEBV?$unordered_map@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@U?$hash@_K@std@@U?$equal_to@_K@4@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@@std@@AEBK2@Z;unsigned long __cdecl ProcessIdThreadIdRecalculation::ApplyThreadIdRemap(class TimelineEntry const * __ptr64,class std::unordered_map<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > const & __ptr64,unsigned long const & __ptr64,unsigned;3234978;3234978;1
??$_Try_emplace@AEB_KU?$pair@KH@std@@@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAU?$pair@KH@1@@Z;??$_Try_emplace@AEB_KU?$pair@KH@std@@@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAU?$pair@KH@1@@Z;3201315;3201315;1
??$_Compare@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@V?$regex_traits@D@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@000AEBV?$regex_traits@D@0@W4syntax_option_type@regex_constants@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Compare<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::regex_traits<char> >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<;3182020;3182020;1
?_Do_rep0@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NPEAV_Node_rep@2@_N@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Do_rep0(class std::_Node_rep * __ptr64,bool) __ptr64;3157798;3157798;1
?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z;unsigned __int64 __cdecl std::vector<bool,class std::allocator<bool> >::_Insert_x(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,unsigned __int64) __ptr64;3141377;3141377;1
??$_Uninitialized_move@PEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@YAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::_Uninitialized_move<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct;3060092;3060092;1
??$Decode@U?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@@?$UTF8@D@rapidjson@@SA_NAEAU?$GenericStringStream@U?$UTF8@D@rapidjson@@@1@PEAI@Z;static bool __cdecl rapidjson::UTF8<char>::Decode<struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > >(struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > & __ptr64,unsigned int * __ptr64);3052703;3052703;1
??$_Emplace_reallocate@AEBQEAVTimelineEntry@@@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAAPEAPEAVTimelineEntry@@QEAPEAV2@AEBQEAV2@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Emplace_reallocate<class TimelineEntry * __ptr64 const & __ptr64>(class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 const & __ptr64) __ptr64;5975677;2987838;2
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;17832200;2972033;6
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Forced_rehash(unsigned __int64) __ptr64;2859343;2859343;1
?_Do_rep0@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NPEAV_Node_rep@2@_N@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Do_rep0(class std::_Node_rep * __ptr64,bool) __ptr64;2853185;2853185;1
??$emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;struct std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >,bool> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<cha;2769437;2769437;1
?CalculateLocalThreadOffsets@ProcessIdThreadIdRecalculation@@AEBAXPEBVTimelineEntry@@AEAV?$unordered_map@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@U?$hash@_K@std@@U?$equal_to@_K@4@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@@std@@@Z;void __cdecl ProcessIdThreadIdRecalculation::CalculateLocalThreadOffsets(class TimelineEntry const * __ptr64,class std::unordered_map<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > & __ptr64)const __ptr64;2766973;2766973;1
?u32toa@internal@rapidjson@@YAPEADIPEAD@Z;char * __ptr64 __cdecl rapidjson::internal::u32toa(unsigned int,char * __ptr64);2762458;2762458;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@U?$_Cmp_collate@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@000U?$_Cmp_collate@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,struct std::_Cmp_collate<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String;2753015;2753015;1
??$Accept@V?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NAEAV?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@1@@Z;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::Accept<class rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0> >(class rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapi;2750552;2750552;1
??$?O_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z;bool __cdecl std::chrono::operator><__int64,struct std::ratio<1,1000000000>,__int64,struct std::ratio<1,1000000000> >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);8074308;2691436;3
?_Unchecked_erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::all;2656541;2656541;1
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z;void __cdecl std::_Adjust_manually_vector_aligned(void * __ptr64 & __ptr64,unsigned __int64 & __ptr64);39828818;2655254;15
??$_Partition_by_median_guess_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YA?AU?$pair@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@0@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;struct std::pair<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64> __cdecl std::_Partition_by_median_guess_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cons;2642993;2642993;1
??0TimelineEntry@@QEAA@AEB_KPEBDV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@2AEBK3G@Z;__cdecl TimelineEntry::TimelineEntry(unsigned __int64 const & __ptr64,char const * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,unsigned long const & __ptr64,unsigned long const & __ptr64,unsigned short) __ptr64;2637246;2637246;1
?NormalizedBoundaries@DiyFp@internal@rapidjson@@QEBAXPEAU123@0@Z;void __cdecl rapidjson::internal::DiyFp::NormalizedBoundaries(struct rapidjson::internal::DiyFp * __ptr64,struct rapidjson::internal::DiyFp * __ptr64)const __ptr64;2626162;2626162;1
??ROptionAdder@cxxopts@@QEAAAEAV01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0V?$shared_ptr@$$CBVValue@cxxopts@@@3@V23@@Z;class cxxopts::OptionAdder & __ptr64 __cdecl cxxopts::OptionAdder::operator()(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::shared_ptr<class cxxopts::Value const >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;2608919;2608919;1
?OnSymbolNameEvent@BuildTimelineAnalyzer@@AEAAXAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@456@@Z;void __cdecl BuildTimelineAnalyzer::OnSymbolNameEvent(class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass const & __ptr64,class Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName const & __ptr64) __ptr64;2604404;2604404;1
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z;class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64 const,unsigned __int64);12988354;2597670;5
??$Analyze@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@YA?AW4RESULT_CODE@012@PEBDIV?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@012@@Z;enum Microsoft::Cpp::BuildInsights::RESULT_CODE __cdecl Microsoft::Cpp::BuildInsights::Analyze<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >(char const * __ptr64,unsigned int,;2594961;2594961;1
??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$all;2584288;2584288;1
?CalculateProcessIdRemaps@ProcessIdThreadIdRecalculation@@AEAAXXZ;void __cdecl ProcessIdThreadIdRecalculation::CalculateProcessIdRemaps(void) __ptr64;2569508;2569508;1
??$_Match@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@QEAA_NPEAV?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@1@_N@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Match<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(class std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<cha;2542824;2542824;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;5054037;2527018;2
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;2525992;2525992;1
?to_bytes@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEB_W0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::to_bytes(wchar_t const * __ptr64,wchar_t const * __ptr64) __ptr64;2519834;2519834;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry>;2514908;2514908;1
??$Validate@U?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@2@@?$UTF8@D@rapidjson@@SA_NAEAU?$GenericStringStream@U?$UTF8@D@rapidjson@@@1@AEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@1@@Z;static bool __cdecl rapidjson::UTF8<char>::Validate<struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > >(struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > & __ptr64,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64);2514908;2514908;1
??$_Resize@U_Value_init_tag@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Resize<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;2514908;2514908;1
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@_K@std@@V?$_Compressed_pair@U?$equal_to@_K@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@_K@std@@V?$_Compressed_pair@U?$equal_to@_K@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;7507776;2502592;3
?_Do_rep@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NPEAV_Node_rep@2@_NH@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Do_rep(class std::_Node_rep * __ptr64,bool,int) __ptr64;2500129;2500129;1
?consume_positional@ParseResult@cxxopts@@AEAA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl cxxopts::ParseResult::consume_positional(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;2482065;2482065;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std;2475086;2475086;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;2472213;2472213;1
?_Do_rep@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NPEAV_Node_rep@2@_NH@Z;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Do_rep(class std::_Node_rep * __ptr64,bool,int) __ptr64;2448813;2448813;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > const & __ptr64);2442244;2442244;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Forced_rehash(unsigned __int64) __ptr64;2438960;2438960;1
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<char> >::_Bxty::~_Bxty(void) __ptr64;33829330;2416380;14
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Unchecked_erase(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * ;2406528;2406528;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned _;2380254;2380254;1
??$copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::copy_backward<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_all;2350285;2350285;1
??$?0U?$pair@$$CB_KU?$pair@KK@std@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> ><struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >(class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > const & __ptr;2348233;2348233;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;2347001;2347001;1
?_Forced_rehash@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Forced_rehash(unsigned __int64) __ptr64;2317443;2317443;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Max_bucket_size(void)const __ptr64;2310874;2310874;1
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ;virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::uflow(void) __ptr64;11427518;2285503;5
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const,struct std::_List_n;2265716;2265716;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@U?$_Cmp_icase@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@000U?$_Cmp_icase@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,struct std::_Cmp_icase<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_v;2262432;2262432;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@U?$_Cmp_cs@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@000U?$_Cmp_cs@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,struct std::_Cmp_cs<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<;2261611;2261611;1
?AddRootEntry@BuildTimeline@@QEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimeline::AddRootEntry(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;2250937;2250937;1
?EventId@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEBGXZ;unsigned short const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::EventId(void)const __ptr64;8975011;2243752;4
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;2234516;2234516;1
?_Better_match@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEAA_NXZ;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Better_match(void) __ptr64;2227537;2227537;1
?erase@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@0@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::erase(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >) __ptr64;2221379;2221379;1
?_Forced_rehash@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAAX_K@Z;void __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;2217273;2217273;1
??0argument_incorrect_type@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::argument_incorrect_type::argument_incorrect_type(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;2209063;2209063;1
??$_Partition_by_median_guess_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YA?AU?$pair@PEAUDataPerFile@FileInclusionTimesExporter@@PEAU12@@0@PEAUDataPerFile@FileInclusionTimesExporter@@0V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;struct std::pair<struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64> __cdecl std::_Partition_by_median_guess_unchecked<struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963>);2184431;2184431;1
?_Is_wbound@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEBA_NXZ;bool __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Is_wbound(void)const __ptr64;2174578;2174578;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;2148715;2148715;1
??$distance@PEAD@std@@YA_JPEAD0@Z;__int64 __cdecl std::distance<char * __ptr64>(char * __ptr64,char * __ptr64);2145020;2145020;1
??$_Partition_by_median_guess_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YA?AU?$pair@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@@0@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;struct std::pair<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64> __cdecl std::_Partition_by_median_guess_unchecked<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80> >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffset;2144199;2144199;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chro;4285525;2142762;2
??1FileInclusionTimesExporter@@QEAA@XZ;__cdecl FileInclusionTimesExporter::~FileInclusionTimesExporter(void) __ptr64;2139683;2139683;1
??$transform_primary@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$_Regex_traits@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_Regex_traits<char>::transform_primary<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >)const __ptr64;2127367;2127367;1
?checked_parse_arg@ParseResult@cxxopts@@AEAAXHQEAPEADAEAHV?$shared_ptr@VOptionDetails@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z;void __cdecl cxxopts::ParseResult::checked_parse_arg(int,char * __ptr64 * __ptr64 const,int & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails>,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;2123262;2123262;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > ;2115462;2115462;1
??$_Match@V?$allocator@V?$sub_match@PEBD@std@@@std@@@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@QEAA_NPEAV?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@1@_N@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Match<class std::allocator<class std::sub_match<char const * __ptr64> > >(class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > * __ptr64,bool) __ptr64;2110125;2110125;1
?clear@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::clear(void) __ptr64;2101093;2101093;1
?AddEntry@BuildTimeline@@AEAAPEAVTimelineEntry@@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Z;class TimelineEntry * __ptr64 __cdecl BuildTimeline::AddEntry(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;2076462;2076462;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct Process;2075230;2075230;1
??0?$abstract_value@_N@values@cxxopts@@QEAA@XZ;__cdecl cxxopts::values::abstract_value<bool>::abstract_value<bool>(void) __ptr64;2073588;2073588;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Unchecked_erase(struct std::;2069483;2069483;1
?_Unchecked_erase@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<;2069072;2069072;1
??$_Partition_by_median_guess_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YA?AU?$pair@PEAUDataPerFunction@FunctionCompilationsExporter@@PEAU12@@0@PEAUDataPerFunction@FunctionCompilationsExporter@@0V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;struct std::pair<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64> __cdecl std::_Partition_by_median_guess_unchecked<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83>);2050598;2050598;1
?_Do_if@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NPEAV_Node_if@2@@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Do_if(class std::_Node_if * __ptr64) __ptr64;2043619;2043619;1
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ;virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::underflow(void) __ptr64;10184021;2036804;5
??$_Compare@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEBDV?$regex_traits@D@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0PEBD1AEBV?$regex_traits@D@0@W4syntax_option_type@regex_constants@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Compare<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,class std::regex_traits<char> >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,char const * __ptr64,class std::regex_tra;2035819;2035819;1
?WriteDouble@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NN@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteDouble(double) __ptr64;2023093;2023093;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigne;2018987;2018987;1
?OnFileParsed@FileInclusionsAnalyzer@@AEAAXAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl FileInclusionsAnalyzer::OnFileParsed(class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile const & __ptr64,class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile const & __ptr64) __ptr64;2018166;2018166;1
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase(unsigned __int64,unsigned __int64) __ptr64;10005441;2001088;5
?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@AEBAXPEAI0@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Orphan_range(unsigned int * __ptr64,unsigned int * __ptr64)const __ptr64;1997229;1997229;1
??$?0V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$_Tuple_val@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;??$?0V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$_Tuple_val@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_;1996408;1996408;1
??0?$tuple@AEAK@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEAK@std@@QEAA@$$QEAV01@@Z;1988198;1988198;1
??$copy@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::copy<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class ;1976703;1976703;1
?add_one_option@Options@cxxopts@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@4@@Z;void __cdecl cxxopts::Options::add_one_option(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails>) __ptr64;1975882;1975882;1
??0FileInclusionsAnalyzer@@QEAA@XZ;__cdecl FileInclusionsAnalyzer::FileInclusionsAnalyzer(void) __ptr64;1975882;1975882;1
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Resize_reallocate<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1970134;1970134;1
??$_Emplace_reallocate@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@QEAV231@$$QEAV231@@Z;??$_Emplace_reallocate@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@QEAV231@$$QEAV231@@Z;3934932;1967466;2
??0BuildTimelineExporter@@QEAA@AEBVBuildTimeline@@@Z;__cdecl BuildTimelineExporter::BuildTimelineExporter(class BuildTimeline const & __ptr64) __ptr64;1961513;1961513;1
??0FileInclusionGraphExporter@@QEAA@AEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@@Z;__cdecl FileInclusionGraphExporter::FileInclusionGraphExporter(class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,cla;1960692;1960692;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> >::allocate(unsigned __int64) __ptr64;1956997;1956997;1
?Analyze@BuildAnalyzer@@QEAA_NXZ;bool __cdecl BuildAnalyzer::Analyze(void) __ptr64;1903628;1903628;1
?GetRemapFor@ProcessIdThreadIdRecalculation@@QEBAPEBU?$pair@KK@std@@AEB_K@Z;struct std::pair<unsigned long,unsigned long> const * __ptr64 __cdecl ProcessIdThreadIdRecalculation::GetRemapFor(unsigned __int64 const & __ptr64)const __ptr64;1897881;1897881;1
?help@Options@cxxopts@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::Options::help(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64)const __ptr64;1885976;1885976;1
??0Options@cxxopts@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;__cdecl cxxopts::Options::Options(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;1880228;1880228;1
?_Char_to_elts@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAXPEBD0_JPEAPEAU?$_Sequence@D@2@@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Char_to_elts(char const * __ptr64,char const * __ptr64,__int64,struct std::_Sequence<char> * __ptr64 * __ptr64) __ptr64;1877354;1877354;1
??$_Lookup_equiv@DV?$regex_traits@D@std@@@std@@YA_NEPEBU?$_Sequence@D@0@AEBV?$regex_traits@D@0@@Z;bool __cdecl std::_Lookup_equiv<char,class std::regex_traits<char> >(unsigned char,struct std::_Sequence<char> const * __ptr64,class std::regex_traits<char> const & __ptr64);1859291;1859291;1
??$make_shared@V?$standard_value@_N@values@cxxopts@@$$V@std@@YA?AV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@XZ;??$make_shared@V?$standard_value@_N@values@cxxopts@@$$V@std@@YA?AV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@XZ;1849438;1849438;1
??$?0U?$pair@KK@std@@$$V$0A@@?$tuple@$$QEAU?$pair@KK@std@@@std@@QEAA@$$QEAU?$pair@KK@1@@Z;??$?0U?$pair@KK@std@@$$V$0A@@?$tuple@$$QEAU?$pair@KK@std@@@std@@QEAA@$$QEAU?$pair@KK@1@@Z;1840817;1840817;1
??$regex_match@U?$char_traits@D@std@@V?$allocator@D@2@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@DV?$regex_traits@D@2@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@0@AEBV?$basic_regex@DV?$regex_traits@D@std@@@0@W4match_flag_type@regex_constants@0@@Z;bool __cdecl std::regex_match<struct std::char_traits<char>,class std::allocator<char>,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >,char,class std::regex_traits<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<clas;1826859;1826859;1
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z;virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::overflow(int) __ptr64;9124855;1824971;5
??0?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::p;1821933;1821933;1
??$_Lookup_coll@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@D@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0PEBU?$_Sequence@D@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Lookup_coll<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char>(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,struct std::_Sequence<char> const * __ptr64);1819470;1819470;1
?DigitGen@internal@rapidjson@@YAXAEBUDiyFp@12@0_KPEADPEAH3@Z;void __cdecl rapidjson::internal::DigitGen(struct rapidjson::internal::DiyFp const & __ptr64,struct rapidjson::internal::DiyFp const & __ptr64,unsigned __int64,char * __ptr64,int * __ptr64,int * __ptr64);1818649;1818649;1
??$_Emplace_reallocate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@QEAU21@$$QEAU21@@Z;??$_Emplace_reallocate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@QEAU21@$$QEAU21@@Z;1805101;1805101;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;1781290;1781290;1
??Y?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator+=(__int64) __ptr64;1769385;1769385;1
?_Better_match@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NXZ;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Better_match(void) __ptr64;1765280;1765280;1
?Prettify@internal@rapidjson@@YAPEADPEADHHH@Z;char * __ptr64 __cdecl rapidjson::internal::Prettify(char * __ptr64,int,int,int);1751732;1751732;1
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;1732437;1732437;1
?_Alternative@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Alternative(void) __ptr64;1727511;1727511;1
?FilePath@CppBuildInsightsDataConversion@Utilities@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_W@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl Utilities::CppBuildInsightsDataConversion::FilePath(wchar_t const * __ptr64);1715605;1715605;1
??1FileInclusionGraphExporter@@QEAA@XZ;__cdecl FileInclusionGraphExporter::~FileInclusionGraphExporter(void) __ptr64;1712732;1712732;1
??$emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;struct std::pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,bool> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_;1706163;1706163;1
??$transform_primary@PEAD@?$_Regex_traits@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEAD0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_Regex_traits<char>::transform_primary<char * __ptr64>(char * __ptr64,char * __ptr64)const __ptr64;1700826;1700826;1
??$_Try_emplace@AEB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@1@@Z;??$_Try_emplace@AEB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocat;1694258;1694258;1
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class <lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>(unsigned __int64,class <lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char) __ptr64;3387695;1693847;2
?_Do_class@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEAA_NPEAV_Node_base@2@@Z;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Do_class(class std::_Node_base * __ptr64) __ptr64;1688100;1688100;1
??0BuildTimelineAnalyzer@@QEAA@XZ;__cdecl BuildTimelineAnalyzer::BuildTimelineAnalyzer(void) __ptr64;1680300;1680300;1
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Set_back(void) __ptr64;8391648;1678329;5
??$_Emplace_back_with_unused_capacity@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAA@$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;??$_Emplace_back_with_unused_capacity@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAA@$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;1678247;1678247;1
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z;??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z;1661005;1661005;1
??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU;1657721;1657721;1
??1?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class ;1647457;1647457;1
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$;1644584;1644584;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pa;1642121;1642121;1
?_Verify_offset@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAX_J@Z;void __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_Verify_offset(__int64)const __ptr64;1639247;1639247;1
??0?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAA@$$QEAV01@@Z;??0?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAA@$$QEAV01@@Z;1633089;1633089;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEBDU?$_Cmp_cs@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0PEBD1U?$_Cmp_cs@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,struct std::_Cmp_cs<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,char const * __;1629805;1629805;1
??$transform_primary@PEBD@?$_Regex_traits@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBD0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_Regex_traits<char>::transform_primary<char const * __ptr64>(char const * __ptr64,char const * __ptr64)const __ptr64;1624878;1624878;1
?OnTemplateInstantiation@BuildTimelineAnalyzer@@AEAAXAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@3456@@Z;void __cdecl BuildTimelineAnalyzer::OnTemplateInstantiation(class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass const & __ptr64,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation const & __ptr64) __ptr64;1618720;1618720;1
??$_Cmp_chrange@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEBDU?$_Cmp_icase@V?$regex_traits@D@std@@@2@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0PEBD1U?$_Cmp_icase@V?$regex_traits@D@std@@@0@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Cmp_chrange<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,struct std::_Cmp_icase<class std::regex_traits<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char const * __ptr64,char const *;1618310;1618310;1
??0option_requires_argument_exception@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::option_requires_argument_exception::option_requires_argument_exception(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1614205;1614205;1
?resize@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K_N@Z;void __cdecl std::vector<bool,class std::allocator<bool> >::resize(unsigned __int64,bool) __ptr64;1599836;1599836;1
??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAAPEAVKeyValue@cxxopts@@QEAV23@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1@Z;class cxxopts::KeyValue * __ptr64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Emplace_reallocate<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class cxxopts::KeyValue * __ptr64 const,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std:;1598194;1598194;1
??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<unsigned int,class std::allocator<unsigned int> > >::~_Tidy_guard<class std::vector<unsigned int,class std::allocator<unsigned int> > >(void) __ptr64;1584236;1584236;1
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;1583825;1583825;1
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;3154924;1577462;2
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<cl;3152050;1576025;2
?_Add_range@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXDD@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_range(char,char) __ptr64;1569046;1569046;1
??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Emplace_reallocate<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class ;1568225;1568225;1
?OnStartActivity@BuildTimelineAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl BuildTimelineAnalyzer::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;1562888;1562888;1
??$_Emplace_reallocate@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@AEAV342@I@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAAPEAUDataPerFile@FileInclusionTimesExporter@@QEAU23@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@2$$QEAI@Z;??$_Emplace_reallocate@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@AEAV342@I@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAAPEAUDataPerFile@FileInclusionTimesExporter@@QEAU23@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@2$$QEAI@Z;1553857;1553857;1
?_Unchecked_erase@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::unordered_ma;1544414;1544414;1
??0ProcessIdThreadIdRecalculation@@QEAA@AEBVBuildTimeline@@@Z;__cdecl ProcessIdThreadIdRecalculation::ProcessIdThreadIdRecalculation(class BuildTimeline const & __ptr64) __ptr64;1544414;1544414;1
??$_Emplace_reallocate@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@QEAPEBU21@$$QEAPEBU21@@Z;??$_Emplace_reallocate@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@QEAPEBU21@$$QEAPEBU21@@Z;1541541;1541541;1
??$_Try_emplace@AEB_KU?$pair@KK@std@@@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAU?$pair@KK@1@@Z;??$_Try_emplace@AEB_KU?$pair@KK@std@@@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAU?$pair@KK@1@@Z;1541541;1541541;1
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z;__cdecl std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >(char const * __ptr64,int,int) __ptr64;7649409;1529881;5
?_Unchecked_erase@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Unchecked_erase(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __p;1527583;1527583;1
??0FileCompilationsAnalyzer@@QEAA@XZ;__cdecl FileCompilationsAnalyzer::FileCompilationsAnalyzer(void) __ptr64;1519783;1519783;1
??$_Emplace_reallocate@AEBK@?$vector@KV?$allocator@K@std@@@std@@QEAAPEAKQEAKAEBK@Z;unsigned long * __ptr64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Emplace_reallocate<unsigned long const & __ptr64>(unsigned long * __ptr64 const,unsigned long const & __ptr64) __ptr64;1514856;1514856;1
??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUFileCompilationData@@@Z;??$_Try_emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$a;1514035;1514035;1
??$value@_N@cxxopts@@YA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::value<bool>(void);1512804;1512804;1
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ;__cdecl std::fpos<struct _Mbstatet>::operator __int64(void)const __ptr64;7548418;1509683;5
?_Unchecked_erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;1505003;1505003;1
??$_Try_emplace@AEB_KV?$vector@_KV?$allocator@_K@std@@@std@@@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;??$_Try_emplace@AEB_KV?$vector@_KV?$allocator@_K@std@@@std@@@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@1@AEB_K$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;1500898;1500898;1
??$_Regex_match1@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@DV?$regex_traits@D@2@V12@@std@@YA_NV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PEAV?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@0@AEBV?$basic_regex@DV?$regex_traits@D@std@@@0@W4match_flag_type@regex_constants@0@_N@Z;bool __cdecl std::_Regex_match1<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_cons;1497614;1497614;1
??0FileCompilationsExporter@@QEAA@AEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@@Z;__cdecl FileCompilationsExporter::FileCompilationsExporter(class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<ch;1491866;1491866;1
?_Add_equiv@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXPEBD0_J@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_equiv(char const * __ptr64,char const * __ptr64,__int64) __ptr64;1489814;1489814;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<stru;5956791;1489197;4
?end@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > > __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::end(void) __ptr64;1484887;1484887;1
?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::_Insert_n(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,unsigned __int64,bool const & __ptr64) __ptr64;1483245;1483245;1
??$_Emplace_reallocate@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAV23456@$$QEAPEAVIAnalyzer@456@@Z;??$_Emplace_reallocate@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAV23456@$$QEAPEAVIAnalyzer@456@@Z;1482835;1482835;1
??$swap@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@$0A@@std@@YAXAEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::swap<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64,0>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 & __ptr64,class std::_List_unchecked_iterator<class std::_List_val<s;1480372;1480372;1
?OnBackEndPassCompleted@FileCompilationsAnalyzer@@AEAAXAEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl FileCompilationsAnalyzer::OnBackEndPassCompleted(class Microsoft::Cpp::BuildInsights::Activities::BackEndPass const & __ptr64) __ptr64;1474624;1474624;1
??$_Emplace_reallocate@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@QEAPEBU23@$$QEAPEBU23@@Z;??$_Emplace_reallocate@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@QEAPEBU23@$$QEAPEBU23@@Z;1474214;1474214;1
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::vector<class std::basic_string<char,struct std::char_traits<char>,cla;1460666;1460666;1
??0FunctionCompilationsAnalyzer@@QEAA@XZ;__cdecl FunctionCompilationsAnalyzer::FunctionCompilationsAnalyzer(void) __ptr64;1457382;1457382;1
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z;virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::pbackfail(int) __ptr64;7271721;1454344;5
??$?0U_Exact_args_t@std@@U?$pair@KH@1@$$V$0A@@?$tuple@$$QEAU?$pair@KH@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAU?$pair@KH@1@@Z;??$?0U_Exact_args_t@std@@U?$pair@KH@1@$$V$0A@@?$tuple@$$QEAU?$pair@KH@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAU?$pair@KH@1@@Z;1445477;1445477;1
?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<bool,class std::allocator<bool> >::_Trim(unsigned __int64) __ptr64;1431519;1431519;1
??$_Emplace_reallocate@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAPEAUHelpOptionDetails@cxxopts@@QEAU23@$$QEAU23@@Z;??$_Emplace_reallocate@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAPEAUHelpOptionDetails@cxxopts@@QEAU23@$$QEAU23@@Z;1431108;1431108;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64);1428234;1428234;1
??_Gexception@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::exception::`scalar deleting destructor'(unsigned int) __ptr64;21392315;1426154;15
?_Verify_range@std@@YAXAEBV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64,class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64);1423308;1423308;1
??$_Emplace_reallocate@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@QEAPEAV2345@$$QEAPEAV2345@@Z;??$_Emplace_reallocate@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@QEAPEAV2345@$$QEAPEAV2345@@Z;1419613;1419613;1
??0?$_Tgt_state_t@PEBD@std@@QEAA@AEBV01@@Z;__cdecl std::_Tgt_state_t<char const * __ptr64>::_Tgt_state_t<char const * __ptr64>(class std::_Tgt_state_t<char const * __ptr64> const & __ptr64) __ptr64;1417150;1417150;1
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVActivity@Activities@345@@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBV;1405245;1405245;1
??$_Emplace_reallocate@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@I@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAAPEAUDataPerFunction@FunctionCompilationsExporter@@QEAU23@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAI@Z;??$_Emplace_reallocate@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@I@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAAPEAUDataPerFunction@FunctionCompilationsExporter@@QEAU23@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAI@Z;1397855;1397855;1
??0?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@QEAA@AEBV012@@Z;__cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64) __ptr64;1395802;1395802;1
??0?$abstract_value@_N@values@cxxopts@@QEAA@AEBV012@@Z;__cdecl cxxopts::values::abstract_value<bool>::abstract_value<bool>(class cxxopts::values::abstract_value<bool> const & __ptr64) __ptr64;1394160;1394160;1
??0BuildAnalyzer@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBUAnalysisOptions@0@@Z;__cdecl BuildAnalyzer::BuildAnalyzer(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,struct BuildAnalyzer::AnalysisOptions const & __ptr64) __ptr64;1389644;1389644;1
?_Unchecked_erase@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::_Unchecked_erase(struct std::_List_node<struc;1373634;1373634;1
?_Do_ex_class@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXW4_Meta_type@2@@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_ex_class(enum std::_Meta_type) __ptr64;1371581;1371581;1
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@QEAU32@@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Insert_node(struct std::_Tree_id<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct ;1371581;1371581;1
??$?0M@?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;??$?0M@?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;1371171;1371171;1
?OnFrontEndPassCompleted@FileCompilationsAnalyzer@@AEAAXAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl FileCompilationsAnalyzer::OnFrontEndPassCompleted(class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass const & __ptr64) __ptr64;1366655;1366655;1
??$_Try_emplace@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@$$V@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;??$_Try_emplace@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@$$V@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@V;1366244;1366244;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CB_KU?$pair@KK@std@@@1@XZ;struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::operator*(void)const __ptr64;1366244;1366244;1
__JustMyCode_Default;__JustMyCode_Default;24536152;1363119;18
?_Unchecked_erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > ;1360907;1360907;1
??$_Emplace_reallocate@AEB_K@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KQEA_KAEB_K@Z;unsigned __int64 * __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Emplace_reallocate<unsigned __int64 const & __ptr64>(unsigned __int64 * __ptr64 const,unsigned __int64 const & __ptr64) __ptr64;1346128;1346128;1
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ;__cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::~_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >(void) __ptr64;1343255;1343255;1
??$use_facet@V?$collate@D@std@@@std@@YAAEBV?$collate@D@0@AEBVlocale@0@@Z;class std::collate<char> const & __ptr64 __cdecl std::use_facet<class std::collate<char> >(class std::locale const & __ptr64);1343255;1343255;1
??A?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAAAEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@_K@Z;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 & __ptr64 __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::operator[](unsigned __int64) __ptr64;1342844;1342844;1
?_Trans@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Trans(void) __ptr64;1341202;1341202;1
??1?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@XZ;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::~GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(void) __ptr64;1340791;1340791;1
?OnFunctionCompiled@FunctionCompilationsAnalyzer@@AEAAXAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl FunctionCompilationsAnalyzer::OnFunctionCompiled(class Microsoft::Cpp::BuildInsights::Activities::Function const & __ptr64) __ptr64;1338739;1338739;1
??0?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAA@$$QEAV01@@Z;??0?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAA@$$QEAV01@@Z;2665572;1332786;2
?_Unchecked_erase@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Unchecked_erase(struct std::_List_node<struct std::pair<uns;1331760;1331760;1
?_Insert_new_node_before@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<;1323960;1323960;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > > >::max_size(void)const __ptr64;1322317;1322317;1
??$_Try_emplace@AEB_KAEAVTimelineEntry@@@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N@1@AEB_KAEAVTimelineEntry@@@Z;struct std::pair<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,bool> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Try_emplace<unsigned __int64 const & __ptr64,class TimelineEntry & __ptr64>(unsigned;1321496;1321496;1
??$_Uninitialized_copy@PEADV?$allocator@D@std@@@std@@YAPEADQEAD0PEADAEAV?$allocator@D@0@@Z;char * __ptr64 __cdecl std::_Uninitialized_copy<char * __ptr64,class std::allocator<char> >(char * __ptr64 const,char * __ptr64 const,char * __ptr64,class std::allocator<char> & __ptr64);1320265;1320265;1
??0?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@QEAA@XZ;__cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >(void) __ptr64;1318623;1318623;1
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;1316160;1316160;1
?_Decref@_Ref_count_base@std@@QEAAXXZ;void __cdecl std::_Ref_count_base::_Decref(void) __ptr64;1312465;1312465;1
??0?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAA@$$QEAV01@@Z;??0?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAA@$$QEAV01@@Z;1306717;1306717;1
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ;bool __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Endwrite(void) __ptr64;6525787;1305157;5
?begin@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::begin(void) __ptr64;2604403;1302201;2
?_Unchecked_erase@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Unchecked_erase(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetai;1298507;1298507;1
??$fill@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0AEB_N@Z;void __cdecl std::fill<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,bool>(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,bool const & __ptr64);1286601;1286601;1
?do_in@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEA_W3AEAPEA_W@Z;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_in(struct _Mbstatet & __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64 & __ptr64,wchar_t * __ptr64,wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64)const __ptr64;1286601;1286601;1
?PrettyPrefix@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAAXW4Type@2@@Z;void __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::PrettyPrefix(enum rapidjson::Type) __ptr64;1282496;1282496;1
?_Unchecked_erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chron;2562529;1281264;2
?AddChild@TimelineEntry@@QEAAXPEAV1@@Z;void __cdecl TimelineEntry::AddChild(class TimelineEntry * __ptr64) __ptr64;1268127;1268127;1
??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::_Copy_unchecked<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_a;1261148;1261148;1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(char const * __ptr64 const) __ptr64;7553754;1258959;6
?count@ParseResult@cxxopts@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;unsigned __int64 __cdecl cxxopts::ParseResult::count(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;1253348;1253348;1
?_Unchecked_erase@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Unchecked_erase(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * ;1252117;1252117;1
?add_to_option@ParseResult@cxxopts@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;void __cdecl cxxopts::ParseResult::add_to_option(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1252117;1252117;1
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z;??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z;1252117;1252117;1
??0?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >(class std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> > const & __ptr64) __ptr64;1246369;1246369;1
??$_Resize@U_Value_init_tag@std@@@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Resize<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1244317;1244317;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & ;1241854;1241854;1
?OnFrontEndPassFinished@BuildTimelineAnalyzer@@AEAAXAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnFrontEndPassFinished(class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass const & __ptr64) __ptr64;1236517;1236517;1
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z;virtual __int64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::xsgetn(char * __ptr64,__int64) __ptr64;6181762;1236352;5
??0bad_weak_ptr@std@@QEAA@XZ;__cdecl std::bad_weak_ptr::bad_weak_ptr(void) __ptr64;1236106;1236106;1
?_Unchecked_erase@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@PEAU32@QEAU32@@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_erase(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64;1235696;1235696;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;1224611;1224611;1
?_Begin_assert_group@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Node_base@2@_N@Z;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Begin_assert_group(bool) __ptr64;1222969;1222969;1
?_CharacterEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_CharacterEscape(void) __ptr64;1222559;1222559;1
??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$vector@DV?$allocator@D@std@@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@D@1@@Z;__cdecl std::vector<char,class std::allocator<char> >::vector<char,class std::allocator<char> ><class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,0>(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<char> const & __ptr64) __ptr64;1218453;1218453;1
?_Getcat@?$collate@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z;static unsigned __int64 __cdecl std::collate<char>::_Getcat(class std::locale::facet const * __ptr64 * __ptr64,class std::locale const * __ptr64);1215169;1215169;1
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z;class std::codecvt<char,char,struct _Mbstatet> const & __ptr64 __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class std::locale const & __ptr64);6072972;1214594;5
??0?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const & __ptr64) __ptr64;1209422;1209422;1
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEBDXZ;char const & __ptr64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator*(void)const __ptr64;1202032;1202032;1
??$_Med3_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@00V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;void __cdecl std::_Med3_unchecked<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80> >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __;1200390;1200390;1
?_AtomEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_AtomEscape(void) __ptr64;1198748;1198748;1
??1?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::~vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(void) __ptr64;1198337;1198337;1
??0?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(;1191358;1191358;1
??0?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > const & __ptr64) __ptr64;1183969;1183969;1
?FinishEntry@BuildTimeline@@QEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimeline::FinishEntry(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;1180685;1180685;1
??0?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_ite;1172063;1172063;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;1170011;1170011;1
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxop;1168779;1168779;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0;1167548;1167548;1
??0?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >(void) __ptr64;2319085;1159542;2
??0?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int6;1155232;1155232;1
??$make_shared@V?$standard_value@_N@values@cxxopts@@AEBV123@@std@@YA?AV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@AEBV?$standard_value@_N@values@cxxopts@@@Z;class std::shared_ptr<class cxxopts::values::standard_value<bool> > __cdecl std::make_shared<class cxxopts::values::standard_value<bool>,class cxxopts::values::standard_value<bool> const & __ptr64>(class cxxopts::values::standard_value<bool> const & __ptr64);1152358;1152358;1
??0?$vector@IV?$allocator@I@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::vector<unsigned int,class std::allocator<unsigned int> >(class std::vector<unsigned int,class std::allocator<unsigned int> > const & __ptr64) __ptr64;1151537;1151537;1
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Resize_reallocate<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1149484;1149484;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEBAPEAKXZ;unsigned long * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::_Unwrapped(void)const __ptr64;1137989;1137989;1
??1BuildTimeline@@QEAA@XZ;__cdecl BuildTimeline::~BuildTimeline(void) __ptr64;1130189;1130189;1
??0?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@rapidjson@@QEAA@W4Type@1@PEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@_KPEAVCrtAllocator@1@@Z;__cdecl rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>(enum rapidjson::Type,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> * __ptr64,unsigned __int64,class rapidjson::CrtAllocator * __ptr64) __ptr64;1127316;1127316;1
?do_out@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_out(struct _Mbstatet & __ptr64,wchar_t const * __ptr64,wchar_t const * __ptr64,wchar_t const * __ptr64 & __ptr64,char * __ptr64,char * __ptr64,char * __ptr64 & __ptr64)const __ptr64;1126495;1126495;1
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class <lambda_319d5e083f45f90dcdce5dce53cbb275>,char>(unsigned __int64,class <lambda_319d5e083f45f90dcdce5dce53cbb275>,char) __ptr64;7873556;1124793;7
??0option_syntax_exception@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::option_syntax_exception::option_syntax_exception(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1121568;1121568;1
??$try_emplace@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$try_emplace@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allo;1118694;1118694;1
??$?0PEBD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD0AEBV?$allocator@D@1@@Z;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ><char const * __ptr64,0>(char const * __ptr64,char const * __ptr64,class std::allocator<char> const & __ptr64) __ptr64;1118694;1118694;1
??0option_not_exists_exception@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::option_not_exists_exception::option_not_exists_exception(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1113768;1113768;1
?_ClassRanges@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_ClassRanges(void) __ptr64;1112537;1112537;1
??0option_exists_error@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::option_exists_error::option_exists_error(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1100631;1100631;1
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_for<class <lambda_66f57f934f28d61049862f64df852ff0>,char const * __ptr64>(unsigned __int64,class <lambda_66f57f934f28d61049862f64df852ff0>,char const * __ptr64) __ptr64;6598450;1099741;6
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class <lambda_65e615be2a453ca0576c979606f46740>,char const * __ptr64,unsigned __int64>(unsigned __int64,class <lambda_65e615be2a453ca0576c979606f46740>,char const * __ptr64,unsigned __int64) __ptr64;2194693;1097346;2
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AEAAXXZ;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Tidy(void) __ptr64;1094473;1094473;1
??0?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;2181147;1090573;2
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > const & __ptr64)const __ptr64;1077641;1077641;1
??$RunFindId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VTemplateInstantiation@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVTemplateInstantiation@Activities@234@@Z;??$RunFindId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Micr;1074768;1074768;1
??E?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator++(void) __ptr64;1071894;1071894;1
??$RunFindId@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activi;1071483;1071483;1
??1BuildTimelineExporter@@QEAA@XZ;__cdecl BuildTimelineExporter::~BuildTimelineExporter(void) __ptr64;1071073;1071073;1
??0missing_argument_exception@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::missing_argument_exception::missing_argument_exception(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1070662;1070662;1
??0FunctionCompilationsExporter@@QEAA@AEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@@Z;__cdecl FunctionCompilationsExporter::FunctionCompilationsExporter(class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_st;1068199;1068199;1
??0?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithL;1067378;1067378;1
?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::erase(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >) __ptr64;1067378;1067378;1
??$lookup_classname@PEBD@?$_Regex_traits@D@std@@QEBAFPEBD0_N@Z;short __cdecl std::_Regex_traits<char>::lookup_classname<char const * __ptr64>(char const * __ptr64,char const * __ptr64,bool)const __ptr64;1063683;1063683;1
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Resize_reallocate<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1056294;1056294;1
?dtoa@internal@rapidjson@@YAPEADNPEADH@Z;char * __ptr64 __cdecl rapidjson::internal::dtoa(double,char * __ptr64,int);1050136;1050136;1
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z;void * __ptr64 __cdecl std::_Allocate_manually_vector_aligned<struct std::_Default_allocate_traits>(unsigned __int64);15743008;1049533;15
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator++(void) __ptr64;1049315;1049315;1
??$emplace_back@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@I@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAA@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAI@Z;??$emplace_back@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@I@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAA@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAI@Z;1047673;1047673;1
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Resize_reallocate<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1047262;1047262;1
??$_Sort_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0_JV<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Sort_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;1045620;1045620;1
?do_transform@?$collate@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEBD0@Z;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::collate<char>::do_transform(char const * __ptr64,char const * __ptr64)const __ptr64;1043567;1043567;1
??$make_shared@VOptionDetails@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@AEAV34@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@4@@std@@YA?AV?$shared_ptr@VOptionDetails@cxxopts@@@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AEAV20@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@0@@Z;class std::shared_ptr<class cxxopts::OptionDetails> __cdecl std::make_shared<class cxxopts::OptionDetails,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::shared_ptr<class cxxopts::Value const > & __ptr64>(class std::basic_string<char,struct;1041104;1041104;1
??$_Sort_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@0_JV<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;void __cdecl std::_Sort_unchecked<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,__int64,class <lambda_a2eef00bb02357da46910e5eb8f40a83>);1040694;1040694;1
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Resize_reallocate<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;1039873;1039873;1
??0?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsi;1039052;1039052;1
??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Resize_reallocate<unsigned int>(unsigned __int64,unsigned int const & __ptr64) __ptr64;1037820;1037820;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct Process;1035767;1035767;1
??0?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;1034125;1034125;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __i;1031662;1031662;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Insert_new_node_before(unsig;1022220;1022220;1
??0?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@1@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Hash<class std::_Umap_traits;1019757;1019757;1
??A?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBAAEBQEAVTimelineEntry@@_K@Z;class TimelineEntry * __ptr64 const & __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::operator[](unsigned __int64)const __ptr64;1016883;1016883;1
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::;1015241;1015241;1
??$AddMember@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@U?$GenericStringRef@D@1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(struct rapidjson::GenericStringRef<char>,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class rapi;1014420;1014420;1
??D?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@XZ;class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator*(void)const __ptr64;1011957;1011957;1
??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@$0A@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000> > __cdecl std::chrono::duration_cast<class std::chrono::duration<__int64,struct std::ratio<1,1000000> >,__int64,struct std::ratio<1,1000000000>,0>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);1011136;1011136;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::_List_node_emplace_op2<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > ><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::allocator<struct std::_List_no;1009083;1009083;1
?_Getptr@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAPEBIXZ;unsigned int const * __ptr64 __cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Getptr(void)const __ptr64;1008672;1008672;1
??$?0UDataPerFile@FileInclusionTimesExporter@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct FileInclusionTimesExporter::DataPerFile>(class std::allocator<struct FileInclusionTimesExporter::DataPerFile> const & __ptr64) __ptr64;999230;999230;1
??$_Range_construct_or_tidy@PEBD@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEBD0Uforward_iterator_tag@1@@Z;void __cdecl std::vector<char,class std::allocator<char> >::_Range_construct_or_tidy<char const * __ptr64>(char const * __ptr64,char const * __ptr64,struct std::forward_iterator_tag) __ptr64;998820;998820;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DL;995946;995946;1
??F?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator--(void) __ptr64;995946;995946;1
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBAX_J@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::_Verify_offset(__int64)const __ptr64;991841;991841;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chro;1979576;989788;2
??A?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@_K@Z;class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::operator[](unsigned __int64) __ptr64;989788;989788;1
?_Else_if@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXPEAV_Node_base@2@0@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Else_if(class std::_Node_base * __ptr64,class std::_Node_base * __ptr64) __ptr64;983630;983630;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Clear_guard::_Clear_guard(cl;979114;979114;1
??$_Insertion_sort_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@PEAPEBU10@QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Insertion_sort_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;979114;979114;1
?_CharacterClassEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_N_N@Z;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_CharacterClassEscape(bool) __ptr64;976240;976240;1
?_ClassAtom@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA?AW4_Prs_ret@2@XZ;enum std::_Prs_ret __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_ClassAtom(void) __ptr64;975009;975009;1
?_Quantifier@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Quantifier(void) __ptr64;971314;971314;1
??0BuildTimeline@@QEAA@XZ;__cdecl BuildTimeline::BuildTimeline(void) __ptr64;969261;969261;1
??0?$basic_regex@DV?$regex_traits@D@std@@@std@@QEAA@PEBDW4syntax_option_type@regex_constants@1@@Z;__cdecl std::basic_regex<char,class std::regex_traits<char> >::basic_regex<char,class std::regex_traits<char> >(char const * __ptr64,enum std::regex_constants::syntax_option_type) __ptr64;967619;967619;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std;963925;963925;1
?GetEntry@BuildTimeline@@AEAAPEAVTimelineEntry@@AEB_K@Z;class TimelineEntry * __ptr64 __cdecl BuildTimeline::GetEntry(unsigned __int64 const & __ptr64) __ptr64;963104;963104;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;963104;963104;1
??$toLocalString@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@cxxopts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$QEAV12@@Z;??$toLocalString@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@cxxopts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$QEAV12@@Z;955714;955714;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;954893;954893;1
??$make_shared@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@AEBV123@@std@@YA?AV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@0@AEBV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@Z;class std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > __cdecl std::make_shared<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(class cxxopts::values::standard_value<class std::basic_stri;948735;948735;1
??$construct@U?$pair@$$CB_KU?$pair@KK@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAU?$pair@KK@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KU?$pair@KK@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAU?$pair@KK@std@@@1@@Z;??$construct@U?$pair@$$CB_KU?$pair@KK@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAU?$pair@KK@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KU?$pair@KK@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAU?$pair@KK@std@@@1@@Z;947914;947914;1
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::operator+<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,char const * __ptr64 const);947093;947093;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(void) __ptr64;946272;946272;1
??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZV12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@1234@$$QEAVActivity@Activities@234@@Z;??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZV12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTi;945451;945451;1
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy_deallocate(void) __ptr64;13187456;941961;14
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigne;941756;941756;1
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::sort<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >,class <lambda_9480883bff83c29d8fc89bed48609766> >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct Fil;941756;941756;1
?_Unchecked_begin@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_begin(void)const __ptr64;940524;940524;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_m;939293;939293;1
??$_Construct_n_copies_of_ty@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Construct_n_copies_of_ty<unsigned int>(unsigned __int64,unsigned int const & __ptr64) __ptr64;935187;935187;1
??$find@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@PEAVTimelineEntry@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@V10@V10@AEBQEAVTimelineEntry@@@Z;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > __cdecl std::find<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >,class TimelineEntry * __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >,class Timeli;1863396;931698;2
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;931493;931493;1
??$RunFindId@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass;931082;931082;1
??$_Reallocate_for@V<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@D@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_for<class <lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char>(unsigned __int64,class <lambda_138c3d7c38c85abb84c7fc7bfe5747b7>,char) __ptr64;930261;930261;1
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ;void __cdecl std::_Basic_container_proxy_ptr12::_Release(void) __ptr64;10227124;929738;11
?has_default@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::has_default(void)const __ptr64;929440;929440;1
?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::_Make_iter(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >) __ptr64;929029;929029;1
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z;void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Init(struct _iobuf * __ptr64,enum std::basic_filebuf<char,struct std::char_traits<char> >::_Initfl) __ptr64;4634063;926812;5
?AddMember@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@AEAV12@0AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllo;926566;926566;1
??0invalid_option_format_error@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::invalid_option_format_error::invalid_option_format_error(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;925745;925745;1
??1FileInclusionsAnalyzer@@UEAA@XZ;virtual __cdecl FileInclusionsAnalyzer::~FileInclusionsAnalyzer(void) __ptr64;924514;924514;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,str;1845743;922871;2
??$make_shared@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@0@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;??$make_shared@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@0@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;922050;922050;1
?_Is_wbound@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEBA_NXZ;bool __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Is_wbound(void)const __ptr64;921640;921640;1
?generate_all_groups_help@Options@cxxopts@@AEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void __cdecl cxxopts::Options::generate_all_groups_help(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64)const __ptr64;920819;920819;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB;918356;918356;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@XZ;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::operator*(void)const __ptr64;917124;917124;1
??$?0AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUEntryWithLo;914661;914661;1
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ;class std::allocator<unsigned __int64> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned __int64>,class std::_Vector_val<struct std::_Simple_types<unsigned __int64> >,1>::_Get_first(void) __ptr64;913840;913840;1
?clear@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::clear(void) __ptr64;910966;910966;1
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::operator+<char,struct std::char_traits<char>,class std::allocator<char> >(char const * __ptr64 const,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);909735;909735;1
?_Compile@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Root_node@2@XZ;class std::_Root_node * __ptr64 __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Compile(void) __ptr64;908914;908914;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$cha;908092;908092;1
?_Begin_if@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Node_base@2@PEAV32@@Z;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Begin_if(class std::_Node_base * __ptr64) __ptr64;907271;907271;1
??1?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA@XZ;virtual __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::~AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cp;904808;904808;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct st;902756;902756;1
??0ParseResult@cxxopts@@QEAA@$$QEAV01@@Z;??0ParseResult@cxxopts@@QEAA@$$QEAV01@@Z;900703;900703;1
??1BuildAnalyzer@@QEAA@XZ;__cdecl BuildAnalyzer::~BuildAnalyzer(void) __ptr64;897829;897829;1
??$make_shared@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@std@@YA?AV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@XZ;??$make_shared@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@std@@YA?AV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@XZ;894545;894545;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64);1788679;894339;2
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;1782522;891261;2
??$_Uninitialized_move@PEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@YAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@QEAU10@0PEAU10@AEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@0@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::_Uninitialized_move<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,;891261;891261;1
??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const * __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::operator->(v;889208;889208;1
?_Wrapped_disjunction@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Wrapped_disjunction(void) __ptr64;884282;884282;1
??$try_emplace@U?$pair@KK@std@@@?$unordered_map@_KU?$pair@KK@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAU?$pair@KK@1@@Z;??$try_emplace@U?$pair@KK@std@@@?$unordered_map@_KU?$pair@KK@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAU?$pair@KK@1@@Z;880997;880997;1
??$make_shared@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$$V@std@@YA?AV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@0@XZ;??$make_shared@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$$V@std@@YA?AV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@;880997;880997;1
??$?0AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;876482;876482;1
??$_Codecvt_do_length@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@DU_Mbstatet@@@std@@YAHAEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@0@AEAU_Mbstatet@@PEBD2_K@Z;int __cdecl std::_Codecvt_do_length<class std::codecvt_utf8<wchar_t,1114111,0>,char,struct _Mbstatet>(class std::codecvt_utf8<wchar_t,1114111,0> const & __ptr64,struct _Mbstatet & __ptr64,char const * __ptr64,char const * __ptr64,unsigned __int64);875661;875661;1
?_Inc@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Inc(void) __ptr64;875250;875250;1
??$forward@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@0@AEAV10@@Z;??$forward@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@0@AEAV10@@Z;874429;874429;1
??$_Insertion_sort_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@QEAPEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::_Insertion_sort_unchecked<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80> >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64;871966;871966;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationD;870734;870734;1
??0?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@1@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int;868682;868682;1
??$?0PEBD$0A@@?$vector@DV?$allocator@D@std@@@std@@QEAA@PEBD0AEBV?$allocator@D@1@@Z;__cdecl std::vector<char,class std::allocator<char> >::vector<char,class std::allocator<char> ><char const * __ptr64,0>(char const * __ptr64,char const * __ptr64,class std::allocator<char> const & __ptr64) __ptr64;868682;868682;1
??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unord;868271;868271;1
?__empty_global_delete@@YAXPEAX@Z;void __cdecl __empty_global_delete(void * __ptr64);10390514;865876;12
??$Run@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Micro;865808;865808;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWi;864166;864166;1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned __int64,char) __ptr64;864166;864166;1
??$_Insertion_sort_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAPEAUDataPerFunction@FunctionCompilationsExporter@@PEAU12@QEAU12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::_Insertion_sort_unchecked<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64 const,class <lambda_a2eef00bb02357da46910e5eb8f40a83>);864166;864166;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AE;861703;861703;1
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::;860471;860471;1
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@0@0V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;void __cdecl std::sort<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >,class <lambda_add3c17bb2999790cf84673b171b0d80> >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<;859650;859650;1
??$_Uninitialized_copy@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@QEAU120@0PEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Uninitialized_copy<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(struct std::_Tgt_state_t<class std::_String_const;859239;859239;1
??0?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@$$QEAV?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@@Z;??0?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@$$QEAV?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@@Z;858829;858829;1
?_Orphan_all@_Container_base12@std@@QEAAXXZ;void __cdecl std::_Container_base12::_Orphan_all(void) __ptr64;12840558;856037;15
??$_Insertion_sort_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAPEAUDataPerFile@FileInclusionTimesExporter@@PEAU12@QEAU12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::_Insertion_sort_unchecked<struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64 const,class <lambda_b68333ea59420deb7dec0041da4f8963>);854313;854313;1
??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VFrontEndFile@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVFrontEndFile@Activities@234@@Z;??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@;853492;853492;1
?generate_group_help@Options@cxxopts@@AEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@4@@Z;void __cdecl cxxopts::Options::generate_group_help(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64)const __ptr64;849797;849797;1
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<un;848155;848155;1
?EndArray@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NI@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::EndArray(unsigned int) __ptr64;847744;847744;1
??0TimelineEntry@@QEAA@AEBV0@@Z;__cdecl TimelineEntry::TimelineEntry(class TimelineEntry const & __ptr64) __ptr64;847744;847744;1
??$_Resize@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Resize<unsigned int>(unsigned __int64,unsigned int const & __ptr64) __ptr64;847334;847334;1
??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::_Uninitialized_move<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,class std::basic_string<char,struct std::char_traits<char>,class;846102;846102;1
??$_Move_construct_from@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$a;844871;844871;1
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const & __ptr64 __cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::operator*(void)const __ptr64;844871;844871;1
??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@;844460;844460;1
?_Insert_new_node_before@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@_KQEAU32@1@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Insert_new_node_before(unsigned __int64,struct std::_List_node<struct std::pair<unsigned __int64 const ,clas;844050;844050;1
?begin@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > > __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::begin(void) __ptr64;842818;842818;1
??0exception@std@@QEAA@AEBV01@@Z;__cdecl std::exception::exception(class std::exception const & __ptr64) __ptr64;12632420;842161;15
??0?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(void) __ptr64;841587;841587;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_Li;1681531;840765;2
??$_Regex_match1@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@DV?$regex_traits@D@2@PEBD@std@@YA_NPEBD0PEAV?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@0@AEBV?$basic_regex@DV?$regex_traits@D@std@@@0@W4match_flag_type@regex_constants@0@_N@Z;bool __cdecl std::_Regex_match1<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> >,char,class std::regex_traits<char>,char const * __ptr64>(char const * __ptr64,char const * __ptr64,class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > * __ptr64,class std::basic_regex<char,class std::regex_traits<char> > const & __ptr64,enum std::regex_constants::match_flag_type,bool);839944;839944;1
??$RunFindId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVSymbolName@SimpleEvents@234@@Z;??$RunFindId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Mic;839944;839944;1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const * __ptr64 const,unsigned __int64) __ptr64;5024477;837412;6
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::_Alloc_sentinel_and_proxy(void) __ptr64;837071;837071;1
??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VActivity@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVActivity@Activities@234@@Z;??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345;837071;837071;1
?_Dec@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Dec(void) __ptr64;832144;832144;1
??$make_shared@V?$standard_value@_N@values@cxxopts@@PEA_N@std@@YA?AV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@$$QEAPEA_N@Z;??$make_shared@V?$standard_value@_N@values@cxxopts@@PEA_N@std@@YA?AV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@$$QEAPEA_N@Z;830913;830913;1
??$construct@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAPEBVTimelineEntry@@AEAK@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@1@@Z;??$construct@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAPEBVTimelineEntry@@AEAK@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@QE;830502;830502;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,c;830502;830502;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;830092;830092;1
??$uninitialized_fill@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >(class std::_List_unchecked_cons;1659362;829681;2
??$construct@U?$pair@$$CB_KU?$pair@KK@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAU?$pair@KH@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KU?$pair@KK@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAU?$pair@KH@std@@@1@@Z;??$construct@U?$pair@$$CB_KU?$pair@KK@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAU?$pair@KH@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KU?$pair@KK@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAU?$pair@KH@std@@@1@@Z;827218;827218;1
?Grisu2@internal@rapidjson@@YAXNPEADPEAH1@Z;void __cdecl rapidjson::internal::Grisu2(double,char * __ptr64,int * __ptr64,int * __ptr64);827218;827218;1
??$move@AEAV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$ch;826807;826807;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::operator*(void)const __ptr64;823113;823113;1
??0OptionDetails@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00V?$shared_ptr@$$CBVValue@cxxopts@@@3@@Z;__cdecl cxxopts::OptionDetails::OptionDetails(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::shared_ptr<class cxxopts::Value const >) __ptr64;821060;821060;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::__autoclassinit2(unsigned __int64) __ptr64;820650;820650;1
??$_Uninitialized_move@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@QEAU120@0PEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Uninitialized_move<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(struct std::_Tgt_state_t<class std::_String_const;820650;820650;1
??$make_shared@_N$$V@std@@YA?AV?$shared_ptr@_N@0@XZ;??$make_shared@_N$$V@std@@YA?AV?$shared_ptr@_N@0@XZ;816955;816955;1
?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Reallocate_exactly(unsigned __int64) __ptr64;816544;816544;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > >(class std::_List_unchecke;813260;813260;1
?parse@Options@cxxopts@@QEAA?AVParseResult@2@AEAHAEAPEAPEAD@Z;class cxxopts::ParseResult __cdecl cxxopts::Options::parse(int & __ptr64,char * __ptr64 * __ptr64 & __ptr64) __ptr64;812439;812439;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Alloc_sentinel_and_proxy(void) __ptr64;810797;810797;1
??$try_emplace@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;??$try_emplace@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@;810386;810386;1
??$_Uninitialized_move@PEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@YAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAV12345@0PEAV12345@AEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@0@@Z;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::_Uninitialized_move<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyz;810386;810386;1
??$_Uninitialized_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::_Uninitialized_copy<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,class std::basic_string<char,struct std::char_traits<char>,class;805049;805049;1
??$_Uninitialized_move@PEAUHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@YAPEAUHelpOptionDetails@cxxopts@@QEAU12@0PEAU12@AEAV?$allocator@UHelpOptionDetails@cxxopts@@@0@@Z;struct cxxopts::HelpOptionDetails * __ptr64 __cdecl std::_Uninitialized_move<struct cxxopts::HelpOptionDetails * __ptr64,class std::allocator<struct cxxopts::HelpOptionDetails> >(struct cxxopts::HelpOptionDetails * __ptr64 const,struct cxxopts::HelpOptionDetails * __ptr64 const,struct cxxopts::HelpOptionDetails * __ptr64,class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64);803818;803818;1
?max_size@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::max_size(void)const __ptr64;803407;803407;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Alloc_sentinel_and_proxy(void) __ptr64;802586;802586;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,str;801355;801355;1
??$?0M@?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;??$?0M@?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;3204186;801046;4
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<u;800123;800123;1
??$find@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@K@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@V10@V10@AEBK@Z;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > __cdecl std::find<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >,unsigned long>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >,unsigned long const & __ptr64);799712;799712;1
??0?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@_KAEB_NAEBV?$allocator@_N@1@@Z;__cdecl std::_Vb_val<class std::allocator<bool> >::_Vb_val<class std::allocator<bool> >(unsigned __int64,bool const & __ptr64,class std::allocator<bool> const & __ptr64) __ptr64;799712;799712;1
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z;virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::seekoff(__int64,int,int) __ptr64;3990762;798152;5
??$_Sort_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@0_JV<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;void __cdecl std::_Sort_unchecked<struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,__int64,class <lambda_b68333ea59420deb7dec0041da4f8963>);798070;798070;1
??$_Uninitialized_move@PEAVKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@YAPEAVKeyValue@cxxopts@@QEAV12@0PEAV12@AEAV?$allocator@VKeyValue@cxxopts@@@0@@Z;class cxxopts::KeyValue * __ptr64 __cdecl std::_Uninitialized_move<class cxxopts::KeyValue * __ptr64,class std::allocator<class cxxopts::KeyValue> >(class cxxopts::KeyValue * __ptr64 const,class cxxopts::KeyValue * __ptr64 const,class cxxopts::KeyValue * __ptr64,class std::allocator<class cxxopts::KeyValue> & __ptr64);796839;796839;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Alloc_sentinel_and_proxy(void) __ptr64;796018;796018;1
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z;char & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned __int64) __ptr64;1591625;795812;2
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::_Alloc_sentinel_and_proxy(void) __ptr64;795197;795197;1
??$_Uninitialized_move@PEAV?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@YAPEAV?$sub_match@PEBD@0@QEAV10@0PEAV10@AEAV?$allocator@V?$sub_match@PEBD@std@@@0@@Z;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::_Uninitialized_move<class std::sub_match<char const * __ptr64> * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >(class std::sub_match<char const * __ptr64> * __ptr64 const,class std::sub_match<char const * __ptr64> * __ptr64 const,class std::sub_match<char const * __ptr64> * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64);791502;791502;1
??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2;790270;790270;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ;1580130;790065;2
??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@1234@AEBVEventStack@234@$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V123;789039;789039;1
??$_Uninitialized_move@PEAUDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@YAPEAUDataPerFunction@FunctionCompilationsExporter@@QEAU12@0PEAU12@AEAV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@0@@Z;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::_Uninitialized_move<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64 const,struct FunctionCompilationsExporter::DataPerFunction * __ptr64 const,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction;788628;788628;1
??$_Assign_range@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@0Uforward_iterator_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Assign_range<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64>(struct std::_Tgt_state_t<class std::_String_const_i;788628;788628;1
?_Calculate_loop_simplicity@std@@YAXPEAV_Node_base@1@0PEAV_Node_rep@1@@Z;void __cdecl std::_Calculate_loop_simplicity(class std::_Node_base * __ptr64,class std::_Node_base * __ptr64,class std::_Node_rep * __ptr64);787807;787807;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,clas;787397;787397;1
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@std@@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@0@0V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;void __cdecl std::sort<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >,class <lambda_b68333ea59420deb7dec0041da4f8963> >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >,class <lambda_b68333ea59420deb7dec0041da4f8963>);786986;786986;1
??$make_pair@AEAKH@std@@YA?AU?$pair@KH@0@AEAK$$QEAH@Z;??$make_pair@AEAKH@std@@YA?AU?$pair@KH@0@AEAK$$QEAH@Z;785754;785754;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;785344;785344;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator*(void)const __ptr64;780418;780418;1
??$append@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,0>(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >) __ptr64;779186;779186;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > > const & __ptr64);777954;777954;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator*(void)const __ptr64;775491;775491;1
??$_Uninitialized_move@PEAUDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@YAPEAUDataPerFile@FileInclusionTimesExporter@@QEAU12@0PEAU12@AEAV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@0@@Z;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::_Uninitialized_move<struct FileInclusionTimesExporter::DataPerFile * __ptr64,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64 const,struct FileInclusionTimesExporter::DataPerFile * __ptr64 const,struct FileInclusionTimesExporter::DataPerFile * __ptr64,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> & __ptr64);775491;775491;1
??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_;774260;774260;1
??$_Reset@PEBD@?$basic_regex@DV?$regex_traits@D@std@@@std@@AEAAXPEBD0W4syntax_option_type@regex_constants@1@Uforward_iterator_tag@1@@Z;void __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Reset<char const * __ptr64>(char const * __ptr64,char const * __ptr64,enum std::regex_constants::syntax_option_type,struct std::forward_iterator_tag) __ptr64;772617;772617;1
?EndObject@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NI@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::EndObject(unsigned int) __ptr64;769744;769744;1
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z;__cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::sentry(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64) __ptr64;3847488;769497;5
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAVTimelineEntry@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAVTimelineEntry@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAVTimelineEntry@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAVTimelineEntry@@@1@@Z;768923;768923;1
?_Alloc_sentinel_and_proxy@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Alloc_sentinel_and_proxy(void) __ptr64;1536614;768307;2
?Realloc@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAAPEAXPEAX_K1@Z;void * __ptr64 __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::Realloc(void * __ptr64,unsigned __int64,unsigned __int64) __ptr64;768102;768102;1
?ExportFunctionCompilationsData@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportFunctionCompilationsData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;767281;767281;1
??$?0PEAD$0A@@?$vector@DV?$allocator@D@std@@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z;__cdecl std::vector<char,class std::allocator<char> >::vector<char,class std::allocator<char> ><char * __ptr64,0>(char * __ptr64,char * __ptr64,class std::allocator<char> const & __ptr64) __ptr64;764817;764817;1
??0?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@W4Type@1@@Z;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(enum rapidjson::Type) __ptr64;763586;763586;1
??$RunContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZVTemplateInstantiation@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@1234@$$QEAVTemplateInstantiation@Activities@234@@Z;??$RunContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZVTemplateInstantiation@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Micros;757428;757428;1
??$_Sort_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0_JV<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;void __cdecl std::_Sort_unchecked<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80> >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,__int64,class <lambda_add3c17bb2999790cf84673b171b0d80>);755786;755786;1
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z;unsigned __int64 const & __ptr64 __cdecl std::_Min_value<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64);11320773;754718;15
??1?$_Node_class@DV?$regex_traits@D@std@@@std@@UEAA@XZ;virtual __cdecl std::_Node_class<char,class std::regex_traits<char> >::~_Node_class<char,class std::regex_traits<char> >(void) __ptr64;753323;753323;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$;1502129;751064;2
??1FunctionCompilationsExporter@@QEAA@XZ;__cdecl FunctionCompilationsExporter::~FunctionCompilationsExporter(void) __ptr64;750859;750859;1
??$try_emplace@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$try_emplace@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allo;750449;750449;1
?_Add_elts@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAXPEAV?$_Node_class@DV?$regex_traits@D@std@@@2@F_N@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_elts(class std::_Node_class<char,class std::regex_traits<char> > * __ptr64,short,bool) __ptr64;749217;749217;1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned __int64,char) __ptr64;1498024;749012;2
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator*(void)const __ptr64;748807;748807;1
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allo;1495561;747780;2
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::operator*(void)const __ptr64;744701;744701;1
??$?0KH$0A@@?$pair@KK@std@@QEAA@$$QEAU?$pair@KH@1@@Z;??$?0KH$0A@@?$pair@KK@std@@QEAA@$$QEAU?$pair@KH@1@@Z;744291;744291;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::operator++(void) __ptr64;744291;744291;1
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std;743880;743880;1
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Alloc_sentinel_and_proxy(void) __ptr64;739775;739775;1
??$AddMember@_J@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@U?$GenericStringRef@D@1@_JAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember<__int64>(struct rapidjson::GenericStringRef<char>,__int64,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;739775;739775;1
??1?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::~vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >(void) __ptr64;737722;737722;1
??$_Pop_heap_hole_by_index@PEAUDataPerFile@FileInclusionTimesExporter@@U12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@_J1$$QEAU12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;??$_Pop_heap_hole_by_index@PEAUDataPerFile@FileInclusionTimesExporter@@U12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@_J1$$QEAU12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;736491;736491;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUFileCompilationData@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAUFileCompilationData@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUFileCompilationData@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$;735670;735670;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Desired_gro;735259;735259;1
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ;void __cdecl std::_Iterator_base12::_Orphan_me(void) __ptr64;8087442;735222;11
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z;class std::basic_filebuf<char,struct std::char_traits<char> > * __ptr64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::open(char const * __ptr64,int,int) __ptr64;3673833;734766;5
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::_Alloc_sentinel_and_proxy(void) __ptr64;732385;732385;1
?clear@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;1462719;731359;2
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<ch;730743;730743;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > const * ;729101;729101;1
?_Add_char_to_bitmap@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAXD@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_char_to_bitmap(char) __ptr64;727459;727459;1
?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z;virtual __int64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::xsputn(char const * __ptr64,__int64) __ptr64;3632780;726556;5
?PushBack@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@AEAV12@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::PushBack(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;726228;726228;1
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > ;720891;720891;1
??$_Uninitialized_value_construct_n@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@YAPEAU_Loop_vals_t@0@PEAU10@_KAEAV?$allocator@U_Loop_vals_t@std@@@0@@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::_Uninitialized_value_construct_n<class std::allocator<struct std::_Loop_vals_t> >(struct std::_Loop_vals_t * __ptr64,unsigned __int64,class std::allocator<struct std::_Loop_vals_t> & __ptr64);719249;719249;1
??$stringAppend@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@cxxopts@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV12@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl cxxopts::stringAppend<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >);718838;718838;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAPEBVTimelineEntry@@AEAK@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@AEAPEBVTimelineEntry@@AEAK@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@1@@Z;718838;718838;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@V?$tuple@$$V@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@$$QEAV?$tuple@$$V@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@V?$tuple@$$V@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@$$QEAV?$tuple@$$V;718427;718427;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> >;718427;718427;1
??$_Find_last@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_tra;718017;718017;1
??$_Copy_memmove@PEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAPEAV1234@@std@@YAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAPEAV1234@00@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::_Copy_memmove<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64>(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64);715143;715143;1
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CB_KVTimelineEntry@@@1@XZ;struct std::pair<unsigned __int64 const ,class TimelineEntry> const & __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator*(void)const __ptr64;714733;714733;1
??$_Resize@U_Value_init_tag@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Resize<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;713501;713501;1
??$make_unique@V_Node_assert@std@@W4_Node_type@2@$0A@@std@@YA?AV?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@0@$$QEAW4_Node_type@0@@Z;??$make_unique@V_Node_assert@std@@W4_Node_type@2@$0A@@std@@YA?AV?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@0@$$QEAW4_Node_type@0@@Z;712680;712680;1
??$try_emplace@UFileCompilationData@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUFileCompilationData@@@Z;??$try_emplace@UFileCompilationData@@@?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?;712680;712680;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > > const & __ptr64);712270;712270;1
??$_Uninitialized_value_construct_n@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAV10@_KAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::_Uninitialized_value_construct_n<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,unsigned __int64,class std::allocator<class std::sub_match<class std::_;712270;712270;1
?OnFunction@BuildTimelineAnalyzer@@AEAAXAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnFunction(class Microsoft::Cpp::BuildInsights::Activities::Function const & __ptr64) __ptr64;711859;711859;1
??$_Pop_heap_hole_by_index@PEAUDataPerFunction@FunctionCompilationsExporter@@U12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@_J1$$QEAU12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;??$_Pop_heap_hole_by_index@PEAUDataPerFunction@FunctionCompilationsExporter@@U12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@_J1$$QEAU12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;711448;711448;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >) __ptr64;711448;711448;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_str;710627;710627;1
?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64);709806;709806;1
??$AddMember@_K@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@U?$GenericStringRef@D@1@_KAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember<unsigned __int64>(struct rapidjson::GenericStringRef<char>,unsigned __int64,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;708985;708985;1
?WriteUint64@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_N_K@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteUint64(unsigned __int64) __ptr64;708985;708985;1
?ExportFileCompilationsData@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportFileCompilationsData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;708985;708985;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;708575;708575;1
??0exception@std@@QEAA@QEBD@Z;__cdecl std::exception::exception(char const * __ptr64 const) __ptr64;708575;708575;1
?AddMember@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@U?$GenericStringRef@D@2@0AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember(struct rapidjson::GenericStringRef<char>,struct rapidjson::GenericStringRef<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;708164;708164;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterat;706522;706522;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(void) __ptr64;706522;706522;1
??$_Uninitialized_value_construct_n@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAU120@_KAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Uninitialized_value_construct_n<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,unsigned __int64,class std::allocato;705701;705701;1
??$_Emplace_back_with_unused_capacity@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@I@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEAA@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAI@Z;??$_Emplace_back_with_unused_capacity@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@I@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEAA@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAI@Z;705701;705701;1
?_Change_array@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAXQEAUHelpOptionDetails@cxxopts@@_K1@Z;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Change_array(struct cxxopts::HelpOptionDetails * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;705290;705290;1
?clear@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;704469;704469;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<class std::basi;1406476;703238;2
??$_Range_construct_or_tidy@PEAD@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0Uforward_iterator_tag@1@@Z;void __cdecl std::vector<char,class std::allocator<char> >::_Range_construct_or_tidy<char * __ptr64>(char * __ptr64,char * __ptr64,struct std::forward_iterator_tag) __ptr64;702417;702417;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;702006;702006;1
??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp;702006;702006;1
??$forward@AEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAAEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr64 __cdecl std::forward<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr64>(class std::_List_unchecked;1401549;700774;2
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct s;700364;700364;1
??1?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::~vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const;699954;699954;1
??$swap@PEA_N$0A@@std@@YAXAEAPEA_N0@Z;void __cdecl std::swap<bool * __ptr64,0>(bool * __ptr64 & __ptr64,bool * __ptr64 & __ptr64);699543;699543;1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;1397855;698927;2
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z;char const & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[](unsigned __int64)const __ptr64;698722;698722;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;2794067;698516;4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEBAXAEBV12@@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Compat(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64)const __ptr64;1395392;697696;2
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAU?$pair@KH@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAU?$pair@KH@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAU?$pair@KH@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAU?$pair@KH@std@@@1@@Z;695848;695848;1
?AddMember@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@U?$GenericStringRef@D@2@AEAV12@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember(struct rapidjson::GenericStringRef<char>,class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,class rapidjson::MemoryPoolAllocator<class rapidj;695438;695438;1
?_Umove_if_noexcept1@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Umove_if_noexcept1(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompi;695438;695438;1
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z;__cdecl std::_Container_proxy_ptr12<class std::allocator<struct std::_Container_proxy> >::_Container_proxy_ptr12<class std::allocator<struct std::_Container_proxy> >(class std::allocator<struct std::_Container_proxy> & __ptr64,struct std::_Container_base12 & __ptr64) __ptr64;7647764;695251;11
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;695027;695027;1
??0?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAA@AEBV?$regex_traits@D@1@W4syntax_option_type@regex_constants@1@@Z;__cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Builder<char const * __ptr64,char,class std::regex_traits<char> >(class std::regex_traits<char> const & __ptr64,enum std::regex_constants::syntax_option_type) __ptr64;694617;694617;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std;694617;694617;1
??$_Assign_range@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@1@0Uforward_iterator_tag@1@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Assign_range<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::forward_iterator_tag) __ptr64;691743;691743;1
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@1@0@Z;void __cdecl std::_Verify_range(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > > const & __ptr64,class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > > const & __ptr64);691743;691743;1
??$_Uninitialized_value_construct_n@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@YAPEAV?$sub_match@PEBD@0@PEAV10@_KAEAV?$allocator@V?$sub_match@PEBD@std@@@0@@Z;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::_Uninitialized_value_construct_n<class std::allocator<class std::sub_match<char const * __ptr64> > >(class std::sub_match<char const * __ptr64> * __ptr64,unsigned __int64,class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64);691332;691332;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::_Tidy(void) __ptr64;1381844;690922;2
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __p;690511;690511;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV01@AEAV01@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@1@@?$_Ref_count_obj2@VOptionDetails@cxxopts@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0AEAV21@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@1@@Z;__cdecl std::_Ref_count_obj2<class cxxopts::OptionDetails>::_Ref_count_obj2<class cxxopts::OptionDetails><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::shared_ptr<class cxxopts::Value const > & __ptr64>(class std::basic_string<char,struct ;690511;690511;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffs;690101;690101;1
??$_Guess_median_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@00V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Guess_median_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std:;688048;688048;1
??$_Pop_heap_hole_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@_J1$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;??$_Pop_heap_hole_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@_J1$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;688048;688048;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator;1375686;687843;2
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >::operator==(class std::_List_const;687638;687638;1
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator++(void) __ptr64;687227;687227;1
?bucket_count@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::bucket_count(void)const __ptr64;686817;686817;1
??$_Uninitialized_value_construct_n@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@PEAU120@_KAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Uninitialized_value_construct_n<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,unsigned __int64,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64);686817;686817;1
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;685585;685585;1
?_Get_first@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >,1>::_Get_first(void)const __ptr64;680248;680248;1
??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V21@$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1@Z;??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V21@$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1@Z;680248;680248;1
?clear@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;679838;679838;1
?OnFrontEndPass@BuildTimelineAnalyzer@@AEAAXAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnFrontEndPass(class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass const & __ptr64) __ptr64;679838;679838;1
??$?0U_Exact_args_t@std@@AEB_K$$V$0A@@?$tuple@AEB_K@std@@QEAA@U_Exact_args_t@1@AEB_K@Z;??$?0U_Exact_args_t@std@@AEB_K$$V$0A@@?$tuple@AEB_K@std@@QEAA@U_Exact_args_t@1@AEB_K@Z;2034586;678195;3
?_Orphan_range@?$vector@_NV?$allocator@_N@std@@@std@@QEBAX_K0@Z;void __cdecl std::vector<bool,class std::allocator<bool> >::_Orphan_range(unsigned __int64,unsigned __int64)const __ptr64;677374;677374;1
??$_Move_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@IEAAX$$QEAV01@@Z;676964;676964;1
?_Add_char_to_array@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAXD@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_char_to_array(char) __ptr64;676143;676143;1
?empty@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::empty(void)const __ptr64;675322;675322;1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const * __ptr64 const,unsigned __int64) __ptr64;1350644;675322;2
??$_Find_last@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class ;674501;674501;1
??$?R$$V@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$?R$$V@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberF;671627;671627;1
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Find_last<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned _;671216;671216;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,cla;671216;671216;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,cl;671216;671216;1
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAU?$pair@KK@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAU?$pair@KK@std@@@1@@Z;??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEB_K@1@V?$tuple@$$QEAU?$pair@KK@std@@@1@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAU?$pair@KK@std@@@1@@Z;671216;671216;1
??$_Find_last@_K@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@AEB_K_K@Z;struct std::_Hash_find_last_result<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64> __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __i;670806;670806;1
??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z;unsigned int * __ptr64 __cdecl std::_Uninitialized_fill_n<class std::allocator<unsigned int> >(unsigned int * __ptr64,unsigned __int64,unsigned int const & __ptr64,class std::allocator<unsigned int> & __ptr64);669574;669574;1
??$_Resize@U_Value_init_tag@std@@@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Resize<struct std::_Value_init_tag>(unsigned __int64,struct std::_Value_init_tag const & __ptr64) __ptr64;669164;669164;1
??0?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@$$QEAV01@@Z;??0?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@$$QEAV01@@Z;1336685;668342;2
?ExportFileInclusionTimesData@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportFileInclusionTimesData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;667111;667111;1
??H?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA?AV01@_J@Z;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator+(__int64)const __ptr64;666290;666290;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_bas;1331759;665879;2
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::_Alloc_sentinel_and_proxy(void) __ptr64;665469;665469;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;665059;665059;1
??$_Pop_heap_hole_by_index@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@_J1$$QEAPEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;??$_Pop_heap_hole_by_index@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@_J1$$QEAPEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;664237;664237;1
?_End_group@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXPEAV_Node_base@2@@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_End_group(class std::_Node_base * __ptr64) __ptr64;663827;663827;1
?_Disjunction@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Disjunction(void) __ptr64;663827;663827;1
?_Orphan_range@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEBAXPEAUHelpOptionDetails@cxxopts@@0@Z;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Orphan_range(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64)const __ptr64;663416;663416;1
??$?0$$V@?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@XZ;??$?0$$V@?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@XZ;663006;663006;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct ;662595;662595;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >);662595;662595;1
??$AddMember@_K@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@AEAV01@_KAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember<unsigned __int64>(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,unsigned __int64,class rapidjson::MemoryPoolAllocator<class rapidjson::C;660543;660543;1
?_Orphan_range@?$vector@_KV?$allocator@_K@std@@@std@@AEBAXPEA_K0@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Orphan_range(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64)const __ptr64;658490;658490;1
?parse_option@ParseResult@cxxopts@@AEAAXV?$shared_ptr@VOptionDetails@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@1@Z;void __cdecl cxxopts::ParseResult::parse_option(class std::shared_ptr<class cxxopts::OptionDetails>,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;658490;658490;1
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::operator[](unsigned __int64)const __ptr64;658080;658080;1
??1FileCompilationsExporter@@QEAA@XZ;__cdecl FileCompilationsExporter::~FileCompilationsExporter(void) __ptr64;657669;657669;1
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::`vbase destructor'(void) __ptr64;3287113;657422;5
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > ;657258;657258;1
?add_options@Options@cxxopts@@QEAA?AVOptionAdder@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;class cxxopts::OptionAdder __cdecl cxxopts::Options::add_options(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;656848;656848;1
??$HandleMatchedEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$HandleMatchedEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Mi;656848;656848;1
?name@locale@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::locale::name(void)const __ptr64;655206;655206;1
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV31@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::construct<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64>(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64,class std::basic_string<cha;653974;653974;1
??$RunContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZVSymbolName@SimpleEvents@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@1234@$$QEAVSymbolName@SimpleEvents@234@@Z;??$RunContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZVSymbolName@SimpleEvents@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Mic;653564;653564;1
??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@$0A@$$Z$0A@@?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@$0A@$$Z$0A@@?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@;652743;652743;1
?_Orphan_range@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEBAXPEAU_Loop_vals_t@2@0@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Orphan_range(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64)const __ptr64;650279;650279;1
??$try_emplace@V?$vector@_KV?$allocator@_K@std@@@std@@@?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;??$try_emplace@V?$vector@_KV?$allocator@_K@std@@@std@@@?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;649458;649458;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >(class std::_List_unchecked_iterator;649458;649458;1
??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@$$QEAV01@@Z;??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@$$QEAV01@@Z;648637;648637;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >,class std::_Tree_val<struct std::_Tree_simple_ty;648637;648637;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::operator++(void) __ptr64;648227;648227;1
??$try_emplace@V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@?$unordered_map@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@1@@Z;??$try_emplace@V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@?$unordered_map@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_t;647816;647816;1
??$forward@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64>(class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64);647816;647816;1
?clear@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::clear(void) __ptr64;647406;647406;1
??$MatchEvent@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@VTemplateInstantiation@2345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@$$QEAVTemplateInstantiation@Activities@012@@Z;??$MatchEvent@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?;647406;647406;1
?ExportBuildTimeline@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportBuildTimeline(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;646995;646995;1
?to_bytes@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEB_W@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::to_bytes(wchar_t const * __ptr64) __ptr64;646585;646585;1
??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVTemplateInstantiation@Activities@345@@Z;??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Gr;645353;645353;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > const & __ptr64)const __ptr64;644121;644121;1
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;struct std::_Tree_find_result<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64> __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::a;642890;642890;1
??$uninitialized_fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::uninitialized_fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct s;642890;642890;1
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffse;641658;641658;1
??$_Compare@PEBDPEBDV?$regex_traits@D@std@@@std@@YAPEBDPEBD000AEBV?$regex_traits@D@0@W4syntax_option_type@regex_constants@0@@Z;char const * __ptr64 __cdecl std::_Compare<char const * __ptr64,char const * __ptr64,class std::regex_traits<char> >(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64,class std::regex_traits<char> const & __ptr64,enum std::regex_constants::syntax_option_type);641658;641658;1
??0?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAV01@@Z;640016;640016;1
??$_Push_heap_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@_J1$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;??$_Push_heap_by_index@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@_J1$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;639606;639606;1
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z;virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::seekpos(class std::fpos<struct _Mbstatet>,int) __ptr64;3195565;639113;5
??$get@$0A@$$QEAUFileCompilationData@@@std@@YA$$QEAUFileCompilationData@@$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@@Z;??$get@$0A@$$QEAUFileCompilationData@@@std@@YA$$QEAUFileCompilationData@@$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@@Z;638374;638374;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > > const & __ptr64);637553;637553;1
?_IsIdentityEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEBA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_IsIdentityEscape(void)const __ptr64;637142;637142;1
?ExportFileInclusionGraph@BuildAnalyzer@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl BuildAnalyzer::ExportFileInclusionGraph(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;636732;636732;1
??$emplace_back@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@AEAV342@I@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAA@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@1$$QEAI@Z;??$emplace_back@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@AEAV342@I@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAA@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@1$$QEAI@Z;635500;635500;1
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA?AV01@H@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator++(int) __ptr64;634679;634679;1
??0?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >(void) __ptr64;633448;633448;1
??$_Uninitialized_move@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@QEAPEBU10@0PEAPEBU10@AEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@0@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Uninitialized_move<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileC;632216;632216;1
??$RunContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZV12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@1234@$$QEAVFrontEndFile@Activities@234@@Z;??$RunContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V$$ZV12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHan;629342;629342;1
?SetStringRaw@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAXU?$GenericStringRef@D@2@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;void __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::SetStringRaw(struct rapidjson::GenericStringRef<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;629342;629342;1
??0KeyValue@cxxopts@@QEAA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z;__cdecl cxxopts::KeyValue::KeyValue(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;629342;629342;1
??0?$unordered_map@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 c;628932;628932;1
?parse_default@ParseResult@cxxopts@@AEAAXV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@Z;void __cdecl cxxopts::ParseResult::parse_default(class std::shared_ptr<class cxxopts::OptionDetails>) __ptr64;628111;628111;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@1@AEB_N@Z;628111;628111;1
?_Tidy@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXXZ;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Tidy(void) __ptr64;627700;627700;1
?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Tidy(void) __ptr64;626469;626469;1
??$?RVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVSymbolName@SimpleEvents@345@@Z;??$?RVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V;626058;626058;1
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >) __ptr64;626058;626058;1
??$distance@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA_JV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z;__int64 __cdecl std::distance<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >);624416;624416;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::c;1246779;623389;2
??4locale@std@@QEAAAEBV01@AEBV01@@Z;class std::locale const & __ptr64 __cdecl std::locale::operator=(class std::locale const & __ptr64) __ptr64;621542;621542;1
??0?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@_J@Z;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(__int64) __ptr64;621542;621542;1
?clear@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;620311;620311;1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z;??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z;3100322;620064;5
?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@@Z;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::_Assign_grow(unsigned __int64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >) __ptr64;619079;619079;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;1237747;618873;2
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@;618258;618258;1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::max_size(void)const __ptr64;8019292;616868;13
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;616205;616205;1
??$_Uninitialized_copy@PEAIV?$allocator@I@std@@@std@@YAPEAIQEAI0PEAIAEAV?$allocator@I@0@@Z;unsigned int * __ptr64 __cdecl std::_Uninitialized_copy<unsigned int * __ptr64,class std::allocator<unsigned int> >(unsigned int * __ptr64 const,unsigned int * __ptr64 const,unsigned int * __ptr64,class std::allocator<unsigned int> & __ptr64);615795;615795;1
?_ClassEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA?AW4_Prs_ret@2@_N@Z;enum std::_Prs_ret __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_ClassEscape(bool) __ptr64;613742;613742;1
??$?0VValue@cxxopts@@$0A@@?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@VValue@cxxopts@@@1@@Z;??$?0VValue@cxxopts@@$0A@@?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@VValue@cxxopts@@@1@@Z;612921;612921;1
??A?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAAAEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@_K@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::operator[](unsigned __int64) __ptr64;612100;612100;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class ;611279;611279;1
??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64);610869;610869;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;610869;610869;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const * __ptr64 const,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class Timelin;610458;610458;1
?_Orphan_range@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEBAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Orphan_range(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64)const __ptr64;610047;610047;1
??$_Lookup_coll@PEBDD@std@@YAPEBDPEBD0PEBU?$_Sequence@D@0@@Z;char const * __ptr64 __cdecl std::_Lookup_coll<char const * __ptr64,char>(char const * __ptr64,char const * __ptr64,struct std::_Sequence<char> const * __ptr64);606763;606763;1
??$construct@VKeyValue@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@?$_Default_allocator_traits@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@SAXAEAV?$allocator@VKeyValue@cxxopts@@@1@QEAVKeyValue@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@2@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class cxxopts::KeyValue> >::construct<class cxxopts::KeyValue,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::allocator<class cxxopts::KeyValue> & __ptr64,class cxxopts::KeyValue * __ptr64 const,class std::basic_string<char,struct std::char_traits<char>,class std::a;606763;606763;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_Orphan_non_end(void) __ptr64;606353;606353;1
??$_Guess_median_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@00V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;void __cdecl std::_Guess_median_unchecked<struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963>);605942;605942;1
??$_Freenode@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64,struct std::_List_node<class std::basic_string<;1211474;605737;2
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >(void) __ptr64;605121;605121;1
?_Add_backreference@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXI@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_backreference(unsigned int) __ptr64;604300;604300;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Orphan_non_end(void) __ptr64;603890;603890;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_t;603890;603890;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;603890;603890;1
?WriteInt@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NH@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteInt(int) __ptr64;602658;602658;1
?translate@?$_Regex_traits@D@std@@QEBADD@Z;char __cdecl std::_Regex_traits<char>::translate(char)const __ptr64;602658;602658;1
??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VActivity@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVActivity@Activities@234@@Z;??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Inte;602247;602247;1
??$_Med3_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@00V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Med3_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;601426;601426;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;1202442;601221;2
?max_size@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::max_size(void)const __ptr64;600195;600195;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<c;599374;599374;1
?_Do_capture_group@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_capture_group(void) __ptr64;598553;598553;1
?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ;char & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::front(void) __ptr64;2992764;598552;5
??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@1234@AEBVEventStack@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@1234@AEBVEven;598142;598142;1
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z;struct std::_Iterator_base12 & __ptr64 __cdecl std::_Iterator_base12::operator=(struct std::_Iterator_base12 const & __ptr64) __ptr64;4779390;597423;8
?max_size@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::max_size(void)const __ptr64;597321;597321;1
??$_Verify_range@D@std@@YAXQEBD0@Z;void __cdecl std::_Verify_range<char>(char const * __ptr64 const,char const * __ptr64 const);1193821;596910;2
?_Erase_bucket@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAAXPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@_K@Z;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Erase_bucket(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsign;596500;596500;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64)const __ptr64;596089;596089;1
??$AddMember@_J@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@AEAV01@_JAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@1@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember<__int64>(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,__int64,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __p;595679;595679;1
?_Maklocwcs@std@@YAPEA_WPEB_W@Z;wchar_t * __ptr64 __cdecl std::_Maklocwcs(wchar_t const * __ptr64);1190948;595474;2
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void) __ptr64;4166878;595268;7
?clear@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::clear(void) __ptr64;594858;594858;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > const & __ptr64)const __ptr64;594858;594858;1
?_Clear_and_reserve_geometric@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Clear_and_reserve_geometric(unsigned __int64) __ptr64;594858;594858;1
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBA?AV01@_J@Z;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::operator+(__int64)const __ptr64;594858;594858;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_tr;1189305;594652;2
?clear@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;594037;594037;1
??$_Debug_lt_pred@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@$0A@@std@@YA_NAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1@Z;bool __cdecl std::_Debug_lt_pred<struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,0>(struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64,class std::basic_str;593216;593216;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >(void) __ptr64;592805;592805;1
?AddMember@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@AEAV12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::AddMember(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & ;592805;592805;1
??0?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;591574;591574;1
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z;void __cdecl std::_Iterator_base12::_Adopt(struct std::_Container_base12 const * __ptr64) __ptr64;6502794;591163;11
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<cla;1179453;589726;2
??A?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEAAAEAV?$sub_match@PEBD@1@_K@Z;class std::sub_match<char const * __ptr64> & __ptr64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::operator[](unsigned __int64) __ptr64;589110;589110;1
?_Tidy@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXXZ;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Tidy(void) __ptr64;1176169;588084;2
??$equal@PEBDPEBDU?$_Cmp_icase@V?$_Regex_traits@D@std@@@std@@@std@@YA_NQEBD000U?$_Cmp_icase@V?$_Regex_traits@D@std@@@0@@Z;bool __cdecl std::equal<char const * __ptr64,char const * __ptr64,struct std::_Cmp_icase<class std::_Regex_traits<char> > >(char const * __ptr64 const,char const * __ptr64 const,char const * __ptr64 const,char const * __ptr64 const,struct std::_Cmp_icase<class std::_Regex_traits<char> >);587468;587468;1
??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;unsigned __int64 __cdecl std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::operator()(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;2349052;587263;4
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64,struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<c;587058;587058;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Orphan_non_end(void) __ptr64;586647;586647;1
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve(unsigned __int64) __ptr64;585005;585005;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_;584184;584184;1
?_Orphan_range@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEBAXPEAUDataPerFunction@FunctionCompilationsExporter@@0@Z;void __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Orphan_range(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64)const __ptr64;584184;584184;1
??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@1234@AEBVEventStack@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Gr;583363;583363;1
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ;void __cdecl std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::_Tidy_deallocate(void) __ptr64;583363;583363;1
??$?0V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@QEAA@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@123@@Z;__cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::Ana;582542;582542;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::_Orphan_non_end(void) __ptr64;582542;582542;1
??$?RVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVSymbolName@SimpleEvents@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$?RVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer;582131;582131;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_type;1164263;582131;2
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;581721;581721;1
?_New_node@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAPEAV_Node_base@2@W4_Node_type@2@@Z;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_New_node(enum std::_Node_type) __ptr64;581721;581721;1
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Orphan_range(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64)const __ptr64;581310;581310;1
?clear@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned _;580489;580489;1
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ;__cdecl std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >(void) __ptr64;580489;580489;1
??$_Guess_median_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@00V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;void __cdecl std::_Guess_median_unchecked<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83>);580489;580489;1
??$try_emplace@AEAPEBVTimelineEntry@@AEAK@?$unordered_map@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@U?$hash@_K@std@@U?$equal_to@_K@4@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@_N@1@AEB_KAEAPEBVTimelineEntry@@AEAK@Z;struct std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >,bool> __cdecl std::unordered_map<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessId;580489;580489;1
?get_default_value@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::get_default_value(void)const __ptr64;580079;580079;1
?_Change_array@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXQEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@_K1@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Change_array(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;1159336;579668;2
?_Add_class@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_class(void) __ptr64;577616;577616;1
??$_Verify_range@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@YAXQEBU_Grp_t@?$_Tgt_state_t@PEBD@0@0@Z;void __cdecl std::_Verify_range<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t const * __ptr64 const,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t const * __ptr64 const);576384;576384;1
??A?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAAEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@_K@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::operator[](unsigned __int64) __ptr64;575973;575973;1
?_Orphan_ptr2@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@QEAAXPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@@Z;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Orphan_ptr2(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64) __ptr64;575152;575152;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >::_Orphan_non_end(void) __ptr64;1150305;575152;2
?WriteExponent@internal@rapidjson@@YAPEADHPEAD@Z;char * __ptr64 __cdecl rapidjson::internal::WriteExponent(int,char * __ptr64);575152;575152;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@2@@?$_Defa;574331;574331;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,cla;574331;574331;1
??A?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEBAAEBV?$sub_match@PEBD@1@_K@Z;class std::sub_match<char const * __ptr64> const & __ptr64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::operator[](unsigned __int64)const __ptr64;573100;573100;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Orphan_non_end(void) __ptr64;572689;572689;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class st;571047;571047;1
??0?$unordered_map@_KU?$pair@KK@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,struct std::pair<unsigned long,unsigned long>,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::unordered_map<unsigned __int64,struct std::pair<unsigned long,unsigned long>,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<u;571047;571047;1
?parse@OptionValue@cxxopts@@QEAAXV?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z;void __cdecl cxxopts::OptionValue::parse(class std::shared_ptr<class cxxopts::OptionDetails const >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;570637;570637;1
??$_Guess_median_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@00V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;void __cdecl std::_Guess_median_unchecked<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80> >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __pt;570637;570637;1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(unsigned __int64,char) __ptr64;569816;569816;1
?_Change_array@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXQEAVKeyValue@cxxopts@@_K1@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Change_array(class cxxopts::KeyValue * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;569816;569816;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > con;569405;569405;1
??$equal@PEBDPEBDU?$_Cmp_icase@V?$_Regex_traits@D@std@@@std@@@std@@YA_NQEBD00U?$_Cmp_icase@V?$_Regex_traits@D@std@@@0@@Z;bool __cdecl std::equal<char const * __ptr64,char const * __ptr64,struct std::_Cmp_icase<class std::_Regex_traits<char> > >(char const * __ptr64 const,char const * __ptr64 const,char const * __ptr64 const,struct std::_Cmp_icase<class std::_Regex_traits<char> >);569405;569405;1
?UpdateEntryName@BuildTimeline@@QEAAXAEB_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void __cdecl BuildTimeline::UpdateEntryName(unsigned __int64 const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;568994;568994;1
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z;static unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Calculate_growth(unsigned __int64,unsigned __int64,unsigned __int64);6251139;568285;11
??0?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const ;568173;568173;1
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z;char * __ptr64 __cdecl std::_Maklocstr<char>(char const * __ptr64,char * __ptr64,struct _Cvtvec const & __ptr64);1135525;567762;2
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct Process;567352;567352;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;1133884;566942;2
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::_Orphan_non_end(void) __ptr64;566942;566942;1
?ensure_value@OptionValue@cxxopts@@AEAAXV?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@@Z;void __cdecl cxxopts::OptionValue::ensure_value(class std::shared_ptr<class cxxopts::OptionDetails const >) __ptr64;566942;566942;1
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::clear(void) __ptr64;566942;566942;1
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ;virtual __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::~basic_ofstream<char,struct std::char_traits<char> >(void) __ptr64;2832246;566449;5
??$_Find_unchecked@PEAKK@std@@YAPEAKQEAK0AEBK@Z;unsigned long * __ptr64 __cdecl std::_Find_unchecked<unsigned long * __ptr64,unsigned long>(unsigned long * __ptr64 const,unsigned long * __ptr64 const,unsigned long const & __ptr64);566121;566121;1
?_Clear_and_reserve_geometric@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Clear_and_reserve_geometric(unsigned __int64) __ptr64;565710;565710;1
?what@exception@std@@UEBAPEBDXZ;virtual char const * __ptr64 __cdecl std::exception::what(void)const __ptr64;8480316;565354;15
?_Add_char@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXD@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_char(char) __ptr64;565300;565300;1
?_Orphan_range@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEBAXPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@0@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Orphan_range(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct st;565300;565300;1
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Tidy(void) __ptr64;564889;564889;1
??$_Assign_range@PEAI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0Uforward_iterator_tag@1@@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Assign_range<unsigned int * __ptr64>(unsigned int * __ptr64,unsigned int * __ptr64,struct std::forward_iterator_tag) __ptr64;564479;564479;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > >(void) __ptr64;563247;563247;1
?GetFilePath@FileCompilationsAnalyzer@@AEBAPEB_WAEBVCompilerPass@Activities@BuildInsights@Cpp@Microsoft@@@Z;wchar_t const * __ptr64 __cdecl FileCompilationsAnalyzer::GetFilePath(class Microsoft::Cpp::BuildInsights::Activities::CompilerPass const & __ptr64)const __ptr64;563247;563247;1
?_Swap_val@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAAXAEAV12@@Z;void __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Swap_val(class std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue;562426;562426;1
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::operator==(class std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > > const & __ptr64)con;562426;562426;1
?_Change_array@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXQEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@_K1@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Change_array(struct std::pair<class std::basic_string<char,struct st;561605;561605;1
??$?0AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> ;561194;561194;1
??$?0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> ;1121568;560784;2
?_Desired_grow_bucket_count@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class s;560784;560784;1
?_Change_array@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEAAXQEAUDataPerFile@FileInclusionTimesExporter@@_K1@Z;void __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Change_array(struct FileInclusionTimesExporter::DataPerFile * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;560784;560784;1
?_Change_array@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@_K1@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Change_array(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilation;559142;559142;1
?max_size@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::max_size(void)const __ptr64;558731;558731;1
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const & __ptr64)const __ptr64;558731;558731;1
??A?$vector@IV?$allocator@I@std@@@std@@QEAAAEAI_K@Z;unsigned int & __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::operator[](unsigned __int64) __ptr64;558321;558321;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct s;558321;558321;1
?clear@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::clear(void) __ptr64;557910;557910;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,str;557089;557089;1
??$?0V?$vector@_KV?$allocator@_K@std@@@std@@$$V$0A@@?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;??$?0V?$vector@_KV?$allocator@_K@std@@@std@@$$V$0A@@?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;557089;557089;1
??$try_emplace@U?$pair@KH@std@@@?$unordered_map@_KU?$pair@KK@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAU?$pair@KH@1@@Z;??$try_emplace@U?$pair@KH@std@@@?$unordered_map@_KU?$pair@KK@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@_N@1@AEB_K$$QEAU?$pair@KH@1@@Z;556679;556679;1
??$?0AEBV?$standard_value@_N@values@cxxopts@@@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@AEBV?$standard_value@_N@values@cxxopts@@@Z;__cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<bool> >::_Ref_count_obj2<class cxxopts::values::standard_value<bool> ><class cxxopts::values::standard_value<bool> const & __ptr64>(class cxxopts::values::standard_value<bool> const & __ptr64) __ptr64;556268;556268;1
??$_Debug_lt_pred@AEAV<lambda_9480883bff83c29d8fc89bed48609766>@@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@AEAPEBU23@$0A@@std@@YA_NAEAV<lambda_9480883bff83c29d8fc89bed48609766>@@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@1@Z;bool __cdecl std::_Debug_lt_pred<class <lambda_9480883bff83c29d8fc89bed48609766> & __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 & __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 & __ptr64,0>(class <lambda_9480883bff83c29d8fc89bed48609766> & __ptr64,struct std::pair<class std;555857;555857;1
??$?0U_Exact_args_t@std@@V?$vector@_KV?$allocator@_K@std@@@1@$$V$0A@@?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;??$?0U_Exact_args_t@std@@V?$vector@_KV?$allocator@_K@std@@@1@$$V$0A@@?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;555036;555036;1
?_Clear_and_reserve_geometric@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Clear_and_reserve_geometric(unsigned __int64) __ptr64;555036;555036;1
?_CharacterClass@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_CharacterClass(void) __ptr64;554626;554626;1
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z;??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z;554626;554626;1
??1?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAA@XZ;virtual __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::~wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >(void) __ptr64;554626;554626;1
?_Change_array@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXQEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K1@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Change_array(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;554215;554215;1
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@@Z;void __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Rrotate(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64) __ptr64;553805;553805;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@2@@?$_Defaul;553805;553805;1
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ;__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void) __ptr64;7753269;553804;14
?_Orphan_range@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEBAXPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@0@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Orphan_range(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64)const __ptr64;1107200;553600;2
??0?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> ;553394;553394;1
??$_Destroy_range@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YAXPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@QEAPEAV1234@AEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> & __ptr64);553394;553394;1
?_Orphan_range@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEBAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0@Z;void __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Orphan_range(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64)const __ptr64;553394;553394;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > ><;552984;552984;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned _;552984;552984;1
??$?0AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > ><class std::allocator<struct std::pair<unsigned __int64 const;552984;552984;1
?_Orphan_range@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEBAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@0@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Orphan_range(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilation;552573;552573;1
??$OnEndAnalysisPassImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnalysisPass;552163;552163;1
??$emplace_back@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;??$emplace_back@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;551342;551342;1
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z;class std::locale::facet const * __ptr64 __cdecl std::locale::_Getfacet(unsigned __int64)const __ptr64;3307640;551273;6
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::Op;550521;550521;1
?WriteInt64@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_N_J@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteInt64(__int64) __ptr64;550521;550521;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;549289;549289;1
??$construct@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;??$construct@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$;548878;548878;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;548468;548468;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >::_List_const_iterator<class std::_List_;548057;548057;1
?_Orphan_range@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEBAXPEAUDataPerFile@FileInclusionTimesExporter@@0@Z;void __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Orphan_range(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64)const __ptr64;548057;548057;1
??$try_emplace@AEAVTimelineEntry@@@?$unordered_map@_KVTimelineEntry@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@@std@@QEAA?AU?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@_N@1@AEB_KAEAVTimelineEntry@@@Z;struct std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >,bool> __cdecl std::unordered_map<unsigned __int64,class TimelineEntry,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::try_emplace<class TimelineEntry & __ptr64>(unsigned __int64 const & __ptr64,class TimelineEntry & __ptr64) __ptr64;547236;547236;1
??0OptionException@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::OptionException::OptionException(class cxxopts::OptionException const & __ptr64) __ptr64;547236;547236;1
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z;struct std::_Container_proxy * __ptr64 __cdecl std::addressof<struct std::_Container_proxy>(struct std::_Container_proxy & __ptr64);8206901;547126;15
?_Orphan_range@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEBAXPEAPEAVTimelineEntry@@0@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Orphan_range(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64)const __ptr64;1093241;546620;2
??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PE;1093241;546620;2
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::_Orphan_non_end(void) __ptr64;546415;546415;1
??A?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAAAEAU_Grp_t@?$_Tgt_state_t@PEBD@1@_K@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::operator[](unsigned __int64) __ptr64;545594;545594;1
??$Expand@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@AEAAX_K@Z;void __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Expand<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level>(unsigned __int64) __ptr64;545594;545594;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >;544363;544363;1
??$RunFindId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@C;543542;543542;1
??$Run@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@1234@AEBVEventStack@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NU?;543131;543131;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;542721;542721;1
??$MatchEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@@Z;??$MatchEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAE;542721;542721;1
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,st;542721;542721;1
??$_Debug_lt_pred@AEAV<lambda_a2eef00bb02357da46910e5eb8f40a83>@@AEAUDataPerFunction@FunctionCompilationsExporter@@AEAU23@$0A@@std@@YA_NAEAV<lambda_a2eef00bb02357da46910e5eb8f40a83>@@AEAUDataPerFunction@FunctionCompilationsExporter@@1@Z;bool __cdecl std::_Debug_lt_pred<class <lambda_a2eef00bb02357da46910e5eb8f40a83> & __ptr64,struct FunctionCompilationsExporter::DataPerFunction & __ptr64,struct FunctionCompilationsExporter::DataPerFunction & __ptr64,0>(class <lambda_a2eef00bb02357da46910e5eb8f40a83> & __ptr64,struct FunctionCompilationsExporter::DataPerFunction & __ptr64,struct FunctionCompilationsExporter::DataPerFunction & __ptr64);542721;542721;1
?_Tidy@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Tidy(void) __ptr64;542721;542721;1
?clear@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::clear(void) __ptr64;541489;541489;1
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z;void __cdecl std::_Container_base12::_Swap_proxy_and_iterators(struct std::_Container_base12 & __ptr64) __ptr64;3786728;540961;7
?_Orphan_range@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBAXPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Orphan_range(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64)const __ptr64;540668;540668;1
??$_Debug_lt_pred@AEAV<lambda_add3c17bb2999790cf84673b171b0d80>@@AEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@AEAPEBU23@$0A@@std@@YA_NAEAV<lambda_add3c17bb2999790cf84673b171b0d80>@@AEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@1@Z;bool __cdecl std::_Debug_lt_pred<class <lambda_add3c17bb2999790cf84673b171b0d80> & __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 & __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 & __ptr64,0>(class <lambda_add3c17bb2999790cf84673b171b0d80> & __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 & __ptr64,struct ProcessIdThreadIdRecalculat;540668;540668;1
?_Change_array@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAXQEAPEAVTimelineEntry@@_K1@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Change_array(class TimelineEntry * __ptr64 * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;1080104;540052;2
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator==(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64)const __ptr64;539436;539436;1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::ch;539436;539436;1
?_Tidy@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Tidy(void) __ptr64;539436;539436;1
?_Orphan_range@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEBAXPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@0@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Orphan_range(struct std::pair<class std::basic_string<char,struct st;538615;538615;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAUFileCompilationData@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$QEAUFileCompilationData@@@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$QEAUFileCompilationData@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char;538615;538615;1
?_Change_array@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEAAXQEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@_K1@Z;void __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Change_array(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;538205;538205;1
?parse_default@OptionValue@cxxopts@@QEAAXV?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@@Z;void __cdecl cxxopts::OptionValue::parse_default(class std::shared_ptr<class cxxopts::OptionDetails const >) __ptr64;537384;537384;1
?_Desired_grow_bucket_count@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Desired_grow_bucket_count(unsigned __int64)const __ptr64;536973;536973;1
?WriteUint@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NI@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteUint(unsigned int) __ptr64;536152;536152;1
??$_Emplace_back_with_unused_capacity@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@AEAV342@I@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEAA@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@1$$QEAI@Z;??$_Emplace_back_with_unused_capacity@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@AEAV342@I@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEAA@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@1$$QEAI@Z;535741;535741;1
??$?0PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;535741;535741;1
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Find<unsigned __int64>(unsig;535331;535331;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct ;534920;534920;1
??$MatchEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@V12345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@$$QEAVFrontEndFile@Activities@012@@Z;??$MatchEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEv;534920;534920;1
??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z;??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@;534099;534099;1
??1?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;1067378;533689;2
?OnStopActivity@FileCompilationsAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl FileCompilationsAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;532047;532047;1
?WriteBool@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_N_N@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteBool(bool) __ptr64;531636;531636;1
??$emplace_back@AEBK@?$vector@KV?$allocator@K@std@@@std@@QEAA@AEBK@Z;__cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::emplace_back<unsigned long const & __ptr64>(unsigned long const & __ptr64) __ptr64;531226;531226;1
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::~_Tree<class std::_Tmap_traits<class std::basic_string<char,stru;530405;530405;1
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@AEBAXPEAK0@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Orphan_range(unsigned long * __ptr64,unsigned long * __ptr64)const __ptr64;529994;529994;1
??$value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@cxxopts@@YA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);529994;529994;1
??0?$collate@D@std@@QEAA@AEBV_Locinfo@1@_K@Z;__cdecl std::collate<char>::collate<char>(class std::_Locinfo const & __ptr64,unsigned __int64) __ptr64;529584;529584;1
?_Orphan_range@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEBAXPEAV?$sub_match@PEBD@2@0@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Orphan_range(class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64)const __ptr64;529173;529173;1
?_Add_str_node@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_str_node(void) __ptr64;528762;528762;1
??$emplace_back@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;??$emplace_back@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;528352;528352;1
??$?0U_Exact_args_t@std@@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V$0A@@?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;??$?0U_Exact_args_t@std@@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V$0A@@?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrap;527941;527941;1
??$?0V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@@locale@std@@QEAA@AEBV01@PEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@1@@Z;__cdecl std::locale::locale<class std::codecvt_utf8<wchar_t,1114111,0> >(class std::locale const & __ptr64,class std::codecvt_utf8<wchar_t,1114111,0> const * __ptr64) __ptr64;527531;527531;1
?_Orphan_range@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBAXPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Orphan_range(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>;527531;527531;1
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Memcpy_val_from(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;2635602;527120;5
?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Tidy(void) __ptr64;526710;526710;1
??$_Cmp_chrange@PEBDPEBDU?$_Cmp_icase@V?$regex_traits@D@std@@@std@@@std@@YAPEBDPEBD000U?$_Cmp_icase@V?$regex_traits@D@std@@@0@@Z;char const * __ptr64 __cdecl std::_Cmp_chrange<char const * __ptr64,char const * __ptr64,struct std::_Cmp_icase<class std::regex_traits<char> > >(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64,struct std::_Cmp_icase<class std::regex_traits<char> >);525889;525889;1
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Orphan_non_end(void) __ptr64;525889;525889;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<str;525889;525889;1
?_Orphan_range@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEBAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Orphan_range(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_it;525068;525068;1
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char) __ptr64;3673421;524774;7
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Orphan_non_end(void) __ptr64;524657;524657;1
?_Change_array@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAXQEAV?$sub_match@PEBD@2@_K1@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Change_array(class std::sub_match<char const * __ptr64> * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;524657;524657;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const & __ptr64);524247;524247;1
??$?0AEBV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@AEBV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@Z;__cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > ><class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(class cxxopts::values::standard_value<class std::basic_stri;524247;524247;1
??$max@_K@std@@YAAEB_KAEB_K0@Z;unsigned __int64 const & __ptr64 __cdecl std::max<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64);524247;524247;1
?_Orphan_range@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEBAXPEAVKeyValue@cxxopts@@0@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Orphan_range(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64)const __ptr64;524247;524247;1
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@XZ;__cdecl std::basic_filebuf<char,struct std::char_traits<char> >::basic_filebuf<char,struct std::char_traits<char> >(void) __ptr64;2617949;523589;5
??$_Uninitialized_move@PEAPEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@YAPEAPEAVTimelineEntry@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVTimelineEntry@@@0@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Uninitialized_move<class TimelineEntry * __ptr64 * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >(class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 * __ptr64,class std::allocator<class TimelineEntry * __ptr64> & __ptr64);1046441;523220;2
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z;__cdecl std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,int,int) __ptr64;2615486;523097;5
?_Tidy@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Tidy(void) __ptr64;523015;523015;1
??$_Debug_lt_pred@AEAV<lambda_b68333ea59420deb7dec0041da4f8963>@@AEAUDataPerFile@FileInclusionTimesExporter@@AEAU23@$0A@@std@@YA_NAEAV<lambda_b68333ea59420deb7dec0041da4f8963>@@AEAUDataPerFile@FileInclusionTimesExporter@@1@Z;bool __cdecl std::_Debug_lt_pred<class <lambda_b68333ea59420deb7dec0041da4f8963> & __ptr64,struct FileInclusionTimesExporter::DataPerFile & __ptr64,struct FileInclusionTimesExporter::DataPerFile & __ptr64,0>(class <lambda_b68333ea59420deb7dec0041da4f8963> & __ptr64,struct FileInclusionTimesExporter::DataPerFile & __ptr64,struct FileInclusionTimesExporter::DataPerFile & __ptr64);523015;523015;1
??$RunFindId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@;522605;522605;1
??1_Regex_base@std@@QEAA@XZ;__cdecl std::_Regex_base::~_Regex_base(void) __ptr64;522194;522194;1
?_Change_array@?$vector@IV?$allocator@I@std@@@std@@AEAAXQEAI_K1@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Change_array(unsigned int * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;521783;521783;1
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > __cdecl std::chrono::operator-<__int64,struct std::ratio<1,1000000000>,__int64,struct std::ratio<1,1000000000> >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);1042746;521373;2
??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;__cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Emplace_back_with_unused_capacity<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;521373;521373;1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompil;521373;521373;1
??0?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@$$QEAV01@@Z;521373;521373;1
?is_container@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::is_container(void)const __ptr64;521373;521373;1
??$_Verify_range@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXQEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const * __ptr64 const,class std::_List_uncheck;1041103;520551;2
?_Tidy@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Tidy(void) __ptr64;1039462;519731;2
?_Tidy@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Tidy(void) __ptr64;519320;519320;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<c;519320;519320;1
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;1036998;518499;2
?_Change_array@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXQEAU_Grp_t@?$_Tgt_state_t@PEBD@2@_K1@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Change_array(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;518499;518499;1
?_Begin_capture_group@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Node_base@2@I@Z;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Begin_capture_group(unsigned int) __ptr64;518499;518499;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;518089;518089;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Check_rehash_required_1(void)const __ptr64;517678;517678;1
?OnFrontEndFile@BuildTimelineAnalyzer@@AEAAXAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnFrontEndFile(class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile const & __ptr64) __ptr64;517268;517268;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Check_rehash_required_1;517268;517268;1
??$MatchEventStackInMemberFunction@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVFrontEndFile@Activities@456@0@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVFileInclusionsAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@2@Z@Z;??$MatchEventStackInMemberFunction@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVFrontEndFile@Activities@456@0@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVFileInclusionsAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@2@Z@Z;516857;516857;1
??$_Make_heap_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;void __cdecl std::_Make_heap_unchecked<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80> >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80>);516036;516036;1
??$?DV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$0A@@?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEBAAEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@1@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;515626;515626;1
??$_Uninitialized_copy@PEBDV?$allocator@D@std@@@std@@YAPEADQEBD0PEADAEAV?$allocator@D@0@@Z;char * __ptr64 __cdecl std::_Uninitialized_copy<char const * __ptr64,class std::allocator<char> >(char const * __ptr64 const,char const * __ptr64 const,char * __ptr64,class std::allocator<char> & __ptr64);515626;515626;1
??$_Push_heap_by_index@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@_J1$$QEAPEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;??$_Push_heap_by_index@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@_J1$$QEAPEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;515215;515215;1
?_Tidy@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Tidy(void) __ptr64;515215;515215;1
??0?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<;2059629;514907;4
??$HandleMatchedEvent@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVTemplateInstantiation@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$HandleMatchedEvent@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Micro;514804;514804;1
?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Change_array(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;514804;514804;1
??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@1@@Z;??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VO;513573;513573;1
?_Tidy@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Tidy(void) __ptr64;511520;511520;1
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@@Z;void __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Lrotate(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64) __ptr64;511520;511520;1
?__empty_global_delete@@YAXPEAX_K@Z;void __cdecl __empty_global_delete(void * __ptr64,unsigned __int64);6135781;511315;12
?_Change_array@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEAAXQEAUDataPerFunction@FunctionCompilationsExporter@@_K1@Z;void __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Change_array(struct FunctionCompilationsExporter::DataPerFunction * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;511110;511110;1
?_Change_array@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAXQEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K1@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Change_array(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;511110;511110;1
?clear@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,clas;511110;511110;1
??$_Emplace_back_with_unused_capacity@AEBQEAVTimelineEntry@@@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAA@AEBQEAVTimelineEntry@@@Z;__cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Emplace_back_with_unused_capacity<class TimelineEntry * __ptr64 const & __ptr64>(class TimelineEntry * __ptr64 const & __ptr64) __ptr64;1020578;510289;2
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 const,struct std;509878;509878;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > const * __ptr64 const,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<;509468;509468;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>;509468;509468;1
?do_compare@?$collate@D@std@@MEBAHPEBD000@Z;virtual int __cdecl std::collate<char>::do_compare(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64)const __ptr64;508646;508646;1
??$forward@AEBV?$standard_value@_N@values@cxxopts@@@std@@YAAEBV?$standard_value@_N@values@cxxopts@@AEBV123@@Z;class cxxopts::values::standard_value<bool> const & __ptr64 __cdecl std::forward<class cxxopts::values::standard_value<bool> const & __ptr64>(class cxxopts::values::standard_value<bool> const & __ptr64);507415;507415;1
??1?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::~_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWith;507004;507004;1
??$construct@U?$pair@$$CB_KVTimelineEntry@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAVTimelineEntry@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KVTimelineEntry@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAVTimelineEntry@@@1@@Z;??$construct@U?$pair@$$CB_KVTimelineEntry@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@AEAVTimelineEntry@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KVTimelineEntry@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@AEAVTimelineEntry@@@1@@Z;506594;506594;1
?WriteNull@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NXZ;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteNull(void) __ptr64;506594;506594;1
?_Change_array@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAXQEAU_Loop_vals_t@2@_K1@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Change_array(struct std::_Loop_vals_t * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;505773;505773;1
?_Umove@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@PEAV342@00@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Umove(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr;1011546;505773;2
?AddChunk@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@AEAA_N_K@Z;bool __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::AddChunk(unsigned __int64) __ptr64;505773;505773;1
?_Tidy@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Tidy(void) __ptr64;504952;504952;1
?_Do_hash@?$hash@_K@std@@SA_KAEB_K@Z;static unsigned __int64 __cdecl std::hash<unsigned __int64>::_Do_hash(unsigned __int64 const & __ptr64);1514034;504678;3
??$MatchEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@V12345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@$$QEAVActivity@Activities@012@@Z;??$MatchEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_;504541;504541;1
??$construct@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEB_K@1@$$QEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@@Z;??$construct@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEB_K@2@V?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unor;504131;504131;1
??$_Construct_in_place@VOptionDetails@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@AEAV34@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@4@@std@@YAXAEAVOptionDetails@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1AEAV30@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@0@@Z;void __cdecl std::_Construct_in_place<class cxxopts::OptionDetails,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::shared_ptr<class cxxopts::Value const > & __ptr64>(class cxxopts::OptionDetails & __ptr64,class std::basic_string<char,struct ;503310;503310;1
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tree_temp_node<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::~_Tree_temp_node<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(void) __ptr64;503310;503310;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct s;502899;502899;1
??$min@_K@std@@YAAEB_KAEB_K0@Z;unsigned __int64 const & __ptr64 __cdecl std::min<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64);502899;502899;1
??$MatchEvent@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@VSymbolName@SimpleEvents@345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@$$QEAVSymbolName@SimpleEvents@012@@Z;??$MatchEvent@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@;502899;502899;1
??0?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >(void) __ptr64;502489;502489;1
??0?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >(void) __ptr64;502489;502489;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Check_rehash_required_1(void)const __ptr64;502489;502489;1
?Malloc@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAAPEAX_K@Z;void * __ptr64 __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::Malloc(unsigned __int64) __ptr64;502078;502078;1
?max_size@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned ;500846;500846;1
??1?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::~vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >(void) __ptr64;1001283;500641;2
??0?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64) __ptr64;500025;500025;1
??$?0V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@1@@Z;??$?0V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@;999230;499615;2
??$_Cmp_chrange@PEBDPEBDU?$_Cmp_cs@V?$regex_traits@D@std@@@std@@@std@@YAPEBDPEBD000U?$_Cmp_cs@V?$regex_traits@D@std@@@0@@Z;char const * __ptr64 __cdecl std::_Cmp_chrange<char const * __ptr64,char const * __ptr64,struct std::_Cmp_cs<class std::regex_traits<char> > >(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64,struct std::_Cmp_cs<class std::regex_traits<char> >);499615;499615;1
??0HelpOptionDetails@cxxopts@@QEAA@$$QEAU01@@Z;??0HelpOptionDetails@cxxopts@@QEAA@$$QEAU01@@Z;499204;499204;1
??$_Verify_range@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YAXQEBU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t const * __ptr64 const,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t const * __ptr64 const);498794;498794;1
??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@V01234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@0@Z;??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@V01234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities;498794;498794;1
??1ProcessIdThreadIdRecalculation@@QEAA@XZ;__cdecl ProcessIdThreadIdRecalculation::~ProcessIdThreadIdRecalculation(void) __ptr64;497562;497562;1
?_Tidy@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Tidy(void) __ptr64;497152;497152;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Check_rehash_required_1(void)const __ptr64;497152;497152;1
?OnStopActivity@FileInclusionsAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl FileInclusionsAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;497152;497152;1
??$_Make_heap_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@0V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;void __cdecl std::_Make_heap_unchecked<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83>);497152;497152;1
?_Tidy@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Tidy(void) __ptr64;496331;496331;1
?clear@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::clear(void) __ptr64;496331;496331;1
??$HandleMatchedEvent@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVSymbolName@SimpleEvents@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$HandleMatchedEvent@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@V;495920;495920;1
??$?0PEA_N@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@$$QEAPEA_N@Z;??$?0PEA_N@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@$$QEAPEA_N@Z;495920;495920;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z;??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V;495510;495510;1
??$?0U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> ><struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >(class std::allocator;495099;495099;1
?_Tidy@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Tidy(void) __ptr64;494688;494688;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits;494688;494688;1
?_Tidy@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXXZ;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Tidy(void) __ptr64;494688;494688;1
??$?0U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > const & __ptr64) __ptr64;494278;494278;1
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::construct<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::basic_string<char,struct std::char_traits;493867;493867;1
??$construct@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@AEAU123@@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@AEAU341@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::construct<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64>(class std::allocator<struct s;493457;493457;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLoc;493457;493457;1
?max_load_factor@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::max_load_factor(void)const __ptr64;492636;492636;1
?_Buy_raw@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Buy_raw(unsigned __int64) __ptr64;492225;492225;1
?_Change_array@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXQEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@_K1@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Change_array(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;490583;490583;1
?_Tidy@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEAAXXZ;void __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Tidy(void) __ptr64;490583;490583;1
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ;__cdecl std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >(void) __ptr64;490173;490173;1
??$_Cmp_chrange@PEBDPEBDU?$_Cmp_collate@V?$regex_traits@D@std@@@std@@@std@@YAPEBDPEBD000U?$_Cmp_collate@V?$regex_traits@D@std@@@0@@Z;char const * __ptr64 __cdecl std::_Cmp_chrange<char const * __ptr64,char const * __ptr64,struct std::_Cmp_collate<class std::regex_traits<char> > >(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64,struct std::_Cmp_collate<class std::regex_traits<char> >);489762;489762;1
??$addressof@$$CBV?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@@std@@YAPEBV?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@0@AEBV10@@Z;class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const * __ptr64 __cdecl std::addressof<class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const >(class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const &;489762;489762;1
??$_Push_heap_by_index@PEAUDataPerFunction@FunctionCompilationsExporter@@U12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@_J1$$QEAU12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;??$_Push_heap_by_index@PEAUDataPerFunction@FunctionCompilationsExporter@@U12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@_J1$$QEAU12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;488941;488941;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_;488531;488531;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_typ;976651;488325;2
??$_Make_heap_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Make_heap_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;488120;488120;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::;975009;487504;2
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::max_size(void)const __ptr64;487299;487299;1
?_Check_rehash_required_1@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Check_rehash_required_1(void)const __ptr64;486888;486888;1
?_At@?$_Buf@D@std@@QEBADI@Z;char __cdecl std::_Buf<char>::_At(unsigned int)const __ptr64;486888;486888;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > ><class std::allocator<struct st;486067;486067;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;485657;485657;1
?_Incref_nz@_Ref_count_base@std@@QEAA_NXZ;bool __cdecl std::_Ref_count_base::_Incref_nz(void) __ptr64;485657;485657;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __pt;483604;483604;1
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char;483194;483194;1
??0?$_Node_str@D@std@@QEAA@W4_Node_flags@1@@Z;__cdecl std::_Node_str<char>::_Node_str<char>(enum std::_Node_flags) __ptr64;483194;483194;1
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;482783;482783;1
??$_Set_ptr_rep_and_enable_shared@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@AEAAXQEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Set_ptr_rep_and_enable_shared<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 const,class std::_Ref_count_base * __ptr64 const) _;482373;482373;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > const * __ptr64 const,class std::_List_unchecked_iterator<class std::_List_val<s;481962;481962;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@;481552;481552;1
?str@?$sub_match@PEBD@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::sub_match<char const * __ptr64>::str(void)const __ptr64;481141;481141;1
??$?0AEB_K$0A@@?$tuple@AEB_K@std@@QEAA@AEB_K@Z;__cdecl std::tuple<unsigned __int64 const & __ptr64>::tuple<unsigned __int64 const & __ptr64><unsigned __int64 const & __ptr64,0>(unsigned __int64 const & __ptr64) __ptr64;1443013;481004;3
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalcul;480320;480320;1
??1?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std;480320;480320;1
?_Tidy@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAXXZ;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Tidy(void) __ptr64;479909;479909;1
?_Compat@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAXAEBV12@@Z;void __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Compat(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;479499;479499;1
??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;479499;479499;1
??$HandleMatchedEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@0@Z;??$HandleMatchedEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Mi;479088;479088;1
??$HandleAnalysisEvent@AEBVTraceInfo@BuildInsights@Cpp@Microsoft@@VIRelogger@234@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@AEBV1234@@DynamicEventHandlingSupport@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4AnalysisControl@234@AEAV?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@P8IRelogger@234@EAA?AW45234@AEBVTraceInfo@234@@Z1@Z;static enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicEventHandlingSupport::HandleAnalysisEvent<class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64,class Microsoft::Cpp::BuildInsights::IRelogger,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64>(class std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawP;477857;477857;1
?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ;void __cdecl std::vector<char,class std::allocator<char> >::_Tidy(void) __ptr64;477857;477857;1
?_Change_array@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXQEA_K_K1@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Change_array(unsigned __int64 * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;477857;477857;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;955713;477856;2
??$RunFindId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp;476215;476215;1
??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@VTemplateInstantiation@1234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVTemplateInstantiation@6234@@Z;??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@VTemplateInstantiation@1234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyze;476215;476215;1
??1?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ;__cdecl std::_Vb_val<class std::allocator<bool> >::~_Vb_val<class std::allocator<bool> >(void) __ptr64;475804;475804;1
??$_Make_heap_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@0V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;void __cdecl std::_Make_heap_unchecked<struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963>);474983;474983;1
??$MatchEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@@Z;??$MatchEvent@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@;474572;474572;1
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z;??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z;474162;474162;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<cl;947913;473956;2
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Compat(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64)const __ptr64;473751;473751;1
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAXAEBV12@@Z;void __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_Compat(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64)const __ptr64;473751;473751;1
??0?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >(void) __ptr64;947092;473546;2
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_m;472930;472930;1
??$?0AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > ><class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64,0>(class std:;472930;472930;1
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::max_size(void)const __ptr64;472930;472930;1
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct s;945451;472725;2
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@V01234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@0@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@V01234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp;472520;472520;1
??0?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@QEAA@XZ;__cdecl std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >(void) __ptr64;1417150;472383;3
??$_Push_heap_by_index@PEAUDataPerFile@FileInclusionTimesExporter@@U12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@_J1$$QEAU12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;??$_Push_heap_by_index@PEAUDataPerFile@FileInclusionTimesExporter@@U12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@_J1$$QEAU12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;472109;472109;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$;472109;472109;1
??$_Emplace_back_with_unused_capacity@AEBK@?$vector@KV?$allocator@K@std@@@std@@AEAA@AEBK@Z;__cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Emplace_back_with_unused_capacity<unsigned long const & __ptr64>(unsigned long const & __ptr64) __ptr64;472109;472109;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > >(cla;472109;472109;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<un;471699;471699;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;471699;471699;1
?_Change_array@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXQEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@_K1@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Change_array(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;471288;471288;1
??$HandleMatchedEvent@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVTemplateInstantiation@7345@@Z;??$HandleMatchedEvent@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTe;470878;470878;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > >(class std::_List_unchecked_iterator<cla;470878;470878;1
??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@;470467;470467;1
??0?$vector@_NV?$allocator@_N@std@@@std@@QEAA@_KAEBV?$allocator@_N@1@@Z;__cdecl std::vector<bool,class std::allocator<bool> >::vector<bool,class std::allocator<bool> >(unsigned __int64,class std::allocator<bool> const & __ptr64) __ptr64;468825;468825;1
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Tree_temp_node_alloc<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::_Tree_temp_node_alloc<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std:;468415;468415;1
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;936419;468209;2
?_Check_rehash_required_1@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBA_NXZ;bool __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;468004;468004;1
?_Change_array@?$vector@KV?$allocator@K@std@@@std@@AEAAXQEAK_K1@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Change_array(unsigned long * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64;467593;467593;1
?Reserve@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV12@IAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::Reserve(unsigned int,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64) __ptr64;467593;467593;1
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z;bool __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Equal(char const * __ptr64 const)const __ptr64;467593;467593;1
??$emplace_back@AEBQEAVTimelineEntry@@@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA@AEBQEAVTimelineEntry@@@Z;__cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::emplace_back<class TimelineEntry * __ptr64 const & __ptr64>(class TimelineEntry * __ptr64 const & __ptr64) __ptr64;935187;467593;2
??$HandleAnalysisEvent@AEBVEventStack@BuildInsights@Cpp@Microsoft@@VIAnalyzer@234@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@AEBV1234@@DynamicEventHandlingSupport@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4AnalysisControl@234@AEAV?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@P8IAnalyzer@234@EAA?AW45234@AEBVEventStack@234@@Z1@Z;static enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicEventHandlingSupport::HandleAnalysisEvent<class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64>(class std::vector<class Microsoft::Cpp::BuildInsights::Internal::Ra;467593;467593;1
?AddNestedEntry@BuildTimeline@@QEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl BuildTimeline::AddNestedEntry(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64,class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;466772;466772;1
??0OptionAdder@cxxopts@@QEAA@AEAVOptions@1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::OptionAdder::OptionAdder(class cxxopts::Options & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >) __ptr64;466772;466772;1
??0?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ;__cdecl std::_Vb_val<class std::allocator<bool> >::_Vb_val<class std::allocator<bool> >(void) __ptr64;466772;466772;1
??0?$tuple@$$QEAU?$pair@KH@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAU?$pair@KH@std@@@std@@QEAA@$$QEAV01@@Z;466362;466362;1
??$swap@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@$0A@@std@@YAXAEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0@Z;void __cdecl std::swap<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,0>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 & __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 & __pt;465951;465951;1
??$_Set_ptr_rep_and_enable_shared@V?$standard_value@_N@values@cxxopts@@@?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@AEAAXQEAV?$standard_value@_N@values@cxxopts@@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class cxxopts::values::standard_value<bool> >::_Set_ptr_rep_and_enable_shared<class cxxopts::values::standard_value<bool> >(class cxxopts::values::standard_value<bool> * __ptr64 const,class std::_Ref_count_base * __ptr64 const) __ptr64;465541;465541;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,c;465541;465541;1
??$_Uninitialized_move@PEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@YAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@QEAV120@0PEAV120@AEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::_Uninitialized_move<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,class std::chrono::duration<__int64,struct std::ra;929850;464925;2
??$construct@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@$$QEAV?$tuple@$$V@1@@Z;??$construct@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$s;464720;464720;1
??DDiyFp@internal@rapidjson@@QEBA?AU012@AEBU012@@Z;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::DiyFp::operator*(struct rapidjson::internal::DiyFp const & __ptr64)const __ptr64;464309;464309;1
??$?0$$V@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;464309;464309;1
??$?0U_Exact_args_t@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0U_Exact_args_t@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;926976;463488;2
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAAXPEBK@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::_Seek_to(unsigned long const * __ptr64) __ptr64;463488;463488;1
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ;virtual __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::~basic_filebuf<char,struct std::char_traits<char> >(void) __ptr64;2317030;463406;5
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const * __ptr64 const,class std::_List_unchecked_i;463078;463078;1
??$move@AEAUDataPerFile@FileInclusionTimesExporter@@@std@@YA$$QEAUDataPerFile@FileInclusionTimesExporter@@AEAU12@@Z;??$move@AEAUDataPerFile@FileInclusionTimesExporter@@@std@@YA$$QEAUDataPerFile@FileInclusionTimesExporter@@AEAU12@@Z;462667;462667;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >;462667;462667;1
??0?$unordered_map@_KVTimelineEntry@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class TimelineEntry,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::unordered_map<unsigned __int64,class TimelineEntry,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >(void) __ptr64;462667;462667;1
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@@Z;static struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64>::_Buyheadnode<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_t;461846;461846;1
??$MatchEventStackInMemberFunction@VFileInclusionsAnalyzer@@XAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV23456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVFileInclusionsAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@2@Z@Z;??$MatchEventStackInMemberFunction@VFileInclusionsAnalyzer@@XAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV23456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVFileInclusionsAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@2@Z@Z;461846;461846;1
??$value@_N@cxxopts@@YA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEA_N@Z;class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::value<bool>(bool & __ptr64);461846;461846;1
??$?0AEB_K$$Z$$QEAU?$pair@KH@std@@@?$pair@$$CB_KU?$pair@KK@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAU?$pair@KH@std@@@1@@Z;??$?0AEB_K$$Z$$QEAU?$pair@KH@std@@@?$pair@$$CB_KU?$pair@KK@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAU?$pair@KH@std@@@1@@Z;461436;461436;1
??0OptionException@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::OptionException::OptionException(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;461025;461025;1
??$RunFindId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsigh;460614;460614;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_;460614;460614;1
?GetFinishTimestamp@TimelineEntry@@QEBAAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64 __cdecl TimelineEntry::GetFinishTimestamp(void)const __ptr64;920818;460409;2
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > const * __ptr64 const,class std::_List_u;460204;460204;1
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;459793;459793;1
??$emplace_back@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAA@$$QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@Z;??$emplace_back@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAA@$$QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@Z;459383;459383;1
??$MatchEventInMemberFunction@VFileCompilationsAnalyzer@@XAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFileCompilationsAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VFileCompilationsAnalyzer@@XAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFileCompilationsAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@@Z@Z;458972;458972;1
?end@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::end(void)const __ptr64;458972;458972;1
?end@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __in;457741;457741;1
??$_Prev_iter@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::_Prev_iter<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >);457741;457741;1
??0?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >(void) __ptr64;457330;457330;1
??$MatchEvent@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@@Z;??$MatchEvent@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VT;456920;456920;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<s;456920;456920;1
??$HandleAnalysisEvent@$$VVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@$$V@DynamicEventHandlingSupport@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4AnalysisControl@234@AEAV?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@P8IAnalyzer@234@EAA?AW45234@XZ@Z;??$HandleAnalysisEvent@$$VVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@$$V@DynamicEventHandlingSupport@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4AnalysisControl@234@AEAV?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@P8IAnalyzer@234@EAA?AW45234@XZ@Z;456920;456920;1
?MakeDynamicAnalyzerGroup@BuildInsights@Cpp@Microsoft@@YA?AV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@123@V?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@@Z;class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > __cdecl Microsoft::Cpp::BuildInsights::MakeDynamicAnalyzerGroup(class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >);456920;456920;1
?clear@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::clear(void) __ptr64;456920;456920;1
??0?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >(void) __ptr64;456509;456509;1
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z;int __cdecl std::_Traits_compare<struct std::char_traits<char> >(char const * __ptr64 const,unsigned __int64,char const * __ptr64 const,unsigned __int64);456509;456509;1
??$_Verify_range@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YAXQEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::share;456099;456099;1
?OnActivityStartRoot@BuildTimelineAnalyzer@@AEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnActivityStartRoot(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;456099;456099;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_tr;911786;455893;2
??$?0U_Exact_args_t@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@$$V$0A@@?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$?0U_Exact_args_t@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@$$V$0A@@?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;911377;455688;2
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::~vector<unsigned __int64,class std::allocator<unsigned __int64> >(void) __ptr64;455688;455688;1
??$_Verify_range@I@std@@YAXQEBI0@Z;void __cdecl std::_Verify_range<unsigned int>(unsigned int const * __ptr64 const,unsigned int const * __ptr64 const);455278;455278;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::max_size(void)const __ptr64;909324;454662;2
??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z;bool __cdecl std::chrono::operator<<__int64,struct std::ratio<1,1000000000>,__int64,struct std::ratio<1,1000000000> >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);1816595;454148;4
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>;907681;453840;2
??1?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::~vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >(void) __ptr64;906860;453430;2
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_str;453225;453225;1
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@YA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > & __ptr64);906039;453019;2
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >;452814;452814;1
??$emplace_back@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@@Z;??$emplace_back@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEAA@$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@@Z;905628;452814;2
??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VFrontEndFile@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVFrontEndFile@Activities@234@@Z;??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Gro;452814;452814;1
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration;905219;452609;2
??0?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;452404;452404;1
??$Run@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVSymbolName@SimpleEvents@234@@Z;??$Run@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft;452404;452404;1
?_Floor_of_log_2@std@@YAK_K@Z;unsigned long __cdecl std::_Floor_of_log_2(unsigned __int64);3166828;452404;7
?end@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::end(void);451993;451993;1
??$HandleMatchedEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$HandleMatchedEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@Bui;451993;451993;1
??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;__cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::emplace_back<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > con;451583;451583;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator;451583;451583;1
??1?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::~vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_it;451172;451172;1
??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@AEAV?$tuple@$$QEAV?$basic;450762;450762;1
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z;??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z;450351;450351;1
?_Init@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@AEAAXPEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@2@@Z;void __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::_Init(class std::codecvt_utf8<wchar_t,1114111,0> const * __ptr64) __ptr64;449530;449530;1
??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?;449120;449120;1
??1?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::~vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >(void) __ptr64;448709;448709;1
?_Take_contents@?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> >::_Take_contents(class std::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> > & __ptr64) __ptr64;447888;447888;1
??0?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >(void) __ptr64;447477;447477;1
?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Become_small(void) __ptr64;447067;447067;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > co;447067;447067;1
??0?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >(void) __ptr64;446656;446656;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > ;446246;446246;1
??1?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::~vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >(void) __ptr64;446246;446246;1
??1?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::~list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >(void) __ptr64;446246;446246;1
??0?$abstract_value@_N@values@cxxopts@@QEAA@PEA_N@Z;__cdecl cxxopts::values::abstract_value<bool>::abstract_value<bool>(bool * __ptr64) __ptr64;445835;445835;1
??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVFrontEndFile@Activities@345@@Z;??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft;445425;445425;1
??R<lambda_9480883bff83c29d8fc89bed48609766>@@QEBA_NPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@0@Z;bool __cdecl <lambda_9480883bff83c29d8fc89bed48609766>::operator()(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64)const __ptr64;445425;445425;1
??$_Emplace_back_with_unused_capacity@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEAA@$$QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@Z;??$_Emplace_back_with_unused_capacity@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEAA@$$QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@Z;445014;445014;1
??0?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_ite;445014;445014;1
?_Make_iter@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > __cdecl std::list<struct std::pair<unsigned __;444604;444604;1
??$find@X@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::p;444193;444193;1
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;444193;444193;1
??$_Copy_construct_from@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@IEAAXAEBV?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@1@@Z;void __cdecl std::_Ptr_base<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,cl;444193;444193;1
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::Hel;443783;443783;1
??$HandleMatchedEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@0@Z;??$HandleMatchedEvent@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@Bui;443372;443372;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > >::~_List_node_emplace_op2<class ;442962;442962;1
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ;class std::basic_filebuf<char,struct std::char_traits<char> > * __ptr64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::close(void) __ptr64;2213987;442797;5
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const;885512;442756;2
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::max_size(void)const __ptr64;442551;442551;1
??$_Emplace_back_with_unused_capacity@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAA@$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;??$_Emplace_back_with_unused_capacity@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAA@$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;442141;442141;1
??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVTemplateInstantiation@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$?RVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineA;442141;442141;1
?begin@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > > __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char;441730;441730;1
?_Unchecked_erase@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@QEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Unchecked_erase(struct std::_List_node<struct std::pair<uns;441320;441320;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class;441320;441320;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >(void) __ptr64;441320;441320;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;440909;440909;1
??$?0$$V@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@XZ;??$?0$$V@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@XZ;440498;440498;1
?_Take_contents@?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<unsigned __int64> >::_Take_contents(class std::_Vector_val<struct std::_Simple_types<unsigned __int64> > & __ptr64) __ptr64;440498;440498;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;440498;440498;1
?_Make_iter@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Make_iter(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned;440088;440088;1
??$_Emplace_back_with_unused_capacity@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;??$_Emplace_back_with_unused_capacity@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;439677;439677;1
?_Tidy@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,clas;439677;439677;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duratio;878534;439267;2
?_Calculate_growth@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Calculate_growth(unsigned __int64)const __ptr64;439267;439267;1
??0?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@_K@Z;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(unsigned __int64) __ptr64;439267;439267;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<cha;878123;439061;2
??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;__cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Emplace_back_with_unused_capacity<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std:;438856;438856;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@PEAKPEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >(unsigned long * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;438856;438856;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;438446;438446;1
?_Destroy_node@std@@YAXPEAV_Node_base@1@0@Z;void __cdecl std::_Destroy_node(class std::_Node_base * __ptr64,class std::_Node_base * __ptr64);438035;438035;1
??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@Bu;438035;438035;1
??$?0U_Exact_args_t@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@$$V$0A@@?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;??$?0U_Exact_args_t@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@$$V$0A@@?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?;438035;438035;1
??1?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::~vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >(void) __ptr64;437625;437625;1
?Timestamp@CppBuildInsightsDataConversion@Utilities@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_J0@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > __cdecl Utilities::CppBuildInsightsDataConversion::Timestamp(__int64,__int64);437625;437625;1
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;436804;436804;1
??1?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~vector<struct std::pair<class std::basic_string<char,struct std::char_tra;436804;436804;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::_Release(void) __ptr64;436393;436393;1
??$Run@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VTemplateInstantiation@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVTemplateInstantiation@Activities@234@@Z;??$Run@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@;435983;435983;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > cons;435572;435572;1
?_Calculate_growth@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Calculate_growth(unsigned __int64)const __ptr64;435572;435572;1
??$MatchEvent@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@345@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@8345@@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAU?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@012@AEA_NAEBVEventStack@012@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@6012@@Z;??$MatchEvent@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$VU?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolNa;435572;435572;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int6;435572;435572;1
??$forward_as_tuple@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA?AV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z;??$forward_as_tuple@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA?AV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U;435162;435162;1
??0?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA@AEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@1@PEAVCrtAllocator@1@_K@Z;__cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>(class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<c;434751;434751;1
?OnStopActivity@BuildTimelineAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl BuildTimelineAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;434341;434341;1
?stringAppend@cxxopts@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV23@V23@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl cxxopts::stringAppend(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >);434341;434341;1
?_Swap_val@?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_Swap_val(class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::al;433930;433930;1
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > >(class std::allocator<struct std::_List_node<struct s;433519;433519;1
??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_N@Z;class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator=(bool) __ptr64;433519;433519;1
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z;??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z;6501972;433464;15
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Mi;433109;433109;1
??1?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::~vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(void) __ptr64;433109;433109;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class Time;432698;432698;1
??0?$standard_value@_N@values@cxxopts@@QEAA@PEA_N@Z;__cdecl cxxopts::values::standard_value<bool>::standard_value<bool>(bool * __ptr64) __ptr64;432698;432698;1
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ;__cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Sentry_base::~_Sentry_base(void) __ptr64;2162261;432452;5
??$?0U_Exact_args_t@std@@AEAVTimelineEntry@@$$V$0A@@?$tuple@AEAVTimelineEntry@@@std@@QEAA@U_Exact_args_t@1@AEAVTimelineEntry@@@Z;??$?0U_Exact_args_t@std@@AEAVTimelineEntry@@$$V$0A@@?$tuple@AEAVTimelineEntry@@@std@@QEAA@U_Exact_args_t@1@AEAVTimelineEntry@@@Z;432288;432288;1
??$?0$$V@?$_Compressed_pair@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;431877;431877;1
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::reserve(unsigned __int64) __ptr64;431877;431877;1
??$?R$$V@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$?R$$V@?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$Mater;431467;431467;1
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::;431467;431467;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class ;431467;431467;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_trai;862523;431261;2
??$Run@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@B;431056;431056;1
??$?0V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@$$V$0A@@?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$?0V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@$$V$0A@@?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;861291;430645;2
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z;void __cdecl std::_Deallocate<16,0>(void * __ptr64,unsigned __int64);6457632;430508;15
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>;430235;430235;1
??$_Uninitialized_move@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@YAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@QEAPEBU12@0PEAPEBU12@AEAV?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@0@@Z;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::_Uninitialized_move<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 const,struct ProcessIdThreadIdR;430235;430235;1
??$_Pop_heap_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Pop_heap_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::all;430235;430235;1
??1_Node_if@std@@UEAA@XZ;virtual __cdecl std::_Node_if::~_Node_if(void) __ptr64;429825;429825;1
?clear@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::clear(void) __ptr64;429825;429825;1
?_Getal@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEBAAEBV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@2@XZ;class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > const & __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Getal(void)const __ptr64;858828;429414;2
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class ;429414;429414;1
?_Unchecked_erase@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@AEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@PEAU32@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigne;429414;429414;1
?end@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > > __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char;429004;429004;1
??0?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::vector<struct std::pair<class std::basic_string<char,struct std::char_trai;429004;429004;1
??$RunFindId@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@;429004;429004;1
??$?0UFileCompilationData@@$$V$0A@@?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAUFileCompilationData@@@Z;??$?0UFileCompilationData@@$$V$0A@@?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAUFileCompilationData@@@Z;428183;428183;1
??$swap@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@$0A@@std@@YAXAEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0@Z;void __cdecl std::swap<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,0>(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 & __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 & __ptr64);428183;428183;1
??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@VSymbolName@SimpleEvents@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVSymbolName@SimpleEvents@234@@Z;??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@234@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@234@VSymbolName@SimpleEvents@234@@?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnaly;428183;428183;1
??0?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;427772;427772;1
??$?0$$V@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;427772;427772;1
??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@$0A@$$Z$0A@@?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@$0A@$$Z$0A@@?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;427362;427362;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tr;426951;426951;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@PEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_;426951;426951;1
??1?$shared_ptr@_N@std@@QEAA@XZ;__cdecl std::shared_ptr<bool>::~shared_ptr<bool>(void) __ptr64;426951;426951;1
?implicit_value@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::implicit_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;426540;426540;1
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Take_contents(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,struct std::integral_constant<bool,1>) __ptr64;2129419;425883;5
??$find@X@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __in;425309;425309;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(unsigned int * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;425309;425309;1
??1?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::~list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >(void) __ptr64;425309;425309;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared;424898;424898;1
??$_Emplace_back@AEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAXAEBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>::_Emplace_back<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr;849386;424693;2
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;424488;424488;1
??1?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::~vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>;424077;424077;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::max_size(void)const __ptr64;424077;424077;1
?Calculate@ProcessIdThreadIdRecalculation@@QEAAXXZ;void __cdecl ProcessIdThreadIdRecalculation::Calculate(void) __ptr64;424077;424077;1
??$_Emplace_back_with_unused_capacity@AEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAA@AEB_K@Z;__cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Emplace_back_with_unused_capacity<unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64) __ptr64;424077;424077;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cl;846923;423461;2
?end@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::end(void) __ptr64;423256;423256;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;422435;422435;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;422025;422025;1
??0?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@U?$GenericStringRef@D@1@@Z;__cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(struct rapidjson::GenericStringRef<char>) __ptr64;421204;421204;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;421204;421204;1
?value@?$regex_traits@D@std@@QEBAHDH@Z;int __cdecl std::regex_traits<char>::value(char,int)const __ptr64;421204;421204;1
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigne;421204;421204;1
?_Min_load_factor_buckets@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class s;420793;420793;1
??$_Med3_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@00V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;void __cdecl std::_Med3_unchecked<struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963>);420382;420382;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$p;419561;419561;1
??$_Uninitialized_move@PEAKV?$allocator@K@std@@@std@@YAPEAKQEAK0PEAKAEAV?$allocator@K@0@@Z;unsigned long * __ptr64 __cdecl std::_Uninitialized_move<unsigned long * __ptr64,class std::allocator<unsigned long> >(unsigned long * __ptr64 const,unsigned long * __ptr64 const,unsigned long * __ptr64,class std::allocator<unsigned long> & __ptr64);418330;418330;1
??$_Construct_in_place@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<class std::;418330;418330;1
??$?N_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z;bool __cdecl std::chrono::operator<=<__int64,struct std::ratio<1,1000000000>,__int64,struct std::ratio<1,1000000000> >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64);418330;418330;1
??$HandleMatchedEvent@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@345@AEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVSymbolName@SimpleEvents@345@@Z;??$HandleMatchedEvent@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@V;417919;417919;1
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::~_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >(void) __ptr64;417509;417509;1
?end@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::end(void) __ptr64;833786;416893;2
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z;virtual class std::basic_streambuf<char,struct std::char_traits<char> > * __ptr64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::setbuf(char * __ptr64,__int64) __ptr64;2084260;416852;5
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@;416688;416688;1
??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@;416277;416277;1
??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activ;415867;415867;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_t;415867;415867;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64);415867;415867;1
??1?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::~vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct st;415867;415867;1
??$emplace_back@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@$$QEAUHelpOptionDetails@cxxopts@@@Z;??$emplace_back@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@$$QEAUHelpOptionDetails@cxxopts@@@Z;415456;415456;1
??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAPEBVTimelineEntry@@AEAK@1@$0A@$$Z$0A@$00@?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$0A@$00@1@@Z;__cdecl std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>::$00::$0A::$0A(class $00::tuple<unsigned __int64 const & __ptr64> & __ptr64,class $00::tuple<class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64> & __ptr64,struct $00::integer_sequence<unsigned __int64,0>,struct $00::integer_sequence<unsigned __int64,0,1>) __ptr64;415456;415456;1
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,str;830502;415251;2
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > > >::_Tidy(void) __ptr64;415046;415046;1
??1?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::~vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >(void) __ptr64;415046;415046;1
??4?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAAAEAV01@AEBV01@@Z;class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> > & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class st;415046;415046;1
?clear@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::clear(void) __ptr64;415046;415046;1
??$?R$$V@?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$?R$$V@?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsight;414635;414635;1
??$construct@UDataPerFile@FileInclusionTimesExporter@@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@4@AEAV564@I@?$_Default_allocator_traits@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@SAXAEAV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@1@QEAUDataPerFile@FileInclusionTimesExporter@@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@3$$QEAI@Z;??$construct@UDataPerFile@FileInclusionTimesExporter@@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@4@AEAV564@I@?$_Default_allocator_traits@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@SAXAEAV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@1@QEAUDataPerFile@FileInclusionTimesExporter@@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@3;414635;414635;1
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ;virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::sync(void) __ptr64;2073175;414635;5
??0?$vector@KV?$allocator@K@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::vector<unsigned long,class std::allocator<unsigned long> >(void) __ptr64;414225;414225;1
??0?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::unordered_set<class std::basic_string<char,struct std::char_tra;828039;414019;2
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::_Tidy(void) __ptr64;413814;413814;1
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<ch;827628;413814;2
??$addressof@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64);827218;413609;2
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryW;413403;413403;1
??_GIAnalyzer@BuildInsights@Cpp@Microsoft@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;2062912;412582;5
??1?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::~vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >(void) __ptr64;412582;412582;1
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;412172;412172;1
?ConvertTickPrecision@Internal@BuildInsights@Cpp@Microsoft@@YA_J_J00@Z;__int64 __cdecl Microsoft::Cpp::BuildInsights::Internal::ConvertTickPrecision(__int64,__int64,__int64);1236515;412171;3
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std;411761;411761;1
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::~list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::share;411761;411761;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::ch;411761;411761;1
??1?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::~list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class ;411761;411761;1
??$assign@PEBD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign<char const * __ptr64,0>(char const * __ptr64 const,char const * __ptr64 const) __ptr64;411351;411351;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > const &;411351;411351;1
??$_Lookup_range@D@std@@YA_NIPEBU?$_Buf@D@0@@Z;bool __cdecl std::_Lookup_range<char>(unsigned int,struct std::_Buf<char> const * __ptr64);411351;411351;1
??0?$_Regex_traits@D@std@@QEAA@XZ;__cdecl std::_Regex_traits<char>::_Regex_traits<char>(void) __ptr64;411351;411351;1
??0?$_Vector_val@U?$_Simple_types@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct cxxopts::HelpOptionDetails> >::_Vector_val<struct std::_Simple_types<struct cxxopts::HelpOptionDetails> >(void) __ptr64;410530;410530;1
??$_Uninitialized_move@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@QEAU120@0PEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Uninitialized_move<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __;410530;410530;1
??$find@X@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned lon;410119;410119;1
??1?$vector@KV?$allocator@K@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::~vector<unsigned long,class std::allocator<unsigned long> >(void) __ptr64;409709;409709;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class st;409709;409709;1
??$?0U_Exact_args_t@std@@UFileCompilationData@@$$V$0A@@?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@U_Exact_args_t@1@$$QEAUFileCompilationData@@@Z;??$?0U_Exact_args_t@std@@UFileCompilationData@@$$V$0A@@?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@U_Exact_args_t@1@$$QEAUFileCompilationData@@@Z;409709;409709;1
??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAVTimelineEntry@@@1@$0A@$$Z$0A@@?$pair@$$CB_KVTimelineEntry@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAVTimelineEntry@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@AEAVTimelineEntry@@@1@$0A@$$Z$0A@@?$pair@$$CB_KVTimelineEntry@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@AEAVTimelineEntry@@@1@U?$integer_sequence@_K$0A@@1@2@Z;409709;409709;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >(void) __ptr64;409298;409298;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct s;409298;409298;1
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<;409298;409298;1
??0DiyFp@internal@rapidjson@@QEAA@N@Z;__cdecl rapidjson::internal::DiyFp::DiyFp(double) __ptr64;409298;409298;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;818186;409093;2
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V$0A@@?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V$0A@@?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;1227073;409024;3
?clear@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::clear(void) __ptr64;408888;408888;1
??0?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >(class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<u;408477;408477;1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;408477;408477;1
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z;408067;408067;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@1@AEB_N@Z;408067;408067;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simp;408067;408067;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::max_size(void)const __ptr64;408067;408067;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;408067;408067;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::_Tidy(void) __ptr64;816133;408066;2
??$find@X@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_trai;407656;407656;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;407656;407656;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > >::max_size(void)const __ptr64;407656;407656;1
??$?4V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$weak_ptr@VValue@cxxopts@@@std@@QEAAAEAV01@AEBV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;class std::weak_ptr<class cxxopts::Value> & __ptr64 __cdecl std::weak_ptr<class cxxopts::Value>::operator=<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64) __ptr64;407246;407246;1
??$_Med3_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@00V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;void __cdecl std::_Med3_unchecked<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83>);407246;407246;1
??1?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::~list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >(void) __ptr64;407246;407246;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(void) __ptr64;407246;407246;1
??$make_pair@AEBKAEAK@std@@YA?AU?$pair@KK@0@AEBKAEAK@Z;struct std::pair<unsigned long,unsigned long> __cdecl std::make_pair<unsigned long const & __ptr64,unsigned long & __ptr64>(unsigned long const & __ptr64,unsigned long & __ptr64);406835;406835;1
?_Do_digits@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAHHH@Z;int __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_digits(int,int) __ptr64;406835;406835;1
??1Options@cxxopts@@QEAA@XZ;__cdecl cxxopts::Options::~Options(void) __ptr64;406424;406424;1
?_Do_ffn@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_ND@Z;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_ffn(char) __ptr64;406424;406424;1
??1locale@std@@QEAA@XZ;__cdecl std::locale::~locale(void) __ptr64;2843328;406189;7
??0?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@$$QEAV01@@Z;406014;406014;1
?i32toa@internal@rapidjson@@YAPEADHPEAD@Z;char * __ptr64 __cdecl rapidjson::internal::i32toa(int,char * __ptr64);406014;406014;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class st;406014;406014;1
??$?0V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@$$V$0A@@?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@1@@Z;??$?0V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@$$V$0A@@?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$;406014;406014;1
??0?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std;406014;406014;1
??$?0V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$$V$0A@@?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;??$?0V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@$$V$0A@@?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basi;406014;406014;1
?max_size@?$vector@KV?$allocator@K@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::max_size(void)const __ptr64;405603;405603;1
??$_Emplace_back_with_unused_capacity@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAA@$$QEAUHelpOptionDetails@cxxopts@@@Z;??$_Emplace_back_with_unused_capacity@UHelpOptionDetails@cxxopts@@@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAA@$$QEAUHelpOptionDetails@cxxopts@@@Z;405603;405603;1
??$_Uninitialized_copy@PEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@QEAPEAV1234@0PEAPEAV1234@AEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::_Uninitialized_copy<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class std::allocator<class Microsoft::Cpp::BuildI;405193;405193;1
??$swap@UDataPerFunction@FunctionCompilationsExporter@@$0A@@std@@YAXAEAUDataPerFunction@FunctionCompilationsExporter@@0@Z;void __cdecl std::swap<struct FunctionCompilationsExporter::DataPerFunction,0>(struct FunctionCompilationsExporter::DataPerFunction & __ptr64,struct FunctionCompilationsExporter::DataPerFunction & __ptr64);405193;405193;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_Tidy(void) __ptr64;404782;404782;1
??$_Find_unchecked@PEAPEAVTimelineEntry@@PEAV1@@std@@YAPEAPEAVTimelineEntry@@QEAPEAV1@0AEBQEAV1@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Find_unchecked<class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64>(class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 const & __ptr64);809154;404577;2
??$?0U_Exact_args_t@std@@AEAPEBVTimelineEntry@@AEAK$0A@@?$tuple@AEAPEBVTimelineEntry@@AEAK@std@@QEAA@U_Exact_args_t@1@AEAPEBVTimelineEntry@@AEAK@Z;__cdecl std::tuple<class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64>::tuple<class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64><struct std::_Exact_args_t,class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64,0>(struct std::_Exact_args_t,class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64) __ptr64;404372;404372;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@st;404372;404372;1
??$_Uninitialized_move@PEA_KV?$allocator@_K@std@@@std@@YAPEA_KQEA_K0PEA_KAEAV?$allocator@_K@0@@Z;unsigned __int64 * __ptr64 __cdecl std::_Uninitialized_move<unsigned __int64 * __ptr64,class std::allocator<unsigned __int64> >(unsigned __int64 * __ptr64 const,unsigned __int64 * __ptr64 const,unsigned __int64 * __ptr64,class std::allocator<unsigned __int64> & __ptr64);404372;404372;1
??$_Uninitialized_move@PEAU_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@YAPEAU_Loop_vals_t@0@QEAU10@0PEAU10@AEAV?$allocator@U_Loop_vals_t@std@@@0@@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::_Uninitialized_move<struct std::_Loop_vals_t * __ptr64,class std::allocator<struct std::_Loop_vals_t> >(struct std::_Loop_vals_t * __ptr64 const,struct std::_Loop_vals_t * __ptr64 const,struct std::_Loop_vals_t * __ptr64,class std::allocator<struct std::_Loop_vals_t> & __ptr64);404372;404372;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVFrontEndPass@Activities@456@AEBVTemplateInstantiation@8456@@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@AEBVTemplateInstantiation@6012@@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVFrontEndPass@Activities@456@AEBVTemplateInstantiation@8456@@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@AEBVTemplateInstantiation@6012@@Z@Z;404372;404372;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>,class std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >,1>::_Get_first(void)const __ptr64;403961;403961;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;403961;403961;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;403551;403551;1
??$_Uninitialized_copy@PEAPEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@YAPEAPEAVTimelineEntry@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVTimelineEntry@@@0@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Uninitialized_copy<class TimelineEntry * __ptr64 * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >(class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 * __ptr64,class std::allocator<class TimelineEntry * __ptr64> & __ptr64);403551;403551;1
?_Decref@?$_Ptr_base@$$CBVOptionDetails@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::OptionDetails const >::_Decref(void) __ptr64;402730;402730;1
?_Calculate_growth@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Calculate_growth(unsigned __int64)const __ptr64;805460;402730;2
?max_size@?$_Default_allocator_traits@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@SA_KAEBV?$allocator@U_Loop_vals_t@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Loop_vals_t> >::max_size(class std::allocator<struct std::_Loop_vals_t> const & __ptr64);401498;401498;1
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z;class std::_Facet_base * __ptr64 & __ptr64 __cdecl std::forward<class std::_Facet_base * __ptr64 & __ptr64>(class std::_Facet_base * __ptr64 & __ptr64);2406114;401019;6
??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAUFileCompilationData@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAA@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAUFileCompilationData@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$QEAUFileCompilationData@@@1@$0A@$$Z$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAA@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$QEAUFileCompilationData@@@1@U?$integer_sequence@_K$0A@@1@2@Z;400677;400677;1
?_Calculate_growth@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Calculate_growth(unsigned __int64)const __ptr64;800122;400061;2
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;799302;399651;2
??$?0AEAPEBVTimelineEntry@@$0A@@?$tuple@AEAPEBVTimelineEntry@@AEAK@std@@QEAA@AEAPEBVTimelineEntry@@AEAK@Z;__cdecl std::tuple<class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64>::tuple<class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64><class TimelineEntry const * __ptr64 & __ptr64,0>(class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64) __ptr64;399445;399445;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64);399035;399035;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::_Tidy(void) __ptr64;399035;399035;1
??$find@PEBDE@std@@YAPEBDPEBDQEBDAEBE@Z;char const * __ptr64 __cdecl std::find<char const * __ptr64,unsigned char>(char const * __ptr64,char const * __ptr64 const,unsigned char const & __ptr64);398624;398624;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct st;398624;398624;1
??$find@X@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > __cdecl std::_Hash<class std::_Umap_traits<uns;398624;398624;1
?_Calculate_growth@?$vector@KV?$allocator@K@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Calculate_growth(unsigned __int64)const __ptr64;398214;398214;1
??0?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::vector<unsigned int,class std::allocator<unsigned int> >(void) __ptr64;398214;398214;1
??0range_error@std@@QEAA@PEBD@Z;__cdecl std::range_error::range_error(char const * __ptr64) __ptr64;397803;397803;1
??$?0$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;397393;397393;1
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,str;794785;397392;2
??$forward_as_tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;class std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64> __cdecl std::forward_as_tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);794375;397187;2
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z;??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z;396982;396982;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVActivity@Activities@456@0@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@2@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVActivity@Activities@456@0@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@2@Z@Z;396572;396572;1
??$_Get_unwrapped_n@AEBQEBD_J@std@@YA@AEBQEBD_J@Z;__cdecl std::_Get_unwrapped_n<char const * __ptr64 const & __ptr64,__int64>(char const * __ptr64 const & __ptr64,__int64);396572;396572;1
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Min_load_factor_buckets(unsigned __int64)const __ptr64;396572;396572;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;__cdecl std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,0>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;793143;396571;2
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_str;396161;396161;1
??$Run@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@MakeStaticAnalyzerGroupImpl@Internal@BuildInsights@Cpp@Microsoft@@SA@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@1234@@Z;static __cdecl Microsoft::Cpp::BuildInsights::Internal::MakeStaticAnalyzerGroupImpl::Run<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > * __ptr64>(class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::Bui;396161;396161;1
??$_Uninitialized_copy@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@QEAU120@0PEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Uninitialized_copy<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __;396161;396161;1
??0?$standard_value@_N@values@cxxopts@@QEAA@XZ;__cdecl cxxopts::values::standard_value<bool>::standard_value<bool>(void) __ptr64;396161;396161;1
??$?0AEB_K$$ZAEAVTimelineEntry@@@?$pair@$$CB_KVTimelineEntry@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAVTimelineEntry@@@1@@Z;??$?0AEB_K$$ZAEAVTimelineEntry@@@?$pair@$$CB_KVTimelineEntry@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAVTimelineEntry@@@1@@Z;396161;396161;1
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Move_assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,struct std::_Equal_allocators) __ptr64;396161;396161;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std:;791912;395956;2
??0?$tuple@AEAVTimelineEntry@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEAVTimelineEntry@@@std@@QEAA@$$QEAV01@@Z;395751;395751;1
??$_Emplace_back_with_unused_capacity@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;??$_Emplace_back_with_unused_capacity@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;395751;395751;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocat;395340;395340;1
??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::~vector<unsigned int,class std::allocator<unsigned int> >(void) __ptr64;395340;395340;1
??$find@X@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >;395340;395340;1
?OnBeginRelogging@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnBeginRelogging(void) __ptr64;1975468;395093;5
??$?0AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptio;394930;394930;1
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void) __ptr64;394930;394930;1
??$?0AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;394519;394519;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class st;394519;394519;1
?_Unchecked_begin@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAAPEAUDataPerFunction@FunctionCompilationsExporter@@XZ;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Unchecked_begin(void) __ptr64;394519;394519;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > co;394519;394519;1
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;393698;393698;1
?max_size@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::max_size(void)const __ptr64;393698;393698;1
??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0U_Exact_args_t@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$V$0A@@?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;1181094;393698;3
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsi;393698;393698;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<st;393287;393287;1
??$?0U_Exact_args_t@std@@V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@1@$$V$0A@@?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@1@@Z;??$?0U_Exact_args_t@std@@V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@1@$$V$0A@@?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$alloc;393287;393287;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<st;393287;393287;1
??$?0V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V$0A@@?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;??$?0V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V$0A@@?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@B;393287;393287;1
?max_size@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::max_size(void)const __ptr64;392877;392877;1
??$?0V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAA@AEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z;??$?0V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAA@AEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z;392877;392877;1
??$emplace_back@AEB_K@?$vector@_KV?$allocator@_K@std@@@std@@QEAA@AEB_K@Z;__cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::emplace_back<unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64) __ptr64;392877;392877;1
??0?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAA@XZ;__cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(void) __ptr64;392877;392877;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::_Tidy(void) __ptr64;392877;392877;1
??$forward_as_tuple@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA?AV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@@Z;??$forward_as_tuple@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA?AV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@@Z;785754;392877;2
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ;__cdecl std::vector<char,class std::allocator<char> >::~vector<char,class std::allocator<char> >(void) __ptr64;392466;392466;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@;784523;392261;2
?Normalize@DiyFp@internal@rapidjson@@QEBA?AU123@XZ;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::DiyFp::Normalize(void)const __ptr64;392056;392056;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(void) __ptr64;392056;392056;1
??1FunctionCompilationsAnalyzer@@UEAA@XZ;virtual __cdecl FunctionCompilationsAnalyzer::~FunctionCompilationsAnalyzer(void) __ptr64;392056;392056;1
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::~list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<cl;392056;392056;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;783701;391850;2
??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@;783701;391850;2
??$swap@PEAV_Ref_count_base@std@@$0A@@std@@YAXAEAPEAV_Ref_count_base@0@0@Z;void __cdecl std::swap<class std::_Ref_count_base * __ptr64,0>(class std::_Ref_count_base * __ptr64 & __ptr64,class std::_Ref_count_base * __ptr64 & __ptr64);391645;391645;1
??$_Find_unchecked1@PEAPEAVTimelineEntry@@PEAV1@@std@@YAPEAPEAVTimelineEntry@@PEAPEAV1@QEAPEAV1@AEBQEAV1@U?$integral_constant@_N$0A@@0@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Find_unchecked1<class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64>(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 const & __ptr64,struct std::integral_constant<bool,0>);783291;391645;2
??$construct@UDataPerFunction@FunctionCompilationsExporter@@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@4@I@?$_Default_allocator_traits@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@SAXAEAV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@1@QEAUDataPerFunction@FunctionCompilationsExporter@@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAI@Z;??$construct@UDataPerFunction@FunctionCompilationsExporter@@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@4@I@?$_Default_allocator_traits@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@SAXAEAV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@1@QEAUDataPerFunction@FunctionCompilationsExporter@@$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@;391235;391235;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;391235;391235;1
?_Unchecked_end@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;782059;391029;2
?max_size@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::max_size(void)const __ptr64;390824;390824;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int6;390824;390824;1
??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ;__cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::vector<unsigned __int64,class std::allocator<unsigned __int64> >(void) __ptr64;390824;390824;1
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z;1559192;389798;4
??$emplace_back@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;??$emplace_back@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;389593;389593;1
?_Umove_if_noexcept@?$vector@KV?$allocator@K@std@@@std@@AEAAXPEAK00@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Umove_if_noexcept(unsigned long * __ptr64,unsigned long * __ptr64,unsigned long * __ptr64) __ptr64;389593;389593;1
??$_Uninitialized_move@PEAIV?$allocator@I@std@@@std@@YAPEAIQEAI0PEAIAEAV?$allocator@I@0@@Z;unsigned int * __ptr64 __cdecl std::_Uninitialized_move<unsigned int * __ptr64,class std::allocator<unsigned int> >(unsigned int * __ptr64 const,unsigned int * __ptr64 const,unsigned int * __ptr64,class std::allocator<unsigned int> & __ptr64);389593;389593;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::_Tidy(void) __ptr64;389593;389593;1
?max_size@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::max_size(void)const __ptr64;778364;389182;2
?default_value@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::default_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;389182;389182;1
??0?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >(void) __ptr64;389182;389182;1
??$MatchEventInMemberFunction@VFunctionCompilationsAnalyzer@@XAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFunctionCompilationsAnalyzer@@P84@EAAXAEBVFunction@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VFunctionCompilationsAnalyzer@@XAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFunctionCompilationsAnalyzer@@P84@EAAXAEBVFunction@Activities@012@@Z@Z;389182;389182;1
?_Unchecked_begin@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_begin(void) __ptr64;388772;388772;1
??$_Pop_heap_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@0V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;void __cdecl std::_Pop_heap_unchecked<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83>);388772;388772;1
??1FileCompilationsAnalyzer@@UEAA@XZ;virtual __cdecl FileCompilationsAnalyzer::~FileCompilationsAnalyzer(void) __ptr64;388772;388772;1
?bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,c;388772;388772;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@;388361;388361;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_Lis;388361;388361;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic;388361;388361;1
?isctype@?$_Regex_traits@D@std@@QEBA_NDF@Z;bool __cdecl std::_Regex_traits<char>::isctype(char,short)const __ptr64;388361;388361;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >(class s;387951;387951;1
??$?0AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@1@@Z;387951;387951;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;387951;387951;1
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct s;775491;387745;2
?_Calculate_growth@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Calculate_growth(unsigned __int64)const __ptr64;387540;387540;1
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base12>::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,;387540;387540;1
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ;class std::allocator<unsigned __int64> & __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Getal(void) __ptr64;387540;387540;1
??0_Node_rep@std@@QEAA@_NHHPEAV_Node_end_rep@1@I@Z;__cdecl std::_Node_rep::_Node_rep(bool,int,int,class std::_Node_end_rep * __ptr64,unsigned int) __ptr64;387540;387540;1
?end@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >;387540;387540;1
??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;bool __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::_Lower_bound_duplicate<class std::basic_string<char,struct ;387130;387130;1
??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z;??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_trai;387130;387130;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,st;387130;387130;1
??$addressof@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@AEAV10@@Z;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 __cdecl std::addressof<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >(class std::_List_unchecked_const_iterator<cla;774259;387129;2
??$_Uninitialized_move@PEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@QEAPEAV1234@0PEAPEAV1234@AEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::_Uninitialized_move<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class std::allocator<class Microsoft::Cpp::BuildI;386719;386719;1
??4?$vector@IV?$allocator@I@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::vector<unsigned int,class std::allocator<unsigned int> > & __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::operator=(class std::vector<unsigned int,class std::allocator<unsigned int> > const & __ptr64) __ptr64;386719;386719;1
?_Make_iter@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::_Make_ite;386719;386719;1
??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;__cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::emplace_back<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;386719;386719;1
??$?0U_Exact_args_t@std@@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@$$V$0A@@?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@U_Exact_args_t@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;??$?0U_Exact_args_t@std@@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@$$V$0A@@?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@U_Exact_args_t@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;386719;386719;1
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > >::_Tidy(void) __ptr64;386308;386308;1
?ConvertTime@?$EventDurationProvider@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_J@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > __cdecl Microsoft::Cpp::BuildInsights::Internal::EventDurationProvider<class Microsoft::Cpp::BuildInsights::Activities::Activity>::ConvertTime(__int64)const __ptr64;772617;386308;2
??$destroy@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >::destroy<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLoc;385898;385898;1
?max_size@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::max_size(void)const __ptr64;385898;385898;1
??$?0PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;385077;385077;1
?resize@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::resize(unsigned __int64) __ptr64;385077;385077;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __;384666;384666;1
??1?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@QEAA@XZ;__cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::~_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;384666;384666;1
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@@Z;384666;384666;1
?StartArray@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NXZ;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::StartArray(void) __ptr64;384666;384666;1
??$_Pop_heap_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@0V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;void __cdecl std::_Pop_heap_unchecked<struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963>);384256;384256;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > * __ptr64,clas;384256;384256;1
??1TimelineEntry@@QEAA@XZ;__cdecl TimelineEntry::~TimelineEntry(void) __ptr64;384256;384256;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >(class std::_List_unchecked_iterator<class std::_L;384256;384256;1
??0?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEAA@XZ;__cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >(void) __ptr64;384256;384256;1
??$?0AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@1@@Z;383845;383845;1
?GetAllocator@?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@rapidjson@@QEAAAEAV?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@XZ;class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> & __ptr64 __cdecl rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>::GetAllocator(void) __ptr64;383845;383845;1
??$find@X@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std:;383845;383845;1
??$swap@_K$0A@@std@@YAXAEA_K0@Z;void __cdecl std::swap<unsigned __int64,0>(unsigned __int64 & __ptr64,unsigned __int64 & __ptr64);1151536;383845;3
?max_size@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::max_size(void)const __ptr64;767280;383640;2
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;383435;383435;1
??0?$shared_ptr@VValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::Value>::shared_ptr<class cxxopts::Value>(void) __ptr64;383435;383435;1
??1?$abstract_value@_N@values@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::values::abstract_value<bool>::~abstract_value<bool>(void) __ptr64;383024;383024;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;383024;383024;1
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::clear(void) __ptr64;383024;383024;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Unchecked_splice(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 const,struct std::_List_node<struct std::pair<unsigned __int6;382614;382614;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_tr;764817;382408;2
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cl;382203;382203;1
?_Unchecked_begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0> __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<ch;382203;382203;1
??0?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned;381793;381793;1
?GetCachedPower@internal@rapidjson@@YA?AUDiyFp@12@HPEAH@Z;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::GetCachedPower(int,int * __ptr64);381382;381382;1
?max_size@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::max_size(void)const __ptr64;381382;381382;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVFrontEndPass@Activities@456@AEBVSymbolName@SimpleEvents@456@@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@AEBVSymbolName@SimpleEvents@012@@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$VP81@EAAXAEBVFrontEndPass@Activities@456@AEBVSymbolName@SimpleEvents@456@@Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@AEBVSymbolName@SimpleEvents@012@@Z@Z;381382;381382;1
?no_implicit_value@?$abstract_value@_N@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<bool>::no_implicit_value(void) __ptr64;380972;380972;1
?_DecimalDigits@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_DecimalDigits(void) __ptr64;380561;380561;1
??$_Find_unchecked1@PEAKK@std@@YAPEAKPEAKQEAKAEBKU?$integral_constant@_N$0A@@0@@Z;unsigned long * __ptr64 __cdecl std::_Find_unchecked1<unsigned long * __ptr64,unsigned long>(unsigned long * __ptr64,unsigned long * __ptr64 const,unsigned long const & __ptr64,struct std::integral_constant<bool,0>);380151;380151;1
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;380151;380151;1
?max_size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::max_size(void)const __ptr64;380151;380151;1
??1?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;759891;379945;2
??0?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >(void) __ptr64;379740;379740;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@AEB_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@AEB_N@Z;379740;379740;1
??$_Sort_heap_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;void __cdecl std::_Sort_heap_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,class <lambda_9480883bff83c29d8fc89bed48609766> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;379740;379740;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;379740;379740;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(void) __ptr64;379740;379740;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >,1>::_Get_first(void) __ptr64;379329;379329;1
?end@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::end(void) __ptr64;379329;379329;1
??1?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::~match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >;379329;379329;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;379329;379329;1
??1?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@QEAA@XZ;__cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::~list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRe;378919;378919;1
??$?0V?$standard_value@_N@values@cxxopts@@$0A@@?$weak_ptr@VValue@cxxopts@@@std@@QEAA@AEBV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@1@@Z;__cdecl std::weak_ptr<class cxxopts::Value>::weak_ptr<class cxxopts::Value><class cxxopts::values::standard_value<bool>,0>(class std::shared_ptr<class cxxopts::values::standard_value<bool> > const & __ptr64) __ptr64;378919;378919;1
?_Xlength@?$vector@KV?$allocator@K@std@@@std@@CAXXZ;static void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Xlength(void);378919;378919;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$unorde;378919;378919;1
??$?0U?$default_delete@V_Node_assert@std@@@std@@$0A@@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAA@$$QEAV01@@Z;??$?0U?$default_delete@V_Node_assert@std@@@std@@$0A@@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAA@$$QEAV01@@Z;378919;378919;1
?pointer_to@?$pointer_traits@PEBU?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@SAPEBU?$pair@$$CB_KU?$pair@KK@std@@@2@AEBU32@@Z;static struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > const * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > const * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > const & __ptr64);378508;378508;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >,struct std::_Iterator_base12>::;378508;378508;1
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><char>(class std::allocator<char> const & __ptr64) __ptr64;5297066;378361;14
?_Min_load_factor_buckets@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBA_K_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Min_load_fa;378098;378098;1
?max_size@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::max_size(void)const __ptr64;378098;378098;1
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::max_size(void)const __ptr64;378098;378098;1
??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z;??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxx;377687;377687;1
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z;void __cdecl <lambda_65e615be2a453ca0576c979606f46740>::operator()(char * __ptr64 const,char const * __ptr64 const,unsigned __int64,char const * __ptr64 const,unsigned __int64)const __ptr64;755375;377687;2
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_;377687;377687;1
??$OnTraceInfoImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVTraceInfo@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnTraceInfoImpl<0;377687;377687;1
?end@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > __cdecl std::list<struct std::pair<unsigned __;377687;377687;1
??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$all;377687;377687;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned _;377687;377687;1
??$_Destroy_range@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@YAXPEAUHelpOptionDetails@cxxopts@@QEAU12@AEAV?$allocator@UHelpOptionDetails@cxxopts@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct cxxopts::HelpOptionDetails> >(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64 const,class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64);377277;377277;1
??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@$$QEA_N@Z;377277;377277;1
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void) __ptr64;377277;377277;1
?_Getal@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEAAAEAV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@2@XZ;class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> & __ptr64 __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Getal(void) __ptr64;376866;376866;1
??0?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@$$QEAV01@@Z;376456;376456;1
?_Calculate_growth@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Calculate_growth(unsigned __int64)const __ptr64;376456;376456;1
??$_Emplace_back@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;??$_Emplace_back@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;376456;376456;1
?_Fnv1a_append_bytes@std@@YA_K_KQEBE_K@Z;unsigned __int64 __cdecl std::_Fnv1a_append_bytes(unsigned __int64,unsigned char const * __ptr64 const,unsigned __int64);2632316;376045;7
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > & __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<;375635;375635;1
?_Calculate_growth@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Calculate_growth(unsigned __int64)const __ptr64;375635;375635;1
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >::~_List_node_emplace_op2<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >(void) __ptr64;375635;375635;1
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;375635;375635;1
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;375635;375635;1
?_Unchecked_end@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_end(void)const __ptr64;374814;374814;1
?MemberBegin@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA?AV?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@XZ;class rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::MemberBegin(void)const __ptr64;374814;374814;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;748806;374403;2
??$?0PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$unorder;373993;373993;1
??$forward@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;373993;373993;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::_Release(void) __ptr64;373582;373582;1
??$swap@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAXAEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::swap<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64,0>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 & __ptr64,class std::_List_uncheck;747164;373582;2
?_Calculate_growth@?$vector@IV?$allocator@I@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Calculate_growth(unsigned __int64)const __ptr64;373582;373582;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@$$QEA_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@$$QEA_N@Z;373582;373582;1
??$MakeStaticAnalyzerGroup@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@YA@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@012@@Z;__cdecl Microsoft::Cpp::BuildInsights::MakeStaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > * __ptr64>(class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawP;373582;373582;1
??$_Weakly_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXAEBV?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Weakly_construct_from<class cxxopts::values::standard_value<bool> >(class std::_Ptr_base<class cxxopts::values::standard_value<bool> > const & __ptr64) __ptr64;373172;373172;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned;373172;373172;1
??$forward@V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@0@AEAV10@@Z;??$forward@V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@0@AEAV10@@Z;373172;373172;1
?_Calculate_growth@?$vector@_KV?$allocator@_K@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Calculate_growth(unsigned __int64)const __ptr64;373172;373172;1
??$forward@V?$tuple@AEB_K@std@@@std@@YA$$QEAV?$tuple@AEB_K@0@AEAV10@@Z;??$forward@V?$tuple@AEB_K@std@@@std@@YA$$QEAV?$tuple@AEB_K@0@AEAV10@@Z;1119515;373171;3
??4?$shared_ptr@VValue@cxxopts@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$shared_ptr@VValue@cxxopts@@@std@@QEAAAEAV01@$$QEAV01@@Z;372761;372761;1
?max_size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::max_size(void)const __ptr64;372761;372761;1
?_Swap_val@?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::_Swap_val(class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<c;744701;372350;2
??0?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::a;372350;372350;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> ><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails> & __ptr64,0>(class std::basic_st;372350;372350;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;372350;372350;1
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;class std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > > __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,cl;371940;371940;1
??$find@X@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<un;371940;371940;1
??$_Emplace_back@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;??$_Emplace_back@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;371940;371940;1
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);371940;371940;1
??$_Find@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@_K@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std;371529;371529;1
?max_size@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::max_size(void)const __ptr64;371529;371529;1
?empty@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBA_NXZ;bool __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::empty(void)const __ptr64;371529;371529;1
?_Tidy@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Tidy(void) __ptr64;371119;371119;1
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z;struct std::_Container_proxy * __ptr64 __cdecl std::_Unfancy<struct std::_Container_proxy>(struct std::_Container_proxy * __ptr64);5562678;370845;15
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair;370708;370708;1
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::max_size(void)const __ptr64;370708;370708;1
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy_init(void) __ptr64;4443983;370331;12
??$_Swap_adl@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXAEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Swap_adl<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 & __ptr64,class std::_List_unchecke;370298;370298;1
?max_size@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::max_size(void)const __ptr64;370298;370298;1
??0?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::unordered_map<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,struct std::hash<class std::shared_;370298;370298;1
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > const & __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allo;370298;370298;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<cha;740185;370092;2
??$?0PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@1@$$QEA_N@Z;369887;369887;1
?max_size@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::max_size(void)const __ptr64;369887;369887;1
?Clear@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAAXXZ;void __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::Clear(void) __ptr64;369887;369887;1
??$?0U_Exact_args_t@std@@U?$pair@KK@1@$$V$0A@@?$tuple@$$QEAU?$pair@KK@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAU?$pair@KK@1@@Z;??$?0U_Exact_args_t@std@@U?$pair@KK@1@$$V$0A@@?$tuple@$$QEAU?$pair@KK@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAU?$pair@KK@1@@Z;369887;369887;1
?_Calculate_growth@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Calculate_growth(unsigned __int64)const __ptr64;369887;369887;1
??$swap@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@$0A@@std@@YAXAEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::swap<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64,0>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 & __ptr64,class std::_List_unchecked_i;369887;369887;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class;369887;369887;1
??$forward_as_tuple@U?$pair@KH@std@@@std@@YA?AV?$tuple@$$QEAU?$pair@KH@std@@@0@$$QEAU?$pair@KH@0@@Z;??$forward_as_tuple@U?$pair@KH@std@@@std@@YA?AV?$tuple@$$QEAU?$pair@KH@std@@@0@$$QEAU?$pair@KH@0@@Z;369477;369477;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_tr;369477;369477;1
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;369477;369477;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple;738953;369476;2
?_Calculate_growth@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Calculate_growth(unsigned __int64)const __ptr64;369066;369066;1
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin(void)const __ptr64;368656;368656;1
??$_Destroy_range@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@QEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const,class std::allocator<struct std::_Tgt_state;368656;368656;1
??$_Free_non_head@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64,struct std::_List_node<class std::basic_st;737311;368655;2
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_trai;736901;368450;2
?_Calculate_growth@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Calculate_growth(unsigned __int64)const __ptr64;368245;368245;1
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::_Tidy(void) __ptr64;368245;368245;1
?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Calculate_growth(unsigned __int64)const __ptr64;368245;368245;1
?_Getal@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEBAAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> const & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Getal(void)const __ptr64;368245;368245;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_it;736490;368245;2
?_Make_iter@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Make_iter(struct std::_;368245;368245;1
?size@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::size(void)const __ptr64;735670;367835;2
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned _;367835;367835;1
??$find@X@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@1@AEB_K@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::find<void>(unsigned __int64 const & __ptr64) __ptr64;367835;367835;1
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z;class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::endl<char,struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64);1838762;367752;5
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::max_size(void)const __ptr64;367424;367424;1
??$erase@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@$0A@@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@V21@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __in;367424;367424;1
?GrisuRound@internal@rapidjson@@YAXPEADH_K111@Z;void __cdecl rapidjson::internal::GrisuRound(char * __ptr64,int,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64);367424;367424;1
??$_Pop_heap_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;void __cdecl std::_Pop_heap_unchecked<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80> >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80>);367424;367424;1
?_Calculate_growth@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Calculate_growth(unsigned __int64)const __ptr64;367424;367424;1
??$swap@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@$0A@@std@@YAXAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@0@Z;void __cdecl std::swap<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,0>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64);733617;366808;2
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ;char const * __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str(void)const __ptr64;4034277;366752;11
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;366603;366603;1
??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@1@$$QEA_N@Z;??$?0V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N$0A@@?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char;366603;366603;1
??$emplace_back@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;??$emplace_back@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;366192;366192;1
??0_Regex_base@std@@QEAA@XZ;__cdecl std::_Regex_base::_Regex_base(void) __ptr64;366192;366192;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::c;732385;366192;2
?_Umove_if_noexcept1@?$vector@KV?$allocator@K@std@@@std@@AEAAXPEAK00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Umove_if_noexcept1(unsigned long * __ptr64,unsigned long * __ptr64,unsigned long * __ptr64,struct std::integral_constant<bool,1>) __ptr64;366192;366192;1
?_Calculate_growth@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Calculate_growth(unsigned __int64)const __ptr64;365782;365782;1
??$?RV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;unsigned __int64 __cdecl std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::operator()<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<ch;1463129;365782;4
?_Getal@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Getal(void) __ptr64;365782;365782;1
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z;??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z;5480572;365371;15
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types;730743;365371;2
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::cha;365371;365371;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;365371;365371;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_tra;365371;365371;1
??$_Construct_in_place@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr64>(class std::_List_unchecke;730743;365371;2
??$?R$$V@?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA_NAEA_NAEBVEventStack@345@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Z;??$?R$$V@?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsi;365371;365371;1
??$swap@UDataPerFile@FileInclusionTimesExporter@@$0A@@std@@YAXAEAUDataPerFile@FileInclusionTimesExporter@@0@Z;void __cdecl std::swap<struct FileInclusionTimesExporter::DataPerFile,0>(struct FileInclusionTimesExporter::DataPerFile & __ptr64,struct FileInclusionTimesExporter::DataPerFile & __ptr64);364961;364961;1
??0?$_Node_class@DV?$regex_traits@D@std@@@std@@QEAA@W4_Node_type@1@W4_Node_flags@1@@Z;__cdecl std::_Node_class<char,class std::regex_traits<char> >::_Node_class<char,class std::regex_traits<char> >(enum std::_Node_type,enum std::_Node_flags) __ptr64;364961;364961;1
??$make_pair@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV20@@Z;??$make_pair@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV20@@Z;364961;364961;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<st;364961;364961;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::operator--(void) __ptr64;364961;364961;1
?_Calculate_growth@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Calculate_growth(unsigned __int64)const __ptr64;364550;364550;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@;364550;364550;1
?max_size@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::max_size(void)const __ptr64;364550;364550;1
?_Getal@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Getal(void)const __ptr64;364550;364550;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::;364550;364550;1
?_Calculate_growth@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Calculate_growth(unsigned __int64)const __ptr64;364550;364550;1
??$find@X@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@1@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<c;364140;364140;1
?_Unchecked_end@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_end(void) __ptr64;727869;363934;2
??$_Destroy_range@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@YAXPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@QEAU10@AEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64,struct std::pair<class std::basic_string<char,struct;363729;363729;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::;363729;363729;1
?_Take_contents@?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Take_contents(class std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > & __ptr64) __ptr64;363729;363729;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct ;363729;363729;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::max_size(void)const __ptr64;363729;363729;1
?max_size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::max_size(void)const __ptr64;363319;363319;1
?_Tidy@?$basic_regex@DV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Tidy(void) __ptr64;363319;363319;1
??1?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int6;363319;363319;1
??0?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@QEAA@_K@Z;__cdecl std::codecvt_utf8<wchar_t,1114111,0>::codecvt_utf8<wchar_t,1114111,0>(unsigned __int64) __ptr64;363319;363319;1
??_G?$pair@$$CB_KVTimelineEntry@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<unsigned __int64 const ,class TimelineEntry>::`scalar deleting destructor'(unsigned int) __ptr64;362908;362908;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vect;362908;362908;1
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char;362908;362908;1
??1HelpOptionDetails@cxxopts@@QEAA@XZ;__cdecl cxxopts::HelpOptionDetails::~HelpOptionDetails(void) __ptr64;362908;362908;1
?_Calculate_growth@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Calculate_growth(unsigned __int64)const __ptr64;362908;362908;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr;362908;362908;1
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;362498;362498;1
??$Forward@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$HandlerForwarder@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SAX$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVActivity@Activities@345@1@Z;??$Forward@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$HandlerForwarder@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V;362498;362498;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::__autoclassinit2(unsigned __int64) __ptr64;362498;362498;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsi;362087;362087;1
??$regex_match@DV?$allocator@V?$sub_match@PEBD@std@@@std@@V?$regex_traits@D@2@@std@@YA_NPEBDAEAV?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@0@AEBV?$basic_regex@DV?$regex_traits@D@std@@@0@W4match_flag_type@regex_constants@0@@Z;bool __cdecl std::regex_match<char,class std::allocator<class std::sub_match<char const * __ptr64> >,class std::regex_traits<char> >(char const * __ptr64,class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > & __ptr64,class std::basic_regex<char,class std::regex_traits<char> > const & __ptr64,enum std::regex_constants::match_flag_type);362087;362087;1
?clone@?$standard_value@_N@values@cxxopts@@UEBA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::standard_value<bool>::clone(void)const __ptr64;362087;362087;1
?Malloc@CrtAllocator@rapidjson@@QEAAPEAX_K@Z;void * __ptr64 __cdecl rapidjson::CrtAllocator::Malloc(unsigned __int64) __ptr64;361677;361677;1
??$forward@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@AEAV10@@Z;361266;361266;1
?max_size@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::max_size(void)const __ptr64;361266;361266;1
??$construct@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@@?$_Default_allocator_traits@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@SAXAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@$$QEAPEBU31@@Z;??$construct@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@@?$_Default_allocator_traits@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@SAXAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationDat;361266;361266;1
?_Swap_val@?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::_Swap_val(class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> ;361266;361266;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class ;360856;360856;1
??1?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAA@XZ;__cdecl std::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >::~unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >(void) __ptr64;360856;360856;1
?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<char,class std::allocator<char> >::max_size(void)const __ptr64;360856;360856;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation,class Microsoft::Cpp::BuildInsights::Activities::Function,class Microsoft::Cpp::BuildInsights::Activities::Pass1,class Microsoft::Cpp::BuildInsights::Activities::Pass2,class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Micros;360856;360856;1
??1_Iterator_base12@std@@QEAA@XZ;__cdecl std::_Iterator_base12::~_Iterator_base12(void) __ptr64;3968590;360780;11
?bucket_count@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::bucket_count(void)const __ptr64;360445;360445;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;360445;360445;1
??4?$vector@_NV?$allocator@_N@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::vector<bool,class std::allocator<bool> > & __ptr64 __cdecl std::vector<bool,class std::allocator<bool> >::operator=(class std::vector<bool,class std::allocator<bool> > const & __ptr64) __ptr64;360445;360445;1
??$?0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;??$?0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$0;720480;360240;2
??4?$shared_ptr@_N@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$shared_ptr@_N@std@@QEAAAEAV01@$$QEAV01@@Z;360035;360035;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<stru;360035;360035;1
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end(void)const __ptr64;360035;360035;1
??4?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;360035;360035;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@std@@QEAA@PEAUDataPerFunction@FunctionCompilationsExporter@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;359624;359624;1
?StartObject@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NXZ;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::StartObject(void) __ptr64;359624;359624;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator;359624;359624;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;359624;359624;1
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;718838;359419;2
??$_Construct_in_place@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<class std::basic_;718837;359418;2
?_Next@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Next(void) __ptr64;359213;359213;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@2@$00@std@@Q;359213;359213;1
?_Calculate_growth@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Calculate_growth(unsigned __int64)const __ptr64;359213;359213;1
?_Swap_val@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAAXAEAV12@@Z;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Swap_val(class std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vecto;359213;359213;1
??$_Find_unchecked@PEBDE@std@@YAPEBDQEBD0AEBE@Z;char const * __ptr64 __cdecl std::_Find_unchecked<char const * __ptr64,unsigned char>(char const * __ptr64 const,char const * __ptr64 const,unsigned char const & __ptr64);358803;358803;1
??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_st;358803;358803;1
??$construct@UHelpOptionDetails@cxxopts@@U12@@?$_Default_allocator_traits@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@SAXAEAV?$allocator@UHelpOptionDetails@cxxopts@@@1@QEAUHelpOptionDetails@cxxopts@@$$QEAU34@@Z;??$construct@UHelpOptionDetails@cxxopts@@U12@@?$_Default_allocator_traits@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@SAXAEAV?$allocator@UHelpOptionDetails@cxxopts@@@1@QEAUHelpOptionDetails@cxxopts@@$$QEAU34@@Z;358803;358803;1
?OnTraceInfo@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEBUTRACE_INFO_DATA_TAG@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;358803;358803;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::s;358803;358803;1
?_Buy_raw@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Buy_raw(unsigned __int64) __ptr64;358803;358803;1
??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z;void __cdecl <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()(char * __ptr64 const,char const * __ptr64 const,unsigned __int64,char)const __ptr64;2510800;358685;7
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator;716785;358392;2
?OverlapsWith@TimelineEntry@@QEBA_NPEBV1@@Z;bool __cdecl TimelineEntry::OverlapsWith(class TimelineEntry const * __ptr64)const __ptr64;358392;358392;1
??$?0U_Exact_args_t@std@@AEAK$$V$0A@@?$tuple@AEAK@std@@QEAA@U_Exact_args_t@1@AEAK@Z;??$?0U_Exact_args_t@std@@AEAK$$V$0A@@?$tuple@AEAK@std@@QEAA@U_Exact_args_t@1@AEAK@Z;358392;358392;1
?clone@?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::clone(void)const __ptr64;358392;358392;1
?_Tidy@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Tidy(void) __ptr64;715964;357982;2
??$_Weakly_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXAEBV?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Weakly_construct_from<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::_Ptr_base<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64) __ptr64;357982;357982;1
?max_size@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::max_size(void)const __ptr64;357571;357571;1
??4?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator=(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;357161;357161;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > ;714322;357161;2
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>;357161;357161;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;714321;357160;2
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;356750;356750;1
?__autoclassinit2@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::__autoclassinit2(unsigned __int64) __ptr64;356750;356750;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_p;356340;356340;1
?_Expand@?$_Buf@D@std@@AEAAXI@Z;void __cdecl std::_Buf<char>::_Expand(unsigned int) __ptr64;356340;356340;1
?_Make_const_iter@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Make_const_iter(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned l;356340;356340;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::a;356340;356340;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base12>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,class std::_List_val<struct;356340;356340;1
?_Swap_val@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@@Z;void __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Swap_val(class std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64) __ptr64;712680;356340;2
??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV21@@Z;??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV21@@Z;356340;356340;1
??$_Find_unchecked1@PEBDE@std@@YAPEBDPEBDQEBDAEBEU?$integral_constant@_N$00@0@@Z;char const * __ptr64 __cdecl std::_Find_unchecked1<char const * __ptr64,unsigned char>(char const * __ptr64,char const * __ptr64 const,unsigned char const & __ptr64,struct std::integral_constant<bool,1>);355929;355929;1
??1?$basic_regex@DV?$regex_traits@D@std@@@std@@QEAA@XZ;__cdecl std::basic_regex<char,class std::regex_traits<char> >::~basic_regex<char,class std::regex_traits<char> >(void) __ptr64;355929;355929;1
??$_Construct_from_weak@VValue@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAA_NAEBV?$weak_ptr@VValue@cxxopts@@@1@@Z;bool __cdecl std::_Ptr_base<class cxxopts::Value>::_Construct_from_weak<class cxxopts::Value>(class std::weak_ptr<class cxxopts::Value> const & __ptr64) __ptr64;355929;355929;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails>;355929;355929;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::operator->(void)const __ptr64;355929;355929;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecke;711038;355519;2
?_Tidy@?$_Node_class@DV?$regex_traits@D@std@@@std@@QEAAXPEAU?$_Sequence@D@2@@Z;void __cdecl std::_Node_class<char,class std::regex_traits<char> >::_Tidy(struct std::_Sequence<char> * __ptr64) __ptr64;355519;355519;1
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64>::_Free_non_head<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __;355519;355519;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct ;355519;355519;1
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,s;355519;355519;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char;355108;355108;1
?_Unchecked_begin@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >:;355108;355108;1
??0?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@QEAA@AEBV0123@@Z;__cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::Ana;354698;354698;1
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::_Tidy(void) __ptr64;354698;354698;1
??$fill@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@V12@@std@@YAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@0AEBV10@@Z;void __cdecl std::fill<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsi;354287;354287;1
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z;int __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::compare(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;354287;354287;1
?_Delete_this@?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_t;354287;354287;1
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;3889356;353577;11
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >(void) __ptr64;353466;353466;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;353466;353466;1
?max_size@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::max_size(void)const __ptr64;353466;353466;1
?begin@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > > __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::begin(void) __ptr64;353056;353056;1
?end@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > > __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::end(void) __ptr64;353056;353056;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base0>(struct std::_Lis;353056;353056;1
??$swap@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@$0A@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@0@Z;void __cdecl std::swap<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64,0>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64);352645;352645;1
??$_Pop_heap_hole_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@U12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@00$$QEAU12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;??$_Pop_heap_hole_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@U12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@00$$QEAU12@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;352645;352645;1
??$?0AEAKH$0A@@?$pair@KH@std@@QEAA@AEAK$$QEAH@Z;??$?0AEAKH$0A@@?$pair@KH@std@@QEAA@AEAK$$QEAH@Z;352645;352645;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64>(class std::_List_unchecked_it;352645;352645;1
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64,struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<char,st;352645;352645;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 ;352645;352645;1
??1range_error@std@@UEAA@XZ;virtual __cdecl std::range_error::~range_error(void) __ptr64;352234;352234;1
??0?$unordered_map@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@U?$hash@_K@std@@U?$equal_to@_K@4@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::unordered_map<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,struct std::hash<unsigned __int64>,struct std::;352234;352234;1
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z;static char * __ptr64 __cdecl std::_Narrow_char_traits<char,int>::assign(char * __ptr64 const,unsigned __int64,char);704058;352029;2
??0bad_array_new_length@std@@QEAA@XZ;__cdecl std::bad_array_new_length::bad_array_new_length(void) __ptr64;5277770;351851;15
??$swap@PEAV_Node_base@std@@$0A@@std@@YAXAEAPEAV_Node_base@0@0@Z;void __cdecl std::swap<class std::_Node_base * __ptr64,0>(class std::_Node_base * __ptr64 & __ptr64,class std::_Node_base * __ptr64 & __ptr64);351824;351824;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@QEAA@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct std::_Container_base12 const * ;351824;351824;1
??$?0AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?;351824;351824;1
??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAU?$pair@KK@std@@@1@$0A@$$Z$0A@@?$pair@$$CB_KU?$pair@KK@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAU?$pair@KK@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAU?$pair@KK@std@@@1@$0A@$$Z$0A@@?$pair@$$CB_KU?$pair@KK@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAU?$pair@KK@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;351824;351824;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::opera;351824;351824;1
??0?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@1234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildI;351413;351413;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLo;351413;351413;1
??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAU?$pair@KH@std@@@1@$0A@$$Z$0A@@?$pair@$$CB_KU?$pair@KK@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAU?$pair@KH@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;??$?0V?$tuple@AEB_K@std@@V?$tuple@$$QEAU?$pair@KH@std@@@1@$0A@$$Z$0A@@?$pair@$$CB_KU?$pair@KK@std@@@std@@QEAA@AEAV?$tuple@AEB_K@1@AEAV?$tuple@$$QEAU?$pair@KH@std@@@1@U?$integer_sequence@_K$0A@@1@2@Z;351413;351413;1
??$assign@PEAI$0A@@?$vector@IV?$allocator@I@std@@@std@@QEAAXPEAI0@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::assign<unsigned int * __ptr64,0>(unsigned int * __ptr64,unsigned int * __ptr64) __ptr64;351413;351413;1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;351003;351003;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > > const & __ptr64,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simpl;351003;351003;1
??$forward@VKeyValue@cxxopts@@@std@@YA$$QEAVKeyValue@cxxopts@@AEAV12@@Z;??$forward@VKeyValue@cxxopts@@@std@@YA$$QEAVKeyValue@cxxopts@@AEAV12@@Z;351003;351003;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __i;350592;350592;1
?_Umove@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@PEAU32@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits;350592;350592;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@$$QEA_N@Z;350592;350592;1
?GetStringLength@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAIXZ;unsigned int __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetStringLength(void)const __ptr64;350592;350592;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;350592;350592;1
??4?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAAAEAV01@AEBV01@@Z;class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::operator=(class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const & __ptr64) __ptr64;350182;350182;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryW;350182;350182;1
?max_size@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::max_size(void)const __ptr64;349771;349771;1
??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z;void __cdecl <lambda_e1befb086ad3257e3f042a63030725f7>::operator()(char * __ptr64 const,char const * __ptr64 const,unsigned __int64,unsigned __int64,char)const __ptr64;699132;349566;2
??$swap@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@$0A@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@0@Z;void __cdecl std::swap<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64,0>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> ;349361;349361;1
??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z;char const * __ptr64 __cdecl std::_Unfancy<char const >(char const * __ptr64);348950;348950;1
?_Buy_raw@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Buy_raw(unsigned __int64) __ptr64;348950;348950;1
??_G?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::`scalar deleting destructor'(unsigned int) __ptr64;348950;348950;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsi;348540;348540;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Umap_traits<unsigned __int64,struct Proc;348540;348540;1
?max_size@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::max_size(void)const __ptr64;348540;348540;1
??0?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class ;348540;348540;1
??B?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NXZ;__cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator bool(void)const __ptr64;348129;348129;1
?_Getal@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEBAAEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> const & __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct ;348129;348129;1
??$_Get_size_of_n@$0JA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<144>(unsigned __int64);347719;347719;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;347719;347719;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > const;347719;347719;1
?OnStopActivity@FunctionCompilationsAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl FunctionCompilationsAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;347308;347308;1
??0?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class ;346898;346898;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;346898;346898;1
?_Tidy@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::_Tidy(void) __ptr64;346487;346487;1
?_Umove_if_noexcept1@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Umove_if_noexcept1(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::integral_constant<bool,1>) __ptr64;346077;346077;1
?begin@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > __cdecl std::vector<bool,class std::allocator<bool> >::begin(void) __ptr64;346077;346077;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<uns;346077;346077;1
?max_size@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::max_size(void)const __ptr64;345666;345666;1
??$_Alias_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@PEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@Z;void __cdecl std::_Ptr_base<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Alias_construct_from<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64,class cxxopts::values::standard;345666;345666;1
?_Is_esc@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEBA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Is_esc(void)const __ptr64;345666;345666;1
??$?RV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;bool __cdecl std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::operator()<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std:;1381843;345460;4
?end@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::end(void) __ptr64;345255;345255;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,stru;345255;345255;1
?_Buy_raw@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Buy_raw(unsigned __int64) __ptr64;345255;345255;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base12>(struct std::_List_node<struct std::pair<class std::sha;345255;345255;1
??1ParseResult@cxxopts@@QEAA@XZ;__cdecl cxxopts::ParseResult::~ParseResult(void) __ptr64;345255;345255;1
??$?0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;??$?0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;690100;345050;2
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >,struct std::_Iterator_base0>::_;344845;344845;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Unchecked_splice(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const,struct std::_List_node<class std::basic_string<char,struct;344434;344434;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::_Allocate(void) __ptr64;344434;344434;1
?_Copy_assign@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Copy_assign(class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > const & __ptr64,struct std::integral_constant<bool,0>) __ptr64;344024;344024;1
??$PushUnsafe@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAAPEAULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@2@_K@Z;struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level * __ptr64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::PushUnsafe<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjso;344024;344024;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cl;344024;344024;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char;344024;344024;1
??$_Pop_heap_hole_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@00$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;??$_Pop_heap_hole_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEBU12@V<lambda_9480883bff83c29d8fc89bed48609766>@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@00$$QEAPEBU10@V<lambda_9480883bff83c29d8fc89bed48609766>@@@Z;344024;344024;1
??$swap@PEAVValue@cxxopts@@$0A@@std@@YAXAEAPEAVValue@cxxopts@@0@Z;void __cdecl std::swap<class cxxopts::Value * __ptr64,0>(class cxxopts::Value * __ptr64 & __ptr64,class cxxopts::Value * __ptr64 & __ptr64);344024;344024;1
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z;static void __cdecl std::_Narrow_char_traits<char,int>::assign(char & __ptr64,char const & __ptr64);4813872;343848;14
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct s;343613;343613;1
??$forward_as_tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;??$forward_as_tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;1030429;343476;3
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ;struct std::_Container_base12 const * __ptr64 __cdecl std::_Iterator_base12::_Getcont(void)const __ptr64;3776873;343352;11
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFrontEndFile@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFrontEndFile@Activities@234@@Z@Z;343203;343203;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsi;343203;343203;1
?OnStartActivity@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEBUEVENT_COLLECTION_DATA_TAG@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;343203;343203;1
?NormalizeBoundary@DiyFp@internal@rapidjson@@QEBA?AU123@XZ;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::DiyFp::NormalizeBoundary(void)const __ptr64;343203;343203;1
??0SymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName::SymbolName(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;342792;342792;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@1@$$QEA_N@Z;342792;342792;1
??$_Freenode0@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64,struct std::_List_node<class std::basic_string;684763;342381;2
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::ch;684353;342176;2
??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;341971;341971;1
?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Take_contents(class std::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > & __ptr64) __ptr64;683942;341971;2
??A?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEBAAEBV?$sub_match@PEBD@1@_K@Z;class std::sub_match<char const * __ptr64> const & __ptr64 __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::operator[](unsigned __int64)const __ptr64;341971;341971;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;341971;341971;1
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z;bool __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Equal(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;1367474;341868;4
?_Buy_raw@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Buy_raw(unsigned __int64) __ptr64;341561;341561;1
??$RunContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@$$V@1234@$$QEAVFrontEndFile@Activities@234@4@Z;??$RunContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@V;341561;341561;1
??$?0V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@@Z;??$?0V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@@Z;683121;341560;2
??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;341150;341150;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::_Unchecked_splice(struct std::_List_node<struct std::pair<class;341150;341150;1
?MemberEnd@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA?AV?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@XZ;class rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::MemberEnd(void)const __ptr64;341150;341150;1
??$_Kfn@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0>::_Kfn<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWi;340740;340740;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;340740;340740;1
?_Tidy@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Tidy(void) __ptr64;340740;340740;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct s;340740;340740;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types;340329;340329;1
??$swap@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@std@@YAXAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z;void __cdecl std::swap<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,0>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 & __ptr64);340329;340329;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigne;340329;340329;1
?_Unchecked_begin@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const *;339919;339919;1
??$_Find@_K@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@AEB_K_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Find<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64)const __ptr64;339919;339919;1
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z;__cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Sentry_base::_Sentry_base(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64) __ptr64;1699181;339836;5
??$?0$$V@?$_Compressed_pair@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;339508;339508;1
??$_Pop_heap_hole_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@00$$QEAPEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;??$_Pop_heap_hole_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@00$$QEAPEBU12@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;339508;339508;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > > const & __ptr64);339508;339508;1
?capacity@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::capacity(void)const __ptr64;339508;339508;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > *;339097;339097;1
??$?0M@?$_Compressed_pair@U?$equal_to@_K@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;??$?0M@?$_Compressed_pair@U?$equal_to@_K@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z;1016882;338960;3
??$OnStartActivityImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStartActivityIm;338687;338687;1
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@@Z;void __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Erase_head<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_;338687;338687;1
?_Delete_this@?$_Ref_count_obj2@VOptionDetails@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::OptionDetails>::_Delete_this(void) __ptr64;338687;338687;1
??R?$_Cmp_icase@V?$regex_traits@D@std@@@std@@QEAA_NDD@Z;bool __cdecl std::_Cmp_icase<class std::regex_traits<char> >::operator()(char,char) __ptr64;338687;338687;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsi;338687;338687;1
??0_Node_back@std@@QEAA@I@Z;__cdecl std::_Node_back::_Node_back(unsigned int) __ptr64;338687;338687;1
??$OnSimpleEventImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnSimpleEventImpl;338687;338687;1
?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy_assign(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,struct std::integral_constant<bool,0>) __ptr64;676964;338482;2
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ;__cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::~unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >(void) __ptr64;2030890;338481;6
?Back@EventStack@BuildInsights@Cpp@Microsoft@@QEBA?AVRawEvent@234@XZ;class Microsoft::Cpp::BuildInsights::RawEvent __cdecl Microsoft::Cpp::BuildInsights::EventStack::Back(void)const __ptr64;1015240;338413;3
?_Tidy@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Tidy(void) __ptr64;338276;338276;1
?_Ufill@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@PEAU342@_KU_Value_init_tag@2@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Ufill(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,unsigned __int64,struct std::_Value_init_tag) __ptr64;338276;338276;1
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > > __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,cl;338276;338276;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<st;338276;338276;1
??0?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;338276;338276;1
??1?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA@XZ;virtual __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::~DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >(void) __ptr64;337866;337866;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,stru;337866;337866;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;675731;337865;2
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z;__cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> ><struct std::default_delete<class std::_Facet_base>,0>(class std::_Facet_base * __ptr64) __ptr64;2026374;337729;6
??0?$tuple@AEB_K@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEB_K@std@@QEAA@$$QEAV01@@Z;1012777;337592;3
?OnSimpleEvent@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEBUEVENT_COLLECTION_DATA_TAG@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;337455;337455;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base12>(struct std::_L;337455;337455;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int6;337455;337455;1
??$?0V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@1@@Z;??$?0V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basi;674500;337250;2
?begin@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::alloc;337045;337045;1
??$?0AEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@AEAPEAPEBU01@$0A@@?$pair@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@std@@QEAA@AEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@0@Z;__cdecl std::pair<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64>::pair<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr;337045;337045;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Range_eraser::_Bump_erased(void) __ptr64;337045;337045;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >;337045;337045;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;336634;336634;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > >::deallo;336634;336634;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWi;336634;336634;1
??1?$_Tidy_guard@V?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > >::~_Tidy_guard<class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > >(void) __ptr64;336224;336224;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildI;336224;336224;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::alloc;672448;336224;2
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;672037;336018;2
??$MatchEventInMemberFunction@VFileCompilationsAnalyzer@@XAEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFileCompilationsAnalyzer@@P84@EAAXAEBVBackEndPass@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VFileCompilationsAnalyzer@@XAEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVFileCompilationsAnalyzer@@P84@EAAXAEBVBackEndPass@Activities@012@@Z@Z;335813;335813;1
?_Buy_raw@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Buy_raw(unsigned __int64) __ptr64;335813;335813;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Check_max_size(void)const __ptr64;335403;335403;1
??$move@AEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;335403;335403;1
?_Buy_raw@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<char,class std::allocator<char> >::_Buy_raw(unsigned __int64) __ptr64;335403;335403;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Check_max_size(void)con;335403;335403;1
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAAEADXZ;char & __ptr64 __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator*(void)const __ptr64;335403;335403;1
??$?0$$V@?$_Ref_count_obj2@_N@std@@QEAA@XZ;??$?0$$V@?$_Ref_count_obj2@_N@std@@QEAA@XZ;334992;334992;1
?end@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned lon;334992;334992;1
??$_Destroy_range@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@QEAV10@AEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 const,class std::allocator<class std::sub_match<class std::_String_const_iterator<cl;334992;334992;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >::_Release(void) __ptr64;334992;334992;1
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<cl;334992;334992;1
??$?0AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@1@@Z;??$?0AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThread;334992;334992;1
?_Tidy@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@AEAAXXZ;void __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Tidy(void) __ptr64;334992;334992;1
?MemberEnd@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA?AV?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@XZ;class rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::MemberEnd(void) __ptr64;334582;334582;1
?_Expect@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXW4_Meta_type@2@W4error_type@regex_constants@2@@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Expect(enum std::_Meta_type,enum std::regex_constants::error_type) __ptr64;334582;334582;1
?_Insert@?$_Buf@D@std@@QEAAXD@Z;void __cdecl std::_Buf<char>::_Insert(char) __ptr64;334171;334171;1
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,;334171;334171;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<cl;333761;333761;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;333761;333761;1
??1?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;333761;333761;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(void) __ptr64;333761;333761;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struc;333761;333761;1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const * __ptr64 const) __ptr64;2002153;333692;6
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std:;1333400;333350;4
?Resize@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@AEAAX_K@Z;void __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Resize(unsigned __int64) __ptr64;333350;333350;1
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ;char const * __ptr64 __cdecl std::_String_val<struct std::_Simple_types<char> >::_Myptr(void)const __ptr64;4330267;333097;13
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Unchecked_splice(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >;332940;332940;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;332940;332940;1
??$?0U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > const & __ptr64) __ptr64;332940;332940;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345;332940;332940;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@$$QEA_N@Z;332940;332940;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<st;332529;332529;1
??0?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z;??0?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z;664647;332323;2
??$?0VValue@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@AEBV?$weak_ptr@VValue@cxxopts@@@1@@Z;__cdecl std::shared_ptr<class cxxopts::Value>::shared_ptr<class cxxopts::Value><class cxxopts::Value,0>(class std::weak_ptr<class cxxopts::Value> const & __ptr64) __ptr64;332118;332118;1
??$_Within_limits@PEBDE@std@@YA_NPEBDAEBE@Z;bool __cdecl std::_Within_limits<char const * __ptr64,unsigned char>(char const * __ptr64,unsigned char const & __ptr64);332118;332118;1
??$OnStopActivityImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStopActivityImp;332118;332118;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr;332118;332118;1
??0?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;664237;332118;2
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@PEAPEAVTimelineEntry@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(class TimelineEntry * __ptr64 * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;663827;331913;2
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z;void * __ptr64 __cdecl std::_Allocate<16,struct std::_Default_allocate_traits,0>(unsigned __int64);4977263;331817;15
??R?$default_delete@V_Node_assert@std@@@std@@QEBAXPEAV_Node_assert@1@@Z;void __cdecl std::default_delete<class std::_Node_assert>::operator()(class std::_Node_assert * __ptr64)const __ptr64;331708;331708;1
??$_Copy_construct_from@VOptionDetails@cxxopts@@@?$_Ptr_base@$$CBVOptionDetails@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::OptionDetails const >::_Copy_construct_from<class cxxopts::OptionDetails>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;331708;331708;1
?i64toa@internal@rapidjson@@YAPEAD_JPEAD@Z;char * __ptr64 __cdecl rapidjson::internal::i64toa(__int64,char * __ptr64);331708;331708;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@std@@QEAA@PEAUDataPerFunction@FunctionCompilationsExporter@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;331708;331708;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;1326421;331605;4
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<32>(unsigned __int64);662595;331297;2
??0?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@$$QEAV01@@Z;331297;331297;1
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::end(void) __ptr64;331297;331297;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > const & __ptr64>(class std::_List_un;331297;331297;1
??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V01234@@?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@0@Z;??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V01234@@?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@0@Z;331297;331297;1
??0_Node_if@std@@QEAA@PEAV_Node_base@1@@Z;__cdecl std::_Node_if::_Node_if(class std::_Node_base * __ptr64) __ptr64;330887;330887;1
?_Add_named_class@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXF_N@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_named_class(short,bool) __ptr64;330887;330887;1
??$?0PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@$$QEA_N@Z;330887;330887;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildIns;330887;330887;1
??0?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@@Z;__cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(class std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;330887;330887;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >(struct std::pair<class std::basic_string<c;330476;330476;1
??$construct@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V123@@?$_Default_allocator_traits@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@SAXAEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAV341@@Z;??$construct@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V123@@?$_Default_allocator_traits@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@SAXAEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@1@$$QEAV341@@Z;660953;330476;2
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize(unsigned __int64,char) __ptr64;330476;330476;1
??$_Construct_in_place@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;??$_Construct_in_place@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;330476;330476;1
??$?0V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@@Z;??$?0V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr;330476;330476;1
??$_Construct_in_place@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@AEBV12@@std@@YAXAEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Construct_in_place<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class Timeline;330066;330066;1
??$?0U?$pair@KH@std@@$$V$0A@@?$tuple@$$QEAU?$pair@KH@std@@@std@@QEAA@$$QEAU?$pair@KH@1@@Z;??$?0U?$pair@KH@std@@$$V$0A@@?$tuple@$$QEAU?$pair@KH@std@@@std@@QEAA@$$QEAU?$pair@KH@1@@Z;330066;330066;1
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z;void __cdecl std::_Construct_in_place<char * __ptr64,char * __ptr64 const & __ptr64>(char * __ptr64 & __ptr64,char * __ptr64 const & __ptr64);4290036;330002;13
??$?RVFunction@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFunction@Activities@234@@Z;??$?RVFunction@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFunction@Activities@234@@Z;329655;329655;1
??0?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std;329655;329655;1
??$?0AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@$$Z$$V@?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@V?$tuple@$$V@1@@Z;??$?0AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@$$Z$$V@?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@1@V?$tuple@$$V@1@@Z;329655;329655;1
??$?0$$V@?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;??$?0$$V@?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;329245;329245;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_trai;658490;329245;2
??$forward@AEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YAAEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAU120@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64 __cdecl std::forward<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64);329245;329245;1
?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z;static int __cdecl std::_Narrow_char_traits<char,int>::not_eof(int const & __ptr64);1646225;329245;5
??$_Pop_heap_hole_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@U12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@00$$QEAU12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;??$_Pop_heap_hole_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@U12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@00$$QEAU12@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;328834;328834;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionVa;328834;328834;1
??$_Copy_memmove@PEAKPEAK@std@@YAPEAKPEAK00@Z;unsigned long * __ptr64 __cdecl std::_Copy_memmove<unsigned long * __ptr64,unsigned long * __ptr64>(unsigned long * __ptr64,unsigned long * __ptr64,unsigned long * __ptr64);328834;328834;1
??$_Refancy@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@$0A@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@PEAU120@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Refancy<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,0>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64);328834;328834;1
??$toUTF8String@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@cxxopts@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV12@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::toUTF8String<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);328834;328834;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_;328834;328834;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;657668;328834;2
?max_size@?$_Default_allocator_traits@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@SA_KAEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::max_size(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> const & __ptr64);328834;328834;1
??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@$$QEA_N@Z;328834;328834;1
??$forward_as_tuple@AEAPEBVTimelineEntry@@AEAK@std@@YA?AV?$tuple@AEAPEBVTimelineEntry@@AEAK@0@AEAPEBVTimelineEntry@@AEAK@Z;class std::tuple<class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64> __cdecl std::forward_as_tuple<class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64>(class TimelineEntry const * __ptr64 & __ptr64,unsigned long & __ptr64);328424;328424;1
?_Unchecked_splice@?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@SAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@QEAU32@00@Z;static struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 __cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::_Unchecked_splice(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffs;328424;328424;1
??1?$unordered_map@_KU?$pair@KK@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,struct std::pair<unsigned long,unsigned long>,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::~unordered_map<unsigned __int64,struct std::pair<unsigned long,unsigned long>,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<;328424;328424;1
??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;328424;328424;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;328424;328424;1
??$?0V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA@U_Move_allocator_tag@1@AEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@@Z;__cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > ><class std::allocator<struct std::_List_node<class std::basic_string<char,struct std:;656847;328423;2
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >(void) __ptr64;328013;328013;1
?End@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAPEAV12@XZ;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::End(void) __ptr64;328013;328013;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;327603;327603;1
??$RunContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@$$V@1234@$$QEAVFrontEndPass@Activities@234@$$QEAVTemplateInstantiation@9234@@Z;??$RunContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@C;327192;327192;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<cha;653974;326987;2
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base12>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<uns;326782;326782;1
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z;void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Initcvt(class std::codecvt<char,char,struct _Mbstatet> const & __ptr64) __ptr64;1632266;326453;5
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithL;326371;326371;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@std@@QEAA@PEAUDataPerFile@FileInclusionTimesExporter@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;326371;326371;1
?_Decwref@_Ref_count_base@std@@QEAAXXZ;void __cdecl std::_Ref_count_base::_Decwref(void) __ptr64;326371;326371;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsign;326371;326371;1
?get_implicit_value@?$abstract_value@_N@values@cxxopts@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::values::abstract_value<bool>::get_implicit_value(void)const __ptr64;326371;326371;1
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ;__cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::~sentry(void) __ptr64;1631444;326288;5
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,st;652332;326166;2
?_Link_node@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEAAPEAV_Node_base@2@PEAV32@@Z;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Link_node(class std::_Node_base * __ptr64) __ptr64;325961;325961;1
?end@?$vector@KV?$allocator@K@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::end(void) __ptr64;325961;325961;1
?Duration@?$EventDurationProvider@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > __cdecl Microsoft::Cpp::BuildInsights::Internal::EventDurationProvider<class Microsoft::Cpp::BuildInsights::Activities::Activity>::Duration(void)const __ptr64;651921;325960;2
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@$$QEAV01@@Z;325550;325550;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned _;325550;325550;1
??$make_tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AV?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z;??$make_tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AV?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z;325139;325139;1
?GetString@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAPEBDXZ;char const * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetString(void)const __ptr64;325139;325139;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VPreLTCGOptRef@Activities@BuildInsights@Cpp@Microsoft@@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildI;325139;325139;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;325139;325139;1
??0exception@std@@QEAA@QEBDH@Z;__cdecl std::exception::exception(char const * __ptr64 const,int) __ptr64;4872576;324838;15
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >(struct std::pair<class std::ba;324729;324729;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<cl;324729;324729;1
??1BuildTimelineAnalyzer@@UEAA@XZ;virtual __cdecl BuildTimelineAnalyzer::~BuildTimelineAnalyzer(void) __ptr64;324729;324729;1
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z;static unsigned __int64 __cdecl std::_Narrow_char_traits<char,int>::length(char const * __ptr64 const);3243594;324359;10
??$_Move_unchecked@PEAIPEAI@std@@YAPEAIPEAI00@Z;unsigned int * __ptr64 __cdecl std::_Move_unchecked<unsigned int * __ptr64,unsigned int * __ptr64>(unsigned int * __ptr64,unsigned int * __ptr64,unsigned int * __ptr64);324318;324318;1
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::operator==(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64)const __ptr64;648637;324318;2
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::size(void)const __ptr64;648226;324113;2
??$_Copy_construct_from@VOptionDetails@cxxopts@@@?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::OptionDetails>::_Copy_construct_from<class cxxopts::OptionDetails>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;323908;323908;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Rehash_for_1(void) __ptr64;323908;323908;1
??$?0V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@AEBV01@PEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@Z;__cdecl std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > ><class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<;323908;323908;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr6;323908;323908;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_;647406;323703;2
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,str;323497;323497;1
?transform@?$collate@D@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEBD0@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::collate<char>::transform(char const * __ptr64,char const * __ptr64)const __ptr64;323087;323087;1
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ;void __cdecl std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::_Tidy_init(void) __ptr64;323087;323087;1
??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z;??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std;323087;323087;1
?_Add_char_to_class@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXD@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_char_to_class(char) __ptr64;323087;323087;1
?MemberBegin@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA?AV?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@XZ;class rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::MemberBegin(void) __ptr64;322676;322676;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::__autoclassinit2(unsigned __int64) __ptr64;322676;322676;1
?end@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<un;322676;322676;1
?get_implicit_value@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::get_implicit_value(void)const __ptr64;322676;322676;1
??$_Set_ptr_rep_and_enable_shared@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@AEAAXQEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@1@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,c;322676;322676;1
??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@1@@Z;??$?0V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shar;322676;322676;1
??$_Get_size_of_n@$07@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<8>(unsigned __int64);3223478;322347;10
??R?$_Cmp_icase@V?$_Regex_traits@D@std@@@std@@QEAA_NDD@Z;bool __cdecl std::_Cmp_icase<class std::_Regex_traits<char> >::operator()(char,char) __ptr64;322266;322266;1
?_IdentityEscape@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_IdentityEscape(void) __ptr64;322266;322266;1
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::cha;322266;322266;1
??$assign@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@$0A@@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@QEAAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@1@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::assign<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,0>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64) __ptr64;322266;322266;1
?swap@?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::swap(class std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64) __ptr64;322266;322266;1
?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::close(void) __ptr64;1610097;322019;5
?_Copy_assign@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Copy_assign(class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t;321855;321855;1
??$?0$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;321855;321855;1
?CountDecimalDigit32@internal@rapidjson@@YAII@Z;unsigned int __cdecl rapidjson::internal::CountDecimalDigit32(unsigned int);321855;321855;1
??0?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@$$QEAV01@@Z;321855;321855;1
??$_Destroy_range@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@YAXPEAVKeyValue@cxxopts@@QEAV12@AEAV?$allocator@VKeyValue@cxxopts@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class cxxopts::KeyValue> >(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64 const,class std::allocator<class cxxopts::KeyValue> & __ptr64);321855;321855;1
?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<bool,class std::allocator<bool> >::max_size(void)const __ptr64;321855;321855;1
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Container_proxy_ptr12<class std::allocator<struct std::_Container_proxy> >::~_Container_proxy_ptr12<class std::allocator<struct std::_Container_proxy> >(void) __ptr64;3536304;321482;11
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct;321445;321445;1
?_Getal@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> & __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCo;321445;321445;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<cl;321445;321445;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;321445;321445;1
??$?0V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;??$?0V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;321034;321034;1
??0locale@std@@QEAA@XZ;__cdecl std::locale::locale(void) __ptr64;642068;321034;2
?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct s;321034;321034;1
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z;??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z;321034;321034;1
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@$$QEA_N@Z;320624;320624;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::_Release(void) __ptr64;320624;320624;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::size(void)const __ptr64;320624;320624;1
??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z;bool __cdecl std::_Fgetc<char>(char & __ptr64,struct _iobuf * __ptr64);1603119;320623;5
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Reset_back(void) __ptr64;1601887;320377;5
??$move@AEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;320213;320213;1
?_Beg_expr@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEBA_NXZ;bool __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Beg_expr(void)const __ptr64;320213;320213;1
?WriteIndent@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAAXXZ;void __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteIndent(void) __ptr64;319803;319803;1
?bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std:;319803;319803;1
??$_Copy_backward_memmove@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@PEAPEBU10@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Copy_backward_memmove<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> co;319803;319803;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base12>(struct std::_List_node<s;319392;319392;1
?_Do_ffnx@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_ND@Z;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_ffnx(char) __ptr64;319392;319392;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;319392;319392;1
??0?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@AEBV01@@Z;__cdecl std::tuple<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::tuple<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights:;319392;319392;1
?capacity@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::capacity(void)const __ptr64;319392;319392;1
??$?R_K_K@?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@QEBA_NAEB_K0@Z;bool __cdecl std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >::operator()<unsigned __int64,unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64)const __ptr64;957355;319118;3
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(void) __ptr64;318982;318982;1
??$construct@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;??$construct@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@st;318982;318982;1
??$?0V?$standard_value@_N@values@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@1@@Z;??$?0V?$standard_value@_N@values@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@1@@Z;318982;318982;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<uns;318982;318982;1
??$_Alias_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@1@PEAV?$standard_value@_N@values@cxxopts@@@Z;void __cdecl std::_Ptr_base<class cxxopts::values::standard_value<bool> >::_Alias_construct_from<class cxxopts::values::standard_value<bool> >(class std::shared_ptr<class cxxopts::values::standard_value<bool> > const & __ptr64,class cxxopts::values::standard_value<bool> * __ptr64) __ptr64;318982;318982;1
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z;??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z;2551441;318930;8
??R?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEBA_KAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;unsigned __int64 __cdecl std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >::operator()(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64)const __ptr64;318571;318571;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;637142;318571;2
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;318571;318571;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@0@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsig;318571;318571;1
??$RunContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@$$V@1234@$$QEAVFrontEndPass@Activities@234@$$QEAVSymbolName@SimpleEvents@234@@Z;??$RunContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft;318571;318571;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<;1272641;318160;4
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;318160;318160;1
?begin@?$vector@KV?$allocator@K@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::begin(void) __ptr64;318160;318160;1
?_Unchecked_begin@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;317750;317750;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned _;317750;317750;1
??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z;bool __cdecl std::_Traits_equal<struct std::char_traits<char> >(char const * __ptr64 const,unsigned __int64,char const * __ptr64 const,unsigned __int64);1270589;317647;4
??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@1@$$QEA_N@Z;??$?0AEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@1@$$QEA_N@Z;317339;317339;1
??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;317339;317339;1
??$_Copy_construct_from@$$CBVValue@cxxopts@@@?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@$$CBVValue@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::Value const >::_Copy_construct_from<class cxxopts::Value const >(class std::shared_ptr<class cxxopts::Value const > const & __ptr64) __ptr64;317339;317339;1
??$?0V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAA@U_Move_allocator_tag@1@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class s;317339;317339;1
?_Copy_assign@?$vector@IV?$allocator@I@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Copy_assign(class std::vector<unsigned int,class std::allocator<unsigned int> > const & __ptr64,struct std::integral_constant<bool,0>) __ptr64;316929;316929;1
??$?0PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@1@$$QEA_N@Z;316929;316929;1
??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBI_KPEBU_Container_base12@1@@Z;__cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(unsigned int const * __ptr64,unsigned __int64,struct std::_Container_base12 const * __ptr64) __ptr64;316929;316929;1
??_G_Node_rep@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_rep::`scalar deleting destructor'(unsigned int) __ptr64;316929;316929;1
??$_Copy_construct_from@$$CBVOptionDetails@cxxopts@@@?$_Ptr_base@$$CBVOptionDetails@cxxopts@@@std@@IEAAXAEBV?$shared_ptr@$$CBVOptionDetails@cxxopts@@@1@@Z;void __cdecl std::_Ptr_base<class cxxopts::OptionDetails const >::_Copy_construct_from<class cxxopts::OptionDetails const >(class std::shared_ptr<class cxxopts::OptionDetails const > const & __ptr64) __ptr64;316929;316929;1
??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@1@@Z;??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@$$QEAV?$basic_string@DU?$char;316929;316929;1
??$?0AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@$0A@@?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;__cdecl std::tuple<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64>::tuple<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64><class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64,0>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;316929;316929;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const;633447;316723;2
??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;316518;316518;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::_Release(void) __ptr64;316518;316518;1
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z;__cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >(char const * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;316108;316108;1
??$_Emplace_back@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAX$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;??$_Emplace_back@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAX$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;316108;316108;1
??$?0U?$default_delete@V_Node_assert@std@@@std@@$0A@@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAA@PEAV_Node_assert@1@@Z;__cdecl std::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> ><struct std::default_delete<class std::_Node_assert>,0>(class std::_Node_assert * __ptr64) __ptr64;316108;316108;1
??1?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits;316108;316108;1
??$_Get_size_of_n@$0LI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<184>(unsigned __int64);316108;316108;1
??$assign@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@$0A@@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::assign<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,0>(struct std::_Tgt_state_t<class std::_String_const_iterat;316108;316108;1
?_Make_const_iter@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Make_const_iter(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::a;316108;316108;1
?capacity@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::capacity(void)const __ptr64;315697;315697;1
??$?0AEB_K$$Z$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@@Z;??$?0AEB_K$$Z$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?;315697;315697;1
??$_Convert_size@_K@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Convert_size<unsigned __int64>(unsigned __int64);1894183;315697;6
??$move@AEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@AEAV10@@Z;315287;315287;1
?__autoclassinit2@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@QEAAX_K@Z;void __cdecl std::wstring_convert<class std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,class std::allocator<wchar_t>,class std::allocator<char> >::__autoclassinit2(unsigned __int64) __ptr64;315287;315287;1
??_G?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::codecvt_utf8<wchar_t,1114111,0>::`scalar deleting destructor'(unsigned int) __ptr64;315287;315287;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class;630573;315286;2
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z;unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Calculate_growth(unsigned __int64)const __ptr64;3464871;314988;11
??$forward@VFunction@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFunction@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VFunction@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFunction@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;629752;314876;2
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;314876;314876;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;314876;314876;1
??1Value@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::Value::~Value(void) __ptr64;314876;314876;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr64;314466;314466;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@XZ;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::_Release(void) __ptr64;314466;314466;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;314466;314466;1
?OnStopActivity@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEBUEVENT_COLLECTION_DATA_TAG@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;314466;314466;1
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ;char * __ptr64 __cdecl std::_String_val<struct std::_Simple_types<char> >::_Myptr(void) __ptr64;3457480;314316;11
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;314055;314055;1
??$?C$$CBVValue@cxxopts@@$0A@@?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEBAPEBVValue@cxxopts@@XZ;class cxxopts::Value const * __ptr64 __cdecl std::shared_ptr<class cxxopts::Value const >::operator-><class cxxopts::Value const ,0>(void)const __ptr64;314055;314055;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Rehash_for_1(void) __pt;314055;314055;1
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEBQEAU10@@Z;void __cdecl std::_Construct_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 c;313645;313645;1
??M?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator<(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;313645;313645;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Micro;313645;313645;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Rehash_for_1(void) __ptr64;313645;313645;1
??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@$$QEAU01@@Z;??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@$$QEAU01@@Z;313234;313234;1
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::_Tree<class std::_Tmap_traits<class std::basic_string<char,struc;313234;313234;1
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;626468;313234;2
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,clas;313234;313234;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;626057;313028;2
?default_value@?$abstract_value@_N@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<bool>::default_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;312824;312824;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::;312824;312824;1
??$forward@H@std@@YA$$QEAHAEAH@Z;??$forward@H@std@@YA$$QEAHAEAH@Z;312824;312824;1
?_Total_off@?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_JPEBV?$vector@_NV?$allocator@_N@std@@@2@@Z;__int64 __cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Total_off(class std::vector<bool,class std::allocator<bool> > const * __ptr64)const __ptr64;312413;312413;1
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64>::_Freenode<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,s;312003;312003;1
??$_Emplace_back@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Emplace_back<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64) __ptr64;312003;312003;1
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?;312003;312003;1
??$addressof@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >(class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > & __ptr64);312003;312003;1
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<char> >::_String_val<struct std::_Simple_types<char> >(void) __ptr64;4365983;311855;14
??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAUFileCompilationData@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUFileCompilationData@@@1@@Z;??$?0$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$QEAUFileCompilationData@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$QEAUFileCompilationData@@@1@@Z;311592;311592;1
??$?8VOptionDetails@cxxopts@@V01@@std@@YA_NAEBV?$shared_ptr@VOptionDetails@cxxopts@@@0@0@Z;bool __cdecl std::operator==<class cxxopts::OptionDetails,class cxxopts::OptionDetails>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64);311592;311592;1
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std:;311592;311592;1
??$?0V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@@Z;??$?0V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@@Z;623184;311592;2
?empty@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEBA_NXZ;bool __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::empty(void)const __ptr64;311592;311592;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(void) __ptr64;311592;311592;1
??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@@Z@Z;311592;311592;1
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,;622363;311181;2
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;311181;311181;1
??1?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@rapidjson@@QEAA@XZ;__cdecl rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>::~GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>(void) __ptr64;311181;311181;1
??0?$pair@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@QEAA@$$QEAU01@@Z;??0?$pair@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@QEAA@$$QEAU01@@Z;311181;311181;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;311181;311181;1
?max@?$numeric_limits@E@std@@SAEXZ;static unsigned char __cdecl std::numeric_limits<unsigned char>::max(void);310771;310771;1
?bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_tr;621131;310565;2
??$OnEndAnalysisImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnalysisImpl;310360;310360;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompila;620721;310360;2
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > & __ptr64 __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::operator+=(__int64) __ptr64;310360;310360;1
?_Decref@?$_Ptr_base@_N@std@@IEAAXXZ;void __cdecl std::_Ptr_base<bool>::_Decref(void) __ptr64;310360;310360;1
??0_Root_node@std@@QEAA@XZ;__cdecl std::_Root_node::_Root_node(void) __ptr64;310360;310360;1
??$_Sort_heap_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V<lambda_add3c17bb2999790cf84673b171b0d80>@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0V<lambda_add3c17bb2999790cf84673b171b0d80>@@@Z;void __cdecl std::_Sort_heap_unchecked<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80> >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,class <lambda_add3c17bb2999790cf84673b171b0d80>);310360;310360;1
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0>::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,s;310360;310360;1
??$OnBeginAnalysisImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAnalysisIm;309950;309950;1
??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<char> >(char * __ptr64,char * __ptr64 const,class std::allocator<char> & __ptr64);309950;309950;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > >(void) __ptr64;309950;309950;1
??_G?$collate@D@std@@MEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::collate<char>::`scalar deleting destructor'(unsigned int) __ptr64;309950;309950;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VPass1@Activities@BuildInsights@Cpp@Microsoft@@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Pass1,class Microsoft::Cpp::BuildInsights::Activities::Pass2,class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildIn;309539;309539;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct Fi;309539;309539;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pa;309539;309539;1
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64>::_Freenode<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::c;309539;309539;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Range_eraser::_Range_eraser(class std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::;309129;309129;1
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@@std@@QEAAAEAUHelpGroupDetails@cxxopts@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;struct cxxopts::HelpGroupDetails & __ptr64 __cdecl std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::operator[](class std::basic_string<char,struct std;309129;309129;1
??$?0V?$vector@_KV?$allocator@_K@std@@@std@@@?$_Tuple_val@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;??$?0V?$vector@_KV?$allocator@_K@std@@@std@@@?$_Tuple_val@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@$$QEAV?$vector@_KV?$allocator@_K@std@@@1@@Z;309129;309129;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_bas;309129;309129;1
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z;unsigned __int64 __cdecl std::_String_val<struct std::_Simple_types<char> >::_Clamp_suffix_size(unsigned __int64,unsigned __int64)const __ptr64;1545233;309046;5
??0_Node_end_group@std@@QEAA@W4_Node_type@1@W4_Node_flags@1@PEAV_Node_base@1@@Z;__cdecl std::_Node_end_group::_Node_end_group(enum std::_Node_type,enum std::_Node_flags,class std::_Node_base * __ptr64) __ptr64;308718;308718;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Check_max_size(void)const __ptr64;308718;308718;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >(void) __ptr64;308308;308308;1
??$_Unfancy@UHelpOptionDetails@cxxopts@@@std@@YAPEAUHelpOptionDetails@cxxopts@@PEAU12@@Z;struct cxxopts::HelpOptionDetails * __ptr64 __cdecl std::_Unfancy<struct cxxopts::HelpOptionDetails>(struct cxxopts::HelpOptionDetails * __ptr64);308308;308308;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>;308308;308308;1
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z;void __cdecl std::allocator<wchar_t>::deallocate(wchar_t * __ptr64 const,unsigned __int64) __ptr64;308308;308308;1
?_Swap@?$_Ptr_base@_N@std@@IEAAXAEAV12@@Z;void __cdecl std::_Ptr_base<bool>::_Swap(class std::_Ptr_base<bool> & __ptr64) __ptr64;307897;307897;1
??1?$_Ref_count_obj2@VOptionDetails@cxxopts@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class cxxopts::OptionDetails>::~_Ref_count_obj2<class cxxopts::OptionDetails>(void) __ptr64;307897;307897;1
?empty@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEBA_NXZ;bool __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::empty(void)const __ptr64;307897;307897;1
?SetFinishTimestamp@TimelineEntry@@QEAAXAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@Z;void __cdecl TimelineEntry::SetFinishTimestamp(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64) __ptr64;307897;307897;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;307897;307897;1
?end@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::end(void) __ptr64;307897;307897;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_strin;307487;307487;1
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ;class std::_Facet_base * __ptr64 __cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::release(void) __ptr64;1843278;307213;6
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > const & __ptr64) __ptr64;307076;307076;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Itera;307076;307076;1
??$forward_as_tuple@UFileCompilationData@@@std@@YA?AV?$tuple@$$QEAUFileCompilationData@@@0@$$QEAUFileCompilationData@@@Z;??$forward_as_tuple@UFileCompilationData@@@std@@YA?AV?$tuple@$$QEAUFileCompilationData@@@0@$$QEAUFileCompilationData@@@Z;307076;307076;1
?Empty@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Empty(void)const __ptr64;307076;307076;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr6;307076;307076;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<cha;613741;306870;2
?begin@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::begin(void) __ptr64;306666;306666;1
??0?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class s;306666;306666;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;306666;306666;1
??0bad_alloc@std@@AEAA@QEBD@Z;__cdecl std::bad_alloc::bad_alloc(char const * __ptr64 const) __ptr64;4598752;306583;15
?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV12@@Z;void __cdecl std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Take_contents(class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64) __ptr64;306255;306255;1
??$?0PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@$$QEA_N@Z;??$?0PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@$$QEA_N@Z;306255;306255;1
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z;bool __cdecl std::operator<<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);306255;306255;1
?bucket@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std;306255;306255;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64);305845;305845;1
??$?0U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@1@@?$_Compressed_pair@U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V_Node_assert@std@@@1@$$QEAPEAV_Node_assert@1@@Z;??$?0U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@1@@?$_Compressed_pair@U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V_Node_assert@std@@@1@$$QEAPEAV_Node_assert@1@@Z;305845;305845;1
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64);305845;305845;1
?_Decref@?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,cl;305845;305845;1
??0_Range_eraser@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@QEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;305845;305845;1
??$?0V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@@Z;??$?0V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V;305434;305434;1
??A?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAAAEAVOptionValue@cxxopts@@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;class cxxopts::OptionValue & __ptr64 __cdecl std::unordered_map<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::operator[](class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;305434;305434;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64);305434;305434;1
??$?R_K@?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >::operator()<unsigned __int64>(unsigned __int64 const & __ptr64)const __ptr64;915481;305160;3
??$_Unfancy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@PEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::_Unfancy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std:;305023;305023;1
??$?0V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@?$_Tuple_val@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@1@@Z;??$?0V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@?$_Tuple_val@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$al;305023;305023;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThread;305023;305023;1
??1?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAA@XZ;virtual __cdecl std::codecvt_utf8<wchar_t,1114111,0>::~codecvt_utf8<wchar_t,1114111,0>(void) __ptr64;305023;305023;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > >::~_Alloc_construct_ptr<class std:;305023;305023;1
?make_storage@OptionDetails@cxxopts@@QEBA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::OptionDetails::make_storage(void)const __ptr64;305023;305023;1
??0?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@VValue@cxxopts@@@std@@QEAA@$$QEAV01@@Z;304613;304613;1
?_Do_assert_group@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAX_N@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_assert_group(bool) __ptr64;304613;304613;1
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::begin(void) __ptr64;304613;304613;1
?__autoclassinit2@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAX_K@Z;void __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::__autoclassinit2(unsigned __int64) __ptr64;1522244;304448;5
??0_Node_capture@std@@QEAA@I@Z;__cdecl std::_Node_capture::_Node_capture(unsigned int) __ptr64;304202;304202;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::_Release(void) __ptr64;304202;304202;1
??$_Emplace_back@UDataPerFile@FileInclusionTimesExporter@@@?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAAX$$QEAUDataPerFile@FileInclusionTimesExporter@@@Z;??$_Emplace_back@UDataPerFile@FileInclusionTimesExporter@@@?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAAX$$QEAUDataPerFile@FileInclusionTimesExporter@@@Z;304202;304202;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocato;304202;304202;1
??$forward_as_tuple@V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@0@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@0@@Z;??$forward_as_tuple@V?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@YA?AV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@0@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$ve;304202;304202;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>(struct std::_List_node<struct std::pair<class std::share;303792;303792;1
??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@U?$Group@$$V@1234@$$QEAVActivity@Activities@234@4@Z;??$RunContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVEventStack@234@_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimeline;303792;303792;1
??B?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NXZ;__cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::operator bool(void)const __ptr64;303792;303792;1
??0?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA@AEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@1@PEAVCrtAllocator@1@_K@Z;__cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>(class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::c;303792;303792;1
??$?0V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$_Tuple_val@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;??$?0V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$_Tuple_val@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@Bui;303792;303792;1
?_Throw_range_error@std@@YAXQEBD@Z;void __cdecl std::_Throw_range_error(char const * __ptr64 const);303792;303792;1
??_G?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;302971;302971;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Max_bucket_size(void)const __ptr64;302971;302971;1
?_Delete_this@?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Delete_this(void) __ptr64;302971;302971;1
??$?0V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@@Z;??$?0V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@@Z;302971;302971;1
??0?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >(void) __ptr64;605120;302560;2
??$?0V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@1@@Z;??$?0V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@1@@Z;302560;302560;1
?end@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > > __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::end(void) __ptr64;302560;302560;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@XZ;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >::_Release(void) __ptr64;302560;302560;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@2@AEAU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,st;604710;302355;2
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >::_Allocate(void) __ptr64;302150;302150;1
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@PEAK@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@$$QEAPEAK@Z;??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@PEAK@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@$$QEAPEAK@Z;302150;302150;1
??$Run@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Mic;302150;302150;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;302150;302150;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;302150;302150;1
??0?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@$$QEAV01@@Z;302150;302150;1
??$?0V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@$0A@@?$weak_ptr@VValue@cxxopts@@@std@@QEAA@AEBV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;__cdecl std::weak_ptr<class cxxopts::Value>::weak_ptr<class cxxopts::Value><class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>(class std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64) __ptr64;302150;302150;1
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@P;604299;302149;2
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::ch;301739;301739;1
??0?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAV01@@Z;301739;301739;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;301739;301739;1
??$?0AEAPEAUDataPerFunction@FunctionCompilationsExporter@@AEAPEAU01@$0A@@?$pair@PEAUDataPerFunction@FunctionCompilationsExporter@@PEAU12@@std@@QEAA@AEAPEAUDataPerFunction@FunctionCompilationsExporter@@0@Z;__cdecl std::pair<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64>::pair<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64><struct FunctionCompilationsExporter::DataPerFunction * __ptr64 & __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64 & __ptr64,0>(struct FunctionCompilationsExporter::DataPerFunction * __ptr64 & __ptr64,struct Fun;301739;301739;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<cha;603068;301534;2
??$Pop@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAAPEAULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@2@_K@Z;struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level * __ptr64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Pop<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtA;301329;301329;1
??$Forward@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@?$HandlerForwarder@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SAX$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVFrontEndPass@Activities@345@$$QEAVTemplateInstantiation@8345@@Z;??$Forward@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@?$HandlerForwarder@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@;301329;301329;1
?implicit_value@?$abstract_value@_N@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<bool>::implicit_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;301329;301329;1
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@XZ;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::_Release(void) __ptr64;301329;301329;1
??$construct@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@U123@@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@$$QEAU341@@Z;??$construct@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@U123@@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@;301329;301329;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std:;301329;301329;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@2@AEAU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > * __ptr64>::pointer_to(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const;301329;301329;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64 const & __ptr64);300918;300918;1
??$?0AEAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@AEAPEAPEBU01@$0A@@?$pair@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@@std@@QEAA@AEAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0@Z;__cdecl std::pair<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64>::pair<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64><struct ProcessIdThreadIdRecalculation::EntryWithLoca;300918;300918;1
?_Getal@?$vector@KV?$allocator@K@std@@@std@@AEAAAEAV?$allocator@K@2@XZ;class std::allocator<unsigned long> & __ptr64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Getal(void) __ptr64;300918;300918;1
?_Unchecked_end@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > __cdecl std::list<struct std::pair<u;300918;300918;1
?_Unchecked_begin@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > __cdecl std::list<struct std::pair<u;300508;300508;1
??$_Emplace_back@VKeyValue@cxxopts@@@?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAAX$$QEAVKeyValue@cxxopts@@@Z;??$_Emplace_back@VKeyValue@cxxopts@@@?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAAX$$QEAVKeyValue@cxxopts@@@Z;300508;300508;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;300508;300508;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_p;300508;300508;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VBackEndPass@2345@VFrontEndFile@2345@VTemplateInstantiation@2345@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass,class Microsoft::Cpp::BuildInsights::Activities::BackEndPass,class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation,class Microsoft::Cpp::BuildInsights::Activities::Function,class Microsoft::Cpp::BuildInsights::Activities::Pass1;300508;300508;1
?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_trai;300508;300508;1
??$_Copy_memmove@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@@std@@YAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@00@Z;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::_Copy_memmove<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64>(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLo;300508;300508;1
?_Move_construct@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Move_construct(class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > & __ptr64,struct std::integral_constant<bool,1>) __ptr64;601015;300507;2
??$_Sort_heap_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@0V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@@Z;void __cdecl std::_Sort_heap_unchecked<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class <lambda_a2eef00bb02357da46910e5eb8f40a83>);300097;300097;1
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z;??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z;300097;300097;1
??_Gruntime_error@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::runtime_error::`scalar deleting destructor'(unsigned int) __ptr64;300097;300097;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > ;300097;300097;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;299687;299687;1
?end@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::end(void)const __ptr64;299687;299687;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,c;299687;299687;1
??0?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >(void) __ptr64;299687;299687;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;299687;299687;1
??$_Get_size_of_n@$0DI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<56>(unsigned __int64);898239;299413;3
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_stri;299276;299276;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >(void) __ptr64;299276;299276;1
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;299276;299276;1
??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator==(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;299276;299276;1
?length@?$sub_match@PEBD@std@@QEBA_JXZ;__int64 __cdecl std::sub_match<char const * __ptr64>::length(void)const __ptr64;299276;299276;1
??$construct@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@PEAVIAnalyzer@345@@?$_Default_allocator_traits@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$QEAPEAVIAnalyzer@567@@Z;??$construct@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@PEAVIAnalyzer@345@@?$_Default_allocator_traits@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$QEAPEAVIAnalyz;299276;299276;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> & __ptr64);299276;299276;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Max_bucket_size(void)const __ptr64;299276;299276;1
??$Run@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp;299276;299276;1
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::alloca;598142;299071;2
??$_Copy_memmove@PEAPEAVTimelineEntry@@PEAPEAV1@@std@@YAPEAPEAVTimelineEntry@@PEAPEAV1@00@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Copy_memmove<class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64>(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64);598141;299070;2
?_Check_max_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;298866;298866;1
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;298866;298866;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_;298866;298866;1
??$?RV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@std@@QEBA_KAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;unsigned __int64 __cdecl std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >::operator()<class std::shared_ptr<class cxxopts::OptionDetails> >(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64)const __ptr64;298866;298866;1
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@PEAU01@@Z;static void __cdecl std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64>::_Freenode0<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<uns;298866;298866;1
??0?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV01@@Z;896597;298865;3
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_tra;597320;298660;2
??1_Node_assert@std@@UEAA@XZ;virtual __cdecl std::_Node_assert::~_Node_assert(void) __ptr64;298455;298455;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::alloc;596910;298455;2
??$forward@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@AEAV10@@Z;596910;298455;2
?_Delete_this@?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Delete_this(void) __ptr64;298455;298455;1
??0?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >(void) __ptr64;298455;298455;1
??$Run@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Mi;298455;298455;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VLTCG@Activities@BuildInsights@Cpp@Microsoft@@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights:;298044;298044;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;298044;298044;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;298044;298044;1
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ;struct std::default_delete<class std::_Facet_base> & __ptr64 __cdecl std::_Compressed_pair<struct std::default_delete<class std::_Facet_base>,class std::_Facet_base * __ptr64,1>::_Get_first(void) __ptr64;1788267;298044;6
?end@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > __cdecl std::_Hash<class std::_Umap_traits<uns;298044;298044;1
??0bad_cast@std@@QEAA@XZ;__cdecl std::bad_cast::bad_cast(void) __ptr64;1786625;297770;6
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ;297634;297634;1
??$_Emplace_back@V?$sub_match@PEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAX$$QEAV?$sub_match@PEBD@1@@Z;??$_Emplace_back@V?$sub_match@PEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAX$$QEAV?$sub_match@PEBD@1@@Z;297634;297634;1
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<wchar_t> >::_String_val<struct std::_Simple_types<wchar_t> >(void) __ptr64;297634;297634;1
??$_Construct_in_place@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@std@@YAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;??$_Construct_in_place@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@std@@YAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;297634;297634;1
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base12>::~_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >;297634;297634;1
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<16>(unsigned __int64);4464508;297633;15
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,1>::_Get_first(void) __ptr;594857;297428;2
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z;??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z;297223;297223;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Range_eraser::_Range_eraser(;297223;297223;1
?_Decref@?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::Value const >::_Decref(void) __ptr64;297223;297223;1
?_Make_iter@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Make_iter(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64)const __ptr64;297223;297223;1
?end@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::end;297223;297223;1
??$OnBeginAnalysisPassImpl@$0A@@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAnalysisPa;297223;297223;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$sub_match@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@PEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$sub_match@PEBD@std@@@2@XZ;class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::sub_match<char const * __ptr64> >,class std::_Vector_val<struct std::_Simple_types<class std::sub_match<char const * __ptr64> > >,1>::_Get_first(void) __ptr64;297223;297223;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >::operator!=(class std::_List_const;297223;297223;1
??0IAnalyzer@BuildInsights@Cpp@Microsoft@@QEAA@XZ;__cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::IAnalyzer(void) __ptr64;1486118;297223;5
?_Umove_if_noexcept@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K00@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Umove_if_noexcept(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64,unsigned __int64 * __ptr64) __ptr64;297223;297223;1
??1IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA@XZ;virtual __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::~IAnalyzer(void) __ptr64;1485706;297141;5
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z;void __cdecl std::_Delete_plain_internal<class std::allocator<struct std::_Container_proxy> >(class std::allocator<struct std::_Container_proxy> & __ptr64,struct std::_Container_proxy * __ptr64 const);4453424;296894;15
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std:;296813;296813;1
??$_Copy_memmove@PEBDPEAD@std@@YAPEADPEBD0PEAD@Z;char * __ptr64 __cdecl std::_Copy_memmove<char const * __ptr64,char * __ptr64>(char const * __ptr64,char const * __ptr64,char * __ptr64);296813;296813;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VC2DLL@Activities@BuildInsights@Cpp@Microsoft@@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(;296813;296813;1
??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@$$QEAU31@@Z;??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@$$QEAU31@@Z;296813;296813;1
??_Gbad_weak_ptr@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::bad_weak_ptr::`scalar deleting destructor'(unsigned int) __ptr64;296402;296402;1
??0?$_Vector_val@U?$_Simple_types@V?$sub_match@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::sub_match<char const * __ptr64> > >::_Vector_val<struct std::_Simple_types<class std::sub_match<char const * __ptr64> > >(void) __ptr64;296402;296402;1
?_Get_first@?$_Compressed_pair@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@UHelpOptionDetails@cxxopts@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UHelpOptionDetails@cxxopts@@@2@XZ;class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct cxxopts::HelpOptionDetails>,class std::_Vector_val<struct std::_Simple_types<struct cxxopts::HelpOptionDetails> >,1>::_Get_first(void) __ptr64;296402;296402;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allo;296402;296402;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(void) __ptr64;296402;296402;1
??R?$_Cmp_collate@V?$regex_traits@D@std@@@std@@QEAA_NDD@Z;bool __cdecl std::_Cmp_collate<class std::regex_traits<char> >::operator()(char,char) __ptr64;296402;296402;1
??$get@$0A@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@0@$$QEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@0@@Z;??$get@$0A@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@0@$$QEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_K;295992;295992;1
??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<char> >::_Vector_val<struct std::_Simple_types<char> >(void) __ptr64;295992;295992;1
??$forward@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YAAEAV?$shared_ptr@VOptionDetails@cxxopts@@@0@AEAV10@@Z;class std::shared_ptr<class cxxopts::OptionDetails> & __ptr64 __cdecl std::forward<class std::shared_ptr<class cxxopts::OptionDetails> & __ptr64>(class std::shared_ptr<class cxxopts::OptionDetails> & __ptr64);295992;295992;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > ;295992;295992;1
??0?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0>::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_co;295992;295992;1
??$_Ucopy@PEBD@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEBD0PEAD@Z;char * __ptr64 __cdecl std::vector<char,class std::allocator<char> >::_Ucopy<char const * __ptr64>(char const * __ptr64,char const * __ptr64,char * __ptr64) __ptr64;295992;295992;1
??$_Emplace_back@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;??$_Emplace_back@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;295992;295992;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocat;295992;295992;1
?size@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::size(void)const __ptr64;591573;295786;2
??$Forward@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$HandlerForwarder@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SAX$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVFrontEndFile@Activities@345@1@Z;??$Forward@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$HandlerForwarder@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@;295581;295581;1
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >(void) __ptr64;295581;295581;1
??0?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@$$QEAV01@@Z;??0?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@$$QEAV01@@Z;295581;295581;1
??$_Emplace_back@UHelpOptionDetails@cxxopts@@@?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAX$$QEAUHelpOptionDetails@cxxopts@@@Z;??$_Emplace_back@UHelpOptionDetails@cxxopts@@@?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAX$$QEAUHelpOptionDetails@cxxopts@@@Z;295581;295581;1
??$?0V?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_K@1@@Z;??$?0V?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_K@1@@Z;295581;295581;1
??$_Destroy_in_place@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@YAXAEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@0@@Z;void __cdecl std::_Destroy_in_place<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<;295581;295581;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > * __;295581;295581;1
??$_Construct_in_place@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@AEBV123@@std@@YAXAEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@AEBV123@@Z;void __cdecl std::_Construct_in_place<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64,class cxxopts::values::standard_value<class std::basic_string;295581;295581;1
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);1476675;295335;5
??$_Construct_in_place@V?$standard_value@_N@values@cxxopts@@PEA_N@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@$$QEAPEA_N@Z;??$_Construct_in_place@V?$standard_value@_N@values@cxxopts@@PEA_N@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@$$QEAPEA_N@Z;295171;295171;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::_Allocate(void) __ptr64;295171;295171;1
??0?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<unsigned __int64> >::_Vector_val<struct std::_Simple_types<unsigned __int64> >(void) __ptr64;295171;295171;1
??1?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::~_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::;295171;295171;1
??0_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@AEBU012@@Z;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t::_Grp_t(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t const & __ptr64) __ptr64;294760;294760;1
??0runtime_error@std@@QEAA@PEBD@Z;__cdecl std::runtime_error::runtime_error(char const * __ptr64) __ptr64;294350;294350;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List;588700;294350;2
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::size(void)const __ptr64;294350;294350;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > const & __ptr64>(class std::_List_unchecked_ite;294350;294350;1
??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z;??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z;294350;294350;1
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::a;294350;294350;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U_Loop_vals_t@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Loop_vals_t@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U_Loop_vals_t@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Loop_vals_t@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;294350;294350;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;294350;294350;1
??$_Construct_in_place@V?$standard_value@_N@values@cxxopts@@AEBV123@@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@AEBV123@@Z;void __cdecl std::_Construct_in_place<class cxxopts::values::standard_value<bool>,class cxxopts::values::standard_value<bool> const & __ptr64>(class cxxopts::values::standard_value<bool> & __ptr64,class cxxopts::values::standard_value<bool> const & __ptr64);294350;294350;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > ;294350;294350;1
?_Make_const_iter@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Make_const_iter(struct std::_List_node<struct std::pair<class ;293939;293939;1
??$?0V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@@Z;??$?0V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@@Z;293939;293939;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_It;587878;293939;2
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndFile@2345@VTemplateInstantiation@2345@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::BackEndPass,class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation,class Microsoft::Cpp::BuildInsights::Activities::Function,class Microsoft::Cpp::BuildInsights::Activities::Pass1,class Microsoft::Cpp::BuildInsights::Activities::Pass2,class ;293529;293529;1
??$_Emplace_back@AEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAXAEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Emplace_back<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64) __ptr64;293529;293529;1
??__ELQUOTE@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic initializer for 'LQUOTE''(void);293529;293529;1
?_Check_max_size@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;293118;293118;1
?_Cache_locale@?$_Regex_traits@D@std@@AEAAXXZ;void __cdecl std::_Regex_traits<char>::_Cache_locale(void) __ptr64;293118;293118;1
??$_Get_size_of_n@$0II@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<136>(unsigned __int64);293118;293118;1
??$?0V?$allocator@VKeyValue@cxxopts@@@std@@$$V@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@VKeyValue@cxxopts@@@1@@Z;??$?0V?$allocator@VKeyValue@cxxopts@@@std@@$$V@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@VKeyValue@cxxopts@@@1@@Z;293118;293118;1
??$forward_as_tuple@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA?AV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@$$QEAV?$vector@_KV?$allocator@_K@std@@@0@@Z;??$forward_as_tuple@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA?AV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@$$QEAV?$vector@_KV?$allocator@_K@std@@@0@@Z;293118;293118;1
??$?0AEAVTimelineEntry@@$0A@@?$tuple@AEAVTimelineEntry@@@std@@QEAA@AEAVTimelineEntry@@@Z;__cdecl std::tuple<class TimelineEntry & __ptr64>::tuple<class TimelineEntry & __ptr64><class TimelineEntry & __ptr64,0>(class TimelineEntry & __ptr64) __ptr64;293118;293118;1
?__autoclassinit2@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;293118;293118;1
??G?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_JAEBV01@@Z;__int64 __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator-(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;293118;293118;1
??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@@Z@Z;293118;293118;1
??$?0AEAPEAUDataPerFile@FileInclusionTimesExporter@@AEAPEAU01@$0A@@?$pair@PEAUDataPerFile@FileInclusionTimesExporter@@PEAU12@@std@@QEAA@AEAPEAUDataPerFile@FileInclusionTimesExporter@@0@Z;__cdecl std::pair<struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64>::pair<struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64><struct FileInclusionTimesExporter::DataPerFile * __ptr64 & __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64 & __ptr64,0>(struct FileInclusionTimesExporter::DataPerFile * __ptr64 & __ptr64,struct FileInclusionTimesExporter::DataPerFile * __p;292708;292708;1
??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@@Z;??$?RVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndFile@Activities@234@@Z;292708;292708;1
??$?0$$V@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;292708;292708;1
??0HelpGroupDetails@cxxopts@@QEAA@XZ;__cdecl cxxopts::HelpGroupDetails::HelpGroupDetails(void) __ptr64;292708;292708;1
?_Getal@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,;292708;292708;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class ;878123;292707;3
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z;3511259;292604;12
?_Advance@?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Advance(unsigned __int64) __ptr64;292297;292297;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::al;292297;292297;1
??$_Copy_backward_memmove@PEAUDataPerFile@FileInclusionTimesExporter@@PEAU12@@std@@YAPEAUDataPerFile@FileInclusionTimesExporter@@PEAU12@00@Z;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::_Copy_backward_memmove<struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64>(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64);292297;292297;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::c;584184;292092;2
?_Umove_if_noexcept@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI00@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Umove_if_noexcept(unsigned int * __ptr64,unsigned int * __ptr64,unsigned int * __ptr64) __ptr64;291887;291887;1
??$construct@UDataPerFunction@FunctionCompilationsExporter@@U12@@?$_Default_allocator_traits@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@SAXAEAV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@1@QEAUDataPerFunction@FunctionCompilationsExporter@@$$QEAU34@@Z;??$construct@UDataPerFunction@FunctionCompilationsExporter@@U12@@?$_Default_allocator_traits@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@SAXAEAV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@1@QEAUDataPerFunction@FunctionCompilationsExporter@@$$QEAU34@@Z;291887;291887;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsig;291887;291887;1
??$Top@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAAPEAULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@2@XZ;struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level * __ptr64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Top<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtA;291887;291887;1
?_Copy_assign@?$vector@_NV?$allocator@_N@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z;void __cdecl std::vector<bool,class std::allocator<bool> >::_Copy_assign(class std::vector<bool,class std::allocator<bool> > const & __ptr64,struct std::integral_constant<bool,0>) __ptr64;291887;291887;1
?_Unchecked_begin@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Unchecked_beg;291887;291887;1
?Flush@?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@QEAAXXZ;void __cdecl rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >::Flush(void) __ptr64;291476;291476;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VOptLBR@Activities@BuildInsights@Cpp@Microsoft@@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Micros;291476;291476;1
??0?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRec;291476;291476;1
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;291476;291476;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Range_eraser::_Range_eraser(class std::list<struct std::pair<unsigned __int64 const ,struct Pro;291476;291476;1
?end@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::end(void) __ptr64;291476;291476;1
?bucket@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;291065;291065;1
?release@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAAPEAV_Node_assert@2@XZ;class std::_Node_assert * __ptr64 __cdecl std::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >::release(void) __ptr64;291065;291065;1
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Getal(void) __ptr64;291065;291065;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64>::_Release(void) __ptr64;291065;291065;1
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;291065;291065;1
??$?0AEBKAEAK$0A@@?$pair@KK@std@@QEAA@AEBKAEAK@Z;__cdecl std::pair<unsigned long,unsigned long>::pair<unsigned long,unsigned long><unsigned long const & __ptr64,unsigned long & __ptr64,0>(unsigned long const & __ptr64,unsigned long & __ptr64) __ptr64;291065;291065;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_p;291065;291065;1
??$?0AEB_K$$Z$$QEAU?$pair@KK@std@@@?$pair@$$CB_KU?$pair@KK@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAU?$pair@KK@std@@@1@@Z;??$?0AEB_K$$Z$$QEAU?$pair@KK@std@@@?$pair@$$CB_KU?$pair@KK@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAU?$pair@KK@std@@@1@@Z;291065;291065;1
??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z;__cdecl std::fpos<struct _Mbstatet>::fpos<struct _Mbstatet>(struct _Mbstatet,__int64) __ptr64;1454506;290901;5
??_GFileCompilationsAnalyzer@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl FileCompilationsAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;290655;290655;1
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;290655;290655;1
??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;290655;290655;1
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > >(void) __ptr64;290655;290655;1
??0?$GenericStringRef@D@rapidjson@@QEAA@PEBDI@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char>(char const * __ptr64,unsigned int) __ptr64;290655;290655;1
??1?$collate@D@std@@MEAA@XZ;virtual __cdecl std::collate<char>::~collate<char>(void) __ptr64;290655;290655;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned;290655;290655;1
??0?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >(void) __ptr64;290655;290655;1
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<cla;290655;290655;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Max_bucket_size(void) __ptr64;290655;290655;1
??0?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@AEBV01234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildI;290655;290655;1
??$move@AEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@std@@@std@@YA$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@0@AEAV10@@Z;??$move@AEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@std@@@std@@YA$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@0@AEAV10@@Z;290244;290244;1
?GetThreadId@TimelineEntry@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl TimelineEntry::GetThreadId(void)const __ptr64;290244;290244;1
?bucket@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$shared_ptr@VOptionDetails@cxxopts@@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::bucket(class;290244;290244;1
??$forward@UDataPerFunction@FunctionCompilationsExporter@@@std@@YA$$QEAUDataPerFunction@FunctionCompilationsExporter@@AEAU12@@Z;??$forward@UDataPerFunction@FunctionCompilationsExporter@@@std@@YA$$QEAUDataPerFunction@FunctionCompilationsExporter@@AEAU12@@Z;290244;290244;1
?insert@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;struct std::pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,bool> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_;290244;290244;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;289834;289834;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 & __ptr64);289834;289834;1
??$forward@AEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YAAEAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAPEAPEBU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 & __ptr64 __cdecl std::forward<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 & __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationDa;289834;289834;1
??0?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV01@@Z;579257;289628;2
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z;void __cdecl <lambda_66f57f934f28d61049862f64df852ff0>::operator()(char * __ptr64 const,unsigned __int64,char const * __ptr64 const)const __ptr64;1737361;289560;6
?_Delete_this@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<bool> >::_Delete_this(void) __ptr64;289423;289423;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::al;289423;289423;1
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Check_max_size(void)const __ptr64;289423;289423;1
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::construct<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,;289423;289423;1
??$Reserve@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Reserve<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level>(unsigned __int64) __ptr64;289423;289423;1
??$_Emplace_back@UDataPerFunction@FunctionCompilationsExporter@@@?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAAX$$QEAUDataPerFunction@FunctionCompilationsExporter@@@Z;??$_Emplace_back@UDataPerFunction@FunctionCompilationsExporter@@@?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAAX$$QEAUDataPerFunction@FunctionCompilationsExporter@@@Z;289423;289423;1
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z;__cdecl std::fpos<struct _Mbstatet>::fpos<struct _Mbstatet>(__int64) __ptr64;1446707;289341;5
??$?0V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V01@$0A@@?$pair@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@QEAA@XZ;__cdecl std::pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > ><class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_Strin;289013;289013;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >(void) __ptr64;289013;289013;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::size(void)const __ptr64;289013;289013;1
?_Make_iter@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@@Z;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Make_iter(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<cha;289013;289013;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::;578026;289013;2
??$_Copy_memmove@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@PEAPEBU10@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Copy_memmove<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __p;289013;289013;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;289013;289013;1
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z;void __cdecl std::default_delete<class std::_Facet_base>::operator()(class std::_Facet_base * __ptr64)const __ptr64;1733665;288944;6
?_Umove_if_noexcept1@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Umove_if_noexcept1(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,struct std::integral_constant<bool,1>) __ptr64;577615;288807;2
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > const & __ptr64);288602;288602;1
?capacity@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::capacity(void)const __ptr64;288602;288602;1
??_G?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::`scalar deleting destructor'(unsigned int) __ptr64;288602;288602;1
?SetParent@TimelineEntry@@QEAAXPEAV1@@Z;void __cdecl TimelineEntry::SetParent(class TimelineEntry * __ptr64) __ptr64;288602;288602;1
?_Unchecked_begin@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;288602;288602;1
??1?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::~unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigne;288602;288602;1
??0SimpleEvent@SimpleEvents@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::SimpleEvents::SimpleEvent::SimpleEvent(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;288602;288602;1
??$_Copy_unchecked@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@PEAU123@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAU120@00@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Copy_unchecked<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class s;288602;288602;1
??$get@$0A@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z;??$get@$0A@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$b;288602;288602;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>(struct std::_List_node<str;288192;288192;1
??0?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@QEAA@AEBV012@@Z;__cdecl cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64) __ptr64;288192;288192;1
??$_Construct_in_place@_N$$V@std@@YAXAEA_N@Z;??$_Construct_in_place@_N$$V@std@@YAXAEA_N@Z;288192;288192;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Rehash_for_1(void) __ptr64;288192;288192;1
?shared_from_this@?$enable_shared_from_this@VValue@cxxopts@@@std@@QEAA?AV?$shared_ptr@VValue@cxxopts@@@2@XZ;class std::shared_ptr<class cxxopts::Value> __cdecl std::enable_shared_from_this<class cxxopts::Value>::shared_from_this(void) __ptr64;288192;288192;1
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z;??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z;2303892;287986;8
??_0?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEB_J@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > & __ptr64 __cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000000> >::operator/=(__int64 const & __ptr64) __ptr64;575973;287986;2
??$_Sort_heap_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@V<lambda_b68333ea59420deb7dec0041da4f8963>@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@0V<lambda_b68333ea59420deb7dec0041da4f8963>@@@Z;void __cdecl std::_Sort_heap_unchecked<struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,class <lambda_b68333ea59420deb7dec0041da4f8963>);287781;287781;1
?bucket@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_t;287781;287781;1
?pointer_to@?$pointer_traits@PEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@SAPEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@2@AEBU32@@Z;static struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const * __ptr64>::pointer_to(struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const & __ptr64);287781;287781;1
?_Getal@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > const & __ptr64 __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Getal(void)const __ptr64;287781;287781;1
??$move@AEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;287781;287781;1
??$construct@U_Grp_t@?$_Tgt_state_t@PEBD@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@PEBD@1@@Z;??$construct@U_Grp_t@?$_Tgt_state_t@PEBD@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@PEBD@1@@Z;287371;287371;1
??1_Clear_guard@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;287371;287371;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Max_bucket_size(void) __ptr64;287371;287371;1
??0?$shared_ptr@_N@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@_N@std@@QEAA@$$QEAV01@@Z;287371;287371;1
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPEAKQEAKAEAV?$allocator@K@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<unsigned long> >(unsigned long * __ptr64,unsigned long * __ptr64 const,class std::allocator<unsigned long> & __ptr64);287371;287371;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VFrontEndFile@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVFrontEndFile@Activities@234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microso;287371;287371;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_trait;287371;287371;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;286960;286960;1
??$?0V?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@I@1@@Z;??$?0V?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@I@1@@Z;286960;286960;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;286960;286960;1
?push_back@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAX$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@@Z;?push_back@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAX$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@@Z;286960;286960;1
??$forward@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@0@AEAV10@@Z;??$forward@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@0@AEAV10@@Z;286960;286960;1
?_Unchecked_end@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Unchecked_end(void) __ptr64;286960;286960;1
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z;static char * __ptr64 __cdecl std::_Narrow_char_traits<char,int>::move(char * __ptr64 const,char const * __ptr64 const,unsigned __int64);3154097;286736;11
??1argument_incorrect_type@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::argument_incorrect_type::~argument_incorrect_type(void) __ptr64;286550;286550;1
??0?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAA@AEBV01@@Z;__cdecl std::shared_ptr<class cxxopts::OptionDetails>::shared_ptr<class cxxopts::OptionDetails>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;286550;286550;1
??$forward@AEBQEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const & __ptr64);286550;286550;1
?capacity@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::capacity(void)const __ptr64;286550;286550;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > * __ptr64 __cdecl std::allocator<clas;286550;286550;1
??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Micro;286550;286550;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::;286550;286550;1
?_Umove_if_noexcept@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@00@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Umove_if_noexcept(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64) __ptr64;572689;286344;2
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompila;572278;286139;2
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEA;286139;286139;1
??0?$_Tgt_state_t@PEBD@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<char const * __ptr64>::_Tgt_state_t<char const * __ptr64>(void) __ptr64;286139;286139;1
??1?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::~_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<uns;286139;286139;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * ;286139;286139;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp;286139;286139;1
??1?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >::~_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >(void) __ptr64;286139;286139;1
??$_Emplace_back@AEBI@?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAAXAEBI@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<unsigned int> >::_Emplace_back<unsigned int const & __ptr64>(unsigned int const & __ptr64) __ptr64;286139;286139;1
??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V;286139;286139;1
??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@V01234@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@0@Z;??$?RVActivity@Activities@BuildInsights@Cpp@Microsoft@@V01234@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVActivity@Activities@234@0@Z;285729;285729;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned ;285729;285729;1
?no_implicit_value@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAA?AV?$shared_ptr@VValue@cxxopts@@@std@@XZ;virtual class std::shared_ptr<class cxxopts::Value> __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::no_implicit_value(void) __ptr64;285729;285729;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator;285729;285729;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdTh;285729;285729;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64)const __ptr64;285729;285729;1
??0?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;571047;285523;2
?begin@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@2@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > > __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::begin(void) __ptr64;285318;285318;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;285318;285318;1
?set_default_and_implicit@?$standard_value@_N@values@cxxopts@@AEAAXXZ;void __cdecl cxxopts::values::standard_value<bool>::set_default_and_implicit(void) __ptr64;285318;285318;1
??$get@$0A@AEAPEBVTimelineEntry@@AEAK@std@@YAAEAPEBVTimelineEntry@@$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@0@@Z;??$get@$0A@AEAPEBVTimelineEntry@@AEAK@std@@YAAEAPEBVTimelineEntry@@$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@0@@Z;285318;285318;1
??0?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0>::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __;285318;285318;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV;284908;284908;1
?capacity@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::capacity(void)const __ptr64;284908;284908;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >::_List_iterator<class std::_List_val<struct s;284908;284908;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,s;569815;284907;2
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > ;284497;284497;1
??$_Mark@E@_Bitmap@std@@QEAAXE@Z;void __cdecl std::_Bitmap::_Mark<unsigned char>(unsigned char) __ptr64;284497;284497;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::cha;284497;284497;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64,class std::_List_unc;284497;284497;1
?_Unchecked_end@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >:;284086;284086;1
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@XZ;class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > const * __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<;284086;284086;1
??$?0$$V@?$_Compressed_pair@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;284086;284086;1
?_Umove_if_noexcept@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@00@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Umove_if_noexcept(struct std::pair<class std::basic_string<char,stru;284086;284086;1
??$?0PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> const & __ptr64) __ptr64;284086;284086;1
??0_Node_assert@std@@QEAA@W4_Node_type@1@W4_Node_flags@1@@Z;__cdecl std::_Node_assert::_Node_assert(enum std::_Node_type,enum std::_Node_flags) __ptr64;283676;283676;1
?bucket@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class s;283676;283676;1
??$move@AEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;283676;283676;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > & __ptr64);283676;283676;1
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared;283676;283676;1
??$_Emplace_back@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@@Z;void __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>::_Emplace_back<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64>(;283676;283676;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> ><class std::basic_string<char,struct std::c;567351;283675;2
??$_Copy_memmove@PEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@PEAV123@@std@@YAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@PEAV120@00@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::_Copy_memmove<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64);566941;283470;2
?_Check_max_size@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEBAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Check_max_size(void)const __ptr64;283265;283265;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;283265;283265;1
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::_Check_grow_by_1(void) __ptr64;283265;283265;1
??$?0K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@K@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><unsigned long>(class std::allocator<unsigned long> const & __ptr64) __ptr64;283265;283265;1
??0?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >::allocator<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::v;283265;283265;1
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Eos(unsigned __int64) __ptr64;283265;283265;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct;283265;283265;1
??0?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class s;283265;283265;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to;283265;283265;1
??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFunction@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFunction@Activities@012@@Z@Z;282855;282855;1
??0_Node_end_rep@std@@QEAA@XZ;__cdecl std::_Node_end_rep::_Node_end_rep(void) __ptr64;282855;282855;1
??$PutN@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@D@rapidjson@@YAXAEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@0@D_K@Z;void __cdecl rapidjson::PutN<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,char>(class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64,char,unsigned __int64);282855;282855;1
??$_Construct_in_place@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$$V@std@@YAXAEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@0@@Z;??$_Construct_in_place@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$$V@std@@YAXAEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$;282855;282855;1
?IsArray@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsArray(void)const __ptr64;282855;282855;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;282855;282855;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;282855;282855;1
??$?0V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAA@U_Move_allocator_tag@1@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > ><class std::allocator;282855;282855;1
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z;unsigned __int64 const & __ptr64 __cdecl std::_Max_value<unsigned __int64>(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64);4241591;282772;15
??0Activity@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::Activity::Activity(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;1131009;282752;4
??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<unsigned int> >::_Vector_val<struct std::_Simple_types<unsigned int> >(void) __ptr64;282444;282444;1
??$construct@VKeyValue@cxxopts@@V12@@?$_Default_allocator_traits@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@SAXAEAV?$allocator@VKeyValue@cxxopts@@@1@QEAVKeyValue@cxxopts@@$$QEAV34@@Z;??$construct@VKeyValue@cxxopts@@V12@@?$_Default_allocator_traits@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@SAXAEAV?$allocator@VKeyValue@cxxopts@@@1@QEAVKeyValue@cxxopts@@$$QEAV34@@Z;282444;282444;1
?_Umove_if_noexcept@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@00@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Umove_if_noexcept(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompil;282444;282444;1
??_G?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::`scalar deleting destructor'(unsigned int) __ptr64;282444;282444;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VTemplateInstantiation@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVTemplateInstantiation@Activities@234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V;282444;282444;1
??$_Find@E@_Bitmap@std@@QEBA_NE@Z;bool __cdecl std::_Bitmap::_Find<unsigned char>(unsigned char)const __ptr64;282444;282444;1
??0?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<char,struct std::;564478;282239;2
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z;void __cdecl std::_String_val<struct std::_Simple_types<char> >::_Check_offset(unsigned __int64)const __ptr64;1410579;282115;5
?max_load_factor@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned ;282034;282034;1
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;282034;282034;1
?_At@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAAEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@I@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_At(unsigned int) __ptr64;282034;282034;1
?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXQEBD0Urandom_access_iterator_tag@2@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Construct(char const * __ptr64 const,char const * __ptr64 const,struct std::random_access_iterator_tag) __ptr64;282034;282034;1
?Tell@?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@QEBA_KXZ;unsigned __int64 __cdecl rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >::Tell(void)const __ptr64;282034;282034;1
?Begin@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAPEAV12@XZ;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::Begin(void) __ptr64;282034;282034;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<;281623;281623;1
??$?0V?$allocator@PEAVTimelineEntry@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVTimelineEntry@@@1@@Z;??$?0V?$allocator@PEAVTimelineEntry@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVTimelineEntry@@@1@@Z;281623;281623;1
??_G?$abstract_value@_N@values@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::values::abstract_value<bool>::`scalar deleting destructor'(unsigned int) __ptr64;281623;281623;1
?_Move_construct@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Move_construct(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64,struct std::integral_constant<bool,1>);281623;281623;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std:;281623;281623;1
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;562836;281418;2
??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z;__cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000000> >::duration<__int64,struct std::ratio<1,1000000000> ><__int64,0>(__int64 const & __ptr64) __ptr64;1406474;281294;5
??$_Swap_adl@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@0@Z;void __cdecl std::_Swap_adl<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64);562426;281213;2
??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;281213;281213;1
??0?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAA@$$QEAV01@@Z;??0?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAA@$$QEAV01@@Z;281213;281213;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr6;281213;281213;1
??$addressof@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@YAPEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@0@AEAV10@@Z;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;280802;280802;1
?_Rehash_for_1@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;280802;280802;1
?_Getal@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAAEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> & __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Getal(void) __ptr64;280802;280802;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,stru;280802;280802;1
?_Add_coll@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXPEBD0_J@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_coll(char const * __ptr64,char const * __ptr64,__int64) __ptr64;280802;280802;1
?_Move_construct@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Move_construct(class std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> > & __ptr64,struct std::integral_constant<bool,1>) __ptr64;280392;280392;1
?_Move_construct@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Move_construct(class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > & __ptr64,struct std::integral_constant<bool,1>) __ptr64;280392;280392;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Inte;280392;280392;1
?_Getal@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string;280392;280392;1
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@0@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::exchange<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64,struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>;280392;280392;1
??$move@AEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@0@AEAV10@@Z;560372;280186;2
??0RawEvent@BuildInsights@Cpp@Microsoft@@QEAA@AEBUEVENT_DATA_TAG@123@@Z;__cdecl Microsoft::Cpp::BuildInsights::RawEvent::RawEvent(struct Microsoft::Cpp::BuildInsights::EVENT_DATA_TAG const & __ptr64) __ptr64;1120745;280186;4
??$_Copy_memmove@PEAU_Loop_vals_t@std@@PEAU12@@std@@YAPEAU_Loop_vals_t@0@PEAU10@00@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::_Copy_memmove<struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64>(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64);279981;279981;1
??1?$_Tidy_guard@V?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::_Builder<char const * __ptr64,char,class std::regex_traits<char> > >::~_Tidy_guard<class std::_Builder<char const * __ptr64,char,class std::regex_traits<char> > >(void) __ptr64;279981;279981;1
?_Swap@?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEAAXAEAV12@@Z;void __cdecl std::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Swap(class std::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64) __ptr64;279981;279981;1
??$_Copy_backward_memmove@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@@std@@YAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@00@Z;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::_Copy_backward_memmove<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64>(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::En;279571;279571;1
??$construct@V?$sub_match@PEBD@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@PEBD@std@@@1@QEAV?$sub_match@PEBD@1@$$QEAV31@@Z;??$construct@V?$sub_match@PEBD@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@PEBD@std@@@1@QEAV?$sub_match@PEBD@1@$$QEAV31@@Z;279571;279571;1
??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator=(class std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;279571;279571;1
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;279571;279571;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KU?$pair@KK@std@@@1@XZ;struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::operator*(void)const __ptr64;279571;279571;1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const * __ptr64 const) __ptr64;279571;279571;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,s;279571;279571;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,c;559141;279570;2
?OnStartActivity@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;1395800;279160;5
??$?CV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@$0A@@?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEBAPEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@1@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;279160;279160;1
??$_Swap_adl@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@0@Z;void __cdecl std::_Swap_adl<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int6;279160;279160;1
??$construct@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@$$QEAV31@@Z;??$construct@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@$$QEAV31@@Z;279160;279160;1
??$forward@AEAPEBVTimelineEntry@@@std@@YAAEAPEBVTimelineEntry@@AEAPEBV1@@Z;class TimelineEntry const * __ptr64 & __ptr64 __cdecl std::forward<class TimelineEntry const * __ptr64 & __ptr64>(class TimelineEntry const * __ptr64 & __ptr64);279160;279160;1
??0?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@QEAA@AEBV01@@Z;__cdecl std::shared_ptr<class cxxopts::OptionDetails const >::shared_ptr<class cxxopts::OptionDetails const >(class std::shared_ptr<class cxxopts::OptionDetails const > const & __ptr64) __ptr64;279160;279160;1
?_Ceiling_of_log_2@std@@YAK_K@Z;unsigned long __cdecl std::_Ceiling_of_log_2(unsigned __int64);1952069;278867;7
??$_Kfn@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::e;278750;278750;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char;278750;278750;1
?InputSourcePath@CompilerPass@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEB_WXZ;wchar_t const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::CompilerPass::InputSourcePath(void)const __ptr64;278750;278750;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVSymbolName@SimpleEvents@234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$;278750;278750;1
??$forward@V?$tuple@$$QEAU?$pair@KH@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAU?$pair@KH@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAU?$pair@KH@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAU?$pair@KH@std@@@0@AEAV10@@Z;278750;278750;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int;278750;278750;1
?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z;static void __cdecl std::_WChar_traits<wchar_t>::assign(wchar_t & __ptr64,wchar_t const & __ptr64);278750;278750;1
??$_Copy_memmove@PEA_KPEA_K@std@@YAPEA_KPEA_K00@Z;unsigned __int64 * __ptr64 __cdecl std::_Copy_memmove<unsigned __int64 * __ptr64,unsigned __int64 * __ptr64>(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64,unsigned __int64 * __ptr64);278750;278750;1
?_Unchecked_end@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const *;278750;278750;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> ><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64) ;557089;278544;2
??$construct@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V12345@@?$_Default_allocator_traits@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$QEAV34567@@Z;??$construct@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V12345@@?$_Default_allocator_traits@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$QEAV34567@@Z;278339;278339;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Clear_guard::~_Clear_guard(v;278339;278339;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@XZ;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Release(void) __ptr64;278339;278339;1
?_Decref@?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Decref(void) __ptr64;277928;277928;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >,struct std::_Iterator_base0> & __;277928;277928;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;277928;277928;1
??1exception@std@@UEAA@XZ;virtual __cdecl std::exception::~exception(void) __ptr64;4166463;277764;15
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class std;277518;277518;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<cha;277518;277518;1
?GetCachedPowerByIndex@internal@rapidjson@@YA?AUDiyFp@12@_K@Z;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::GetCachedPowerByIndex(unsigned __int64);277518;277518;1
??$forward@V?$tuple@$$QEAUFileCompilationData@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAUFileCompilationData@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@AEAV10@@Z;277518;277518;1
??0bad_array_new_length@std@@QEAA@AEBV01@@Z;__cdecl std::bad_array_new_length::bad_array_new_length(class std::bad_array_new_length const & __ptr64) __ptr64;4161539;277435;15
?GetStartTimestamp@TimelineEntry@@QEBAAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64 __cdecl TimelineEntry::GetStartTimestamp(void)const __ptr64;554626;277313;2
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,c;554625;277312;2
?_Unchecked_begin@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Unchecked_begin(void) __ptr64;277107;277107;1
??$_Copy_memmove@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@PEAU123@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@PEAU120@00@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Copy_memmove<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64);277107;277107;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@AEBV01@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base12>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base12>(class std::_List_uncheck;277107;277107;1
?_Delete_this@?$_Ref_count_obj2@_N@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<bool>::_Delete_this(void) __ptr64;277107;277107;1
??$SetAnalysisCallbacks@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YAXPEAUANALYSIS_CALLBACKS_TAG@123@@Z;void __cdecl Microsoft::Cpp::BuildInsights::Internal::SetAnalysisCallbacks<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >(struct Microsoft::Cpp::BuildInsights::ANALYSIS_CALLBACK;277107;277107;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 & __ptr64);277107;277107;1
?_Buy_nonzero@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<char,class std::allocator<char> >::_Buy_nonzero(unsigned __int64) __ptr64;277107;277107;1
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z;__cdecl std::_Compressed_pair<struct std::default_delete<class std::_Facet_base>,class std::_Facet_base * __ptr64,1>::_Compressed_pair<struct std::default_delete<class std::_Facet_base>,class std::_Facet_base * __ptr64,1><class std::_Facet_base * __ptr64 & __ptr64>(struct std::_Zero_then_variadic_args_t,class std::_Facet_base * __ptr64 & __ptr64) __ptr64;1662234;277039;6
?_Throw_bad_array_new_length@std@@YAXXZ;void __cdecl std::_Throw_bad_array_new_length(void);4151685;276779;15
??$Run@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VFunction@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@12;276697;276697;1
?_Umove_if_noexcept@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAXPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@00@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Umove_if_noexcept(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::sub_match<class std::_String_const_iterator<class std::_String_val<stru;276697;276697;1
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@PEAU32@@Z;static struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::_Min(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>;276697;276697;1
??1?$_Tidy_guard@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_Tidy_guard<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;276697;276697;1
?bucket@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;276697;276697;1
??$?0AEAPEAV_Node_assert@std@@@?$_Compressed_pair@U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Node_assert@1@@Z;__cdecl std::_Compressed_pair<struct std::default_delete<class std::_Node_assert>,class std::_Node_assert * __ptr64,1>::_Compressed_pair<struct std::default_delete<class std::_Node_assert>,class std::_Node_assert * __ptr64,1><class std::_Node_assert * __ptr64 & __ptr64>(struct std::_Zero_then_variadic_args_t,class std::_Node_assert * __ptr64 & __ptr64) __ptr64;276697;276697;1
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>::`scalar deleting destructor'(unsigned int) __ptr64;276286;276286;1
??$move@AEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;276286;276286;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> ;276286;276286;1
?_Getal@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEBAAEBV?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@2@XZ;class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> const & __ptr64 __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Getal(void)const __ptr64;276286;276286;1
?_Insert_node@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@CAXPEAV_Node_base@2@0@Z;static void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Insert_node(class std::_Node_base * __ptr64,class std::_Node_base * __ptr64);276286;276286;1
??_GOptionDetails@cxxopts@@QEAAPEAXI@Z;void * __ptr64 __cdecl cxxopts::OptionDetails::`scalar deleting destructor'(unsigned int) __ptr64;276286;276286;1
?empty@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEBA_NXZ;bool __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::empty(void)const __ptr64;276286;276286;1
??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NU_Default_sentinel@1@@Z;bool __cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0>::operator!=(struct std::_Default_sentinel)const __ptr64;276286;276286;1
??$?0V?$standard_value@_N@values@cxxopts@@@?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@AEBV01@PEAV?$standard_value@_N@values@cxxopts@@@Z;__cdecl std::shared_ptr<class cxxopts::values::standard_value<bool> >::shared_ptr<class cxxopts::values::standard_value<bool> ><class cxxopts::values::standard_value<bool> >(class std::shared_ptr<class cxxopts::values::standard_value<bool> > const & __ptr64,class cxxopts::values::standard_value<bool> * __ptr64) __ptr64;276286;276286;1
??$?RV?$shared_ptr@VOptionDetails@cxxopts@@@std@@V01@@?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@std@@QEBA_NAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@0@Z;bool __cdecl std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >::operator()<class std::shared_ptr<class cxxopts::OptionDetails>,class std::shared_ptr<class cxxopts::OptionDetails> >(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64)const __ptr64;276286;276286;1
?use_count@?$_Ptr_base@VValue@cxxopts@@@std@@QEBAJXZ;long __cdecl std::_Ptr_base<class cxxopts::Value>::use_count(void)const __ptr64;276286;276286;1
??$toLocalString@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@cxxopts@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl cxxopts::toLocalString<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);276286;276286;1
??$?0$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;276286;276286;1
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z;void __cdecl std::_Deallocate_plain<class std::allocator<struct std::_Container_proxy> >(class std::allocator<struct std::_Container_proxy> & __ptr64,struct std::_Container_proxy * __ptr64 const);4140191;276012;15
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMa;275876;275876;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<cha;275876;275876;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_t;551752;275876;2
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_trai;275876;275876;1
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int) __ptr64;1378968;275793;5
??$construct@PEAVTimelineEntry@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVTimelineEntry@@@std@@@std@@SAXAEAV?$allocator@PEAVTimelineEntry@@@1@QEAPEAVTimelineEntry@@AEBQEAV3@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class TimelineEntry * __ptr64> >::construct<class TimelineEntry * __ptr64,class TimelineEntry * __ptr64 const & __ptr64>(class std::allocator<class TimelineEntry * __ptr64> & __ptr64,class TimelineEntry * __ptr64 * __ptr64 const,class TimelineEntry * __ptr64 const & __ptr64);551341;275670;2
??$forward_as_tuple@U?$pair@KK@std@@@std@@YA?AV?$tuple@$$QEAU?$pair@KK@std@@@0@$$QEAU?$pair@KK@0@@Z;??$forward_as_tuple@U?$pair@KK@std@@@std@@YA?AV?$tuple@$$QEAU?$pair@KK@std@@@0@$$QEAU?$pair@KK@0@@Z;275465;275465;1
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;275465;275465;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >(class s;275465;275465;1
??$forward@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;275465;275465;1
??$_Get_unwrapped@AEBQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YA@AEBQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@@Z;__cdecl std::_Get_unwrapped<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 const & __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 const & __ptr64);275465;275465;1
?_Umove_if_noexcept@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAXPEAPEAVTimelineEntry@@00@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Umove_if_noexcept(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64) __ptr64;550931;275465;2
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::__autoclassinit2(unsigned __int64) __ptr64;275465;275465;1
??$forward@AEAPEAUDataPerFunction@FunctionCompilationsExporter@@@std@@YAAEAPEAUDataPerFunction@FunctionCompilationsExporter@@AEAPEAU12@@Z;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 & __ptr64 __cdecl std::forward<struct FunctionCompilationsExporter::DataPerFunction * __ptr64 & __ptr64>(struct FunctionCompilationsExporter::DataPerFunction * __ptr64 & __ptr64);275465;275465;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>(void) __ptr64;275465;275465;1
??B?$sub_match@PEBD@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ;__cdecl std::sub_match<char const * __ptr64>::operator class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)const __ptr64;275055;275055;1
??1?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::~_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(void) __ptr64;275055;275055;1
??1?$_Tidy_guard@V?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > >::~_Tidy_guard<class std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> > >(void) __ptr64;275055;275055;1
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::~_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(void) __ptr64;275055;275055;1
??$_Move_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;??$_Move_construct_from@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@1@@Z;275055;275055;1
?_Unchecked_end@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,str;275055;275055;1
?OnBeginAnalysisPass@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnBeginAnalysisPass(void) __ptr64;275055;275055;1
?_Buy_nonzero@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Buy_nonzero(unsigned __int64) __ptr64;274644;274644;1
??0?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;274644;274644;1
??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@1234@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@$$QEAVTemplateInstantiation@6234@@Z;??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@1234@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@$$QEAVTemplateInstantiation@6234@@Z;274644;274644;1
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >(void) __ptr64;274644;274644;1
?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Umove_if_noexcept(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std;274644;274644;1
?do_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_length(struct _Mbstatet & __ptr64,char const * __ptr64,char const * __ptr64,unsigned __int64)const __ptr64;274644;274644;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_;274234;274234;1
??__Einteger_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic initializer for 'integer_pattern''(void);274234;274234;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >(struct std::_List_node<struct std::pair<class std:;274234;274234;1
?do_hash@?$collate@D@std@@MEBAJPEBD0@Z;virtual long __cdecl std::collate<char>::do_hash(char const * __ptr64,char const * __ptr64)const __ptr64;274234;274234;1
??$_Move_construct_from@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEAAX$$QEAV01@@Z;274234;274234;1
?_Getal@?$list@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 c;274234;274234;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,class std::_List_val<struct s;274234;274234;1
??$_Copy_backward_memmove@PEAUDataPerFunction@FunctionCompilationsExporter@@PEAU12@@std@@YAPEAUDataPerFunction@FunctionCompilationsExporter@@PEAU12@00@Z;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::_Copy_backward_memmove<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64>(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64);274234;274234;1
??$move@AEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@YA$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@YA$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@AEAV10@@Z;548057;274028;2
??$move@AEAV?$tuple@AEB_K@std@@@std@@YA$$QEAV?$tuple@AEB_K@0@AEAV10@@Z;??$move@AEAV?$tuple@AEB_K@std@@@std@@YA$$QEAV?$tuple@AEB_K@0@AEAV10@@Z;821880;273960;3
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<struct std::pa;273823;273823;1
?_Swap@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXAEAV12@@Z;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Swap(class std::_Ptr_base<class cxxopts::Value> & __ptr64) __ptr64;273823;273823;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<cl;273823;273823;1
?max@?$numeric_limits@D@std@@SADXZ;static char __cdecl std::numeric_limits<char>::max(void);273823;273823;1
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Range_eraser::_Range_eraser(class std::list<struct std::pair<unsigned __int64 const ,class std::vector<uns;273823;273823;1
?Destroy@?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@rapidjson@@AEAAXXZ;void __cdecl rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>::Destroy(void) __ptr64;273823;273823;1
??R<lambda_138c3d7c38c85abb84c7fc7bfe5747b7>@@QEBAXQEAD_KD@Z;void __cdecl <lambda_138c3d7c38c85abb84c7fc7bfe5747b7>::operator()(char * __ptr64 const,unsigned __int64,char)const __ptr64;273413;273413;1
?_Effective_range@?$sub_match@PEBD@std@@QEBA?AU?$pair@PEBDPEBD@2@XZ;struct std::pair<char const * __ptr64,char const * __ptr64> __cdecl std::sub_match<char const * __ptr64>::_Effective_range(void)const __ptr64;273413;273413;1
?GetData@FunctionCompilationsAnalyzer@@QEBAAEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;273413;273413;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >,class st;273413;273413;1
?_At@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAAEAV?$sub_match@PEBD@2@I@Z;class std::sub_match<char const * __ptr64> & __ptr64 __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::_At(unsigned int) __ptr64;273413;273413;1
?end@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std:;273413;273413;1
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ;class std::allocator<char> const & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Getal(void)const __ptr64;3553543;273349;13
??0_Iterator_base12@std@@QEAA@AEBU01@@Z;__cdecl std::_Iterator_base12::_Iterator_base12(struct std::_Iterator_base12 const & __ptr64) __ptr64;2185249;273156;8
?_Unchecked_begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<cha;273002;273002;1
??0KeyValue@cxxopts@@QEAA@$$QEAV01@@Z;??0KeyValue@cxxopts@@QEAA@$$QEAV01@@Z;273002;273002;1
??0?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;273002;273002;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > __cdecl std::_Hash<class std::_Umap_;273002;273002;1
??1?$enable_shared_from_this@VValue@cxxopts@@@std@@IEAA@XZ;__cdecl std::enable_shared_from_this<class cxxopts::Value>::~enable_shared_from_this<class cxxopts::Value>(void) __ptr64;272592;272592;1
?capacity@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::capacity(void)const __ptr64;272592;272592;1
?bucket@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;272592;272592;1
??0argument_incorrect_type@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::argument_incorrect_type::argument_incorrect_type(class cxxopts::argument_incorrect_type const & __ptr64) __ptr64;272592;272592;1
??_GFileInclusionsAnalyzer@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl FileInclusionsAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;272592;272592;1
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cla;272592;272592;1
??$_Get_size_of_n@$03@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<4>(unsigned __int64);544773;272386;2
??0?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> >::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> >(void) __ptr64;272181;272181;1
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;272181;272181;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;272181;272181;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<;272181;272181;1
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::size(void)const __ptr64;272181;272181;1
??0?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64) __ptr64;272181;272181;1
??0?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@$$QEAV01@@Z;272181;272181;1
??0?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileCompilationsAnalyzer@@P85@EAAXAEBVFrontEndPass@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileCompilationsAnalyzer@@P85@EAAXAEBVFrontEndPass@Activities@234@@Z@Z;271771;271771;1
??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(class std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;271771;271771;1
??$construct@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAV1234@@?$_Default_allocator_traits@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@1@QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@$$QEAPEAV3456@@Z;??$construct@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAV1234@@?$_Default_allocator_traits@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@SAXAEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@1@QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@$$QEAPEAV3456@@Z;271771;271771;1
??0?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;__cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >(class std::allocator;271771;271771;1
??1OptionDetails@cxxopts@@QEAA@XZ;__cdecl cxxopts::OptionDetails::~OptionDetails(void) __ptr64;271771;271771;1
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >::`scalar deleting destructor'(unsigned int) __ptr64;543131;271565;2
??$forward_as_tuple@AEB_K@std@@YA?AV?$tuple@AEB_K@0@AEB_K@Z;class std::tuple<unsigned __int64 const & __ptr64> __cdecl std::forward_as_tuple<unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64);814491;271497;3
??0?$sub_match@PEBD@std@@QEAA@XZ;__cdecl std::sub_match<char const * __ptr64>::sub_match<char const * __ptr64>(void) __ptr64;271360;271360;1
??$_Destroy_range@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@YAXPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAV12345@AEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 const,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::;271360;271360;1
?_Umove_if_noexcept1@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAXPEAV?$sub_match@PEBD@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Umove_if_noexcept1(class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64,struct std::integral_constant<bool,1>) __ptr64;271360;271360;1
??$construct@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@$$V@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;??$construct@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@$$V@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;271360;271360;1
?deallocate@?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAAXQEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@_K@Z;void __cdecl std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::deallocate(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 const,unsigned __int64) __ptr64;271360;271360;1
?_Reset@?$basic_regex@DV?$regex_traits@D@std@@@std@@AEAAXPEAV_Root_node@2@@Z;void __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Reset(class std::_Root_node * __ptr64) __ptr64;271360;271360;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class ;271360;271360;1
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::construct<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64,class std::basic_stri;271360;271360;1
??$?0VOptionDetails@cxxopts@@$0A@@?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@QEAA@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;__cdecl std::shared_ptr<class cxxopts::OptionDetails const >::shared_ptr<class cxxopts::OptionDetails const ><class cxxopts::OptionDetails,0>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;271360;271360;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@M;271360;271360;1
?_Unchecked_end@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Unchecked_end;271360;271360;1
?size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<bool,class std::allocator<bool> >::size(void)const __ptr64;270949;270949;1
?_Tidy@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Tidy(void) __ptr64;270949;270949;1
??0?$vector@_NV?$allocator@_N@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::vector<bool,class std::allocator<bool> >::vector<bool,class std::allocator<bool> >(class std::vector<bool,class std::allocator<bool> > const & __ptr64) __ptr64;270949;270949;1
??0?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEAA@AEBV01@@Z;__cdecl std::shared_ptr<class cxxopts::Value const >::shared_ptr<class cxxopts::Value const >(class std::shared_ptr<class cxxopts::Value const > const & __ptr64) __ptr64;270949;270949;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;270949;270949;1
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,s;270949;270949;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VLinker@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@VBackEndPass@2345@VFrontEndFile@2345@VTemplateInstantiation@2345@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Linker,class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass,class Microsoft::Cpp::BuildInsights::Activities::BackEndPass,class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation,class Microsoft::Cpp::BuildInsights::Activities::Functio;270949;270949;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > __cdecl std::_Hash<class std::_Umap_;270949;270949;1
??1?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::OptionDetails>::~shared_ptr<class cxxopts::OptionDetails>(void) __ptr64;270949;270949;1
?data@?$vector@IV?$allocator@I@std@@@std@@QEAAPEAIXZ;unsigned int * __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::data(void) __ptr64;270539;270539;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator*(void)const __ptr64;270539;270539;1
?empty@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBA_NXZ;bool __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::empty(void)const __ptr64;270539;270539;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VC1DLL@Activities@BuildInsights@Cpp@Microsoft@@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Mic;270539;270539;1
?empty@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEBA_NXZ;bool __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::empty(void)const __ptr64;270539;270539;1
?_Unchecked_end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA?AU_Default_sentinel@2@XZ;struct std::_Default_sentinel __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::_Unchecked_end(void)const __ptr6;270539;270539;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,str;541078;270539;2
?_Unchecked_begin@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::_Unchecked_begin(void) __ptr64;270539;270539;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildI;270539;270539;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;270128;270128;1
??0?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >(void) __ptr64;270128;270128;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > >,class std::_Vector_val<struct std::_Simple_types<cla;270128;270128;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,1>::_Get_first(void) __ptr64;270128;270128;1
?_Getal@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Getal(void)const __ptr64;270128;270128;1
??0?$_Vector_val@U?$_Simple_types@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Vector_val<struct std::_Simple_types<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(void) __ptr64;270128;270128;1
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAXXZ;??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAXXZ;269718;269718;1
??$?0H$0A@@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBH@Z;__cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000000> >::duration<__int64,struct std::ratio<1,1000000000> ><int,0>(int const & __ptr64) __ptr64;539436;269718;2
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >(struct std::_List_node<struct std::pair<class std::basic_s;269718;269718;1
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;269307;269307;1
?allocate@?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@QEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@_K@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>::allocate(unsigned __int64) __ptr64;269307;269307;1
??Y?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator+=(__int64) __ptr64;269307;269307;1
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=(char const * __ptr64 const) __ptr64;269307;269307;1
??_G?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>::`scalar deleting destructor'(unsigned int) __ptr64;269307;269307;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@SAPEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@2@AEAU32@@Z;static struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > & __ptr64);269307;269307;1
??$forward_as_tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YA?AV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@0@@Z;class std::tuple<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64> __cdecl std::forward_as_tuple<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64);269307;269307;1
?capacity@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::capacity(void)const __ptr64;269307;269307;1
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z;??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z;269307;269307;1
?bucket@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::bucket(unsigned __int64 const & __ptr64)const __ptr64;269307;269307;1
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$sub_match@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@PEBD@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@V?$sub_match@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@PEBD@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;268897;268897;1
?resize@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::resize(unsigned __int64) __ptr64;268897;268897;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Max_bucket_size(void) __ptr64;268897;268897;1
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::al;537794;268897;2
??0?$_Sequence@D@std@@QEAA@I@Z;__cdecl std::_Sequence<char>::_Sequence<char>(unsigned int) __ptr64;268897;268897;1
??$_Get_size_of_n@$0FI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<88>(unsigned __int64);806691;268897;3
?_Umove_if_noexcept@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAXPEAU_Loop_vals_t@2@00@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Umove_if_noexcept(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64) __ptr64;268897;268897;1
?_Umove_if_noexcept@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@00@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Umove_if_noexcept(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnal;268897;268897;1
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z;struct std::_Container_proxy * __ptr64 __cdecl std::allocator<struct std::_Container_proxy>::allocate(unsigned __int64) __ptr64;4031398;268759;15
??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z;bool __cdecl std::_Ungetc<char>(char const & __ptr64,struct _iobuf * __ptr64);1343662;268732;5
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr6;537384;268692;2
?_Getal@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Getal(void)const __ptr64;268486;268486;1
??$get@$0A@AEB_K@std@@YAAEB_K$$QEAV?$tuple@AEB_K@0@@Z;??$get@$0A@AEB_K@std@@YAAEB_K$$QEAV?$tuple@AEB_K@0@@Z;805459;268486;3
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAAXXZ;??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAAXXZ;268486;268486;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,class std::_List_val<struct std::_Lis;268486;268486;1
??0CompilerPass@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::CompilerPass::CompilerPass(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;536972;268486;2
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VPass2@Activities@BuildInsights@Cpp@Microsoft@@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Pass2,class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildI;268486;268486;1
??$construct@KAEBK@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAEAV?$allocator@K@1@QEAKAEBK@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<unsigned long> >::construct<unsigned long,unsigned long const & __ptr64>(class std::allocator<unsigned long> & __ptr64,unsigned long * __ptr64 const,unsigned long const & __ptr64);268486;268486;1
?end@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@XZ;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::p;268486;268486;1
??$construct@UDataPerFile@FileInclusionTimesExporter@@U12@@?$_Default_allocator_traits@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@SAXAEAV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@1@QEAUDataPerFile@FileInclusionTimesExporter@@$$QEAU34@@Z;??$construct@UDataPerFile@FileInclusionTimesExporter@@U12@@?$_Default_allocator_traits@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@SAXAEAV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@1@QEAUDataPerFile@FileInclusionTimesExporter@@$$QEAU34@@Z;268486;268486;1
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ;class std::allocator<char> & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Getal(void) __ptr64;3753471;268105;14
??1_Range_eraser@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;268076;268076;1
?_Unchecked_begin@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Unchecked_begin(void) __ptr64;268076;268076;1
??_GFunctionCompilationsAnalyzer@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl FunctionCompilationsAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;268076;268076;1
??$forward@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@0@AEAV10@@Z;??$forward@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@0@AEAV10@@Z;535741;267870;2
??0_Range_eraser@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA@AEAV?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@2@QEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Range_eraser::_Range_eraser(class std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > & __ptr64,struct std::_Lis;267665;267665;1
?capacity@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::capacity(void)const __ptr64;267665;267665;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;267665;267665;1
?_Getal@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAAEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > & __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Getal(void) __ptr64;267665;267665;1
??$?0$02@?$GenericStringRef@D@rapidjson@@QEAA@AEAY02$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><3>(char const (& __ptr64)[3]) __ptr64;267665;267665;1
?Data@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAPEBXXZ;void const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::Data(void)const __ptr64;1070661;267665;4
?allocate@?$allocator@PEAVTimelineEntry@@@std@@QEAAPEAPEAVTimelineEntry@@_K@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::allocator<class TimelineEntry * __ptr64>::allocate(unsigned __int64) __ptr64;535330;267665;2
??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;267665;267665;1
??$_Hash_array_representation@D@std@@YA_KQEBD_K@Z;unsigned __int64 __cdecl std::_Hash_array_representation<char>(char const * __ptr64 const,unsigned __int64);1069840;267460;4
??1?$standard_value@_N@values@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::values::standard_value<bool>::~standard_value<bool>(void) __ptr64;267255;267255;1
??$_Move_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@1@@Z;??$_Move_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@1@@Z;267255;267255;1
??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z;char * __ptr64 __cdecl std::_Copy_memmove<char * __ptr64,char * __ptr64>(char * __ptr64,char * __ptr64,char * __ptr64);267255;267255;1
?Realloc@CrtAllocator@rapidjson@@QEAAPEAXPEAX_K1@Z;void * __ptr64 __cdecl rapidjson::CrtAllocator::Realloc(void * __ptr64,unsigned __int64,unsigned __int64) __ptr64;267255;267255;1
?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ;__int64 __cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000> >::count(void)const __ptr64;267255;267255;1
??$?0U?$pair@KH@std@@@?$_Tuple_val@$$QEAU?$pair@KH@std@@@std@@QEAA@$$QEAU?$pair@KH@1@@Z;??$?0U?$pair@KH@std@@@?$_Tuple_val@$$QEAU?$pair@KH@std@@@std@@QEAA@$$QEAU?$pair@KH@1@@Z;267255;267255;1
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAAXXZ;??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAAXXZ;267255;267255;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VCompiler@Activities@BuildInsights@Cpp@Microsoft@@VLinker@2345@VFrontEndPass@2345@VBackEndPass@2345@VFrontEndFile@2345@VTemplateInstantiation@2345@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Compiler,class Microsoft::Cpp::BuildInsights::Activities::Linker,class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass,class Microsoft::Cpp::BuildInsights::Activities::BackEndPass,class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiatio;267255;267255;1
??$_Copy_memmove@PEAIPEAI@std@@YAPEAIPEAI00@Z;unsigned int * __ptr64 __cdecl std::_Copy_memmove<unsigned int * __ptr64,unsigned int * __ptr64>(unsigned int * __ptr64,unsigned int * __ptr64,unsigned int * __ptr64);267255;267255;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64);266844;266844;1
??$forward@M@std@@YA$$QEAMAEAM@Z;??$forward@M@std@@YA$$QEAMAEAM@Z;1867910;266844;7
?translate_nocase@?$_Regex_traits@D@std@@QEBADD@Z;char __cdecl std::_Regex_traits<char>::translate_nocase(char)const __ptr64;266844;266844;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;266844;266844;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(void) __ptr64;533277;266638;2
??1IRelogger@BuildInsights@Cpp@Microsoft@@UEAA@XZ;virtual __cdecl Microsoft::Cpp::BuildInsights::IRelogger::~IRelogger(void) __ptr64;1332990;266598;5
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >(void) __ptr64;266434;266434;1
??R?$_Conditionally_enabled_hash@PEAVOptionDetails@cxxopts@@$00@std@@QEBA_KAEBQEAVOptionDetails@cxxopts@@@Z;unsigned __int64 __cdecl std::_Conditionally_enabled_hash<class cxxopts::OptionDetails * __ptr64,1>::operator()(class cxxopts::OptionDetails * __ptr64 const & __ptr64)const __ptr64;266434;266434;1
??$_Ucopy@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAPEAU_Grp_t@?$_Tgt_state_t@PEBD@1@PEAU231@00@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Ucopy<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64) __ptr64;266434;266434;1
?WriteEndArray@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NXZ;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteEndArray(void) __ptr64;266434;266434;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$;266434;266434;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;266434;266434;1
?_Rehash_for_1@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@IEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::_Rehash_for_1(void) __ptr64;266434;266434;1
??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base12@1@@Z;__cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(unsigned int const * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;266434;266434;1
??0?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(void) __ptr64;266434;266434;1
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;266434;266434;1
??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<unsigned long> >::_Vector_val<struct std::_Simple_types<unsigned long> >(void) __ptr64;266434;266434;1
?_Umove_if_noexcept@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEAAXPEAUDataPerFile@FileInclusionTimesExporter@@00@Z;void __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Umove_if_noexcept(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64) __ptr64;266434;266434;1
??1?$_Sequence@D@std@@QEAA@XZ;__cdecl std::_Sequence<char>::~_Sequence<char>(void) __ptr64;266434;266434;1
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocato;266023;266023;1
?_Getctype@?$_Regex_traits@D@std@@QEBAPEBV?$ctype@D@2@XZ;class std::ctype<char> const * __ptr64 __cdecl std::_Regex_traits<char>::_Getctype(void)const __ptr64;266023;266023;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64>(void) __ptr64;266023;266023;1
??1?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@QEAA@XZ;__cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::~_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>(void) __ptr64;266023;266023;1
??$?0U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64;266023;266023;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::;532046;266023;2
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@2@AEAU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std;266023;266023;1
??0missing_argument_exception@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::missing_argument_exception::missing_argument_exception(class cxxopts::missing_argument_exception const & __ptr64) __ptr64;266023;266023;1
?TranslateAnalysisCode@GroupCallbackSupport@Internal@BuildInsights@Cpp@Microsoft@@KA?AW4CALLBACK_CODE@345@W4AnalysisControl@345@@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::GroupCallbackSupport::TranslateAnalysisCode(enum Microsoft::Cpp::BuildInsights::AnalysisControl);265613;265613;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::_Allocate(void) __ptr64;265613;265613;1
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ;__cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >(void) __ptr64;265613;265613;1
??$construct@IAEBI@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SAXAEAV?$allocator@I@1@QEAIAEBI@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<unsigned int> >::construct<unsigned int,unsigned int const & __ptr64>(class std::allocator<unsigned int> & __ptr64,unsigned int * __ptr64 const,unsigned int const & __ptr64);265613;265613;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cla;265613;265613;1
??$forward@AEAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@YAAEAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@AEAPEAPEBU12@@Z;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 & __ptr64 __cdecl std::forward<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 & __ptr64>(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 & __ptr64);265613;265613;1
?max_load_factor@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::max_load_factor(void)const __ptr64;265613;265613;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName> >::Run(unsigned int);265613;265613;1
??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@@Z@Z;??$MatchEventInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVRawEvent@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndFile@Activities@012@@Z@Z;265613;265613;1
??_GIRelogger@BuildInsights@Cpp@Microsoft@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::IRelogger::`scalar deleting destructor'(unsigned int) __ptr64;1327241;265448;5
??0?$_Vector_val@U?$_Simple_types@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >(void) __ptr64;265202;265202;1
??$get@$0A@$$QEAU?$pair@KH@std@@@std@@YA$$QEAU?$pair@KH@0@$$QEAV?$tuple@$$QEAU?$pair@KH@std@@@0@@Z;??$get@$0A@$$QEAU?$pair@KH@std@@@std@@YA$$QEAU?$pair@KH@0@$$QEAV?$tuple@$$QEAU?$pair@KH@std@@@0@@Z;265202;265202;1
??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@YAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@0@AEBU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const & __ptr64);265202;265202;1
??0OptionParseException@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::OptionParseException::OptionParseException(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;265202;265202;1
??1?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@XZ;__cdecl rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::~GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(void) __ptr64;265202;265202;1
??4?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::operator=(class std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;265202;265202;1
??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<40>(unsigned __int64);530404;265202;2
??$_Get_size_of_n@$0EI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<72>(unsigned __int64);265202;265202;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V;530404;265202;2
?capacity@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::capacity(void)const __ptr64;529994;264997;2
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;529993;264996;2
?_Decref@?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::OptionDetails>::_Decref(void) __ptr64;264792;264792;1
??$?0AEB_K$$Z$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;??$?0AEB_K$$Z$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;264792;264792;1
?SetStringRaw@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAXU?$GenericStringRef@D@2@@Z;void __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::SetStringRaw(struct rapidjson::GenericStringRef<char>) __ptr64;264792;264792;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,cl;264792;264792;1
??_G?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct s;264792;264792;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > *;264792;264792;1
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::operator==(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64)const __ptr64;264792;264792;1
?pointer_to@?$pointer_traits@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@SAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@2@AEBU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const * __ptr64>::pointer_to(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupD;264792;264792;1
??$_Move_backward_unchecked@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@PEAPEBU10@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Move_backward_unchecked<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> ;264792;264792;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;264381;264381;1
??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<char,class std::allocator<char> > >::~_Tidy_guard<class std::vector<char,class std::allocator<char> > >(void) __ptr64;264381;264381;1
??$_Unfancy@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAPEAV1234@@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::_Unfancy<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64);264381;264381;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::_Allocate(void) __ptr64;264381;264381;1
?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ;class std::allocator<unsigned int> & __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Getal(void) __ptr64;264381;264381;1
??0?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@1@@Z;__cdecl std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0>::_Umap_traits<class std::shared_ptr<class cxxopts;264381;264381;1
??$?0VKeyValue@cxxopts@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VKeyValue@cxxopts@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class cxxopts::KeyValue>(class std::allocator<class cxxopts::KeyValue> const & __ptr64) __ptr64;264381;264381;1
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@XZ;class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > * __ptr64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct;264381;264381;1
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompil;264381;264381;1
??0runtime_error@std@@QEAA@AEBV01@@Z;__cdecl std::runtime_error::runtime_error(class std::runtime_error const & __ptr64) __ptr64;264381;264381;1
?_Max_bucket_size@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class st;528762;264381;2
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size(void)const __ptr64;2642577;264257;10
??0_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@$$QEAU012@@Z;??0_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@$$QEAU012@@Z;263970;263970;1
??1?$_Tidy_guard@V?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> > >::~_Tidy_guard<class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<stru;263970;263970;1
??1?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~_Ref_count_obj2<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;263970;263970;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsig;263970;263970;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@VFunction@2345@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile,class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation,class Microsoft::Cpp::BuildInsights::Activities::Function,class Microsoft::Cpp::BuildInsights::Activities::Pass1,class Microsoft::Cpp::BuildInsights::Activities::Pass2,class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,clas;263970;263970;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > >(class std::allocator<cl;527941;263970;2
??$?0$$V@?$_Compressed_pair@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@UHelpOptionDetails@cxxopts@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;??$?0$$V@?$_Compressed_pair@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@UHelpOptionDetails@cxxopts@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z;263970;263970;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@;263970;263970;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,stru;263970;263970;1
??_Gbad_array_new_length@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::bad_array_new_length::`scalar deleting destructor'(unsigned int) __ptr64;3957914;263860;15
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allo;263560;263560;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_type;527120;263560;2
??$_Get_size_of_n@$0DA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<48>(unsigned __int64);263560;263560;1
?_Getal@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAAEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@2@XZ;class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > & __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Getal(void) __ptr64;527120;263560;2
??$exchange@_K_K@std@@YA_KAEA_K$$QEA_K@Z;??$exchange@_K_K@std@@YA_KAEA_K$$QEA_K@Z;790680;263560;3
??0option_not_exists_exception@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::option_not_exists_exception::option_not_exists_exception(class cxxopts::option_not_exists_exception const & __ptr64) __ptr64;263560;263560;1
??1?$_Ref_count_obj2@_N@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<bool>::~_Ref_count_obj2<bool>(void) __ptr64;263560;263560;1
??$_Ucopy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEAV21@00@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Ucopy<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;263560;263560;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >(struct;263149;263149;1
??$_Adl_verify_range@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@PEAU123@@std@@YAXAEBQEAU_Grp_t@?$_Tgt_state_t@PEBD@0@0@Z;void __cdecl std::_Adl_verify_range<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const & __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const & __ptr64);263149;263149;1
?_Destroy@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@0@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Destroy(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>;263149;263149;1
??4?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::operator=(class std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;263149;263149;1
?_Umove_if_noexcept1@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Umove_if_noexcept1(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class st;263149;263149;1
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >(void) __ptr64;263149;263149;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation> >::Run(unsigned int);263149;263149;1
?_Umove_if_noexcept@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@00@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Umove_if_noexcept(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64) __ptr64;263149;263149;1
??$Forward@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@?$HandlerForwarder@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@SAX$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@$$QEAVFrontEndPass@Activities@345@$$QEAVSymbolName@SimpleEvents@345@@Z;??$Forward@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@?$HandlerForwarder@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Gro;263149;263149;1
?deallocate@?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@QEAAXQEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@_K@Z;void __cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>::deallocate(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 const,unsigned __int64) __ptr64;263149;263149;1
??_G?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >::`scalar deleting destructor'(unsigned int) __ptr64;263149;263149;1
??$?0$04@?$GenericStringRef@D@rapidjson@@QEAA@AEAY04$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><5>(char const (& __ptr64)[5]) __ptr64;263149;263149;1
??$?0U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > >::allocator<c;263149;263149;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@SA_KAEBV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::max_size(class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > const & __ptr64);525478;262739;2
??$StringRef@D@rapidjson@@YA?AU?$GenericStringRef@D@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;struct rapidjson::GenericStringRef<char> __cdecl rapidjson::StringRef<char>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);262739;262739;1
??_G_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t::`scalar deleting destructor'(unsigned int) __ptr64;262739;262739;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFunction@Activities@BuildInsights@Cpp@Microsoft@@VPass1@2345@VPass2@2345@VPreLTCGOptRef@2345@VLTCG@2345@VOptRef@2345@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Function,class Microsoft::Cpp::BuildInsights::Activities::Pass1,class Microsoft::Cpp::BuildInsights::Activities::Pass2,class Microsoft::Cpp::BuildInsights::Activities::PreLTCGOptRef,class Microsoft::Cpp::BuildInsights::Activities::LTCG,class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::Build;262739;262739;1
?_Getal@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEBAAEBV?$allocator@V?$sub_match@PEBD@std@@@2@XZ;class std::allocator<class std::sub_match<char const * __ptr64> > const & __ptr64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Getal(void)const __ptr64;262739;262739;1
??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@@Z;??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@@Z;262739;262739;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;262739;262739;1
?SetElementsPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAPEAV12@PEAV12@@Z;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::SetElementsPointer(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64) __ptr64;262739;262739;1
?capacity@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::capacity(void)const __ptr64;262328;262328;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_strin;524657;262328;2
?has_implicit@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::has_implicit(void)const __ptr64;262328;262328;1
?_Umove@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@AEAAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@PEAPEBU32@00@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const *;262328;262328;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<;262328;262328;1
??1?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::~_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(void) __ptr64;261918;261918;1
??$_Insert@PEBD@?$_Buf@D@std@@QEAAXPEBD0@Z;void __cdecl std::_Buf<char>::_Insert<char const * __ptr64>(char const * __ptr64,char const * __ptr64) __ptr64;261918;261918;1
?_Umove_if_noexcept@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@00@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Umove_if_noexcept(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_con;261918;261918;1
??$_Get_size_of_n@$0BAI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<264>(unsigned __int64);261918;261918;1
??$construct@_KAEB_K@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SAXAEAV?$allocator@_K@1@QEA_KAEB_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<unsigned __int64> >::construct<unsigned __int64,unsigned __int64 const & __ptr64>(class std::allocator<unsigned __int64> & __ptr64,unsigned __int64 * __ptr64 const,unsigned __int64 const & __ptr64);261918;261918;1
??$?CVOptionDetails@cxxopts@@$0A@@?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEBAPEAVOptionDetails@cxxopts@@XZ;class cxxopts::OptionDetails * __ptr64 __cdecl std::shared_ptr<class cxxopts::OptionDetails>::operator-><class cxxopts::OptionDetails,0>(void)const __ptr64;261918;261918;1
??$_Get_size_of_n@$0GI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<104>(unsigned __int64);261918;261918;1
?_Do_noncapture_group@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXXZ;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Do_noncapture_group(void) __ptr64;261918;261918;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffs;261918;261918;1
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Getal(void)const __ptr64;261918;261918;1
??$forward@AEAK@std@@YAAEAKAEAK@Z;unsigned long & __ptr64 __cdecl std::forward<unsigned long & __ptr64>(unsigned long & __ptr64);261918;261918;1
?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@_K@Z;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 __cdecl std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >::allocate(unsigned __int64) __ptr64;523425;261712;2
??0?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;__cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >(class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64) __ptr64;261507;261507;1
?push_back@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;?push_back@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;261507;261507;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;523015;261507;2
?_Getal@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAAEAV?$allocator@V?$sub_match@PEBD@std@@@2@XZ;class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Getal(void) __ptr64;261097;261097;1
?_Ufill@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAPEAV?$sub_match@PEBD@2@PEAV32@_KU_Value_init_tag@2@@Z;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Ufill(class std::sub_match<char const * __ptr64> * __ptr64,unsigned __int64,struct std::_Value_init_tag) __ptr64;261097;261097;1
?_Make_const_iter@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@QEBA?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@@Z;class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::_Ma;261097;261097;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Unchecked_begin(void) __ptr64;261097;261097;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,c;261097;261097;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator->(void)const __ptr64;261097;261097;1
??$PutReserve@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@@rapidjson@@YAXAEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@0@_K@Z;void __cdecl rapidjson::PutReserve<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > >(class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64,unsigned __int64);261097;261097;1
??_G?$_Node_class@DV?$regex_traits@D@std@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_class<char,class std::regex_traits<char> >::`scalar deleting destructor'(unsigned int) __ptr64;260686;260686;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >::alloca;260686;260686;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > const & __ptr64);260686;260686;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >::allocate(unsigned __int64) __ptr64;260686;260686;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>;260686;260686;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEBAPEAPEAVTimelineEntry@@XZ;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Unwrapped(void)const __ptr64;520962;260481;2
?_Getal@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEBAAEBV?$allocator@VKeyValue@cxxopts@@@2@XZ;class std::allocator<class cxxopts::KeyValue> const & __ptr64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Getal(void)const __ptr64;260276;260276;1
??$begin@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::begin<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);260276;260276;1
??$?0U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64;260276;260276;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> ><struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,st;260276;260276;1
??9?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator!=(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;260276;260276;1
?resize@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::resize(unsigned __int64) __ptr64;260276;260276;1
??$?8VValue@cxxopts@@@std@@YA_NAEBV?$shared_ptr@VValue@cxxopts@@@0@$$T@Z;??$?8VValue@cxxopts@@@std@@YA_NAEBV?$shared_ptr@VValue@cxxopts@@@0@$$T@Z;260276;260276;1
?__autoclassinit2@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;260276;260276;1
??1?$_Tidy_guard@V?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tidy_guard<class std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> > >::~_Tidy_guard<class std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> > >(void) __ptr64;260276;260276;1
?_HexDigits@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXH@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_HexDigits(int) __ptr64;260276;260276;1
?_Umove_if_noexcept@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEAAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@00@Z;void __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Umove_if_noexcept(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecal;259865;259865;1
?_Umove_if_noexcept@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXPEAVKeyValue@cxxopts@@00@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Umove_if_noexcept(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64) __ptr64;259865;259865;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@AEAV10@@Z;259865;259865;1
??0?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(void) __ptr64;259865;259865;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::eq;259865;259865;1
?_Unchecked_end@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Unchecked_end(void) __ptr64;259865;259865;1
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::capacity(void)const __ptr64;259865;259865;1
??1_Clear_guard@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Clear_guard::~_Clear_guard(void) __ptr64;259865;259865;1
??__Efalsy_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic initializer for 'falsy_pattern''(void);259865;259865;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;259455;259455;1
??0?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> >::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> >(void) __ptr64;259455;259455;1
??1?$shared_ptr@VValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::Value>::~shared_ptr<class cxxopts::Value>(void) __ptr64;259455;259455;1
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVActivity@Activities@234@1@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVActivity@Activities@234@1@Z@Z;259455;259455;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;259455;259455;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64>;259455;259455;1
?_Unchecked_end@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBAPEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const * __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Unchecked_end(void)const __ptr64;518909;259454;2
wmemcpy;wmemcpy;518499;259249;2
?end@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::end(void) __ptr64;259044;259044;1
?_Unchecked_begin@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<uns;259044;259044;1
?get_deleter@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAAAEAU?$default_delete@V_Node_assert@std@@@2@XZ;struct std::default_delete<class std::_Node_assert> & __ptr64 __cdecl std::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >::get_deleter(void) __ptr64;259044;259044;1
??F?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator--(void) __ptr64;259044;259044;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_;518088;259044;2
??0?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::OptionDetails>::_Ptr_base<class cxxopts::OptionDetails>(void) __ptr64;259044;259044;1
??$forward@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@AEAV10@@Z;259044;259044;1
?_Get_first@?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@std@@QEBAAEBU?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_Compressed_pair<struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,float,1>::_Get_first(void)const __ptr64;1035766;258941;4
??4?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;258634;258634;1
??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z;??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z;258634;258634;1
??0?$tuple@$$QEAU?$pair@KK@std@@@std@@QEAA@$$QEAV01@@Z;??0?$tuple@$$QEAU?$pair@KK@std@@@std@@QEAA@$$QEAV01@@Z;258634;258634;1
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;258634;258634;1
?_Umove_if_noexcept1@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Umove_if_noexcept1(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_co;258634;258634;1
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >(struct std::_Tree_node<struct std::pair<class ;258634;258634;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct s;258634;258634;1
??$forward@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@@Z;258634;258634;1
??0IAnalyzer@BuildInsights@Cpp@Microsoft@@QEAA@AEBV0123@@Z;__cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::IAnalyzer(class Microsoft::Cpp::BuildInsights::IAnalyzer const & __ptr64) __ptr64;258634;258634;1
?_Decwref@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Decwref(void) __ptr64;258634;258634;1
??1?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::~_Hash<class std::_Umap_trait;258634;258634;1
??$forward@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;258634;258634;1
??0Value@cxxopts@@QEAA@XZ;__cdecl cxxopts::Value::Value(void) __ptr64;258634;258634;1
??0?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;258634;258634;1
??0_Iterator_base12@std@@QEAA@XZ;__cdecl std::_Iterator_base12::_Iterator_base12(void) __ptr64;2844967;258633;11
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_Lis;516857;258428;2
??$?RVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVBackEndPass@Activities@234@@Z;??$?RVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVBackEndPass@Activities@234@@Z;258223;258223;1
??$_Move_construct_from@VValue@cxxopts@@@?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@VValue@cxxopts@@@1@@Z;??$_Move_construct_from@VValue@cxxopts@@@?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEAAX$$QEAV?$_Ptr_base@VValue@cxxopts@@@1@@Z;258223;258223;1
??$forward@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;258223;258223;1
??0_Node_endif@std@@QEAA@XZ;__cdecl std::_Node_endif::_Node_endif(void) __ptr64;258223;258223;1
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z;__cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >(char const * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;258223;258223;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@C;258223;258223;1
??P?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator>=(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;258223;258223;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >(class std::allocator<struct std::_List_node<st;258223;258223;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@2@XZ;class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >,class std::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,1>::_Get_first(void) __ptr64;516446;258223;2
??0FrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::FrontEndPass::FrontEndPass(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;516036;258018;2
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ;class std::allocator<char> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<char>,class std::_String_val<struct std::_Simple_types<char> >,1>::_Get_first(void)const __ptr64;3354025;258001;13
?_Do_hash@?$hash@PEAVOptionDetails@cxxopts@@@std@@SA_KAEBQEAVOptionDetails@cxxopts@@@Z;static unsigned __int64 __cdecl std::hash<class cxxopts::OptionDetails * __ptr64>::_Do_hash(class cxxopts::OptionDetails * __ptr64 const & __ptr64);257813;257813;1
??0?$_Vector_val@U?$_Simple_types@U_Loop_vals_t@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<struct std::_Loop_vals_t> >::_Vector_val<struct std::_Simple_types<struct std::_Loop_vals_t> >(void) __ptr64;257813;257813;1
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ;257813;257813;1
?_Destroy@?$_Ref_count_obj2@VOptionDetails@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::OptionDetails>::_Destroy(void) __ptr64;257813;257813;1
??_GValue@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::Value::`scalar deleting destructor'(unsigned int) __ptr64;257813;257813;1
??4?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator=(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64) __ptr64;257813;257813;1
?capacity@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::capacity(void)const __ptr64;257813;257813;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > > & __ptr64 __cd;257813;257813;1
??$_Min_value@_J@std@@YAAEB_JAEB_J0@Z;__int64 const & __ptr64 __cdecl std::_Min_value<__int64>(__int64 const & __ptr64,__int64 const & __ptr64);257813;257813;1
??1?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;257813;257813;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;257813;257813;1
?OnStopActivity@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;1287420;257484;5
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >::allocate(unsigned __int64) __ptr64;257402;257402;1
?deallocate@?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@QEAAXQEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@_K@Z;void __cdecl std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >::deallocate(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,unsigned __int64) __ptr64;514804;257402;2
??$?0AEB_K$$ZAEAPEBVTimelineEntry@@AEAK@?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAPEBVTimelineEntry@@AEAK@1@@Z;??$?0AEB_K$$ZAEAPEBVTimelineEntry@@AEAK@?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEB_K@1@V?$tuple@AEAPEBVTimelineEntry@@AEAK@1@@Z;257402;257402;1
?_Umove_if_noexcept@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAXPEAUHelpOptionDetails@cxxopts@@00@Z;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Umove_if_noexcept(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64) __ptr64;257402;257402;1
?SetLength@ShortString@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAXI@Z;void __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::ShortString::SetLength(unsigned int) __ptr64;257402;257402;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAA@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64;514804;257402;2
??1?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAA@XZ;__cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::~MemoryPoolAllocator<class rapidjson::CrtAllocator>(void) __ptr64;257402;257402;1
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator==(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64)const __ptr64;257402;257402;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,clas;257402;257402;1
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > & __ptr64 __cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000000> >::operator+=(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64) __ptr64;514803;257401;2
??$forward@V?$allocator@_K@std@@@std@@YA$$QEAV?$allocator@_K@0@AEAV10@@Z;??$forward@V?$allocator@_K@std@@@std@@YA$$QEAV?$allocator@_K@0@AEAV10@@Z;256991;256991;1
?_Decref@?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Decref(void) __ptr64;256991;256991;1
??$get@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::get<0,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);256991;256991;1
?_Unchecked_end@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Unchecked_end(void) __ptr64;256991;256991;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@;256991;256991;1
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_trai;256991;256991;1
?allocate@?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@QEAAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@_K@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >::allocate(unsigned __int64) __ptr64;513983;256991;2
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > con;513573;256786;2
??AEventStack@BuildInsights@Cpp@Microsoft@@QEBA?AVRawEvent@123@_K@Z;class Microsoft::Cpp::BuildInsights::RawEvent __cdecl Microsoft::Cpp::BuildInsights::EventStack::operator[](unsigned __int64)const __ptr64;513572;256786;2
??1_Range_eraser@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Range_eraser::~_Range_eraser;256581;256581;1
??1?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;256581;256581;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,1>::_Get_first(void)const __ptr64;256581;256581;1
??$_Construct_in_place@V?$standard_value@_N@values@cxxopts@@$$V@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@@Z;??$_Construct_in_place@V?$standard_value@_N@values@cxxopts@@$$V@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@@Z;256581;256581;1
?size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::size(void)const __ptr64;256581;256581;1
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string;256581;256581;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >(void) __ptr64;256581;256581;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;256581;256581;1
?StopTimestamp@Activity@Activities@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::Activity::StopTimestamp(void)const __ptr64;1026324;256581;4
??1?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA@XZ;virtual __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::~StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Inte;256581;256581;1
?empty@?$list@U?$pair@$$CB_KU?$pair@KK@std@@@std@@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@@std@@QEBA_NXZ;bool __cdecl std::list<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >::empty(void)const __ptr64;256581;256581;1
?bucket_count@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_t;256581;256581;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@SAPEAU?$pair@$$CB_KU?$pair@KK@std@@@2@AEAU32@@Z;static struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > & __ptr64);256581;256581;1
?size@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::size(void)const __ptr64;256581;256581;1
??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;256581;256581;1
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>::`scalar deleting destructor'(unsigned int) __ptr64;256581;256581;1
??_GOptionParseException@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::OptionParseException::`scalar deleting destructor'(unsigned int) __ptr64;256581;256581;1
??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;256170;256170;1
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;256170;256170;1
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;256170;256170;1
??_G?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAPEAXI@Z;void * __ptr64 __cdecl rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::`scalar deleting destructor'(unsigned int) __ptr64;256170;256170;1
?_Getal@?$_Vb_val@V?$allocator@_N@std@@@std@@QEAAAEAV?$allocator@I@2@XZ;class std::allocator<unsigned int> & __ptr64 __cdecl std::_Vb_val<class std::allocator<bool> >::_Getal(void) __ptr64;256170;256170;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > >,class std::_Vector_val<struct std::_Simple_types<class std;256170;256170;1
?Bool@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_N_N@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Bool(bool) __ptr64;256170;256170;1
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::push_back(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;256170;256170;1
??_G?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::`scalar deleting destructor'(unsigned int) __ptr64;256170;256170;1
??$_Move_construct_from@VValue@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@VValue@cxxopts@@@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAX$$QEAV01@@Z;256170;256170;1
??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator!=(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64)const __ptr64;256170;256170;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;256170;256170;1
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int) __ptr64;1280441;256088;5
??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z;bool __cdecl std::_Fputc<char>(char,struct _iobuf * __ptr64);1280031;256006;5
?_Decref@?$_Ptr_base@VValue@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::Value>::_Decref(void) __ptr64;255760;255760;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;255760;255760;1
?get_default_value@?$abstract_value@_N@values@cxxopts@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cxxopts::values::abstract_value<bool>::get_default_value(void)const __ptr64;255760;255760;1
??1?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::Value const >::~shared_ptr<class cxxopts::Value const >(void) __ptr64;255760;255760;1
??0?$tuple@AEAPEBVTimelineEntry@@AEAK@std@@QEAA@$$QEAV01@@Z;??0?$tuple@AEAPEBVTimelineEntry@@AEAK@std@@QEAA@$$QEAV01@@Z;255760;255760;1
?_Unchecked_end@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAAPEAUDataPerFunction@FunctionCompilationsExporter@@XZ;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Unchecked_end(void) __ptr64;255760;255760;1
?_Move_construct@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Move_construct(class std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> > & __ptr64,struct std::integral_constant<bool,1>) __ptr64;255760;255760;1
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z;??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z;1789087;255583;7
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>(cl;255349;255349;1
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char;255349;255349;1
??Uregex_constants@std@@YA?AW4match_flag_type@01@W4201@0@Z;enum std::regex_constants::match_flag_type __cdecl std::regex_constants::operator|(enum std::regex_constants::match_flag_type,enum std::regex_constants::match_flag_type);255349;255349;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > >::_Allocate(void) __ptr64;255349;255349;1
??_Gbad_alloc@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::bad_alloc::`scalar deleting destructor'(unsigned int) __ptr64;3828186;255212;15
?_Unchecked_end@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBAPEBQEAVTimelineEntry@@XZ;class TimelineEntry * __ptr64 const * __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Unchecked_end(void)const __ptr64;510288;255144;2
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ;bool __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty(void)const __ptr64;254939;254939;1
??_GHelpOptionDetails@cxxopts@@QEAAPEAXI@Z;void * __ptr64 __cdecl cxxopts::HelpOptionDetails::`scalar deleting destructor'(unsigned int) __ptr64;254939;254939;1
?_Getal@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAAEAV?$allocator@U_Loop_vals_t@std@@@2@XZ;class std::allocator<struct std::_Loop_vals_t> & __ptr64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Getal(void) __ptr64;254939;254939;1
??$_Move_construct_from@VOptionDetails@cxxopts@@@?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@VOptionDetails@cxxopts@@@?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEAAX$$QEAV01@@Z;254939;254939;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA@AEBQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 const & __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 const & __ptr64;509878;254939;2
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class ;509878;254939;2
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned _;254939;254939;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & ;509877;254938;2
??0?$_Ptr_base@$$CBVOptionDetails@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::OptionDetails const >::_Ptr_base<class cxxopts::OptionDetails const >(void) __ptr64;254528;254528;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > ><stru;254528;254528;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::;509056;254528;2
??B?$shared_ptr@_N@std@@QEBA_NXZ;__cdecl std::shared_ptr<bool>::operator bool(void)const __ptr64;254528;254528;1
?resize@?$vector@IV?$allocator@I@std@@@std@@QEAAX_KAEBI@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::resize(unsigned __int64,unsigned int const & __ptr64) __ptr64;254528;254528;1
??$get@$0A@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@@Z;??$get@$0A@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@@Z;509056;254528;2
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Max_bu;254528;254528;1
??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::allocator<struct std::;254528;254528;1
??$_Mark@I@_Bitmap@std@@QEAAXI@Z;void __cdecl std::_Bitmap::_Mark<unsigned int>(unsigned int) __ptr64;254528;254528;1
??1_Range_eraser@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Range_eraser::~_Range_eraser(void) __ptr64;254118;254118;1
??_G_Node_endif@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_endif::`scalar deleting destructor'(unsigned int) __ptr64;254118;254118;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::size(void)const __ptr64;254118;254118;1
??$_Adl_verify_range@PEADPEAD@std@@YAXAEBQEAD0@Z;void __cdecl std::_Adl_verify_range<char * __ptr64,char * __ptr64>(char * __ptr64 const & __ptr64,char * __ptr64 const & __ptr64);254118;254118;1
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >(void) __ptr64;254118;254118;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VOptICF@Activities@BuildInsights@Cpp@Microsoft@@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Micr;254118;254118;1
??_G?$_Ref_count_obj2@VOptionDetails@cxxopts@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class cxxopts::OptionDetails>::`scalar deleting destructor'(unsigned int) __ptr64;254118;254118;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::;508235;254117;2
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;1016061;254015;4
??_GBuildTimelineAnalyzer@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl BuildTimelineAnalyzer::`scalar deleting destructor'(unsigned int) __ptr64;253707;253707;1
?_Umove_if_noexcept@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@00@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Umove_if_noexcept(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64) __ptr64;253707;253707;1
?capacity@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::capacity(void)const __ptr64;253707;253707;1
??4?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator=(class std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;253707;253707;1
?_Incref@_Ref_count_base@std@@QEAAXXZ;void __cdecl std::_Ref_count_base::_Incref(void) __ptr64;253707;253707;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@QEBAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@XZ;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >::_Unwrapped(void)const __ptr64;253707;253707;1
?_Umove@?$vector@KV?$allocator@K@std@@@std@@AEAAPEAKPEAK00@Z;unsigned long * __ptr64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Umove(unsigned long * __ptr64,unsigned long * __ptr64,unsigned long * __ptr64) __ptr64;253707;253707;1
?_Umove@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEAAPEAUDataPerFunction@FunctionCompilationsExporter@@PEAU34@00@Z;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Umove(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64) __ptr64;253707;253707;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >::allocate(unsigned __int64) __ptr64;253707;253707;1
??1?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<bool> >::~_Ref_count_obj2<class cxxopts::values::standard_value<bool> >(void) __ptr64;253707;253707;1
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z;static bool __cdecl std::_Narrow_char_traits<char,int>::eq_int_type(int const & __ptr64,int const & __ptr64);1521833;253638;6
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >::allocate(unsigned __int64) __ptr64;253297;253297;1
?Key@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NPEBDI_N@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Key(char const * __ptr64,unsigned int,bool) __ptr64;253297;253297;1
??$move@AEAV?$tuple@$$QEAU?$pair@KH@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAU?$pair@KH@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAU?$pair@KH@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAU?$pair@KH@std@@@0@AEAV10@@Z;253297;253297;1
??$_Get_size_of_n@$0FA@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<80>(unsigned __int64);253297;253297;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64)const __ptr64;253297;253297;1
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator==(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64)const __ptr64;253297;253297;1
?_Umove_if_noexcept@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEAAXPEAUDataPerFunction@FunctionCompilationsExporter@@00@Z;void __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Umove_if_noexcept(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64) __ptr64;253297;253297;1
?_Destroy@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@AEAAXPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@0@Z;void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Destroy(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64) __ptr64;506593;253296;2
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ;__int64 __cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000000> >::count(void)const __ptr64;1266074;253214;5
?capacity@?$vector@KV?$allocator@K@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::capacity(void)const __ptr64;252886;252886;1
??0?$vector@IV?$allocator@I@std@@@std@@QEAA@_KAEBIAEBV?$allocator@I@1@@Z;__cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::vector<unsigned int,class std::allocator<unsigned int> >(unsigned __int64,unsigned int const & __ptr64,class std::allocator<unsigned int> const & __ptr64) __ptr64;252886;252886;1
?_Getal@?$list@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >::_Getal(void) __ptr64;252886;252886;1
??1?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >::~_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >(void) __ptr64;252886;252886;1
??0OptionParseException@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::OptionParseException::OptionParseException(class cxxopts::OptionParseException const & __ptr64) __ptr64;252886;252886;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Max_bucket_s;252886;252886;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;252886;252886;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocat;252886;252886;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>(void) __ptr64;252886;252886;1
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >::deallocate(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;252886;252886;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cons;505361;252680;2
??$forward@AEBQEAVTimelineEntry@@@std@@YAAEBQEAVTimelineEntry@@AEBQEAV1@@Z;class TimelineEntry * __ptr64 const & __ptr64 __cdecl std::forward<class TimelineEntry * __ptr64 const & __ptr64>(class TimelineEntry * __ptr64 const & __ptr64);505361;252680;2
?_Get_first@?$_Compressed_pair@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@M$00@2@$00@std@@QEBAAEBU?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_Compressed_pair<struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::_Compressed_pair<struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,float,1>,1>::_Get_first(void)const __ptr64;1010312;252578;4
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > > >::size(void)const __ptr64;252476;252476;1
??0?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAA@PEAVCrtAllocator@2@_K@Z;__cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Stack<class rapidjson::CrtAllocator>(class rapidjson::CrtAllocator * __ptr64,unsigned __int64) __ptr64;252476;252476;1
??0TemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation::TemplateInstantiation(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;252476;252476;1
??_Gmissing_argument_exception@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::missing_argument_exception::`scalar deleting destructor'(unsigned int) __ptr64;252476;252476;1
?_Unchecked_begin@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBAPEBQEAVTimelineEntry@@XZ;class TimelineEntry * __ptr64 const * __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Unchecked_begin(void)const __ptr64;504951;252475;2
?pointer_to@?$pointer_traits@PEAU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@SAPEAU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@2@AEAU32@@Z;static struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,cla;252065;252065;1
?_Destroy@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Destroy(unsigned int * __ptr64,unsigned int * __ptr64) __ptr64;252065;252065;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > ;252065;252065;1
?_Umove_if_noexcept1@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEAAXPEAUDataPerFunction@FunctionCompilationsExporter@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Umove_if_noexcept1(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct std::integral_constant<bool,1>) __ptr64;252065;252065;1
?_Destroy@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Destroy(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_iterato;252065;252065;1
?_Umove_if_noexcept1@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAXPEAUHelpOptionDetails@cxxopts@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Umove_if_noexcept1(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64,struct std::integral_constant<bool,1>) __ptr64;252065;252065;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;252065;252065;1
??$forward_as_tuple@AEAVTimelineEntry@@@std@@YA?AV?$tuple@AEAVTimelineEntry@@@0@AEAVTimelineEntry@@@Z;class std::tuple<class TimelineEntry & __ptr64> __cdecl std::forward_as_tuple<class TimelineEntry & __ptr64>(class TimelineEntry & __ptr64);252065;252065;1
??0?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileCompilationsAnalyzer@@P85@EAAXAEBVBackEndPass@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileCompilationsAnalyzer@@P85@EAAXAEBVBackEndPass@Activities@234@@Z@Z;252065;252065;1
?deallocate@?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAAXQEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>::deallocate(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const,unsigned __int64) __ptr64;252065;252065;1
??0option_requires_argument_exception@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::option_requires_argument_exception::option_requires_argument_exception(class cxxopts::option_requires_argument_exception const & __ptr64) __ptr64;251655;251655;1
??$_Ucopy@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@PEAU231@00@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Ucopy<struct std::_Tgt_state_t<class std::_String_const_iterator<class;251655;251655;1
?_Getal@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBAAEBV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > const & __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Getal(void)const __ptr64;251655;251655;1
?__autoclassinit2@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEAAX_K@Z;void __cdecl std::basic_regex<char,class std::regex_traits<char> >::__autoclassinit2(unsigned __int64) __ptr64;251655;251655;1
?OnActivityStartNested@BuildTimelineAnalyzer@@AEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl BuildTimelineAnalyzer::OnActivityStartNested(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64,class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;251655;251655;1
??_5std@@YAAEAW4_Node_flags@0@AEAW410@W410@@Z;enum std::_Node_flags & __ptr64 __cdecl std::operator|=(enum std::_Node_flags & __ptr64,enum std::_Node_flags);251655;251655;1
?_Get_first@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> >;251655;251655;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::cha;503309;251654;2
??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<24>(unsigned __int64);502899;251449;2
??0bad_alloc@std@@QEAA@AEBV01@@Z;__cdecl std::bad_alloc::bad_alloc(class std::bad_alloc const & __ptr64) __ptr64;3769073;251271;15
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRe;251244;251244;1
??$_Set_ptr_rep_and_enable_shared@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Set_ptr_rep_and_enable_shared<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,class std::_Ref_count_base * __ptr64 const) __ptr64;251244;251244;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > >::size(void)const __ptr64;251244;251244;1
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic;251244;251244;1
?_Umove_if_noexcept1@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAXPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Umove_if_noexcept1(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::sub_match<class std::_String_const_iterator<class std::_String_val<str;251244;251244;1
??0OptionSpecException@cxxopts@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;__cdecl cxxopts::OptionSpecException::OptionSpecException(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;251244;251244;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned _;251244;251244;1
??0?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> >::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> >(void) __ptr64;251244;251244;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class ;502078;251039;2
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;502077;251038;2
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z;250833;250833;1
??_G?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::`scalar deleting destructor'(unsigned int) __pt;250833;250833;1
?size@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::size(void)const __ptr64;250833;250833;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 co;250833;250833;1
??0OptionSpecException@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::OptionSpecException::OptionSpecException(class cxxopts::OptionSpecException const & __ptr64) __ptr64;250833;250833;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::_Vector_val<struct std:;250833;250833;1
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z;static int __cdecl std::_Narrow_char_traits<char,int>::compare(char const * __ptr64 const,char const * __ptr64 const,unsigned __int64);1002923;250730;4
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<cla;501256;250628;2
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std:;501256;250628;2
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::_Allocate(void) __ptr64;501256;250628;2
??0?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,clas;500846;250423;2
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cla;250423;250423;1
?_Ufill@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@PEAU342@_KU_Value_init_tag@2@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Ufill(struct std::_Tgt_state_t<class std::_String_const_iterator<class;250423;250423;1
??$end@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > __cdecl std::end<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);250423;250423;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>(v;250423;250423;1
?_Getal@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEBAAEBV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@2@XZ;class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> const & __ptr64 __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Getal(void)const __ptr64;250012;250012;1
??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64,class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64);250012;250012;1
??_G?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAAPEAXI@Z;void * __ptr64 __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::`scalar deleting destructor'(unsigned int) __ptr64;250012;250012;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<ch;250012;250012;1
??__Es_defaultoutputPathFileInclusionTimes@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultoutputPathFileInclusionTimes''(void);250012;250012;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_;500025;250012;2
??_G?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::`scalar deleting destructor'(unsigned int) __ptr64;250012;250012;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_si;500024;250012;2
??$_Adl_verify_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64);250012;250012;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;499614;249807;2
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ;virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Unlock(void) __ptr64;1248831;249766;5
?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Tree<class std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> >,0> >::size(void)const __ptr64;249602;249602;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,1>::_Get_first(void);249602;249602;1
?allocate@?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@_K@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >::allocate(unsigned __int64) __ptr64;499204;249602;2
?_Getal@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Getal(void) __ptr64;249602;249602;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allo;249602;249602;1
??0?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>(void) __ptr64;249602;249602;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,cla;499204;249602;2
??0invalid_option_format_error@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::invalid_option_format_error::invalid_option_format_error(class cxxopts::invalid_option_format_error const & __ptr64) __ptr64;249602;249602;1
??0exception@std@@QEAA@XZ;__cdecl std::exception::exception(void) __ptr64;249602;249602;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VBottomUp@Activities@BuildInsights@Cpp@Microsoft@@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(unsigned int);249602;249602;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;249602;249602;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >::_List_unchecked_iterator<class std;249602;249602;1
?_Getal@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEAAAEAV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@2@XZ;class std::allocator<struct FileInclusionTimesExporter::DataPerFile> & __ptr64 __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Getal(void) __ptr64;249602;249602;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;498793;249396;2
??$?0PEAVTimelineEntry@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVTimelineEntry@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class TimelineEntry * __ptr64>(class std::allocator<class TimelineEntry * __ptr64> const & __ptr64) __ptr64;498383;249191;2
??0?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;249191;249191;1
??$construct@U_Loop_vals_t@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@SAXAEAV?$allocator@U_Loop_vals_t@std@@@1@QEAU_Loop_vals_t@1@@Z;??$construct@U_Loop_vals_t@std@@$$V@?$_Default_allocator_traits@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@SAXAEAV?$allocator@U_Loop_vals_t@std@@@1@QEAU_Loop_vals_t@1@@Z;249191;249191;1
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::`scalar deleting destructor'(unsigned int) __ptr64;498383;249191;2
??1?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::~_Uninitialized_backout_al<class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >(void) __ptr64;249191;249191;1
?_Destroy@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@0@Z;void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Destroy(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64) __ptr64;249191;249191;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@SA?AV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@AEBV32@@Z;static class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> __cdecl std::_Default_allocator_traits<class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::select_on_container_copy_construction(class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> const & __ptr64);249191;249191;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;249191;249191;1
??$_Destroy_range@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@YAXPEAV?$sub_match@PEBD@0@QEAV10@AEAV?$allocator@V?$sub_match@PEBD@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class std::sub_match<char const * __ptr64> > >(class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64 const,class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64);249191;249191;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::__autoclassinit2(unsigned __int64) __ptr64;249191;249191;1
??Y?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator+=(__int64) __ptr64;249191;249191;1
?_Destroy@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@0@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Destroy(struct std::pair<class std::basic_string<char,struct std::ch;249191;249191;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;248781;248781;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CB_KU?$pair@KK@std@@@1@XZ;struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::operator->(void)const __ptr64;248781;248781;1
??_G_Node_assert@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_assert::`scalar deleting destructor'(unsigned int) __ptr64;248781;248781;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,;248781;248781;1
??$_Swap_adl@PEAV_Node_base@std@@@std@@YAXAEAPEAV_Node_base@0@0@Z;void __cdecl std::_Swap_adl<class std::_Node_base * __ptr64>(class std::_Node_base * __ptr64 & __ptr64,class std::_Node_base * __ptr64 & __ptr64);248781;248781;1
??_G?$_Node_str@D@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_str<char>::`scalar deleting destructor'(unsigned int) __ptr64;248781;248781;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class st;248781;248781;1
??Iregex_constants@std@@YA?AW4match_flag_type@01@W4201@0@Z;enum std::regex_constants::match_flag_type __cdecl std::regex_constants::operator&(enum std::regex_constants::match_flag_type,enum std::regex_constants::match_flag_type);248781;248781;1
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFunction@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFunction@Activities@234@@Z@Z;248781;248781;1
?_Destroy@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAXPEAU_Loop_vals_t@2@0@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Destroy(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64) __ptr64;248781;248781;1
?_Ufill@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@PEAV32@_KU_Value_init_tag@2@@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Ufill(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_t;248781;248781;1
?expired@?$weak_ptr@VValue@cxxopts@@@std@@QEBA_NXZ;bool __cdecl std::weak_ptr<class cxxopts::Value>::expired(void)const __ptr64;248781;248781;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > const & __ptr64)const __ptr64;248781;248781;1
??__Etruthy_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic initializer for 'truthy_pattern''(void);248781;248781;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >,struct std::_Iterator_base;248781;248781;1
??0?$_Buf@D@std@@QEAA@XZ;__cdecl std::_Buf<char>::_Buf<char>(void) __ptr64;248781;248781;1
??0range_error@std@@QEAA@AEBV01@@Z;__cdecl std::range_error::range_error(class std::range_error const & __ptr64) __ptr64;248781;248781;1
?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEBAAEBV?$allocator@I@2@XZ;class std::allocator<unsigned int> const & __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Getal(void)const __ptr64;248781;248781;1
?_Umove_if_noexcept@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAXPEAV?$sub_match@PEBD@2@00@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Umove_if_noexcept(class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64) __ptr64;248781;248781;1
?OnBeginAnalysis@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;248781;248781;1
??0option_exists_error@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::option_exists_error::option_exists_error(class cxxopts::option_exists_error const & __ptr64) __ptr64;248781;248781;1
??_G?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::`scalar deleting destructor'(unsigned int) __ptr64;248370;248370;1
??1?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<unsigned int> >::~_Uninitialized_backout_al<class std::allocator<unsigned int> >(void) __ptr64;248370;248370;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>,class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_tr;248370;248370;1
?_Destroy@?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<bool> >::_Destroy(void) __ptr64;248370;248370;1
??0?$enable_shared_from_this@VValue@cxxopts@@@std@@IEAA@XZ;__cdecl std::enable_shared_from_this<class cxxopts::Value>::enable_shared_from_this<class cxxopts::Value>(void) __ptr64;248370;248370;1
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tree_temp_node_alloc<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::~_Tree_temp_node_alloc<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(void) __ptr64;248370;248370;1
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z;static char * __ptr64 __cdecl std::_Narrow_char_traits<char,int>::copy(char * __ptr64 const,char const * __ptr64 const,unsigned __int64);3227172;248244;13
??_G?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::`scalar deleting destructor'(unsigned int) __ptr64;247960;247960;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >::~_List_const_iterator<class std::_List;247960;247960;1
??$_Swap_adl@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@0@Z;void __cdecl std::_Swap_adl<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64,struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64);247960;247960;1
??$_Move_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@V?$standard_value@_N@values@cxxopts@@@?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@std@@IEAAX$$QEAV01@@Z;247960;247960;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct s;247960;247960;1
??0?$_Bt_state_t@PEBD@std@@QEAA@AEBV01@@Z;__cdecl std::_Bt_state_t<char const * __ptr64>::_Bt_state_t<char const * __ptr64>(class std::_Bt_state_t<char const * __ptr64> const & __ptr64) __ptr64;247960;247960;1
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ;char const * __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data(void)const __ptr64;1486937;247822;6
?capacity@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::capacity(void)const __ptr64;247549;247549;1
??_G?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::`scalar deleting destructor'(unsigned int) __ptr64;247549;247549;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >(struct std::_List_;247549;247549;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,cl;247549;247549;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VOptRef@Activities@BuildInsights@Cpp@Microsoft@@VOptLBR@2345@VOptICF@2345@VC1DLL@2345@VC2DLL@2345@VWholeProgramAnalysis@2345@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::OptRef,class Microsoft::Cpp::BuildInsights::Activities::OptLBR,class Microsoft::Cpp::BuildInsights::Activities::OptICF,class Microsoft::Cpp::BuildInsights::Activities::C1DLL,class Microsoft::Cpp::BuildInsights::Activities::C2DLL,class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp;247549;247549;1
?OnBeginAnalysisPass@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;247549;247549;1
??_G?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::`scalar deleting destructor'(unsigned int) __ptr64;247549;247549;1
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@$$QEAV01@@Z;247549;247549;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Range_eraser::_Bump_erased(void) __ptr64;247549;247549;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;247139;247139;1
?_Del@?$_Buf@D@std@@QEAADXZ;char __cdecl std::_Buf<char>::_Del(void) __ptr64;247139;247139;1
??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ;??$forward_as_tuple@$$V@std@@YA?AV?$tuple@$$V@0@XZ;247139;247139;1
??$_Seek_wrapped@PEBDPEBD@std@@YAXAEAPEBD$$QEAPEBD@Z;??$_Seek_wrapped@PEBDPEBD@std@@YAXAEAPEBD$$QEAPEBD@Z;247139;247139;1
??GDiyFp@internal@rapidjson@@QEBA?AU012@AEBU012@@Z;struct rapidjson::internal::DiyFp __cdecl rapidjson::internal::DiyFp::operator-(struct rapidjson::internal::DiyFp const & __ptr64)const __ptr64;247139;247139;1
??0DataPerFile@FileInclusionTimesExporter@@QEAA@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@3@1I@Z;__cdecl FileInclusionTimesExporter::DataPerFile::DataPerFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,unsigned int) __ptr64;247139;247139;1
?_Umove_if_noexcept1@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAXPEAPEAVTimelineEntry@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Umove_if_noexcept1(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,struct std::integral_constant<bool,1>) __ptr64;494278;247139;2
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VWholeProgramAnalysis@Activities@BuildInsights@Cpp@Microsoft@@VCodeGeneration@2345@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::WholeProgramAnalysis,class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(unsigned int);247139;247139;1
??1?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::~_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __in;247139;247139;1
?empty@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_NXZ;bool __cdecl std::vector<bool,class std::allocator<bool> >::empty(void)const __ptr64;247139;247139;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@XZ;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::operator*(void)const __ptr64;246728;246728;1
?_Destroy@?$_Ref_count_obj2@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_t;246728;246728;1
??0FrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::FrontEndFile::FrontEndFile(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;493456;246728;2
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@AEAAXPEAK0@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Destroy(unsigned long * __ptr64,unsigned long * __ptr64) __ptr64;246728;246728;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::_Allocate(void) __ptr64;246728;246728;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >(struct std::_List_node<struct std::pair<class std::basic_string<char,s;246318;246318;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,class std::_List_val<stru;492636;246318;2
??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$Run@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@SA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@12;246318;246318;1
??$_Ucopy@PEAD@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEAD00@Z;char * __ptr64 __cdecl std::vector<char,class std::allocator<char> >::_Ucopy<char * __ptr64>(char * __ptr64,char * __ptr64,char * __ptr64) __ptr64;246318;246318;1
??$?0AEAK@?$_Tuple_val@AEAK@std@@QEAA@AEAK@Z;__cdecl std::_Tuple_val<unsigned long & __ptr64>::_Tuple_val<unsigned long & __ptr64><unsigned long & __ptr64>(unsigned long & __ptr64) __ptr64;246318;246318;1
??0?$standard_value@_N@values@cxxopts@@QEAA@AEBV012@@Z;__cdecl cxxopts::values::standard_value<bool>::standard_value<bool>(class cxxopts::values::standard_value<bool> const & __ptr64) __ptr64;246318;246318;1
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator!=(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::Op;246318;246318;1
??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(voi;246318;246318;1
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z;bool __cdecl std::operator==<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);985271;246317;4
??$?0V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$_Tuple_val@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;??$?0V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@?$_Tuple_val@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@QEAA@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@1@@Z;492635;246317;2
?capacity@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::capacity(void)const __ptr64;492635;246317;2
??$_Destroy_range@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@YAXPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@QEAV120@AEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > & __ptr64);492635;246317;2
??_6std@@YAAEAW4_Node_flags@0@AEAW410@W410@@Z;enum std::_Node_flags & __ptr64 __cdecl std::operator^=(enum std::_Node_flags & __ptr64,enum std::_Node_flags);245907;245907;1
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::max_load_factor(void)co;245907;245907;1
?get@?$_Ptr_base@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@IEBAPEAV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@2@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > c;245907;245907;1
??$?0$01@?$GenericStringRef@D@rapidjson@@QEAA@AEAY01$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><2>(char const (& __ptr64)[2]) __ptr64;245907;245907;1
?_Unchecked_end@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Unchecked_end(void) __ptr64;245907;245907;1
??$addressof@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@YAPEAU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vect;245907;245907;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;491814;245907;2
??1?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >::~_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >(void) __ptr64;245907;245907;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Container_proxy> >::deallocate(class std::allocator<struct std::_Container_proxy> & __ptr64,struct std::_Container_proxy * __ptr64 const,unsigned __int64);3686144;245742;15
??R?$_Conditionally_enabled_hash@_K$00@std@@QEBA_KAEB_K@Z;unsigned __int64 __cdecl std::_Conditionally_enabled_hash<unsigned __int64,1>::operator()(unsigned __int64 const & __ptr64)const __ptr64;736900;245633;3
?_Getal@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::_Getal(void)cons;245497;245497;1
??$_Destroy_in_place@VOptionDetails@cxxopts@@@std@@YAXAEAVOptionDetails@cxxopts@@@Z;void __cdecl std::_Destroy_in_place<class cxxopts::OptionDetails>(class cxxopts::OptionDetails & __ptr64);245497;245497;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >,class std::_Li;245497;245497;1
??$?CVValue@cxxopts@@$0A@@?$shared_ptr@VValue@cxxopts@@@std@@QEBAPEAVValue@cxxopts@@XZ;class cxxopts::Value * __ptr64 __cdecl std::shared_ptr<class cxxopts::Value>::operator-><class cxxopts::Value,0>(void)const __ptr64;245497;245497;1
??$exchange@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;245497;245497;1
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::allocate(unsigned __int64) __ptr64;245497;245497;1
?_Getal@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEBAAEBV?$allocator@UHelpOptionDetails@cxxopts@@@2@XZ;class std::allocator<struct cxxopts::HelpOptionDetails> const & __ptr64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Getal(void)const __ptr64;245497;245497;1
?RawAssign@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAXAEAV12@@Z;void __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::RawAssign(class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64) __ptr64;245086;245086;1
??0bad_weak_ptr@std@@QEAA@AEBV01@@Z;__cdecl std::bad_weak_ptr::bad_weak_ptr(class std::bad_weak_ptr const & __ptr64) __ptr64;245086;245086;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 const & __ptr64);245086;245086;1
??0_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t::_Grp_t(void) __ptr64;245086;245086;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@PEAPEAVTimelineEntry@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(class TimelineEntry * __ptr64 * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;490172;245086;2
??__Foption_matcher@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic atexit destructor for 'option_matcher''(void);245086;245086;1
??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@@Z;??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@@Z;245086;245086;1
??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@234@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@$$QEAVSymbolName@SimpleEvents@234@@Z;??$?RVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@234@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFrontEndPass@Activities@234@$$QEAVSymbolName@SimpleEvents@234@@Z;245086;245086;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,clas;245086;245086;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > ;245086;245086;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std;245086;245086;1
??1?$_Buf@D@std@@QEAA@XZ;__cdecl std::_Buf<char>::~_Buf<char>(void) __ptr64;244676;244676;1
??$_Seek_wrapped@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@$$QEAV10@@Z;??$_Seek_wrapped@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@$$QEAV10@@Z;244676;244676;1
?String@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NPEBDI_N@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::String(char const * __ptr64,unsigned int,bool) __ptr64;244676;244676;1
??_G_Node_end_group@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_end_group::`scalar deleting destructor'(unsigned int) __ptr64;244676;244676;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >::allocate(unsigned __int64) __ptr64;244676;244676;1
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;244676;244676;1
?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Umove(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;244676;244676;1
??$_Adl_verify_range@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>(class std::_List_unchec;488941;244470;2
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> >;244265;244265;1
?ScanWriteUnescapedString@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NAEAU?$GenericStringStream@U?$UTF8@D@rapidjson@@@2@_K@Z;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::ScanWriteUnescapedString(struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > & __ptr64,unsigned __int64) __ptr64;244265;244265;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Mic;244265;244265;1
??0?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0>::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,cla;244265;244265;1
?_Mask@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@IEBAIXZ;unsigned int __cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Mask(void)const __ptr64;244265;244265;1
?_Umove@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAPEAPEAVTimelineEntry@@PEAPEAV3@00@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Umove(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64) __ptr64;488530;244265;2
??1?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::~_Uninitialized_backout_al<class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >(void) __ptr64;244265;244265;1
?_Destroy@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEAAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0@Z;void __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Destroy(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64) __ptr64;244265;244265;1
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<c;488120;244060;2
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >::`scalar deleting destructor'(unsigned int) __ptr64;243854;243854;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::al;243854;243854;1
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::operator!=(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64)const __ptr64;243854;243854;1
??$forward@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAU120@@Z;??$forward@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAU120@@Z;243854;243854;1
?_Getal@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEBAAEBV?$allocator@PEAVTimelineEntry@@@2@XZ;class std::allocator<class TimelineEntry * __ptr64> const & __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Getal(void)const __ptr64;487709;243854;2
??1HelpGroupDetails@cxxopts@@QEAA@XZ;__cdecl cxxopts::HelpGroupDetails::~HelpGroupDetails(void) __ptr64;243854;243854;1
??1OptionException@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::OptionException::~OptionException(void) __ptr64;243854;243854;1
??$?0PEBDPEBD$0A@@?$pair@PEBDPEBD@std@@QEAA@XZ;__cdecl std::pair<char const * __ptr64,char const * __ptr64>::pair<char const * __ptr64,char const * __ptr64><char const * __ptr64,char const * __ptr64,0>(void) __ptr64;243854;243854;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>(class std::_List_unchecked_;243854;243854;1
?_Destroy@?$_Ref_count_obj2@_N@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<bool>::_Destroy(void) __ptr64;243854;243854;1
?_Getal@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAAEAV?$allocator@PEAVTimelineEntry@@@2@XZ;class std::allocator<class TimelineEntry * __ptr64> & __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Getal(void) __ptr64;487708;243854;2
?_Umove_if_noexcept1@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAXPEAU_Loop_vals_t@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Umove_if_noexcept1(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64,struct std::integral_constant<bool,1>) __ptr64;243854;243854;1
??$_Get_unwrapped@AEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA@AEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64>(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64);243854;243854;1
??$forward@AEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64);487298;243649;2
?OnTraceInfo@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVTraceInfo@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnTraceInfo(class Microsoft::Cpp::BuildInsights::TraceInfo const & _;243444;243444;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::_Allocate(void) __ptr64;243444;243444;1
??_G?$_Sequence@D@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::_Sequence<char>::`scalar deleting destructor'(unsigned int) __ptr64;243444;243444;1
??$?0PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>(class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> const & __ptr64) __ptr64;243444;243444;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VTopDown@Activities@BuildInsights@Cpp@Microsoft@@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(unsigned int);243444;243444;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<c;243444;243444;1
?do_unshift@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_unshift(struct _Mbstatet & __ptr64,char * __ptr64,char * __ptr64,char * __ptr64 & __ptr64)const __ptr64;243444;243444;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,1>::_Get_first(void) __;243444;243444;1
??0?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;243444;243444;1
?OnEndAnalysis@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;243444;243444;1
??$_Set_ptr_rep_and_enable_shared@VOptionDetails@cxxopts@@@?$shared_ptr@VOptionDetails@cxxopts@@@std@@AEAAXQEAVOptionDetails@cxxopts@@QEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<class cxxopts::OptionDetails>::_Set_ptr_rep_and_enable_shared<class cxxopts::OptionDetails>(class cxxopts::OptionDetails * __ptr64 const,class std::_Ref_count_base * __ptr64 const) __ptr64;243444;243444;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@PEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>;243444;243444;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class st;243444;243444;1
??0?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@AEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::allocator<class std::sub_;243444;243444;1
??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z;void __cdecl std::_Pocca<class std::allocator<char> >(class std::allocator<char> & __ptr64,class std::allocator<char> const & __ptr64);486887;243443;2
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z;void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Swap_proxy_and_iterators(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64) __ptr64;1215987;243197;5
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiatio;243033;243033;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::;243033;243033;1
??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z;??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z;1458200;243033;6
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >,bool>(void) __ptr64;243033;243033;1
?size@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::size(void)const __ptr64;243033;243033;1
??$_Move_construct_from@_N@?$_Ptr_base@_N@std@@IEAAX$$QEAV01@@Z;??$_Move_construct_from@_N@?$_Ptr_base@_N@std@@IEAAX$$QEAV01@@Z;243033;243033;1
??_Goption_not_exists_exception@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::option_not_exists_exception::`scalar deleting destructor'(unsigned int) __ptr64;243033;243033;1
?_Unchecked_end@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ;unsigned __int64 * __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Unchecked_end(void) __ptr64;243033;243033;1
??R?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;bool __cdecl std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::operator()(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;971312;242828;4
??$Push@ULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAAPEAULevel@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@2@_K@Z;struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level * __ptr64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Push<struct rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::Crt;242623;242623;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair;242623;242623;1
?_Umove_if_noexcept1@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEAAXPEAUDataPerFile@FileInclusionTimesExporter@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Umove_if_noexcept1(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct std::integral_constant<bool,1>) __ptr64;242623;242623;1
?_Umove@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEAAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU34@00@Z;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Umove(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWi;242623;242623;1
??_G?$_Ref_count_obj2@_N@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<bool>::`scalar deleting destructor'(unsigned int) __ptr64;242623;242623;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::operator++(void) __ptr64;242623;242623;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;242623;242623;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@AEAV10@@Z;242623;242623;1
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z;class std::_String_val<struct std::_Simple_types<char> > * __ptr64 __cdecl std::addressof<class std::_String_val<struct std::_Simple_types<char> > >(class std::_String_val<struct std::_Simple_types<char> > & __ptr64);1212294;242458;5
??0Function@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::Function::Function(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;484835;242417;2
??$_Swap_adl@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXAEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@0@Z;void __cdecl std::_Swap_adl<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 & __ptr64,class std::_List_unch;484835;242417;2
?_Getal@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEBAAEBV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@2@XZ;class std::allocator<struct FileInclusionTimesExporter::DataPerFile> const & __ptr64 __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Getal(void)const __ptr64;242212;242212;1
?_Umove@?$vector@_KV?$allocator@_K@std@@@std@@AEAAPEA_KPEA_K00@Z;unsigned __int64 * __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Umove(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64,unsigned __int64 * __ptr64) __ptr64;242212;242212;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;242212;242212;1
?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAAAEAV?$allocator@I@2@XZ;class std::allocator<unsigned int> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned int>,class std::_Vector_val<struct std::_Simple_types<unsigned int> >,1>::_Get_first(void) __ptr64;242212;242212;1
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;242212;242212;1
?OnSimpleEvent@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const ;242212;242212;1
?Null@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NXZ;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Null(void) __ptr64;242212;242212;1
?deallocate@?$allocator@K@std@@QEAAXQEAK_K@Z;void __cdecl std::allocator<unsigned long>::deallocate(unsigned long * __ptr64 const,unsigned __int64) __ptr64;242212;242212;1
??$get@$0A@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;??$get@$0A@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;726638;242212;3
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@M;242212;242212;1
?deallocate@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QEAAXQEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@_K@Z;void __cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::deallocate(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 const,unsigned __int64) __ptr64;242212;242212;1
?_Destroy@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAXPEAPEAVTimelineEntry@@0@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Destroy(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64) __ptr64;484014;242007;2
??$?0U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > ><struct std::pair<unsigned __int64 co;241802;241802;1
?_Getal@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEAAAEAV?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@2@XZ;class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> & __ptr64 __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Getal(void) __ptr64;241802;241802;1
?_Getal@?$vector@KV?$allocator@K@std@@@std@@AEBAAEBV?$allocator@K@2@XZ;class std::allocator<unsigned long> const & __ptr64 __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::_Getal(void)const __ptr64;241802;241802;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::__autoclassinit2(unsigned __int64) __ptr64;241802;241802;1
??_G?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::`scalar deleting destructor'(unsigned int) __ptr64;241802;241802;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_tra;483604;241802;2
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;241802;241802;1
?SetStringPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAPEBDPEBD@Z;char const * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::SetStringPointer(char const * __ptr64) __ptr64;241802;241802;1
?_Get_max_bucket_size@?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAMXZ;float & __ptr64 __cdecl std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Get_max_bucket_size(void) __ptr64;966796;241699;4
?OnBeginReloggingPass@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnBeginReloggingPass(void) __ptr64;1207777;241555;5
??_G_Node_if@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_if::`scalar deleting destructor'(unsigned int) __ptr64;241391;241391;1
?capacity@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::capacity(void)const __ptr64;241391;241391;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >(class std::_List_unchecked_iterator<class std::_L;241391;241391;1
??_Goption_syntax_exception@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::option_syntax_exception::`scalar deleting destructor'(unsigned int) __ptr64;241391;241391;1
?_Destroy@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@AEAAXPEAV?$sub_match@PEBD@2@0@Z;void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Destroy(class std::sub_match<char const * __ptr64> * __ptr64,class std::sub_match<char const * __ptr64> * __ptr64) __ptr64;241391;241391;1
??1?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::~_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(void) __ptr64;241391;241391;1
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z;void __cdecl std::_Pocma<class std::allocator<char> >(class std::allocator<char> & __ptr64,class std::allocator<char> & __ptr64);241391;241391;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<stru;965565;241391;4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;241391;241391;1
??$forward@U?$pair@KH@std@@@std@@YA$$QEAU?$pair@KH@0@AEAU10@@Z;??$forward@U?$pair@KH@std@@@std@@YA$$QEAU?$pair@KH@0@AEAU10@@Z;241391;241391;1
?_Getal@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > & __ptr64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Getal(void) __ptr64;241391;241391;1
?_Getal@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __ptr64 __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,;241391;241391;1
??$?0U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > ><struct std::pair<unsigned __int64 const ,class;241391;241391;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation:;241391;241391;1
??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z;bool __cdecl std::operator!=<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,char const * __ptr64 const);241391;241391;1
?_Ufill@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEAAPEAU_Loop_vals_t@2@PEAU32@_KU_Value_init_tag@2@@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Ufill(struct std::_Loop_vals_t * __ptr64,unsigned __int64,struct std::_Value_init_tag) __ptr64;241391;241391;1
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ;class std::allocator<char> & __ptr64 __cdecl std::vector<char,class std::allocator<char> >::_Getal(void) __ptr64;241391;241391;1
?_Throw_bad_cast@std@@YAXXZ;void __cdecl std::_Throw_bad_cast(void);1446296;241049;6
?capacity@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::capacity(void)const __ptr64;240981;240981;1
??0_Clear_guard@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_string<;240981;240981;1
??0?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ;__cdecl std::vector<bool,class std::allocator<bool> >::vector<bool,class std::allocator<bool> >(void) __ptr64;240981;240981;1
??_G_Node_back@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_back::`scalar deleting destructor'(unsigned int) __ptr64;240981;240981;1
??1?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ;__cdecl std::vector<bool,class std::allocator<bool> >::~vector<bool,class std::allocator<bool> >(void) __ptr64;240981;240981;1
??$destroy@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > >::destroy<struct ;240981;240981;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;240981;240981;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > >::_Alloc_construct_ptr<class std::;240981;240981;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@C;240981;240981;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::alloc;240981;240981;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,;240981;240981;1
?OnEndAnalysisPass@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA?AW4CALLBACK_CODE@345@PEAX@Z;static enum Microsoft::Cpp::BuildInsights::CALLBACK_CODE __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerGroupCallbacks<class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class M;240981;240981;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;481551;240775;2
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFrontEndPass@Activities@234@AEBVTemplateInstantiation@7234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFrontEndPass@Activities@234@AEBVTemplateInstantiation@7234@@Z@Z;240570;240570;1
?resize@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::resize(unsigned __int64) __ptr64;240570;240570;1
??$_Get_unwrapped@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@@std@@YA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > & __ptr64);240570;240570;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64>(class std::_List_;240570;240570;1
??0?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;240570;240570;1
??$_Ucopy@PEAPEAVTimelineEntry@@@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@AEAAPEAPEAVTimelineEntry@@PEAPEAV2@00@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Ucopy<class TimelineEntry * __ptr64 * __ptr64>(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64) __ptr64;240570;240570;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_trai;240570;240570;1
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z;char * __ptr64 __cdecl std::allocator<char>::allocate(unsigned __int64) __ptr64;3127002;240538;13
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;480730;240365;2
??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;240160;240160;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<str;240160;240160;1
?_Getal@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > const & __ptr64 __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Getal(void)const __ptr64;240160;240160;1
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ;class std::allocator<char> const & __ptr64 __cdecl std::vector<char,class std::allocator<char> >::_Getal(void)const __ptr64;240160;240160;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64) __ptr64;240160;240160;1
?_Destroy@?$_Ref_count_obj2@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Destroy(void) __ptr64;240160;240160;1
??_Goption_exists_error@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::option_exists_error::`scalar deleting destructor'(unsigned int) __ptr64;240160;240160;1
?_Umove_if_noexcept1@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Umove_if_noexcept1(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAna;240160;240160;1
??_G_Node_end_rep@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_end_rep::`scalar deleting destructor'(unsigned int) __ptr64;240160;240160;1
??$exchange@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;??$exchange@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z;240160;240160;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64,class std::_List_val<s;240160;240160;1
?OnStartActivity@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack cons;240160;240160;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;240160;240160;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<ch;240160;240160;1
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Destroy(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64) __ptr64;240160;240160;1
??_GKeyValue@cxxopts@@QEAAPEAXI@Z;void * __ptr64 __cdecl cxxopts::KeyValue::`scalar deleting destructor'(unsigned int) __ptr64;240160;240160;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_bas;479909;239954;2
??$move@AEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@AEAPEAV10@@Z;??$move@AEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QEAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@AEAPEAV10@@Z;479908;239954;2
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<c;479909;239954;2
??$_Destroy_in_place@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@YAXAEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@Z;void __cdecl std::_Destroy_in_place<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);239749;239749;1
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ;struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::_Compressed_pair<struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::_Compressed_pair<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >,class std::_Tr;239749;239749;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::sha;239749;239749;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::__autoclassinit2(unsigned __int64) __ptr64;239749;239749;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > > const & __ptr6;239749;239749;1
??_G_Node_base@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_base::`scalar deleting destructor'(unsigned int) __ptr64;239749;239749;1
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@PEAPEAVTimelineEntry@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@$$QEAPEAPEAVTimelineEntry@@@Z;??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@PEAPEAVTimelineEntry@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@$$QEAPEAPEAVTimelineEntry@@@Z;479498;239749;2
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::size(void)const __ptr64;479087;239543;2
?resize@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::resize(unsigned __int64) __ptr64;239339;239339;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >,bool>::~pair<class std::_List;239339;239339;1
?allocate@?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>::allocate(unsigned __int64) __ptr64;239339;239339;1
?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ;char * __ptr64 __cdecl std::vector<char,class std::allocator<char> >::data(void) __ptr64;239339;239339;1
?data@?$vector@IV?$allocator@I@std@@@std@@QEBAPEBIXZ;unsigned int const * __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::data(void)const __ptr64;239339;239339;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChi;239339;239339;1
??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@;478678;239339;2
??_G?$_Buf@D@std@@QEAAPEAXI@Z;void * __ptr64 __cdecl std::_Buf<char>::`scalar deleting destructor'(unsigned int) __ptr64;239339;239339;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::Op;239339;239339;1
??_G?$_Ref_count_obj2@V?$standard_value@_N@values@cxxopts@@@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Ref_count_obj2<class cxxopts::values::standard_value<bool> >::`scalar deleting destructor'(unsigned int) __ptr64;239339;239339;1
?allocate@?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >::allocate(unsigned __int64) __ptr64;239339;239339;1
??1?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::~_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(void) __ptr64;239339;239339;1
?max_load_factor@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::max_load_factor(void)const __ptr64;239339;239339;1
??$move@AEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@0@AEAV10@@Z;478266;239133;2
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_;478266;239133;2
?_Getal@?$list@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64 __cdecl std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Getal(void) __ptr64;478267;239133;2
?_Getal@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@AEAAAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Getal(void) __ptr64;238928;238928;1
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator!=(class std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > const & __ptr64)const __ptr64;238928;238928;1
??__ERQUOTE@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic initializer for 'RQUOTE''(void);238928;238928;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,c;477856;238928;2
?_Destroy@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@AEAAXPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@0@Z;void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Destroy(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64,class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_S;238928;238928;1
?allocate@?$allocator@V?$sub_match@PEBD@std@@@std@@QEAAPEAV?$sub_match@PEBD@2@_K@Z;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::allocator<class std::sub_match<char const * __ptr64> >::allocate(unsigned __int64) __ptr64;238928;238928;1
??$move@AEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@;238928;238928;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > ;238928;238928;1
?_Getal@?$list@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::_Getal(void) __ptr64;238928;238928;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBAAEBMXZ;float const & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Max_bucket_size(void)const __ptr64;238928;238928;1
?_Unchecked_end@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAAPEAUDataPerFile@FileInclusionTimesExporter@@XZ;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Unchecked_end(void) __ptr64;238928;238928;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64;238928;238928;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >::_Allocate(void) __ptr64;238928;238928;1
?_Xlength@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@CAXXZ;static void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::_Xlength(void);477446;238723;2
?OnSimpleEvent@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;1193410;238682;5
??0bad_cast@std@@QEAA@AEBV01@@Z;__cdecl std::bad_cast::bad_cast(class std::bad_cast const & __ptr64) __ptr64;1431516;238586;6
?_Umove_if_noexcept1@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@AEAAXPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Umove_if_noexcept1(struct std::pair<class std::basic_string<char,str;238518;238518;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int;238518;238518;1
??$exchange@PEAV_Node_assert@std@@PEAV12@@std@@YAPEAV_Node_assert@0@AEAPEAV10@$$QEAPEAV10@@Z;??$exchange@PEAV_Node_assert@std@@PEAV12@@std@@YAPEAV_Node_assert@0@AEAPEAV10@$$QEAPEAV10@@Z;238518;238518;1
??__Eoption_matcher@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic initializer for 'option_matcher''(void);238518;238518;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::alloc;238518;238518;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64>::_Release(void) _;238518;238518;1
?bucket_count@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class s;238107;238107;1
??$forward@AEAPEAV_Node_assert@std@@@std@@YAAEAPEAV_Node_assert@0@AEAPEAV10@@Z;class std::_Node_assert * __ptr64 & __ptr64 __cdecl std::forward<class std::_Node_assert * __ptr64 & __ptr64>(class std::_Node_assert * __ptr64 & __ptr64);238107;238107;1
??0?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::OptionDetails>::shared_ptr<class cxxopts::OptionDetails>(void) __ptr64;238107;238107;1
?_Umove@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAPEAVKeyValue@cxxopts@@PEAV34@00@Z;class cxxopts::KeyValue * __ptr64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Umove(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64) __ptr64;238107;238107;1
??$_Set_ptr_rep_and_enable_shared@_N@?$shared_ptr@_N@std@@AEAAXQEA_NQEAV_Ref_count_base@1@@Z;void __cdecl std::shared_ptr<bool>::_Set_ptr_rep_and_enable_shared<bool>(bool * __ptr64 const,class std::_Ref_count_base * __ptr64 const) __ptr64;238107;238107;1
??0?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;238107;238107;1
??1?$weak_ptr@VValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::weak_ptr<class cxxopts::Value>::~weak_ptr<class cxxopts::Value>(void) __ptr64;238107;238107;1
??0?$_Ptr_base@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Ptr_base<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;238107;238107;1
?_Getal@?$list@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > const & __ptr64 __cdecl std::list<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::_Getal(void)const __ptr64;238107;238107;1
??$move@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@0@AEAV10@@Z;238107;238107;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,cl;238107;238107;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >,class std::_Vector_val<struc;238107;238107;1
??$?0U?$pair@KK@std@@@?$_Tuple_val@$$QEAU?$pair@KK@std@@@std@@QEAA@$$QEAU?$pair@KK@1@@Z;??$?0U?$pair@KK@std@@@?$_Tuple_val@$$QEAU?$pair@KK@std@@@std@@QEAA@$$QEAU?$pair@KK@1@@Z;237697;237697;1
?_Destroy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K0@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Destroy(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64) __ptr64;237697;237697;1
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > ;237697;237697;1
??4_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAAEAU012@AEBU012@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t & __ptr64 __cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t::operator=(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t const & __ptr64) __ptr64;237697;237697;1
??$get@$0A@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YAAEAV?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@AEAV?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@0@@Z;class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> & __ptr64 __cdecl std::get<0,class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights;237697;237697;1
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>(void) __ptr64;237697;237697;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEBAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >::_Unwrapped(void)const __ptr64;237697;237697;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __;237697;237697;1
??4?$_Tgt_state_t@PEBD@std@@QEAAAEAV01@AEBV01@@Z;class std::_Tgt_state_t<char const * __ptr64> & __ptr64 __cdecl std::_Tgt_state_t<char const * __ptr64>::operator=(class std::_Tgt_state_t<char const * __ptr64> const & __ptr64) __ptr64;237697;237697;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@PEAKPEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >(unsigned long * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;237697;237697;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struc;237697;237697;1
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z;__cdecl std::_Container_proxy::_Container_proxy(struct std::_Container_base12 * __ptr64) __ptr64;3564218;237614;15
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@QEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64,struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr6;474982;237491;2
??$_Ucopy@PEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAPEAV2345@00@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Ucopy<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64>(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64) __ptr64;237286;237286;1
??0option_syntax_exception@cxxopts@@QEAA@AEBV01@@Z;__cdecl cxxopts::option_syntax_exception::option_syntax_exception(class cxxopts::option_syntax_exception const & __ptr64) __ptr64;237286;237286;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;237286;237286;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Range_eraser::_Bump_erased(void) __ptr64;237286;237286;1
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;474572;237286;2
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@2@AEAU32@@Z;static struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> * __ptr64 __cdecl std::pointer_traits<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> * __ptr64>::pointer_to(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> & __ptr64);237286;237286;1
??$?0$03@?$GenericStringRef@D@rapidjson@@QEAA@AEAY03$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><4>(char const (& __ptr64)[4]) __ptr64;237286;237286;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >,struct std::_Iterator_base12>::;237286;237286;1
?_Umove@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAPEAUHelpOptionDetails@cxxopts@@PEAU34@00@Z;struct cxxopts::HelpOptionDetails * __ptr64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Umove(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64) __ptr64;237286;237286;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@1@@Z;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,voi;237286;237286;1
?_Umove_if_noexcept1@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Umove_if_noexcept1(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64,unsigned __int64 * __ptr64,struct std::integral_constant<bool,1>) __ptr64;237286;237286;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,1>::_Get_first(vo;237286;237286;1
??1option_syntax_exception@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::option_syntax_exception::~option_syntax_exception(void) __ptr64;236875;236875;1
??_G?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAPEAXI@Z;void * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::`scalar deleting destructor'(unsigned int) __ptr64;236875;236875;1
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>;236875;236875;1
?Uint@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NI@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Uint(unsigned int) __ptr64;236875;236875;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleE;236875;236875;1
??_Goption_requires_argument_exception@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::option_requires_argument_exception::`scalar deleting destructor'(unsigned int) __ptr64;236875;236875;1
??1?$_Node_str@D@std@@UEAA@XZ;virtual __cdecl std::_Node_str<char>::~_Node_str<char>(void) __ptr64;236875;236875;1
?IsObject@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsObject(void)const __ptr64;236875;236875;1
?OnSimpleEvent@BuildTimelineAnalyzer@@UEAA?AW4AnalysisControl@BuildInsights@Cpp@Microsoft@@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl BuildTimelineAnalyzer::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;236465;236465;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared;236465;236465;1
?capacity@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<bool,class std::allocator<bool> >::capacity(void)const __ptr64;236465;236465;1
??N?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator<=(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64)const __ptr64;236465;236465;1
?max_load_factor@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEBAMXZ;float __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_s;236465;236465;1
?size@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash_vec<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::size(void)const __ptr64;236465;236465;1
??$forward@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@0@AEAPEAU10@@Z;236465;236465;1
??1?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >::~_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >(void) __ptr64;236465;236465;1
?EventInstanceId@Event@BuildInsights@Cpp@Microsoft@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::EventInstanceId(void)const __ptr64;472929;236464;2
??1bad_array_new_length@std@@UEAA@XZ;virtual __cdecl std::bad_array_new_length::~bad_array_new_length(void) __ptr64;3545743;236382;15
??$TranscodeUnsafe@U?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@2@@?$Transcoder@U?$UTF8@D@rapidjson@@U12@@rapidjson@@SA_NAEAU?$GenericStringStream@U?$UTF8@D@rapidjson@@@1@AEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@1@@Z;static bool __cdecl rapidjson::Transcoder<struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char> >::TranscodeUnsafe<struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > >(struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > & __ptr64,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64);236054;236054;1
?_Mark_count@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@QEBAIXZ;unsigned int __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Mark_count(void)const __ptr64;236054;236054;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEA_NAEBVEventStack@345@AEA_KV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@2345@VActivity@Activities@345@@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@1234@AEA_NAEBVEventStack@234@AEA_K$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@$$QEAVActivity@Activities@234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MatchEventFixedHandler@U?$MatchEventAndContinue@VActivity@Activities@BuildInsights@Cpp@Microsoft@@$$V@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VActivity@Activities@BuildInsights@Cpp@Microsoft@@V12345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal;236054;236054;1
?flags@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEBA?AW4syntax_option_type@regex_constants@2@XZ;enum std::regex_constants::syntax_option_type __cdecl std::basic_regex<char,class std::regex_traits<char> >::flags(void)const __ptr64;236054;236054;1
??$forward@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AEAV10@@Z;??$forward@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_;236054;236054;1
??$_Ucopy@PEAI@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEAI00@Z;unsigned int * __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Ucopy<unsigned int * __ptr64>(unsigned int * __ptr64,unsigned int * __ptr64,unsigned int * __ptr64) __ptr64;236054;236054;1
??0OptionValue@cxxopts@@QEAA@XZ;__cdecl cxxopts::OptionValue::OptionValue(void) __ptr64;236054;236054;1
?GetTimeData@FileInclusionsAnalyzer@@QEBAAEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@2@@std@@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> ;235644;235644;1
??$_Destroy_range@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@YAXPEAU_Loop_vals_t@0@QEAU10@AEAV?$allocator@U_Loop_vals_t@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::_Loop_vals_t> >(struct std::_Loop_vals_t * __ptr64,struct std::_Loop_vals_t * __ptr64 const,class std::allocator<struct std::_Loop_vals_t> & __ptr64);235644;235644;1
?IsNan@Double@internal@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::internal::Double::IsNan(void)const __ptr64;235644;235644;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,;471288;235644;2
?_Umove@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@PEAV34567@00@Z;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Umove(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,c;235644;235644;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> > >::max_size(class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<ch;235644;235644;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>(class std::_List_unchecked_itera;235644;235644;1
??0?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileInclusionsAnalyzer@@P85@EAAXAEBVFrontEndFile@Activities@234@1@Z@Z;??0?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFileInclusionsAnalyzer@@P85@EAAXAEBVFrontEndFile@Activities@234@1@Z@Z;235644;235644;1
?deallocate@?$allocator@PEAVTimelineEntry@@@std@@QEAAXQEAPEAVTimelineEntry@@_K@Z;void __cdecl std::allocator<class TimelineEntry * __ptr64>::deallocate(class TimelineEntry * __ptr64 * __ptr64 const,unsigned __int64) __ptr64;471288;235644;2
?_Getal@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEBAAEBV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> const & __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Getal(void)const __ptr64;235233;235233;1
?swap@?$shared_ptr@_N@std@@QEAAXAEAV12@@Z;void __cdecl std::shared_ptr<bool>::swap(class std::shared_ptr<bool> & __ptr64) __ptr64;235233;235233;1
??$_Destroy_in_place@V?$standard_value@_N@values@cxxopts@@@std@@YAXAEAV?$standard_value@_N@values@cxxopts@@@Z;void __cdecl std::_Destroy_in_place<class cxxopts::values::standard_value<bool> >(class cxxopts::values::standard_value<bool> & __ptr64);235233;235233;1
??$_LStrcoll@D@std@@YAHPEBD000PEBU_Collvec@@@Z;int __cdecl std::_LStrcoll<char>(char const * __ptr64,char const * __ptr64,char const * __ptr64,char const * __ptr64,struct _Collvec const * __ptr64);235233;235233;1
??0?$EventDurationProvider@VRawEvent@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::EventDurationProvider<class Microsoft::Cpp::BuildInsights::RawEvent>::EventDurationProvider<class Microsoft::Cpp::BuildInsights::RawEvent>(class Microsoft::Cpp::BuildInsights::RawEvent const * __ptr64) __ptr64;940933;235233;4
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >(void) __ptr64;235233;235233;1
?_Umove_if_noexcept1@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXPEAVKeyValue@cxxopts@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Umove_if_noexcept1(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64,struct std::integral_constant<bool,1>) __ptr64;234823;234823;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;234823;234823;1
?OnStopActivity@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const;234823;234823;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>::_Release(void) __ptr64;234823;234823;1
??Iregex_constants@std@@YA?AW4syntax_option_type@01@W4201@0@Z;enum std::regex_constants::syntax_option_type __cdecl std::regex_constants::operator&(enum std::regex_constants::syntax_option_type,enum std::regex_constants::syntax_option_type);234823;234823;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV23456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@2@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV23456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVActivity@Activities@012@2@Z@Z;234823;234823;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CB_KVTimelineEntry@@@std@@@std@@SAPEAU?$pair@$$CB_KVTimelineEntry@@@2@AEAU32@@Z;static struct std::pair<unsigned __int64 const ,class TimelineEntry> * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,class TimelineEntry> * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,class TimelineEntry> & __ptr64);234823;234823;1
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z;virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::imbue(class std::locale const & __ptr64) __ptr64;1173292;234658;5
?allocate@?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@QEAAPEAUDataPerFile@FileInclusionTimesExporter@@_K@Z;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::allocator<struct FileInclusionTimesExporter::DataPerFile>::allocate(unsigned __int64) __ptr64;234412;234412;1
??$construct@V?$sub_match@PEBD@std@@$$V@?$_Default_allocator_traits@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@PEBD@std@@@1@QEAV?$sub_match@PEBD@1@@Z;??$construct@V?$sub_match@PEBD@std@@$$V@?$_Default_allocator_traits@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@PEBD@std@@@1@QEAV?$sub_match@PEBD@1@@Z;234412;234412;1
??1?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64>::~_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::all;234412;234412;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_Li;234412;234412;1
?OnSimpleEvent@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;234412;234412;1
?_Init@?$collate@D@std@@IEAAXAEBV_Locinfo@2@@Z;void __cdecl std::collate<char>::_Init(class std::_Locinfo const & __ptr64) __ptr64;234412;234412;1
?OnStartActivity@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;234412;234412;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > *;234412;234412;1
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVActivity@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVActivity@Activities@234@@Z@Z;234002;234002;1
??_Ginvalid_option_format_error@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::invalid_option_format_error::`scalar deleting destructor'(unsigned int) __ptr64;234002;234002;1
??$?0U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> ><struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >(class std::allocator<struct std::pa;234002;234002;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator++(void) __ptr64;234002;234002;1
??$_Adl_verify_range@PEAIPEAI@std@@YAXAEBQEAI0@Z;void __cdecl std::_Adl_verify_range<unsigned int * __ptr64,unsigned int * __ptr64>(unsigned int * __ptr64 const & __ptr64,unsigned int * __ptr64 const & __ptr64);233591;233591;1
?_Destroy@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0@Z;void __cdecl std::vector<char,class std::allocator<char> >::_Destroy(char * __ptr64,char * __ptr64) __ptr64;233591;233591;1
??$move@AEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@0@AEAV10@@Z;??$move@AEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@0@AEAV10@@Z;233591;233591;1
?_Destroy@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@AEAAXPEAUDataPerFunction@FunctionCompilationsExporter@@0@Z;void __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Destroy(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64) __ptr64;233591;233591;1
??_G_Node_capture@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Node_capture::`scalar deleting destructor'(unsigned int) __ptr64;233591;233591;1
??__Eoption_specifier@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic initializer for 'option_specifier''(void);233591;233591;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std:;467182;233591;2
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > const & __ptr64);233591;233591;1
??$_Destroy_range@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@QEAU12@AEAV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64 const,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> & __ptr64);233591;233591;1
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z;bool __cdecl std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::operator()(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;233591;233591;1
??4?$_Bt_state_t@PEBD@std@@QEAAAEAV01@AEBV01@@Z;class std::_Bt_state_t<char const * __ptr64> & __ptr64 __cdecl std::_Bt_state_t<char const * __ptr64>::operator=(class std::_Bt_state_t<char const * __ptr64> const & __ptr64) __ptr64;233591;233591;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >,1>::_Get_first(vo;233591;233591;1
?_Destroy@?$_Ref_count_obj2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@EEAAXXZ;virtual void __cdecl std::_Ref_count_obj2<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Destroy(void) __ptr64;233591;233591;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;466772;233386;2
??$EntityCanMaterializeId@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass>(unsigned int);466772;233386;2
??0?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::values::standard_value<bool> >::_Ptr_base<class cxxopts::values::standard_value<bool> >(void) __ptr64;233181;233181;1
??0_Node_base@std@@QEAA@W4_Node_type@1@W4_Node_flags@1@@Z;__cdecl std::_Node_base::_Node_base(enum std::_Node_type,enum std::_Node_flags) __ptr64;233181;233181;1
?_Resize@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAXI@Z;void __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Resize(unsigned int) __ptr64;233181;233181;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int6;233181;233181;1
??$forward@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YA$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAPEBU10@@Z;??$forward@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YA$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAPEBU10@@Z;233181;233181;1
??$?0_J$0A@@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z;__cdecl std::chrono::duration<__int64,struct std::ratio<1,1000000> >::duration<__int64,struct std::ratio<1,1000000> ><__int64,0>(__int64 const & __ptr64) __ptr64;233181;233181;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VCodeGeneration@Activities@BuildInsights@Cpp@Microsoft@@VBottomUp@2345@VTopDown@2345@VThread@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::CodeGeneration,class Microsoft::Cpp::BuildInsights::Activities::BottomUp,class Microsoft::Cpp::BuildInsights::Activities::TopDown,class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(unsigned int);233181;233181;1
??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAA@PEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@AEAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(stru;233181;233181;1
??$addressof@PEBD@std@@YAPEAPEBDAEAPEBD@Z;char const * __ptr64 * __ptr64 __cdecl std::addressof<char const * __ptr64>(char const * __ptr64 & __ptr64);233181;233181;1
??_Gargument_incorrect_type@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::argument_incorrect_type::`scalar deleting destructor'(unsigned int) __ptr64;233181;233181;1
??_Gbad_cast@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::bad_cast::`scalar deleting destructor'(unsigned int) __ptr64;1397852;232975;6
??0?$EventDurationProvider@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEBVActivity@Activities@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::EventDurationProvider<class Microsoft::Cpp::BuildInsights::Activities::Activity>::EventDurationProvider<class Microsoft::Cpp::BuildInsights::Activities::Activity>(class Microsoft::Cpp::BuildInsights::Activities::Activity const * __ptr64) __ptr64;931491;232872;4
?allocate@?$allocator@I@std@@QEAAPEAI_K@Z;unsigned int * __ptr64 __cdecl std::allocator<unsigned int>::allocate(unsigned __int64) __ptr64;232770;232770;1
?_Umove_if_noexcept1@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Umove_if_noexcept1(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,struct std::integral_constant<bool,1>) __ptr64;232770;232770;1
?_Decref@?$_Ptr_base@V?$standard_value@_N@values@cxxopts@@@std@@IEAAXXZ;void __cdecl std::_Ptr_base<class cxxopts::values::standard_value<bool> >::_Decref(void) __ptr64;232770;232770;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;232770;232770;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;232770;232770;1
??_GOptionException@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::OptionException::`scalar deleting destructor'(unsigned int) __ptr64;232770;232770;1
?OnStopActivity@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVEventStack@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;232770;232770;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > const & __ptr64>(class std::_List_unc;232770;232770;1
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z;class std::allocator<char> const & __ptr64 __cdecl std::forward<class std::allocator<char> const & __ptr64>(class std::allocator<char> const & __ptr64);232770;232770;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::operator++(void) __ptr64;232770;232770;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base12>(void) __ptr64;465130;232565;2
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64) __ptr64;232360;232360;1
?_Umove_if_noexcept1@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Umove_if_noexcept1(unsigned int * __ptr64,unsigned int * __ptr64,unsigned int * __ptr64,struct std::integral_constant<bool,1>) __ptr64;232360;232360;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;232360;232360;1
?Int@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NH@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Int(int) __ptr64;232360;232360;1
??0?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFunctionCompilationsAnalyzer@@P85@EAAXAEBVFunction@Activities@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVFunctionCompilationsAnalyzer@@P85@EAAXAEBVFunction@Activities@234@@Z@Z;232360;232360;1
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@_K@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;232360;232360;1
??$?C$$CBVOptionDetails@cxxopts@@$0A@@?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@QEBAPEBVOptionDetails@cxxopts@@XZ;class cxxopts::OptionDetails const * __ptr64 __cdecl std::shared_ptr<class cxxopts::OptionDetails const >::operator-><class cxxopts::OptionDetails const ,0>(void)const __ptr64;232360;232360;1
?_Beg_expr@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEBA_NPEAV_Node_base@2@@Z;bool __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Beg_expr(class std::_Node_base * __ptr64)const __ptr64;232360;232360;1
??0?$_Ptr_base@VValue@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::Value>::_Ptr_base<class cxxopts::Value>(void) __ptr64;232360;232360;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::;232360;232360;1
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ;void __cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::_Allocate(void) __ptr64;232360;232360;1
??_G?$standard_value@_N@values@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::values::standard_value<bool>::`scalar deleting destructor'(unsigned int) __ptr64;232360;232360;1
??$_Fnv1a_append_value@_K@std@@YA_K_KAEB_K@Z;unsigned __int64 __cdecl std::_Fnv1a_append_value<unsigned __int64>(unsigned __int64,unsigned __int64 const & __ptr64);696669;232223;3
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_type;464308;232154;2
??1?$regex_traits@D@std@@QEAA@XZ;__cdecl std::regex_traits<char>::~regex_traits<char>(void) __ptr64;231949;231949;1
??4?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;231949;231949;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@QEAA@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct std::_Container_base12 const * __ptr64) __p;231949;231949;1
?allocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@_K@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64 __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > >::allocate(unsigned __int64) __ptr64;231949;231949;1
??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><unsigned __int64>(class std::allocator<unsigned __int64> const & __ptr64) __ptr64;231949;231949;1
?IsString@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsString(void)const __ptr64;231949;231949;1
??0?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAA@PEAUHelpOptionDetails@cxxopts@@AEAV?$allocator@UHelpOptionDetails@cxxopts@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >::_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >(struct cxxopts::HelpOptionDetails * __ptr64,class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64) __ptr64;231949;231949;1
??9?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NV?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@@Z;bool __cdecl rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator!=(class rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >)const __ptr64;231539;231539;1
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >(void) __ptr64;231539;231539;1
??1?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@XZ;__cdecl std::_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::~_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >(void) __ptr64;231539;231539;1
?_End_pattern@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Root_node@2@XZ;class std::_Root_node * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_End_pattern(void) __ptr64;231539;231539;1
??$?0U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > ><struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,;231539;231539;1
??0?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@QEAA@AEBV?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@1@@Z;__cdecl std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0>::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class Ti;231539;231539;1
?swap@?$shared_ptr@VValue@cxxopts@@@std@@QEAAXAEAV12@@Z;void __cdecl std::shared_ptr<class cxxopts::Value>::swap(class std::shared_ptr<class cxxopts::Value> & __ptr64) __ptr64;231539;231539;1
?swap@?$weak_ptr@VValue@cxxopts@@@std@@QEAAXAEAV12@@Z;void __cdecl std::weak_ptr<class cxxopts::Value>::swap(class std::weak_ptr<class cxxopts::Value> & __ptr64) __ptr64;231539;231539;1
?_OctalDigits@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAA_NXZ;bool __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_OctalDigits(void) __ptr64;231128;231128;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > >::max;231128;231128;1
?_Destroy@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Destroy(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __;231128;231128;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::basic_st;231128;231128;1
??$move@AEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@0@AEAV10@@Z;231128;231128;1
??$forward@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YAAEBV?$shared_ptr@VOptionDetails@cxxopts@@@0@AEBV10@@Z;class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64 __cdecl std::forward<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64);231128;231128;1
?_Unchecked_begin@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAAPEAUDataPerFile@FileInclusionTimesExporter@@XZ;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Unchecked_begin(void) __ptr64;231128;231128;1
??$next@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAU120@_J@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::next<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,__int64);231128;231128;1
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z;struct std::_Container_base12 * __ptr64 __cdecl std::addressof<struct std::_Container_base12>(struct std::_Container_base12 & __ptr64);2541999;231090;11
?Double@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_NN@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Double(double) __ptr64;230718;230718;1
?_End_assert_group@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXPEAV_Node_base@2@@Z;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_End_assert_group(class std::_Node_base * __ptr64) __ptr64;230718;230718;1
?_Get_first@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::;230718;230718;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct st;230718;230718;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std:;230718;230718;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > ;230718;230718;1
??$_Swap_adl@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YAXAEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Swap_adl<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 & __ptr64,class std::_List_unchecked_iterator<class std::_List_va;230718;230718;1
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> ><struct std::pair<class std::basic_string<char,struct std::char;230718;230718;1
?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ;char * __ptr64 __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_Unwrapped(void)const __ptr64;230718;230718;1
?_Umove_if_noexcept1@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@AEAAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@00U?$integral_constant@_N$00@2@@Z;void __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Umove_if_noexcept1(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdReca;230718;230718;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationDat;461435;230717;2
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ;virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Lock(void) __ptr64;1153589;230717;5
?empty@cxxopts@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;bool __cdecl cxxopts::empty(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);230307;230307;1
?Destroy@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@AEAAXXZ;void __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::Destroy(void) __ptr64;230307;230307;1
??$addressof@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAPEAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@AEAV10@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > * __ptr64 __cdecl std::addressof<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64);230307;230307;1
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ;class std::allocator<wchar_t> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<wchar_t>,class std::_String_val<struct std::_Simple_types<wchar_t> >,1>::_Get_first(void) __ptr64;230307;230307;1
??$_Destroy_range@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@QEAPEBU10@AEAV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilat;230307;230307;1
??$_Hash_representation@PEAVOptionDetails@cxxopts@@@std@@YA_KAEBQEAVOptionDetails@cxxopts@@@Z;unsigned __int64 __cdecl std::_Hash_representation<class cxxopts::OptionDetails * __ptr64>(class cxxopts::OptionDetails * __ptr64 const & __ptr64);230307;230307;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ra;460614;230307;2
?_Xlength@?$vector@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> >::_Xlength(void);230307;230307;1
?pointer_to@?$pointer_traits@PEAU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@SAPEAU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@2@AEAU32@@Z;static struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> & __ptr64);230307;230307;1
??$?RVFunction@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFunction@Activities@234@@Z;??$?RVFunction@Activities@BuildInsights@Cpp@Microsoft@@@?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAAX$$QEAVFunction@Activities@234@@Z;230307;230307;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > * __ptr64 __cdecl std::addressof<clas;230307;230307;1
?_Begin_group@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAPEAV_Node_base@2@XZ;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Begin_group(void) __ptr64;230307;230307;1
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;__cdecl std::_Tuple_val<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>::_Tuple_val<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;460614;230307;2
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ;class std::allocator<char> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<char>,class std::_String_val<struct std::_Simple_types<char> >,1>::_Get_first(void) __ptr64;3222246;230160;14
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 & __ptr64);229896;229896;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsi;229896;229896;1
?StartTimestamp@Activity@Activities@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::Activity::StartTimestamp(void)const __ptr64;919586;229896;4
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator->(void)const __ptr64;229896;229896;1
??$forward@UFileCompilationData@@@std@@YA$$QEAUFileCompilationData@@AEAU1@@Z;??$forward@UFileCompilationData@@@std@@YA$$QEAUFileCompilationData@@AEAU1@@Z;229896;229896;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > ;229896;229896;1
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::destroy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::ch;229896;229896;1
?allocate@?$allocator@K@std@@QEAAPEAK_K@Z;unsigned long * __ptr64 __cdecl std::allocator<unsigned long>::allocate(unsigned __int64) __ptr64;229896;229896;1
?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::vector<char,class std::allocator<char> >::size(void)const __ptr64;229896;229896;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineE;229896;229896;1
??1?$unordered_map@_KVTimelineEntry@@U?$hash@_K@std@@U?$equal_to@_K@3@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class TimelineEntry,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::~unordered_map<unsigned __int64,class TimelineEntry,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >(void) __ptr64;229896;229896;1
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >;229896;229896;1
?OnEndRelogging@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnEndRelogging(void) __ptr64;1149071;229814;5
??$move@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;688868;229622;3
?_Get_max_bucket_size@?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBMXZ;float const & __ptr64 __cdecl std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Get_max_bucket_size(void)const __ptr64;918355;229588;4
?Free@CrtAllocator@rapidjson@@SAXPEAX@Z;static void __cdecl rapidjson::CrtAllocator::Free(void * __ptr64);229486;229486;1
??1?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::~_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;229486;229486;1
??$addressof@V?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@@std@@YAPEAV?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@0@AEAV10@@Z;class std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > > * __ptr64 __cdecl std::addressof<class std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<s;229486;229486;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_;229486;229486;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned _;229486;229486;1
??R<lambda_a2eef00bb02357da46910e5eb8f40a83>@@QEBA_NAEBUDataPerFunction@FunctionCompilationsExporter@@0@Z;bool __cdecl <lambda_a2eef00bb02357da46910e5eb8f40a83>::operator()(struct FunctionCompilationsExporter::DataPerFunction const & __ptr64,struct FunctionCompilationsExporter::DataPerFunction const & __ptr64)const __ptr64;229486;229486;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > ;229486;229486;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::operator->(void)const __ptr64;229486;229486;1
??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;229486;229486;1
??$get@$0A@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;??$get@$0A@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z;458562;229281;2
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > > >::max_size(class std::allocator<;458561;229280;2
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::a;229075;229075;1
?_Unchecked_begin@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@QEBAPEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@2@XZ;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const * __ptr64 __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Unchecked_begin(void)const __ptr64;458150;229075;2
?_Getal@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEBAAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Getal(void)const __ptr64;229075;229075;1
??_GOptionSpecException@cxxopts@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl cxxopts::OptionSpecException::`scalar deleting destructor'(unsigned int) __ptr64;229075;229075;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::operator++(void) __ptr64;458151;229075;2
??$distance@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA_JPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@0@Z;__int64 __cdecl std::distance<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64);229075;229075;1
?_Umove@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@PEAPEAV3456@00@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Umove(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64) __ptr64;229075;229075;1
??$exchange@_KAEB_K@std@@YA_KAEA_KAEB_K@Z;unsigned __int64 __cdecl std::exchange<unsigned __int64,unsigned __int64 const & __ptr64>(unsigned __int64 & __ptr64,unsigned __int64 const & __ptr64);686815;228938;3
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> >(void) __ptr64;228665;228665;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ;228665;228665;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<c;228665;228665;1
??Istd@@YA?AW4_Node_flags@0@W410@0@Z;enum std::_Node_flags __cdecl std::operator&(enum std::_Node_flags,enum std::_Node_flags);228665;228665;1
?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAXQEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >::deallocate(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 const,unsigned __int64) __pt;457330;228665;2
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >,class std::_Tree_val<struct std::_Tree_simple_types<st;228665;228665;1
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@IEAAAEAMXZ;float & __ptr64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Max_bucket_size(void) __ptr64;228665;228665;1
??$_Destroy_range@V?$allocator@PEAVTimelineEntry@@@std@@@std@@YAXPEAPEAVTimelineEntry@@QEAPEAV1@AEAV?$allocator@PEAVTimelineEntry@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<class TimelineEntry * __ptr64> >(class TimelineEntry * __ptr64 * __ptr64,class TimelineEntry * __ptr64 * __ptr64 const,class std::allocator<class TimelineEntry * __ptr64> & __ptr64);456919;228459;2
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * ;228254;228254;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;228254;228254;1
??$get@$0A@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA$$QEAV?$vector@_KV?$allocator@_K@std@@@0@$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@@Z;??$get@$0A@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA$$QEAV?$vector@_KV?$allocator@_K@std@@@0@$$QEAV?$tuple@$$QEAV?$vector@_KV?$allocator@_K@std@@@std@@@0@@Z;228254;228254;1
?_Destroy@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@AEAAXPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@0@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Destroy(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64,class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64) __ptr64;228254;228254;1
?OnBeginAnalysis@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnBeginAnalysis(void) __ptr64;228254;228254;1
??$advance@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@_J@std@@YAXAEAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@_J@Z;void __cdecl std::advance<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,__int64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 & __ptr64,__int64);228254;228254;1
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ;bool __cdecl std::_String_val<struct std::_Simple_types<wchar_t> >::_Large_string_engaged(void)const __ptr64;228254;228254;1
??$?0U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> ><struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >(class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::Optio;228254;228254;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::BackEndPass> >::Run(unsigned int);228254;228254;1
??0DataPerFunction@FunctionCompilationsExporter@@QEAA@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@3@I@Z;__cdecl FunctionCompilationsExporter::DataPerFunction::DataPerFunction(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const * __ptr64,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > const & __ptr64,unsigned int) __ptr64;228254;228254;1
?_Destroy@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAXPEAVKeyValue@cxxopts@@0@Z;void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Destroy(class cxxopts::KeyValue * __ptr64,class cxxopts::KeyValue * __ptr64) __ptr64;228254;228254;1
??1?$_Tgt_state_t@PEBD@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<char const * __ptr64>::~_Tgt_state_t<char const * __ptr64>(void) __ptr64;227844;227844;1
??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MatchEventFixedHandler@U?$MatchEventAndContinue@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@VFrontEndPass@Activities@345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VSymbolName@SimpleEvents@345@@2345@U?$Group;227844;227844;1
?Uint64@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_N_K@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Uint64(unsigned __int64) __ptr64;227844;227844;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;227844;227844;1
?allocate@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QEAAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@_K@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::allocate(unsigned __int64) __ptr64;227844;227844;1
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > const & __ptr64>(class std::allocator<struct std::pair<class std::basic_string<char,struct std:;227844;227844;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> > >::deallocate(clas;227844;227844;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared;227433;227433;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(unsigned int * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;227433;227433;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >(class std::allocator<struct std::_;227433;227433;1
?_Getal@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@AEAAAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64 __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Getal(void) __ptr64;227433;227433;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@1@@Z;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64,class std::_List_val<struct std::_;227433;227433;1
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CB_KVTimelineEntry@@@1@XZ;struct std::pair<unsigned __int64 const ,class TimelineEntry> * __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator->(void)const __ptr64;227433;227433;1
?_Ufill@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEAI_KAEBI@Z;unsigned int * __ptr64 __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Ufill(unsigned int * __ptr64,unsigned __int64,unsigned int const & __ptr64) __ptr64;227433;227433;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std;227433;227433;1
??$_Destroy_range@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64,class std::_List_unchecked;454456;227228;2
?_Getal@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@AEAAAEAV?$allocator@VKeyValue@cxxopts@@@2@XZ;class std::allocator<class cxxopts::KeyValue> & __ptr64 __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Getal(void) __ptr64;227023;227023;1
??$destroy@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::destroy<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr64,;227023;227023;1
?_Unchecked_begin@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@XZ;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Unchecked_begin(void) __ptr64;227023;227023;1
?what@OptionException@cxxopts@@UEBAPEBDXZ;virtual char const * __ptr64 __cdecl cxxopts::OptionException::what(void)const __ptr64;227023;227023;1
?_Umove@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEAAPEAUDataPerFile@FileInclusionTimesExporter@@PEAU34@00@Z;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Umove(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64) __ptr64;227023;227023;1
??$forward@AEBK@std@@YAAEBKAEBK@Z;unsigned long const & __ptr64 __cdecl std::forward<unsigned long const & __ptr64>(unsigned long const & __ptr64);227023;227023;1
??$forward@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileInclusionsAnalyzer@@XU?$Group@AEBVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;227023;227023;1
?_Throw_bad_weak_ptr@std@@YAXXZ;void __cdecl std::_Throw_bad_weak_ptr(void);227023;227023;1
?_Get_first@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VKeyValue@cxxopts@@@2@XZ;class std::allocator<class cxxopts::KeyValue> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class cxxopts::KeyValue>,class std::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> >,1>::_Get_first(void) __ptr64;227023;227023;1
?_Getal@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAAEAV?$allocator@UHelpOptionDetails@cxxopts@@@2@XZ;class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Getal(void) __ptr64;227023;227023;1
??$forward@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@YA$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@AEAV120@@Z;??$forward@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@YA$$QEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@AEAV120@@Z;454045;227022;2
??$_Hash_representation@_K@std@@YA_KAEB_K@Z;unsigned __int64 __cdecl std::_Hash_representation<unsigned __int64>(unsigned __int64 const & __ptr64);680658;226886;3
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64) __ptr64;226612;226612;1
?_Incwref@_Ref_count_base@std@@QEAAXXZ;void __cdecl std::_Ref_count_base::_Incwref(void) __ptr64;226612;226612;1
?allocate@?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@QEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@_K@Z;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>::allocate(unsigned __int64) __ptr64;226612;226612;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > & __ptr64,struct std::_Tree_n;226612;226612;1
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ;class std::allocator<wchar_t> & __ptr64 __cdecl std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::_Getal(void) __ptr64;226612;226612;1
??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64;226612;226612;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int6;226612;226612;1
?deallocate@?$allocator@I@std@@QEAAXQEAI_K@Z;void __cdecl std::allocator<unsigned int>::deallocate(unsigned int * __ptr64 const,unsigned __int64) __ptr64;226612;226612;1
??0_Ref_count_base@std@@IEAA@XZ;__cdecl std::_Ref_count_base::_Ref_count_base(void) __ptr64;226612;226612;1
??1?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::~_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;226612;226612;1
??$forward@AEBUpiecewise_construct_t@std@@@std@@YAAEBUpiecewise_construct_t@0@AEBU10@@Z;struct std::piecewise_construct_t const & __ptr64 __cdecl std::forward<struct std::piecewise_construct_t const & __ptr64>(struct std::piecewise_construct_t const & __ptr64);1585874;226553;7
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::operator!=(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;226202;226202;1
??_G_Root_node@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::_Root_node::`scalar deleting destructor'(unsigned int) __ptr64;226202;226202;1
??1?$unordered_map@_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 c;226202;226202;1
?Int64@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA_N_J@Z;bool __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Int64(__int64) __ptr64;226202;226202;1
??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;226202;226202;1
??$move@AEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAU120@@Z;??$move@AEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAU120@@Z;226202;226202;1
??0_Bitmap@std@@QEAA@XZ;__cdecl std::_Bitmap::_Bitmap(void) __ptr64;226202;226202;1
??0_Container_proxy@std@@QEAA@XZ;__cdecl std::_Container_proxy::_Container_proxy(void) __ptr64;226202;226202;1
??0?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,cl;225791;225791;1
?GetFileInclusionsData@FileInclusionsAnalyzer@@QEBAAEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char;225791;225791;1
??$move@AEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@@Z;??$move@AEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@AEAPEAU10@@Z;451582;225791;2
?OnEndAnalysisPass@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnEndAnalysisPass(void) __ptr64;225791;225791;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::operator*(void)const __ptr64;225791;225791;1
??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEBV12345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;225791;225791;1
?pointer_to@?$pointer_traits@PEBU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@SAPEBU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@2@AEBU32@@Z;static struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> const * __ptr64 __cdecl std::pointer_traits<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> const * __ptr64>::pointer_to(struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> const & __ptr64);225791;225791;1
?value@OptionDetails@cxxopts@@QEBAAEBVValue@2@XZ;class cxxopts::Value const & __ptr64 __cdecl cxxopts::OptionDetails::value(void)const __ptr64;225791;225791;1
??0?$_Tuple_val@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@AEBU01@@Z;__cdecl std::_Tuple_val<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::_Tuple_val<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::Buil;225381;225381;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >,struct std::_Iterator_base;225381;225381;1
??$_Kfn@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0>::_Kfn<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<u;225381;225381;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@std@@QEAA@PEAUDataPerFile@FileInclusionTimesExporter@@PEBU_Container_base12@1@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;225381;225381;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > const & __ptr64) __ptr64;225381;225381;1
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@_K@2@XZ;class std::allocator<unsigned __int64> const & __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Getal(void)const __ptr64;224970;224970;1
?__autoclassinit2@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::__autoclassinit2(unsigned __int64) __ptr64;224970;224970;1
??$EncapsulatePtr@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@MakeStaticGroupImplSupport@Internal@BuildInsights@Cpp@Microsoft@@KA?AV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@1234@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@1234@@Z;static class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > > __cdecl Microsoft::Cpp::BuildInsights::Internal::MakeStaticGroupImplSupport::EncapsulatePtr<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cp;224970;224970;1
?_Getal@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@AEBAAEBV?$allocator@U_Loop_vals_t@std@@@2@XZ;class std::allocator<struct std::_Loop_vals_t> const & __ptr64 __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Getal(void)const __ptr64;224970;224970;1
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length(void)const __ptr64;224970;224970;1
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::_Range_eraser::_Bump_era;224970;224970;1
??R<lambda_b68333ea59420deb7dec0041da4f8963>@@QEBA_NAEBUDataPerFile@FileInclusionTimesExporter@@0@Z;bool __cdecl <lambda_b68333ea59420deb7dec0041da4f8963>::operator()(struct FileInclusionTimesExporter::DataPerFile const & __ptr64,struct FileInclusionTimesExporter::DataPerFile const & __ptr64)const __ptr64;224970;224970;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > > const & __ptr64);449941;224970;2
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxo;224970;224970;1
??$?0U?$pair@$$CB_KVTimelineEntry@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;__cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> ><struct std::pair<unsigned __int64 const ,class TimelineEntry> >(class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __ptr64) __ptr64;224970;224970;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_sim;224970;224970;1
??R?$equal_to@_K@std@@QEBA_NAEB_K0@Z;bool __cdecl std::equal_to<unsigned __int64>::operator()(unsigned __int64 const & __ptr64,unsigned __int64 const & __ptr64)const __ptr64;674500;224833;3
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_type;449529;224764;2
??0?$allocator@D@std@@QEAA@XZ;__cdecl std::allocator<char>::allocator<char>(void) __ptr64;2470976;224634;11
??$addressof@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::alloc;224560;224560;1
?allocate@?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@QEAAPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@_K@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>::allocate(unsigned __int64) __ptr64;224560;224560;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > const & __ptr64);224560;224560;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Release(void) __ptr64;224560;224560;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KU?$pair@KK@std@@@1@XZ;struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::operator*(void)const __ptr64;224560;224560;1
??E?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@XZ;class rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator++(void) __ptr64;224560;224560;1
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const * __ptr64 __cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::operator->(void)const __ptr64;224560;224560;1
?_Get_first@?$_Compressed_pair@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@V?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@2@$00@std@@QEBAAEBU?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@XZ;struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> > const & __ptr64 __cdecl std::_Compressed_pair<struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,class std::_Compressed_pair<struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >,float,1>,1>::_Get_first(void)const __ptr64;224560;224560;1
??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAU?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@1234@@Z;??0?$MatchEventFixedHandler@U?$MatchEventAndContinue@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@VFrontEndPass@2345@@?$MatchEventStackImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@2345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@VTemplateInstantiation@2345@@2345@U?$Group@$$V@2345@@I;224560;224560;1
?__autoclassinit2@?$_Node_class@DV?$regex_traits@D@std@@@std@@QEAAX_K@Z;void __cdecl std::_Node_class<char,class std::regex_traits<char> >::__autoclassinit2(unsigned __int64) __ptr64;224560;224560;1
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::destroy<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > & __ptr64,class std::basic_string<char,struct std::char_tr;449119;224559;2
??0?$allocator@PEAVTimelineEntry@@@std@@QEAA@XZ;__cdecl std::allocator<class TimelineEntry * __ptr64>::allocator<class TimelineEntry * __ptr64>(void) __ptr64;449119;224559;2
?_Get_first@?$_Compressed_pair@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@2@XZ;class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >,class std::_Vector_val<struct std::_Simple_types<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >,1>::_Get_first(void)const __ptr64;448709;224354;2
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > const & __ptr64) __ptr64;224149;224149;1
?_Add_wbound@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_wbound(void) __ptr64;224149;224149;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 const,unsigned __int64);224149;224149;1
?push_back@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAX$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@@Z;?push_back@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAX$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@@Z;224149;224149;1
??$move@AEAPEAV_Node_base@std@@@std@@YA$$QEAPEAV_Node_base@0@AEAPEAV10@@Z;??$move@AEAPEAV_Node_base@std@@@std@@YA$$QEAPEAV_Node_base@0@AEAPEAV10@@Z;224149;224149;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >,class std::_Vector_val;224149;224149;1
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ;bool __cdecl std::_String_val<struct std::_Simple_types<char> >::_Large_string_engaged(void)const __ptr64;3135623;223973;14
??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z;void __cdecl std::_Adl_verify_range<char const * __ptr64,char const * __ptr64>(char const * __ptr64 const & __ptr64,char const * __ptr64 const & __ptr64);447888;223944;2
?_Bump_erased@_Range_eraser@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAAXXZ;void __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Range_eraser::_Bump_erased(void) __ptr64;223738;223738;1
?allocate@?$allocator@VKeyValue@cxxopts@@@std@@QEAAPEAVKeyValue@cxxopts@@_K@Z;class cxxopts::KeyValue * __ptr64 __cdecl std::allocator<class cxxopts::KeyValue>::allocate(unsigned __int64) __ptr64;223738;223738;1
??0?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAA@PEAU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@@Z;__cdecl rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64) __ptr64;223738;223738;1
??1?$shared_ptr@$$CBVOptionDetails@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::OptionDetails const >::~shared_ptr<class cxxopts::OptionDetails const >(void) __ptr64;223738;223738;1
??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@AEAPEAU10@@Z;223328;223328;1
??Ustd@@YA?AW4_Node_flags@0@W410@0@Z;enum std::_Node_flags __cdecl std::operator|(enum std::_Node_flags,enum std::_Node_flags);223328;223328;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>,class std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >,1>::_Get_first(void) __ptr64;223328;223328;1
??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base12@1@@Z;__cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(unsigned int const * __ptr64,struct std::_Container_base12 const * __ptr64) __ptr64;223328;223328;1
??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;223328;223328;1
??$?0V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >(class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > const & __ptr64) __ptr64;446656;223328;2
??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct st;223328;223328;1
?allocate@?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@2@_K@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >::allocate(unsigned __int64) __ptr64;223328;223328;1
??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ;__cdecl std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;223328;223328;1
?ProcessorIndex@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEBGXZ;unsigned short const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::ProcessorIndex(void)const __ptr64;223328;223328;1
?OnTraceInfo@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@AEBVTraceInfo@345@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnTraceInfo(class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64) __ptr64;223328;223328;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >(class std::_List_val<struct std;222917;222917;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;222917;222917;1
??0?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAA@_KPEAVCrtAllocator@1@@Z;__cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::MemoryPoolAllocator<class rapidjson::CrtAllocator>(unsigned __int64,class rapidjson::CrtAllocator * __ptr64) __ptr64;222917;222917;1
?_Unchecked_begin@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ;unsigned __int64 * __ptr64 __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Unchecked_begin(void) __ptr64;222917;222917;1
??$?D$$CBVValue@cxxopts@@$0A@@?$shared_ptr@$$CBVValue@cxxopts@@@std@@QEBAAEBVValue@cxxopts@@XZ;class cxxopts::Value const & __ptr64 __cdecl std::shared_ptr<class cxxopts::Value const >::operator*<class cxxopts::Value const ,0>(void)const __ptr64;222917;222917;1
??$forward@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@0@AEAPEAU10@@Z;222917;222917;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 const,unsigned __int64) __ptr64;222917;222917;1
?is_boolean@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::is_boolean(void)const __ptr64;222507;222507;1
??$forward@AEBI@std@@YAAEBIAEBI@Z;unsigned int const & __ptr64 __cdecl std::forward<unsigned int const & __ptr64>(unsigned int const & __ptr64);222507;222507;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned _;222507;222507;1
??C?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CB_KU?$pair@KK@std@@@1@XZ;struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > const * __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::operator->(void)const __ptr64;222507;222507;1
?_Unchecked_begin@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEBAPEBUHelpOptionDetails@cxxopts@@XZ;struct cxxopts::HelpOptionDetails const * __ptr64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Unchecked_begin(void)const __ptr64;222507;222507;1
?max_size@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA_KAEBV?$allocator@I@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<unsigned int> >::max_size(class std::allocator<unsigned int> const & __ptr64);222507;222507;1
?allocate@?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@_K@Z;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::allocate(unsigned __int64) __ptr64;222507;222507;1
??1_Node_base@std@@UEAA@XZ;virtual __cdecl std::_Node_base::~_Node_base(void) __ptr64;222507;222507;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> * __ptr64 & __ptr64);222507;222507;1
??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > & __ptr64);445014;222507;2
??0Event@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@123@@Z;__cdecl Microsoft::Cpp::BuildInsights::Event::Event(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;890027;222506;4
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_Lis;444603;222301;2
?_Get_max_bucket_size@?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@std@@QEAAAEAMXZ;float & __ptr64 __cdecl std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >::_Get_max_bucket_size(void) __ptr64;222096;222096;1
?OnEndAnalysis@?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper>::OnEndAnalysis(void) __ptr64;222096;222096;1
??$_Idl_distance@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA@AEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z;__cdecl std::_Idl_distance<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64);222096;222096;1
??$move@AEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;222096;222096;1
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z;bool __cdecl std::operator==<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,char const * __ptr64 const);222096;222096;1
?_Sfx@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAAEAV?$sub_match@PEBD@2@XZ;class std::sub_match<char const * __ptr64> & __ptr64 __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Sfx(void) __ptr64;222096;222096;1
??$_Fnv1a_append_value@PEAVOptionDetails@cxxopts@@@std@@YA_K_KAEBQEAVOptionDetails@cxxopts@@@Z;unsigned __int64 __cdecl std::_Fnv1a_append_value<class cxxopts::OptionDetails * __ptr64>(unsigned __int64,class cxxopts::OptionDetails * __ptr64 const & __ptr64);222096;222096;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 & __ptr64);222096;222096;1
??0?$regex_traits@D@std@@QEAA@XZ;__cdecl std::regex_traits<char>::regex_traits<char>(void) __ptr64;222096;222096;1
??$forward@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@YA$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@AEAV10@@Z;??$forward@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@YA$$QEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@AEAV10@@Z;222096;222096;1
??0?$allocator@UHelpOptionDetails@cxxopts@@@std@@QEAA@XZ;__cdecl std::allocator<struct cxxopts::HelpOptionDetails>::allocator<struct cxxopts::HelpOptionDetails>(void) __ptr64;222096;222096;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::operator++(void) __ptr64;222096;222096;1
?GetRange@?$UTF8@D@rapidjson@@SAEE@Z;static unsigned char __cdecl rapidjson::UTF8<char>::GetRange(unsigned char);222096;222096;1
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<char> >::~_String_val<struct std::_Simple_types<char> >(void) __ptr64;3107297;221949;14
?_Unchecked_begin@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@XZ;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Unchecked_begin(void) __ptr64;221686;221686;1
?IsUint@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsUint(void)const __ptr64;221686;221686;1
?length@?$_Regex_traits@D@std@@SA_KPEBD@Z;static unsigned __int64 __cdecl std::_Regex_traits<char>::length(char const * __ptr64);221686;221686;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;221686;221686;1
?allocate@?$allocator@UHelpOptionDetails@cxxopts@@@std@@QEAAPEAUHelpOptionDetails@cxxopts@@_K@Z;struct cxxopts::HelpOptionDetails * __ptr64 __cdecl std::allocator<struct cxxopts::HelpOptionDetails>::allocate(unsigned __int64) __ptr64;221686;221686;1
??0?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@QEAA@PEBD@Z;__cdecl rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >::GenericStringStream<struct rapidjson::UTF8<char> >(char const * __ptr64) __ptr64;221686;221686;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class st;221686;221686;1
?stringAppend@cxxopts@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV23@_KD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl cxxopts::stringAppend(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64,unsigned __int64,char);221686;221686;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64,class std::_List_;443371;221685;2
??$_LStrxfrm@D@std@@YA_KPEAD0PEBD1PEBU_Collvec@@@Z;unsigned __int64 __cdecl std::_LStrxfrm<char>(char * __ptr64,char * __ptr64,char const * __ptr64,char const * __ptr64,struct _Collvec const * __ptr64);221275;221275;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;221275;221275;1
??$_Kfn@$$CB_KU?$pair@KK@std@@@?$_Umap_traits@_KU?$pair@KK@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@2@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KU?$pair@KK@std@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,struct std::pair<unsigned long,unsigned long>,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >,0>::_Kfn<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >(struct std::pair<unsigned __int64 const ,struct std::pair<unsigned lo;221275;221275;1
??0?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void) __ptr64;221275;221275;1
?__autoclassinit2@_Node_assert@std@@QEAAX_K@Z;void __cdecl std::_Node_assert::__autoclassinit2(unsigned __int64) __ptr64;221275;221275;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const >(class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64);442550;221275;2
??1option_requires_argument_exception@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::option_requires_argument_exception::~option_requires_argument_exception(void) __ptr64;220865;220865;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::_Vector_val<struc;220865;220865;1
??$?0U?$pair@$$CB_KU?$pair@KK@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > ><struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >(class std::allo;220865;220865;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;220865;220865;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_;441730;220865;2
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 const,unsigned __int64) __ptr64;220865;220865;1
?Take@?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@QEAADXZ;char __cdecl rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >::Take(void) __ptr64;220865;220865;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >(void) __ptr64;220865;220865;1
??$move@AEAV?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@0@AEAV10@@Z;??$move@AEAV?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxo;220865;220865;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KV?$vector@_KV?$allocator@_K@std@@@std@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Umap_traits<unsigned __int64,class std::vector<unsi;220865;220865;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<cha;441319;220659;2
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;441319;220659;2
??0?$_Ptr_base@_N@std@@IEAA@XZ;__cdecl std::_Ptr_base<bool>::_Ptr_base<bool>(void) __ptr64;220454;220454;1
?__autoclassinit2@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > >::__autoclassinit2(unsigned __int64) __ptr64;220454;220454;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 ;220454;220454;1
??1?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::values::standard_value<bool> >::~shared_ptr<class cxxopts::values::standard_value<bool> >(void) __ptr64;220454;220454;1
??C?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> const * __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::operator->(void)const __ptr64;220454;220454;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> & __ptr64);220044;220044;1
?_Getal@?$list@U?$pair@$$CB_KVTimelineEntry@@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64 __cdecl std::list<struct std::pair<unsigned __int64 const ,class TimelineEntry>,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >::_Getal(void) __ptr64;220044;220044;1
??0?$weak_ptr@VValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::weak_ptr<class cxxopts::Value>::weak_ptr<class cxxopts::Value>(void) __ptr64;220044;220044;1
?allocate@?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@QEAAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@_K@Z;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64>::allocate(unsigned __int64) __ptr64;220044;220044;1
??4?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAXAEBV?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;void __cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::operator=(class std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > const & __ptr64) __ptr64;220044;220044;1
?_Kfn@?$_Uset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Uset_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::ch;440088;220044;2
??$get@$00V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::get<1,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);220044;220044;1
??$_Adl_verify_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXAEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class Timeli;220044;220044;1
??$move@AEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z;??$move@AEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA$$QEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z;220044;220044;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >;220044;220044;1
??$forward@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@;220044;220044;1
?WriteEndObject@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NXZ;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteEndObject(void) __ptr64;220044;220044;1
??0_Container_base12@std@@QEAA@XZ;__cdecl std::_Container_base12::_Container_base12(void) __ptr64;3294911;219660;15
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@AEBVSymbolName@SimpleEvents@012@@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@AEBVSymbolName@SimpleEvents@012@@Z@Z;219633;219633;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64 const,unsigned __int64;219633;219633;1
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<wchar_t> >::_Bxty::~_Bxty(void) __ptr64;219633;219633;1
??1_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t::~_Grp_t(void) __ptr64;219633;219633;1
?_Destroy@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@AEAAXPEAUHelpOptionDetails@cxxopts@@0@Z;void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Destroy(struct cxxopts::HelpOptionDetails * __ptr64,struct cxxopts::HelpOptionDetails * __ptr64) __ptr64;219633;219633;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >::~_List_iterator<class std::_List_val<struct ;219633;219633;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >,1>::_Get_first(void) __;219633;219633;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@XZ;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>,class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::c;219633;219633;1
?__autoclassinit2@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@QEAAX_K@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::__autoclassinit2(unsigned __int64) __ptr64;219633;219633;1
??$get@$00AEAPEBVTimelineEntry@@AEAK@std@@YAAEAK$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@0@@Z;??$get@$00AEAPEBVTimelineEntry@@AEAK@std@@YAAEAK$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@0@@Z;219633;219633;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::FrontEndPass> >::Run(unsigned int);439267;219633;2
??0?$allocator@V?$sub_match@PEBD@std@@@std@@QEAA@XZ;__cdecl std::allocator<class std::sub_match<char const * __ptr64> >::allocator<class std::sub_match<char const * __ptr64> >(void) __ptr64;219633;219633;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;219633;219633;1
?SetMembersPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAAPEAU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@PEAU32@@Z;struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::SetMembersPointer(struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64) __ptr64;219633;219633;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >(void) __ptr64;219633;219633;1
?__autoclassinit2@?$_Tgt_state_t@PEBD@std@@QEAAX_K@Z;void __cdecl std::_Tgt_state_t<char const * __ptr64>::__autoclassinit2(unsigned __int64) __ptr64;219633;219633;1
?IsNanOrInf@Double@internal@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::internal::Double::IsNanOrInf(void)const __ptr64;219633;219633;1
??$move@AEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microso;219223;219223;1
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >::~map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,;219223;219223;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struc;219223;219223;1
??$move@AEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAV10@@Z;??$move@AEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAV10@@Z;219223;219223;1
??1?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;219223;219223;1
??1?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~unordered_set<class std::basic_string<char,struct std::char_tr;438445;219222;2
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAAXPEBQEAVTimelineEntry@@@Z;void __cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::_Seek_to(class TimelineEntry * __ptr64 const * __ptr64) __ptr64;438035;219017;2
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;218812;218812;1
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;218812;218812;1
??$_Adl_verify_range@PEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@PEAU123@@std@@YAXAEBQEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64,struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const & __ptr64,struct std::_Tgt_state_t<class std::_String;218812;218812;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > > const & __ptr64);218812;218812;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<cl;437624;218812;2
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr6;218402;218402;1
??0?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAA@PEAUDataPerFunction@FunctionCompilationsExporter@@AEAV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Uninitialized_backout_al<class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> & __ptr64) __ptr64;218402;218402;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::max_size(class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > const & __ptr64);218402;218402;1
??$move@AEAUHelpOptionDetails@cxxopts@@@std@@YA$$QEAUHelpOptionDetails@cxxopts@@AEAU12@@Z;??$move@AEAUHelpOptionDetails@cxxopts@@@std@@YA$$QEAUHelpOptionDetails@cxxopts@@AEAU12@@Z;218402;218402;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Itera;218402;218402;1
??$_Destroy_range@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@QEAPEBU12@AEAV?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 const,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> & __ptr64);218402;218402;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __;218402;218402;1
??$?0V?$sub_match@PEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$sub_match@PEBD@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::sub_match<char const * __ptr64> >(class std::allocator<class std::sub_match<char const * __ptr64> > const & __ptr64) __ptr64;218402;218402;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>,void * __ptr64> > & __ptr64,struct std::_List_node<struct s;218402;218402;1
??$destroy@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > >::destroy<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsig;218402;218402;1
?allocate@?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@QEAAPEAUDataPerFunction@FunctionCompilationsExporter@@_K@Z;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::allocator<struct FunctionCompilationsExporter::DataPerFunction>::allocate(unsigned __int64) __ptr64;218402;218402;1
?OnEndReloggingPass@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnEndReloggingPass(void) __ptr64;1090365;218073;5
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > * __ptr64 const,unsigned __int64) __ptr64;217991;217991;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base12>(void) __ptr64;217991;217991;1
??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFrontEndPass@Activities@234@AEBVSymbolName@SimpleEvents@234@@Z@Z;??0?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVBuildTimelineAnalyzer@@P85@EAAXAEBVFrontEndPass@Activities@234@AEBVSymbolName@SimpleEvents@234@@Z@Z;217991;217991;1
??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<unsigned __int64> >(unsigned __int64 * __ptr64,unsigned __int64 * __ptr64 const,class std::allocator<unsigned __int64> & __ptr64);217991;217991;1
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_Tmap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct cxxopts::HelpGroupDetails,struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxop;217991;217991;1
?what@bad_weak_ptr@std@@UEBAPEBDXZ;virtual char const * __ptr64 __cdecl std::bad_weak_ptr::what(void)const __ptr64;217581;217581;1
??0?$allocator@_W@std@@QEAA@XZ;__cdecl std::allocator<wchar_t>::allocator<wchar_t>(void) __ptr64;217581;217581;1
?__autoclassinit2@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::__autoclassinit2(unsigned __int64) __ptr64;217581;217581;1
??$_Get_unwrapped@AEAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA@AEAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 & __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 & __ptr64);217581;217581;1
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Node_assert@std@@@std@@PEAV_Node_assert@2@$00@std@@QEAAAEAU?$default_delete@V_Node_assert@std@@@2@XZ;struct std::default_delete<class std::_Node_assert> & __ptr64 __cdecl std::_Compressed_pair<struct std::default_delete<class std::_Node_assert>,class std::_Node_assert * __ptr64,1>::_Get_first(void) __ptr64;217581;217581;1
??__Es_defaultOutputPathFileInclusionGraph@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultOutputPathFileInclusionGraph''(void);217581;217581;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<un;217581;217581;1
??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::forward<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);435161;217580;2
??2@YAPEAX_KPEAX@Z;void * __ptr64 __cdecl operator new(unsigned __int64,void * __ptr64);3259603;217306;15
??0?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEAA@XZ;__cdecl std::_Ptr_base<class cxxopts::Value const >::_Ptr_base<class cxxopts::Value const >(void) __ptr64;217170;217170;1
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<wchar_t> >::~_String_val<struct std::_Simple_types<wchar_t> >(void) __ptr64;217170;217170;1
??0?$GenericStringRef@D@rapidjson@@QEAA@AEBU01@@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char>(struct rapidjson::GenericStringRef<char> const & __ptr64) __ptr64;217170;217170;1
??1option_exists_error@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::option_exists_error::~option_exists_error(void) __ptr64;217170;217170;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std:;217170;217170;1
??$move@AEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEAPEAV10@@Z;??$move@AEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEAPEAV10@@Z;217170;217170;1
?_Use_count@_Ref_count_base@std@@QEBAJXZ;long __cdecl std::_Ref_count_base::_Use_count(void)const __ptr64;216759;216759;1
??0?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAA@PEAUDataPerFile@FileInclusionTimesExporter@@AEAV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Uninitialized_backout_al<class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> & __ptr64) __ptr64;216759;216759;1
??$_Move_backward_unchecked@PEAUDataPerFile@FileInclusionTimesExporter@@PEAU12@@std@@YAPEAUDataPerFile@FileInclusionTimesExporter@@PEAU12@00@Z;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::_Move_backward_unchecked<struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64>(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64);216759;216759;1
??$move@AEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AEAV10@@Z;??$move@AEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$unordered_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_;433519;216759;2
??C?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@XZ;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const * __ptr64 __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::operator->(void)const __ptr64;216759;216759;1
??1?$pair@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@QEAA@XZ;__cdecl std::pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::~pair<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;216759;216759;1
?_Unchecked_end@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@XZ;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Unchecked_end(void) __ptr64;216759;216759;1
??4?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator=(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64) __ptr64;216759;216759;1
??0?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAA@XZ;__cdecl std::shared_ptr<class cxxopts::values::standard_value<bool> >::shared_ptr<class cxxopts::values::standard_value<bool> >(void) __ptr64;216759;216759;1
??E?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator++(void) __ptr64;216759;216759;1
?max_size@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SA_KAEBV?$allocator@K@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<unsigned long> >::max_size(class std::allocator<unsigned long> const & __ptr64);216759;216759;1
??__FRQUOTE@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic atexit destructor for 'RQUOTE''(void);216759;216759;1
??_Grange_error@std@@UEAAPEAXI@Z;virtual void * __ptr64 __cdecl std::range_error::`scalar deleting destructor'(unsigned int) __ptr64;216759;216759;1
??1?$unordered_map@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@@std@@QEAA@XZ;__cdecl std::unordered_map<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >::~unordered_map<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,struct std::hash<class std::shared;216759;216759;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 & __ptr64);216759;216759;1
??$forward@_N@std@@YA$$QEA_NAEA_N@Z;??$forward@_N@std@@YA$$QEA_NAEA_N@Z;1516496;216642;7
??$forward@AEB_K@std@@YAAEB_KAEB_K@Z;unsigned __int64 const & __ptr64 __cdecl std::forward<unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64);649457;216485;3
?IsDouble@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsDouble(void)const __ptr64;216349;216349;1
??$forward@U?$pair@KK@std@@@std@@YA$$QEAU?$pair@KK@0@AEAU10@@Z;??$forward@U?$pair@KK@std@@@std@@YA$$QEAU?$pair@KK@0@AEAU10@@Z;216349;216349;1
??$destroy@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::destroy<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>(class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> & __ptr64,struct st;216349;216349;1
?bucket_count@?$_Hash@V?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >,0> >::bucket_count;216349;216349;1
??$forward@U?$default_delete@V_Node_assert@std@@@std@@@std@@YA$$QEAU?$default_delete@V_Node_assert@std@@@0@AEAU10@@Z;??$forward@U?$default_delete@V_Node_assert@std@@@std@@@std@@YA$$QEAU?$default_delete@V_Node_assert@std@@@0@AEAU10@@Z;216349;216349;1
??$addressof@$$CBV?$ctype@D@std@@@std@@YAPEBV?$ctype@D@0@AEBV10@@Z;class std::ctype<char> const * __ptr64 __cdecl std::addressof<class std::ctype<char> const >(class std::ctype<char> const & __ptr64);216349;216349;1
??4?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;216349;216349;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator*(void)const __ptr64;216349;216349;1
?_Extract@?$_In_place_key_extract_set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_In_place_key_extract_set<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::_Extract(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);216349;216349;1
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > const & __ptr64>(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > cons;216349;216349;1
??0?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAA@PEAV?$sub_match@PEBD@1@AEAV?$allocator@V?$sub_match@PEBD@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >::_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >(class std::sub_match<char const * __ptr64> * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > & __ptr64) __ptr64;216349;216349;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int;216349;216349;1
?allocate@?$allocator@U_Loop_vals_t@std@@@std@@QEAAPEAU_Loop_vals_t@2@_K@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::allocator<struct std::_Loop_vals_t>::allocate(unsigned __int64) __ptr64;216349;216349;1
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z;class std::_String_val<struct std::_Simple_types<char> > const * __ptr64 __cdecl std::addressof<class std::_String_val<struct std::_Simple_types<char> > const >(class std::_String_val<struct std::_Simple_types<char> > const & __ptr64);1081334;216266;5
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ;215938;215938;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::sh;215938;215938;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64,class std::_Li;215938;215938;1
??$_Destroy_in_place@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;void __cdecl std::_Destroy_in_place<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);215938;215938;1
??R?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEBA_NAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@0@Z;bool __cdecl std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >::operator()(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64,class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64)const __ptr64;215938;215938;1
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z;215938;215938;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilatio;215938;215938;1
?OnBeginAnalysis@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnBeginAnalysis(void) __ptr64;215938;215938;1
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * _;215938;215938;1
??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@3456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@AEBVTemplateInstantiation@6012@@Z@Z;??$MatchEventStackInMemberFunction@VBuildTimelineAnalyzer@@XAEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVTemplateInstantiation@3456@$$V$$Z$$V@BuildInsights@Cpp@Microsoft@@YA_NAEBVEventStack@012@PEAVBuildTimelineAnalyzer@@P84@EAAXAEBVFrontEndPass@Activities@012@AEBVTemplateInstantiation@6012@@Z@Z;215938;215938;1
??0BackEndPass@Activities@BuildInsights@Cpp@Microsoft@@QEAA@AEBVRawEvent@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Activities::BackEndPass::BackEndPass(class Microsoft::Cpp::BuildInsights::RawEvent const & __ptr64) __ptr64;215938;215938;1
??$forward@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;215938;215938;1
?EventInstanceId@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::EventInstanceId(void)const __ptr64;431877;215938;2
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > * __ptr64 __cdecl std::_Uninitialized;215938;215938;1
?get@?$_Ptr_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@IEBAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::_Ptr_base<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::get(void)const __ptr64;215938;215938;1
??0?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAA@PEAVKeyValue@cxxopts@@AEAV?$allocator@VKeyValue@cxxopts@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >::_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >(class cxxopts::KeyValue * __ptr64,class std::allocator<class cxxopts::KeyValue> & __ptr64) __ptr64;215938;215938;1
??$forward@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@AEAV10@@Z;??$forward@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@@std@@YA$$QEAV?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@0@AEAV10@@Z;431466;215733;2
??1?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEAA@XZ;__cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::~Stack<class rapidjson::CrtAllocator>(void) __ptr64;215528;215528;1
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::operator->(void)const _;215528;215528;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Function> >::Run(unsigned int);431056;215528;2
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,1>::_Get_first(void) __ptr64;215528;215528;1
??1?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@QEAA@XZ;__cdecl std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::~pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<u;215528;215528;1
?_Get_first@?$_Compressed_pair@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@2@XZ;class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct FunctionCompilationsExporter::DataPerFunction>,class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> >,1>::_Get_first(void)const __ptr64;215528;215528;1
??0?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAA@PEAIAEAV?$allocator@I@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<unsigned int> >::_Uninitialized_backout_al<class std::allocator<unsigned int> >(unsigned int * __ptr64,class std::allocator<unsigned int> & __ptr64) __ptr64;215528;215528;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,1>::_Get_first(void)const __ptr64;215528;215528;1
?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEBAAEBV?$allocator@I@2@XZ;class std::allocator<unsigned int> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned int>,class std::_Vector_val<struct std::_Simple_types<unsigned int> >,1>::_Get_first(void)const __ptr64;215528;215528;1
??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z;void __cdecl <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()(char * __ptr64 const,char const * __ptr64 const,unsigned __int64)const __ptr64;215528;215528;1
?SetName@TimelineEntry@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;void __cdecl TimelineEntry::SetName(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;215528;215528;1
?_Get_max_bucket_size@?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@QEAAAEAMXZ;float & __ptr64 __cdecl std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >::_Get_max_bucket_size(void) __ptr64;646583;215527;3
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<un;215117;215117;1
??0?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAA@PEAU_Grp_t@?$_Tgt_state_t@PEBD@1@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64) __ptr64;215117;215117;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::operator*(void)const __ptr64;215117;215117;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > const & __ptr64 __cdecl std::forward<;215117;215117;1
??$move@AEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;215117;215117;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@std@@QEBAPEAUDataPerFunction@FunctionCompilationsExporter@@XZ;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >::_Unwrapped(void)const __ptr64;215117;215117;1
?_Negate@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Negate(void) __ptr64;215117;215117;1
??$move@AEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;215117;215117;1
??$forward@AEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,class std;215117;215117;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$sub_match@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$sub_match@PEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$sub_match@PEBD@std@@@2@XZ;class std::allocator<class std::sub_match<char const * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::sub_match<char const * __ptr64> >,class std::_Vector_val<struct std::_Simple_types<class std::sub_match<char const * __ptr64> > >,1>::_Get_first(void)const __ptr64;215117;215117;1
??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPEAIQEAIAEAV?$allocator@I@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<unsigned int> >(unsigned int * __ptr64,unsigned int * __ptr64 const,class std::allocator<unsigned int> & __ptr64);215117;215117;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >(void) __ptr64;215117;215117;1
?Size@EventStack@BuildInsights@Cpp@Microsoft@@QEBA_KXZ;unsigned __int64 __cdecl Microsoft::Cpp::BuildInsights::EventStack::Size(void)const __ptr64;430235;215117;2
??$move@AEAV?$allocator@_K@std@@@std@@YA$$QEAV?$allocator@_K@0@AEAV10@@Z;??$move@AEAV?$allocator@_K@std@@@std@@YA$$QEAV?$allocator@_K@0@AEAV10@@Z;215117;215117;1
?_Get_first@?$_Compressed_pair@U?$hash@_K@std@@V?$_Compressed_pair@U?$equal_to@_K@std@@M$00@2@$00@std@@QEBAAEBU?$hash@_K@2@XZ;struct std::hash<unsigned __int64> const & __ptr64 __cdecl std::_Compressed_pair<struct std::hash<unsigned __int64>,class std::_Compressed_pair<struct std::equal_to<unsigned __int64>,float,1>,1>::_Get_first(void)const __ptr64;644942;214980;3
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;214707;214707;1
??0?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@QEAA@XZ;__cdecl std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64>::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64>(void) __ptr64;214707;214707;1
??$move@AEAV?$tuple@$$QEAUFileCompilationData@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAUFileCompilationData@@@std@@@std@@YA$$QEAV?$tuple@$$QEAUFileCompilationData@@@0@AEAV10@@Z;214707;214707;1
?OnStopActivity@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStopAct;214707;214707;1
??$move@AEAPEAVValue@cxxopts@@@std@@YA$$QEAPEAVValue@cxxopts@@AEAPEAV12@@Z;??$move@AEAPEAVValue@cxxopts@@@std@@YA$$QEAPEAVValue@cxxopts@@AEAPEAV12@@Z;214707;214707;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@0@AEAV10@@Z;214707;214707;1
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __ptr64 & __ptr64);214707;214707;1
??$Validate@U?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@2@@?$Transcoder@U?$UTF8@D@rapidjson@@U12@@rapidjson@@SA_NAEAU?$GenericStringStream@U?$UTF8@D@rapidjson@@@1@AEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@1@@Z;static bool __cdecl rapidjson::Transcoder<struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char> >::Validate<struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > >(struct rapidjson::GenericStringStream<struct rapidjson::UTF8<char> > & __ptr64,class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64);214707;214707;1
??$?0U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > const & __ptr64) __ptr64;214296;214296;1
??$forward@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;214296;214296;1
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@XZ;class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> >,class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,clas;214296;214296;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr;214296;214296;1
??$EntityCanMaterializeId@VBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::BackEndPass>(unsigned int);214296;214296;1
??4?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z;class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator=(class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64) __ptr64;213886;213886;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@2@XZ;class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64>,class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >,1>::_Get_first(void) __ptr64;213886;213886;1
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ;class std::allocator<char> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<char>,class std::_Vector_val<struct std::_Simple_types<char> >,1>::_Get_first(void)const __ptr64;213886;213886;1
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@2@@Z;static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_In_place_key_extract_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails> >::_Extract(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::share;213886;213886;1
??$forward@V?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@0@AEAV10@@Z;213886;213886;1
??4?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;213886;213886;1
??$_Get_unwrapped@AEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA@AEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z;__cdecl std::_Get_unwrapped<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const & __ptr64);213886;213886;1
??$forward@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;427361;213680;2
?_Setlong@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Setlong(void) __ptr64;213475;213475;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > const & __ptr64);213475;213475;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct ;426951;213475;2
??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64>(class std::_String_iterator<class std::_String_val<struct std::_Simple_types<char> > > & __ptr64);213475;213475;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KVTimelineEntry@@@1@XZ;struct std::pair<unsigned __int64 const ,class TimelineEntry> & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator*(void)const __ptr64;213475;213475;1
??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_JAEBV01@@Z;__int64 __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::operator-(class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > const & __ptr64)const __ptr64;213475;213475;1
??$_Move_backward_unchecked@PEAUDataPerFunction@FunctionCompilationsExporter@@PEAU12@@std@@YAPEAUDataPerFunction@FunctionCompilationsExporter@@PEAU12@00@Z;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::_Move_backward_unchecked<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64>(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64);213475;213475;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<;213475;213475;1
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@1@@Z;__cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64,class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,cl;213475;213475;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ;213475;213475;1
??$addressof@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@I@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<unsigned int> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(class std::_Vector_val<struct std::_Simple_types<unsigned int> > & __ptr64);213475;213475;1
??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_Tree_node<struct std::pair<class std::basic_string<ch;213065;213065;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(void) __ptr64;213065;213065;1
?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z;unsigned __int64 * __ptr64 __cdecl std::allocator<unsigned __int64>::allocate(unsigned __int64) __ptr64;213065;213065;1
?OnActivityFinished@BuildTimelineAnalyzer@@AEAAXAEBVActivity@Activities@BuildInsights@Cpp@Microsoft@@@Z;void __cdecl BuildTimelineAnalyzer::OnActivityFinished(class Microsoft::Cpp::BuildInsights::Activities::Activity const & __ptr64) __ptr64;213065;213065;1
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned ;213065;213065;1
??$_Get_unwrapped@AEAPEAD@std@@YA@AEAPEAD@Z;__cdecl std::_Get_unwrapped<char * __ptr64 & __ptr64>(char * __ptr64 & __ptr64);213065;213065;1
?_Unchecked_end@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@XZ;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Unchecked_end(void) __ptr64;213065;213065;1
?push_back@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAAX$$QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@Z;?push_back@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAAX$$QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@Z;213065;213065;1
??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@$$QEAV01@@Z;213065;213065;1
??$?0V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> >(class std::allocator<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char;426129;213064;2
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;851027;212756;4
??0?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@1@@Z;__cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __;212654;212654;1
??0?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAA@PEAU_Loop_vals_t@1@AEAV?$allocator@U_Loop_vals_t@std@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >::_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >(struct std::_Loop_vals_t * __ptr64,class std::allocator<struct std::_Loop_vals_t> & __ptr64) __ptr64;212654;212654;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > const & __ptr64);212654;212654;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const;212654;212654;1
??$_Unfancy@K@std@@YAPEAKPEAK@Z;unsigned long * __ptr64 __cdecl std::_Unfancy<unsigned long>(unsigned long * __ptr64);212654;212654;1
?_Sfx@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAAEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@XZ;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Sfx(void) __ptr64;212654;212654;1
??$?0U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > c;212654;212654;1
?_Get_first@?$_Compressed_pair@V?$allocator@U_Loop_vals_t@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Loop_vals_t@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U_Loop_vals_t@std@@@2@XZ;class std::allocator<struct std::_Loop_vals_t> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Loop_vals_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Loop_vals_t> >,1>::_Get_first(void)const __ptr64;212654;212654;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;212654;212654;1
??0?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@QEAA@XZ;__cdecl std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >(void) __ptr64;424898;212449;2
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z;void __cdecl std::_Destroy_in_place<char * __ptr64>(char * __ptr64 & __ptr64);2973053;212360;14
??$forward@AEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<str;212244;212244;1
?deallocate@?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >::deallocate(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;212244;212244;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::__autoclassinit2(unsigned __int64) __ptr64;212244;212244;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;212244;212244;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;212244;212244;1
??$?0UFileCompilationData@@@?$_Tuple_val@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAUFileCompilationData@@@Z;??$?0UFileCompilationData@@@?$_Tuple_val@$$QEAUFileCompilationData@@@std@@QEAA@$$QEAUFileCompilationData@@@Z;212244;212244;1
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@std@@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > > const & __ptr64>(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > > const & __ptr64);212244;212244;1
?_Add_dot@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_dot(void) __ptr64;212244;212244;1
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z;??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z;1060808;212161;5
?TickFrequency@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::TickFrequency(void)const __ptr64;848564;212141;4
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64,class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineE;211833;211833;1
??$?0U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >;211833;211833;1
??$_Seek_wrapped@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@AEAV12@@std@@YAXAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z;void __cdecl std::_Seek_wrapped<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64>(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64);211833;211833;1
??Tstd@@YA?AW4_Node_flags@0@W410@0@Z;enum std::_Node_flags __cdecl std::operator^(enum std::_Node_flags,enum std::_Node_flags);211833;211833;1
?get@?$_Ptr_base@_N@std@@IEBAPEA_NXZ;bool * __ptr64 __cdecl std::_Ptr_base<bool>::get(void)const __ptr64;211833;211833;1
??0EntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@QEAA@PEBVTimelineEntry@@AEBK@Z;__cdecl ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset::EntryWithLocalThreadIdOffsetMaxChildOffset(class TimelineEntry const * __ptr64,unsigned long const & __ptr64) __ptr64;211833;211833;1
??$move@AEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@0@AEAV10@@Z;211833;211833;1
?_Get_first@?$_Compressed_pair@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@UHelpOptionDetails@cxxopts@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UHelpOptionDetails@cxxopts@@@2@XZ;class std::allocator<struct cxxopts::HelpOptionDetails> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct cxxopts::HelpOptionDetails>,class std::_Vector_val<struct std::_Simple_types<struct cxxopts::HelpOptionDetails> >,1>::_Get_first(void)const __ptr64;211833;211833;1
?bucket_count@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::bucket_count(void)const __ptr64;211833;211833;1
?OnEndAnalysis@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnEndAnalysis(void) __ptr64;211423;211423;1
?deallocate@?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@QEAAXQEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@_K@Z;void __cdecl std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64>::deallocate(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 const,unsigned __int64) __ptr64;211423;211423;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > >(class std::_List_unchecked_iterator<cla;211423;211423;1
??0?$_Cmp_collate@V?$regex_traits@D@std@@@std@@QEAA@AEBV?$regex_traits@D@1@@Z;__cdecl std::_Cmp_collate<class std::regex_traits<char> >::_Cmp_collate<class std::regex_traits<char> >(class std::regex_traits<char> const & __ptr64) __ptr64;211423;211423;1
?IsInt@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::IsInt(void)const __ptr64;211423;211423;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::operator--(void) __ptr64;211423;211423;1
??$PutUnsafe@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@@rapidjson@@YAXAEAV?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@0@D@Z;void __cdecl rapidjson::PutUnsafe<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > >(class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > > & __ptr64,char);211423;211423;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsig;211423;211423;1
?_Unchecked_end@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@XZ;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Unchecked_end(void) __ptr64;211423;211423;1
?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::__autoclassinit2(unsigned __int64) __ptr64;1267303;211217;6
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z;static void * __ptr64 __cdecl std::_Default_allocate_traits::_Allocate(unsigned __int64);3167644;211176;15
?deallocate@?$allocator@VKeyValue@cxxopts@@@std@@QEAAXQEAVKeyValue@cxxopts@@_K@Z;void __cdecl std::allocator<class cxxopts::KeyValue>::deallocate(class cxxopts::KeyValue * __ptr64 const,unsigned __int64) __ptr64;211012;211012;1
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > & __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::operator+=(__int64) __ptr64;211012;211012;1
?Key@SymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName::Key(void)const __ptr64;211012;211012;1
??0?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@QEAA@AEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z;__cdecl rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64) __ptr64;211012;211012;1
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class ;211012;211012;1
?bucket_count@?$_Hash@V?$_Umap_traits@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@$0A@@std@@@std@@QEBA_KXZ;unsigned __int64 __cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >,0> >::bucket_count(void)const __ptr64;211012;211012;1
??$forward@AEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > const & __ptr64>(class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > const & __ptr64;211012;211012;1
??$addressof@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@K@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<unsigned long> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >(class std::_Vector_val<struct std::_Simple_types<unsigned long> > & __ptr64);211012;211012;1
?_Pfx@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAAEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@XZ;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Pfx(void) __ptr64;210602;210602;1
??9?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA_NV01@@Z;bool __cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator!=(class rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >)const __ptr64;210602;210602;1
??$?0AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@?$_Tuple_val@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@QEAA@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@@Z;__cdecl std::_Tuple_val<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64>::_Tuple_val<class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64><class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64>(class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64) __ptr64;210602;210602;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationDat;210602;210602;1
??$_Unfancy@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAU120@@Z;struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 __cdecl std::_Unfancy<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64);210602;210602;1
??$_Kfn@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@?$_Umap_traits@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@V?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@2@$0A@@std@@SAAEBV?$shared_ptr@VOptionDetails@cxxopts@@@1@AEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@@Z;static class std::shared_ptr<class cxxopts::OptionDetails> const & __ptr64 __cdecl std::_Umap_traits<class std::shared_ptr<class cxxopts::OptionDetails>,class cxxopts::OptionValue,class std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >,class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class c;210602;210602;1
?_Get_max_bucket_size@?$_Uhash_compare@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@U?$hash@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@@std@@QEBAAEBMXZ;float const & __ptr64 __cdecl std::_Uhash_compare<class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::shared_ptr<class cxxopts::OptionDetails> >,struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > >::_Get_max_bucket_size(void)const __ptr64;210602;210602;1
??R<lambda_add3c17bb2999790cf84673b171b0d80>@@QEBA_NPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0@Z;bool __cdecl <lambda_add3c17bb2999790cf84673b171b0d80>::operator()(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64)const __ptr64;210602;210602;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<st;210602;210602;1
?GetId@TimelineEntry@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl TimelineEntry::GetId(void)const __ptr64;421203;210601;2
?parse@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBAXXZ;virtual void __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::parse(void)const __ptr64;210191;210191;1
?_Empty@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEBA_NXZ;bool __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Empty(void)const __ptr64;210191;210191;1
??$?0UDataPerFunction@FunctionCompilationsExporter@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct FunctionCompilationsExporter::DataPerFunction>(class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> const & __ptr64) __ptr64;210191;210191;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::Entry;210191;210191;1
??$?0V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >(class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > const & __ptr64) __ptr64;210191;210191;1
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@2@_K@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >::deallocate(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > & __ptr64,struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> * __p;210191;210191;1
??1OptionValue@cxxopts@@QEAA@XZ;__cdecl cxxopts::OptionValue::~OptionValue(void) __ptr64;210191;210191;1
?max@?$numeric_limits@_J@std@@SA_JXZ;static __int64 __cdecl std::numeric_limits<__int64>::max(void);3149992;209999;15
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::O;209780;209780;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculati;209780;209780;1
??$_Move_backward_unchecked@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@@std@@YAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@00@Z;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::_Move_backward_unchecked<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64>(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::;209780;209780;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@2@XZ;class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >,class std::_Vector_val<struct std::_Simple_types<class std::_List_unchecked_iterator<class std::_List_val<struct;209780;209780;1
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator*(void)const __ptr64;209780;209780;1
??$_Kfn@$$CB_KVTimelineEntry@@@?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KVTimelineEntry@@@1@@Z;static unsigned __int64 const & __ptr64 __cdecl std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0>::_Kfn<unsigned __int64 const ,class TimelineEntry>(struct std::pair<unsigned __int64 const ,class TimelineEntry> const & __ptr64);209780;209780;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;419561;209780;2
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base12>(void) __ptr64;209780;209780;1
?deallocate@?$allocator@V?$sub_match@PEBD@std@@@std@@QEAAXQEAV?$sub_match@PEBD@2@_K@Z;void __cdecl std::allocator<class std::sub_match<char const * __ptr64> >::deallocate(class std::sub_match<char const * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;209780;209780;1
?_Get_first@?$_Compressed_pair@V?$allocator@VKeyValue@cxxopts@@@std@@V?$_Vector_val@U?$_Simple_types@VKeyValue@cxxopts@@@std@@@2@$00@std@@QEBAAEBV?$allocator@VKeyValue@cxxopts@@@2@XZ;class std::allocator<class cxxopts::KeyValue> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class cxxopts::KeyValue>,class std::_Vector_val<struct std::_Simple_types<class cxxopts::KeyValue> >,1>::_Get_first(void)const __ptr64;209780;209780;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@2@XZ;class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64>,class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >,1>::_Get_first(void)const __ptr64;209780;209780;1
??0?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAA@PEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@@Z;__cdecl std::_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights:;209780;209780;1
??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;209780;209780;1
??$forward@UHelpOptionDetails@cxxopts@@@std@@YA$$QEAUHelpOptionDetails@cxxopts@@AEAU12@@Z;??$forward@UHelpOptionDetails@cxxopts@@@std@@YA$$QEAUHelpOptionDetails@cxxopts@@AEAU12@@Z;209780;209780;1
?_Resize@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAXI@Z;void __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Resize(unsigned int) __ptr64;209370;209370;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared;209370;209370;1
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@AEBV01@@Z;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > > const & __ptr64) __ptr64;209370;209370;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator++(void) __ptr64;209370;209370;1
??$EntityCanMaterializeId@VSymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName>(unsigned int);209370;209370;1
?deallocate@?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >::deallocate(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 const,unsigned __int64) __ptr64;208959;208959;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;208959;208959;1
??$addressof@$$CBV?$vector@_NV?$allocator@_N@std@@@std@@@std@@YAPEBV?$vector@_NV?$allocator@_N@std@@@0@AEBV10@@Z;class std::vector<bool,class std::allocator<bool> > const * __ptr64 __cdecl std::addressof<class std::vector<bool,class std::allocator<bool> > const >(class std::vector<bool,class std::allocator<bool> > const & __ptr64);208959;208959;1
?Usable@ShortString@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@SA_NI@Z;static bool __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::ShortString::Usable(unsigned int);208959;208959;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64>::_Release(void) __ptr64;208959;208959;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> > >(void) __ptr64;417919;208959;2
??$_Unfancy@U_Loop_vals_t@std@@@std@@YAPEAU_Loop_vals_t@0@PEAU10@@Z;struct std::_Loop_vals_t * __ptr64 __cdecl std::_Unfancy<struct std::_Loop_vals_t>(struct std::_Loop_vals_t * __ptr64);208959;208959;1
?__autoclassinit2@?$shared_ptr@V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@@std@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,c;208959;208959;1
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@@Z;__cdecl std::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >::_Alloc_construct_ptr<class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > ;208959;208959;1
?OnTraceInfo@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVTraceInfo@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnTraceIn;208959;208959;1
??$_Pocca@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@YAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@0@AEBV10@@Z;void __cdecl std::_Pocca<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >(class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> & __ptr64,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> const & __ptr64);208959;208959;1
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const * __ptr64 __cdecl std::addressof<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);417919;208959;2
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > const & __ptr64>(class std::_List_unchecked_ite;208959;208959;1
??$_Pass_fn@V<lambda_9480883bff83c29d8fc89bed48609766>@@$0A@@std@@YA?AV<lambda_9480883bff83c29d8fc89bed48609766>@@V1@@Z;class <lambda_9480883bff83c29d8fc89bed48609766> __cdecl std::_Pass_fn<class <lambda_9480883bff83c29d8fc89bed48609766>,0>(class <lambda_9480883bff83c29d8fc89bed48609766>);208959;208959;1
?_Null@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAAEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@XZ;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > & __ptr64 __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Null(void) __ptr64;208959;208959;1
??$addressof@$$CBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@YAPEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@0@AEBU10@@Z;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const * __ptr64 __cdecl std::addressof<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const >(struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const & __ptr64);208959;208959;1
??$?0U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> >(class std::allocator<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> > const & __ptr64) __ptr64;417509;208754;2
??1bad_alloc@std@@UEAA@XZ;virtual __cdecl std::bad_alloc::~bad_alloc(void) __ptr64;3129054;208603;15
?deallocate@?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@QEAAXQEAUDataPerFunction@FunctionCompilationsExporter@@_K@Z;void __cdecl std::allocator<struct FunctionCompilationsExporter::DataPerFunction>::deallocate(struct FunctionCompilationsExporter::DataPerFunction * __ptr64 const,unsigned __int64) __ptr64;208549;208549;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > >::max_size(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > const & __ptr64);208549;208549;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 const & __ptr64);208549;208549;1
?OnSimpleEvent@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnSimpleE;208549;208549;1
??$forward@V?$tuple@$$V@std@@@std@@YA$$QEAV?$tuple@$$V@0@AEAV10@@Z;??$forward@V?$tuple@$$V@std@@@std@@YA$$QEAV?$tuple@$$V@0@AEAV10@@Z;208549;208549;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsig;208549;208549;1
??$_Get_unwrapped@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64>(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64);208549;208549;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;208549;208549;1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64;208549;208549;1
?__autoclassinit2@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::__autoclassinit2(unsigned __int64) __ptr64;208549;208549;1
??$_Pocca@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@YAXAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@AEBV10@@Z;void __cdecl std::_Pocca<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64);208549;208549;1
??$forward@AEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > const & __ptr64>(class std::allocator<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > const & __ptr64);208549;208549;1
?_Get_first@?$_Compressed_pair@U?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@M$00@std@@QEBAAEBU?$equal_to@V?$shared_ptr@VOptionDetails@cxxopts@@@std@@@2@XZ;struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> > const & __ptr64 __cdecl std::_Compressed_pair<struct std::equal_to<class std::shared_ptr<class cxxopts::OptionDetails> >,float,1>::_Get_first(void)const __ptr64;208549;208549;1
??$_Unfancy@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@PEAV10@@Z;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::_Unfancy<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64);208549;208549;1
??0?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@QEAA@XZ;__cdecl std::allocator<struct FileInclusionTimesExporter::DataPerFile>::allocator<struct FileInclusionTimesExporter::DataPerFile>(void) __ptr64;208549;208549;1
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64) __ptr64;208549;208549;1
?OnBeginAnalysisPass@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnBeginAnalysisPass(void) __ptr64;208549;208549;1
?TickFrequency@Event@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::TickFrequency(void)const __ptr64;834195;208548;4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z;void __cdecl std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::deallocate(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 const,unsigned __int64) __ptr64;208138;208138;1
?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QEBAAEBV?$allocator@K@2@XZ;class std::allocator<unsigned long> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned long>,class std::_Vector_val<struct std::_Simple_types<unsigned long> >,1>::_Get_first(void)const __ptr64;208138;208138;1
??$forward@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;624415;208138;3
??0?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >(void) __ptr64;208138;208138;1
??$addressof@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@YAPEAV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@0@AEAV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > & __ptr64);208138;208138;1
??$EntityCanMaterializeId@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::Activity>(unsigned int);208138;208138;1
??$addressof@$$CBV?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@@std@@YAPEBV?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@0@AEBV10@@Z;class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> > const * __ptr64 __cdecl std::addressof<class std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct;208138;208138;1
??$_Destroy_in_place@_N@std@@YAXAEA_N@Z;void __cdecl std::_Destroy_in_place<bool>(bool & __ptr64);208138;208138;1
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@0@AEAV10@@Z;class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > * __ptr64 __cdecl std::addressof<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >(class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<cl;208138;208138;1
??1?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>::~pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>(void) __ptr64;208138;208138;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >(void) __ptr64;208138;208138;1
?__autoclassinit2@?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::__autoclassinit2(unsigned __int64) __ptr64;207728;207728;1
?__autoclassinit2@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::__autoclassinit2(unsigned __int64) __ptr64;207728;207728;1
??$forward@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microso;207728;207728;1
??$move@AEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@AEAV10@@Z;207728;207728;1
??$_Get_unwrapped@AEBQEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 const & __ptr64>(class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 const & __ptr64);207728;207728;1
?_Destroy@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@AEAAXPEAUDataPerFile@FileInclusionTimesExporter@@0@Z;void __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Destroy(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64) __ptr64;207728;207728;1
??$EntityCanMaterializeId@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile>(unsigned int);415455;207727;2
?_Get_max_bucket_size@?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@QEBAAEBMXZ;float const & __ptr64 __cdecl std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >::_Get_max_bucket_size(void)const __ptr64;622363;207454;3
??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z;class std::codecvt<char,char,struct _Mbstatet> const * __ptr64 __cdecl std::addressof<class std::codecvt<char,char,struct _Mbstatet> const >(class std::codecvt<char,char,struct _Mbstatet> const & __ptr64);1036998;207399;5
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,clas;207317;207317;1
??$destroy@UHelpOptionDetails@cxxopts@@@?$_Default_allocator_traits@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@SAXAEAV?$allocator@UHelpOptionDetails@cxxopts@@@1@QEAUHelpOptionDetails@cxxopts@@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct cxxopts::HelpOptionDetails> >::destroy<struct cxxopts::HelpOptionDetails>(class std::allocator<struct cxxopts::HelpOptionDetails> & __ptr64,struct cxxopts::HelpOptionDetails * __ptr64 const);207317;207317;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > const >(class std::_List_va;207317;207317;1
??$move@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@@Z;??$move@AEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@@Z;207317;207317;1
?_Mark_final@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Mark_final(void) __ptr64;207317;207317;1
??$move@AEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@0@AEAV10@@Z;414634;207317;2
?max_size@?$_Default_allocator_traits@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@SA_KAEBV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::max_size(class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > const & __ptr64);207317;207317;1
??$addressof@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@YAPEAU?$pair@$$CB_KU?$pair@KK@std@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >(struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > & __ptr64);207317;207317;1
?_Get_first@?$_Compressed_pair@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@V?$_Vector_val@U?$_Simple_types@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@2@XZ;class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class std::_Vector_val<struct std::_Simple_types<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >,1>::_Get_first(void)const __ptr64;207317;207317;1
??$get@$0A@$$QEAU?$pair@KK@std@@@std@@YA$$QEAU?$pair@KK@0@$$QEAV?$tuple@$$QEAU?$pair@KK@std@@@0@@Z;??$get@$0A@$$QEAU?$pair@KK@std@@@std@@YA$$QEAU?$pair@KK@0@$$QEAV?$tuple@$$QEAU?$pair@KK@std@@@0@@Z;207317;207317;1
??$forward@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEBV10@@Z;class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::forward<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);414634;207317;2
?_Nw@?$_Vb_val@V?$allocator@_N@std@@@std@@SA_K_K@Z;static unsigned __int64 __cdecl std::_Vb_val<class std::allocator<bool> >::_Nw(unsigned __int64);206907;206907;1
?max_size@?$_Default_allocator_traits@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@SA_KAEBV?$allocator@VKeyValue@cxxopts@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class cxxopts::KeyValue> >::max_size(class std::allocator<class cxxopts::KeyValue> const & __ptr64);206907;206907;1
??$forward@V?$allocator@I@std@@@std@@YA$$QEAV?$allocator@I@0@AEAV10@@Z;??$forward@V?$allocator@I@std@@@std@@YA$$QEAV?$allocator@I@0@AEAV10@@Z;206907;206907;1
??$addressof@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >(class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > & __ptr64);206907;206907;1
??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><unsigned int>(class std::allocator<unsigned int> const & __ptr64) __ptr64;206907;206907;1
?__autoclassinit2@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::__autoclassinit2(unsigned __int64) __ptr64;206907;206907;1
??$_Destroy_range@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@QEAU12@AEAV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64 const,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> & __ptr64);206907;206907;1
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> >(class std::allocator<struct std::_Tree_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails>,void * __ptr64> > const & __ptr64) __pt;206907;206907;1
?Put@?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@QEAAXD@Z;void __cdecl rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >::Put(char) __ptr64;206907;206907;1
?push_back@?$vector@KV?$allocator@K@std@@@std@@QEAAXAEBK@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::push_back(unsigned long const & __ptr64) __ptr64;206907;206907;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > & __ptr;206907;206907;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > * __ptr64;206907;206907;1
?OnEndAnalysisPass@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@345@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::OnEndAnalysisPass(void) __ptr64;206496;206496;1
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> & __ptr64 __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::operator*(void)const __ptr64;206496;206496;1
??$addressof@V?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@@std@@YAPEAV?$_Builder@PEBDDV?$regex_traits@D@std@@@0@AEAV10@@Z;class std::_Builder<char const * __ptr64,char,class std::regex_traits<char> > * __ptr64 __cdecl std::addressof<class std::_Builder<char const * __ptr64,char,class std::regex_traits<char> > >(class std::_Builder<char const * __ptr64,char,class std::regex_traits<char> > & __ptr64);206496;206496;1
??$addressof@V?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@@std@@YAPEAV?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@0@AEAV10@@Z;class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > * __ptr64 __cdecl std::addressof<class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > >(class std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > > & __ptr64);206496;206496;1
??$move@AEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;206496;206496;1
??$forward@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@0@AEAV10@@Z;206496;206496;1
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z;static int __cdecl std::_Narrow_char_traits<char,int>::to_int_type(char const & __ptr64);1032481;206496;5
??$addressof@V?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64> > >(class std::_Vector_val<struct std::_Simple_types<struct std;206496;206496;1
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@_K@Z;void __cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >::deallocate(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 const,unsigned __int64) __ptr64;206496;206496;1
?__autoclassinit2@_Node_rep@std@@QEAAX_K@Z;void __cdecl std::_Node_rep::__autoclassinit2(unsigned __int64) __ptr64;206496;206496;1
??Y?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator+=(__int64) __ptr64;206496;206496;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > > > > >::__autoclassinit2(unsigned __int64) __ptr64;412993;206496;2
??R?$_Cmp_cs@V?$regex_traits@D@std@@@std@@QEAA_NDD@Z;bool __cdecl std::_Cmp_cs<class std::regex_traits<char> >::operator()(char,char) __ptr64;206496;206496;1
??0Level@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA@_N@Z;__cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::Level::Level(bool) __ptr64;206496;206496;1
?Name@Function@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::Function::Name(void)const __ptr64;412582;206291;2
?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z;static char __cdecl std::_Narrow_char_traits<char,int>::to_char_type(int const & __ptr64);1031249;206249;5
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >(void) __ptr64;206086;206086;1
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><wchar_t>(class std::allocator<wchar_t> const & __ptr64) __ptr64;206086;206086;1
??$_Adl_verify_range@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > >(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64,class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64);206086;206086;1
?__autoclassinit2@ParseResult@cxxopts@@QEAAX_K@Z;void __cdecl cxxopts::ParseResult::__autoclassinit2(unsigned __int64) __ptr64;206086;206086;1
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z;bool __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0>::operator==(class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0> const & __ptr64)const __ptr64;206086;206086;1
??$forward@V?$tuple@AEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$tuple@AEAVTimelineEntry@@@0@AEAV10@@Z;??$forward@V?$tuple@AEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$tuple@AEAVTimelineEntry@@@0@AEAV10@@Z;206086;206086;1
??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z;void __cdecl std::_Destroy_in_place<wchar_t * __ptr64>(wchar_t * __ptr64 & __ptr64);206086;206086;1
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > > & __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct st;206086;206086;1
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVTimelineEntry@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVTimelineEntry@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVTimelineEntry@@@2@XZ;class std::allocator<class TimelineEntry * __ptr64> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<class TimelineEntry * __ptr64>,class std::_Vector_val<struct std::_Simple_types<class TimelineEntry * __ptr64> >,1>::_Get_first(void)const __ptr64;412172;206086;2
??0?$tuple@$$V@std@@QEAA@AEBV01@@Z;??0?$tuple@$$V@std@@QEAA@AEBV01@@Z;1648686;206085;8
?_Get_first@?$_Compressed_pair@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@XZ;class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >,1>::_Get_first(void) __ptr64;205675;205675;1
?get@?$_Ptr_base@$$CBVOptionDetails@cxxopts@@@std@@IEBAPEBVOptionDetails@cxxopts@@XZ;class cxxopts::OptionDetails const * __ptr64 __cdecl std::_Ptr_base<class cxxopts::OptionDetails const >::get(void)const __ptr64;205675;205675;1
?IsZero@Double@internal@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::internal::Double::IsZero(void)const __ptr64;205675;205675;1
??$move@AEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@YA$$QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@AEAPEBU12@@Z;??$move@AEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@YA$$QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@AEAPEBU12@@Z;205675;205675;1
??0AnalysisOptions@BuildAnalyzer@@QEAA@XZ;__cdecl BuildAnalyzer::AnalysisOptions::AnalysisOptions(void) __ptr64;205675;205675;1
??$?0U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>(class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> const & __ptr64) __ptr64;205675;205675;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::operator++(void) __ptr64;205675;205675;1
??$forward@V?$tuple@$$QEAU?$pair@KK@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAU?$pair@KK@std@@@0@AEAV10@@Z;??$forward@V?$tuple@$$QEAU?$pair@KK@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAU?$pair@KK@std@@@0@AEAV10@@Z;205675;205675;1
??$destroy@U?$pair@$$CB_KVTimelineEntry@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KVTimelineEntry@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > >::destroy<struct std::pair<unsigned __int64 const ,class TimelineEntry> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> > & __ptr64,struct std::pair<unsigned __int64 const ,class TimelineEntry> * __ptr64 const);205675;205675;1
?_Is_word@std@@YA_NE@Z;bool __cdecl std::_Is_word(unsigned char);205675;205675;1
??$?0AEAPEBVTimelineEntry@@@?$_Tuple_val@AEAPEBVTimelineEntry@@@std@@QEAA@AEAPEBVTimelineEntry@@@Z;__cdecl std::_Tuple_val<class TimelineEntry const * __ptr64 & __ptr64>::_Tuple_val<class TimelineEntry const * __ptr64 & __ptr64><class TimelineEntry const * __ptr64 & __ptr64>(class TimelineEntry const * __ptr64 & __ptr64) __ptr64;205675;205675;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::operator*(void)const __ptr64;205675;205675;1
??$forward@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA$$QEAV?$vector@_KV?$allocator@_K@std@@@0@AEAV10@@Z;??$forward@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@YA$$QEAV?$vector@_KV?$allocator@_K@std@@@0@AEAV10@@Z;205675;205675;1
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::_Unfancy<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64);205675;205675;1
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;410940;205470;2
??$forward@AEA_N@std@@YAAEA_NAEA_N@Z;bool & __ptr64 __cdecl std::forward<bool & __ptr64>(bool & __ptr64);410940;205470;2
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z;void __cdecl std::_Iterator_base0::_Adopt(void const * __ptr64) __ptr64;2259964;205451;11
?_Unchecked_begin@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@XZ;class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Unchecked_begin(void) __ptr64;205265;205265;1
?GetMembersPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEBAPEAU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@2@XZ;struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetMembersPointer(void)const __ptr64;205265;205265;1
?_Pfx@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAAEAV?$sub_match@PEBD@2@XZ;class std::sub_match<char const * __ptr64> & __ptr64 __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Pfx(void) __ptr64;205265;205265;1
?_Get_first@?$_Compressed_pair@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@2@XZ;class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct FunctionCompilationsExporter::DataPerFunction>,class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> >,1>::_Get_first(void) __ptr64;205265;205265;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAAPEAU_Loop_vals_t@2@XZ;struct std::_Loop_vals_t * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >::_Release(void) __ptr64;205265;205265;1
?GetLength@ShortString@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAIXZ;unsigned int __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::ShortString::GetLength(void)const __ptr64;205265;205265;1
??$forward@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@YA$$QEAV?$allocator@VKeyValue@cxxopts@@@0@AEAV10@@Z;??$forward@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@YA$$QEAV?$allocator@VKeyValue@cxxopts@@@0@AEAV10@@Z;205265;205265;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >::__autoclassinit2(unsigned __int64) __pt;204854;204854;1
??$?0V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >(class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > const & __ptr64) __ptr64;204854;204854;1
??$forward@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;409708;204854;2
??$addressof@$$CBV?$collate@D@std@@@std@@YAPEBV?$collate@D@0@AEBV10@@Z;class std::collate<char> const * __ptr64 __cdecl std::addressof<class std::collate<char> const >(class std::collate<char> const & __ptr64);204854;204854;1
??4?$_Tgt_state_t@PEBD@std@@QEAAXAEBV?$_Bt_state_t@PEBD@1@@Z;void __cdecl std::_Tgt_state_t<char const * __ptr64>::operator=(class std::_Bt_state_t<char const * __ptr64> const & __ptr64) __ptr64;204854;204854;1
??$_Refancy@PEAK$0A@@std@@YAPEAKPEAK@Z;unsigned long * __ptr64 __cdecl std::_Refancy<unsigned long * __ptr64,0>(unsigned long * __ptr64);204854;204854;1
??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;204854;204854;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >(void) __ptr64;204854;204854;1
??$_Unfancy@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@YAPEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@PEAV120@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 __cdecl std::_Unfancy<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64);409708;204854;2
??1OptionAdder@cxxopts@@QEAA@XZ;__cdecl cxxopts::OptionAdder::~OptionAdder(void) __ptr64;204854;204854;1
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVTimelineEntry@@@std@@@std@@SA_KAEBV?$allocator@PEAVTimelineEntry@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class TimelineEntry * __ptr64> >::max_size(class std::allocator<class TimelineEntry * __ptr64> const & __ptr64);409708;204854;2
??1OptionParseException@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::OptionParseException::~OptionParseException(void) __ptr64;204854;204854;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> >,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pai;204854;204854;1
?GetName@TimelineEntry@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl TimelineEntry::GetName(void)const __ptr64;204854;204854;1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char) __ptr64;204854;204854;1
?_Xlength@?$vector@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@3@@std@@CAXXZ;static void __cdecl std::vector<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> >,class std::allocator<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > >::_Xlength(void);409298;204649;2
??1?$_Tuple_val@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@XZ;__cdecl std::_Tuple_val<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::~_Tuple_val<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::Bui;204444;204444;1
??$forward@PEA_N@std@@YA$$QEAPEA_NAEAPEA_N@Z;??$forward@PEA_N@std@@YA$$QEAPEA_NAEAPEA_N@Z;204444;204444;1
?_Null@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAAEAV?$sub_match@PEBD@2@XZ;class std::sub_match<char const * __ptr64> & __ptr64 __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Null(void) __ptr64;204444;204444;1
??$move@AEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YA$$QEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@AEAPEAV10@@Z;??$move@AEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YA$$QEAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@AEAPEAV10@@Z;204444;204444;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >;204444;204444;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::FrontEndFile> >::Run(unsigned int);408476;204238;2
??$addressof@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@YAPEAU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@0@AEAU10@@Z;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> * __ptr64 __cdecl std::addressof<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> >(struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> & __ptr64);204033;204033;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::operator*(void)const __ptr64;204033;204033;1
??$addressof@$$CBV?$vector@IV?$allocator@I@std@@@std@@@std@@YAPEBV?$vector@IV?$allocator@I@std@@@0@AEBV10@@Z;class std::vector<unsigned int,class std::allocator<unsigned int> > const * __ptr64 __cdecl std::addressof<class std::vector<unsigned int,class std::allocator<unsigned int> > const >(class std::vector<unsigned int,class std::allocator<unsigned int> > const & __ptr64);204033;204033;1
?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z;void __cdecl std::allocator<unsigned __int64>::deallocate(unsigned __int64 * __ptr64 const,unsigned __int64) __ptr64;204033;204033;1
??$move@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YA$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAPEBU10@@Z;??$move@AEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YA$$QEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@AEAPEBU10@@Z;204033;204033;1
??0?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEAA@PEBU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@@Z;__cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > const * __ptr64) __ptr64;204033;204033;1
??0?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@QEAA@XZ;__cdecl std::allocator<struct FunctionCompilationsExporter::DataPerFunction>::allocator<struct FunctionCompilationsExporter::DataPerFunction>(void) __ptr64;204033;204033;1
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@_K@2@XZ;class std::allocator<unsigned __int64> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned __int64>,class std::_Vector_val<struct std::_Simple_types<unsigned __int64> >,1>::_Get_first(void)const __ptr64;204033;204033;1
??$_Pocca@V?$allocator@I@std@@@std@@YAXAEAV?$allocator@I@0@AEBV10@@Z;void __cdecl std::_Pocca<class std::allocator<unsigned int> >(class std::allocator<unsigned int> & __ptr64,class std::allocator<unsigned int> const & __ptr64);204033;204033;1
?mark_count@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEBAIXZ;unsigned int __cdecl std::basic_regex<char,class std::regex_traits<char> >::mark_count(void)const __ptr64;204033;204033;1
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@0@0@Z;void __cdecl std::_Adl_verify_range<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >,class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > > >(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > > const & __ptr64,class std::_Vector_iterator<class std::_Vector_val<;204033;204033;1
?_Get_first@?$_Compressed_pair@U?$equal_to@_K@std@@M$00@std@@QEBAAEBU?$equal_to@_K@2@XZ;struct std::equal_to<unsigned __int64> const & __ptr64 __cdecl std::_Compressed_pair<struct std::equal_to<unsigned __int64>,float,1>::_Get_first(void)const __ptr64;611689;203896;3
??$forward@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@0@AEAV10@@Z;??$forward@V?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@0@AEAV10@@Z;407656;203828;2
??$EntityCanMaterializeId@VFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::Function>(unsigned int);407656;203828;2
??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~tuple<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;203623;203623;1
?_Is_word@std@@YA_ND@Z;bool __cdecl std::_Is_word(char);203623;203623;1
?_Unchecked_end@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEBAPEBUHelpOptionDetails@cxxopts@@XZ;struct cxxopts::HelpOptionDetails const * __ptr64 __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Unchecked_end(void)const __ptr64;203623;203623;1
??$move@AEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;203623;203623;1
??$_Within_limits@E@std@@YA_NAEBEU?$integral_constant@_N$00@0@U?$integral_constant@_N$0A@@0@2@Z;bool __cdecl std::_Within_limits<unsigned char>(unsigned char const & __ptr64,struct std::integral_constant<bool,1>,struct std::integral_constant<bool,0>,struct std::integral_constant<bool,0>);203623;203623;1
??0IRelogger@BuildInsights@Cpp@Microsoft@@QEAA@XZ;__cdecl Microsoft::Cpp::BuildInsights::IRelogger::IRelogger(void) __ptr64;1017292;203458;5
??$?0$0M@@?$GenericStringRef@D@rapidjson@@QEAA@AEAY0M@$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><12>(char const (& __ptr64)[12]) __ptr64;203212;203212;1
?deallocate@?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@QEAAXQEAU_Grp_t@?$_Tgt_state_t@PEBD@2@_K@Z;void __cdecl std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>::deallocate(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,unsigned __int64) __ptr64;203212;203212;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > >,bool>(void) __ptr64;203212;203212;1
??$EntityCanMaterializeId@VTemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@YA_NI@Z;bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeId<class Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation>(unsigned int);203212;203212;1
??$?0AEB_K@?$_Tuple_val@AEB_K@std@@QEAA@AEB_K@Z;__cdecl std::_Tuple_val<unsigned __int64 const & __ptr64>::_Tuple_val<unsigned __int64 const & __ptr64><unsigned __int64 const & __ptr64>(unsigned __int64 const & __ptr64) __ptr64;609226;203075;3
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@@std@@QEAAPEAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> * __ptr64>::_Release(void) __ptr64;406014;203007;2
?push_back@?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@QEAAXAEBQEAVTimelineEntry@@@Z;void __cdecl std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> >::push_back(class TimelineEntry * __ptr64 const & __ptr64) __ptr64;406013;203006;2
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<char> >::max_size(class std::allocator<char> const & __ptr64);2638471;202959;13
?_Release@?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAPEAUHelpOptionDetails@cxxopts@@XZ;struct cxxopts::HelpOptionDetails * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >::_Release(void) __ptr64;202801;202801;1
??$_Idl_distance@PEBDPEBD@std@@YA@AEBQEBD0@Z;__cdecl std::_Idl_distance<char const * __ptr64,char const * __ptr64>(char const * __ptr64 const & __ptr64,char const * __ptr64 const & __ptr64);202801;202801;1
??$_Unfancy@I@std@@YAPEAIPEAI@Z;unsigned int * __ptr64 __cdecl std::_Unfancy<unsigned int>(unsigned int * __ptr64);202801;202801;1
??$_Get_unwrapped@AEBQEA_K@std@@YA@AEBQEA_K@Z;__cdecl std::_Get_unwrapped<unsigned __int64 * __ptr64 const & __ptr64>(unsigned __int64 * __ptr64 const & __ptr64);202801;202801;1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator+=(char const * __ptr64 const) __ptr64;202801;202801;1
??$forward@AEBV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@YAAEBV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@AEBV123@@Z;class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::forward<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);202801;202801;1
??$_Const_cast@$$CBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA@PEBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z;__cdecl std::_Const_cast<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const * __ptr64);202801;202801;1
??$forward@AEBQEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEBQEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 const & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 const & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<;202391;202391;1
?GetChildren@TimelineEntry@@QEBAAEBV?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@XZ;class std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> > const & __ptr64 __cdecl TimelineEntry::GetChildren(void)const __ptr64;404782;202391;2
??0?$allocator@I@std@@QEAA@XZ;__cdecl std::allocator<unsigned int>::allocator<unsigned int>(void) __ptr64;202391;202391;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >,struct std::_Iterator_base0> & __;202391;202391;1
??$_Get_unwrapped@AEAPEBD@std@@YA@AEAPEBD@Z;__cdecl std::_Get_unwrapped<char const * __ptr64 & __ptr64>(char const * __ptr64 & __ptr64);202391;202391;1
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@std@@QEBAPEAUDataPerFile@FileInclusionTimesExporter@@XZ;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >::_Unwrapped(void)const __ptr64;202391;202391;1
??4?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;??4?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z;202391;202391;1
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@0@AEBV10@@Z;class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > const * __ptr64 __cdecl std::addressof<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > const >(class std::_Tree_val<struct std::_Tree_simple_types<struct ;202391;202391;1
?max_size@?$_Default_allocator_traits@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@SA_KAEBV?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::max_size(class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> const & __ptr64);202391;202391;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::operator--(void) __ptr64;202391;202391;1
??1?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA@XZ;__cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::~Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>(void) __ptr64;202391;202391;1
?deallocate@?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@QEAAXQEAUDataPerFile@FileInclusionTimesExporter@@_K@Z;void __cdecl std::allocator<struct FileInclusionTimesExporter::DataPerFile>::deallocate(struct FileInclusionTimesExporter::DataPerFile * __ptr64 const,unsigned __int64) __ptr64;202391;202391;1
?_Get_first@?$_Compressed_pair@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@2@XZ;class std::allocator<struct FileInclusionTimesExporter::DataPerFile> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct FileInclusionTimesExporter::DataPerFile>,class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> >,1>::_Get_first(void) __ptr64;202391;202391;1
??$iter_swap@PEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@PEAPEBU12@@std@@YAXPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@0@Z;void __cdecl std::iter_swap<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * _;202391;202391;1
?OnStartActivity@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStartAc;202391;202391;1
?__autoclassinit2@?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::__autoclassinit2(unsigned __int64) __ptr64;202391;202391;1
??$forward@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;404782;202391;2
??$move@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;404371;202185;2
??$forward@V?$sub_match@PEBD@std@@@std@@YA$$QEAV?$sub_match@PEBD@0@AEAV10@@Z;??$forward@V?$sub_match@PEBD@std@@@std@@YA$$QEAV?$sub_match@PEBD@0@AEAV10@@Z;201980;201980;1
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > > & __ptr64 __cdecl std::_List_unchecke;201980;201980;1
??1?$tuple@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@XZ;__cdecl std::tuple<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::~tuple<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights;201980;201980;1
??$?0AEAVTimelineEntry@@@?$_Tuple_val@AEAVTimelineEntry@@@std@@QEAA@AEAVTimelineEntry@@@Z;__cdecl std::_Tuple_val<class TimelineEntry & __ptr64>::_Tuple_val<class TimelineEntry & __ptr64><class TimelineEntry & __ptr64>(class TimelineEntry & __ptr64) __ptr64;201980;201980;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > >(void) __ptr64;201980;201980;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThrea;201980;201980;1
??$_Unfancy@D@std@@YAPEADPEAD@Z;char * __ptr64 __cdecl std::_Unfancy<char>(char * __ptr64);2827314;201951;14
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z;??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z;1615432;201929;8
?OnStartActivity@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;1009080;201816;5
?OnEndAnalysis@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnEndAnalysis(void) __ptr64;1008258;201651;5
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ;__cdecl std::_Compressed_pair<class std::allocator<char>,class std::_String_val<struct std::_Simple_types<char> >,1>::~_Compressed_pair<class std::allocator<char>,class std::_String_val<struct std::_Simple_types<char> >,1>(void) __ptr64;2822389;201599;14
??0?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >(void) __ptr64;201570;201570;1
??$destroy@VKeyValue@cxxopts@@@?$_Default_allocator_traits@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@SAXAEAV?$allocator@VKeyValue@cxxopts@@@1@QEAVKeyValue@cxxopts@@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class cxxopts::KeyValue> >::destroy<class cxxopts::KeyValue>(class std::allocator<class cxxopts::KeyValue> & __ptr64,class cxxopts::KeyValue * __ptr64 const);201570;201570;1
?parse@?$abstract_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;virtual void __cdecl cxxopts::values::abstract_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::parse(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;201570;201570;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct Pro;201570;201570;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@XZ;struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;201570;201570;1
??1?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@XZ;__cdecl std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >::~pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >(void) __ptr64;201570;201570;1
?_Get_first@?$_Compressed_pair@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@2@XZ;class std::allocator<struct FileInclusionTimesExporter::DataPerFile> const & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct FileInclusionTimesExporter::DataPerFile>,class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> >,1>::_Get_first(void)const __ptr64;201570;201570;1
?OnStopActivity@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;1007028;201405;5
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@QEAV10@@Z;void __cdecl std::_Destroy_range<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64,class std::_List_unchecked_ite;201159;201159;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits;201159;201159;1
??$addressof@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64);201159;201159;1
??0?$_Bt_state_t@PEBD@std@@QEAA@XZ;__cdecl std::_Bt_state_t<char const * __ptr64>::_Bt_state_t<char const * __ptr64>(void) __ptr64;201159;201159;1
??$_Get_unwrapped@AEBQEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@YA@AEBQEAU_Grp_t@?$_Tgt_state_t@PEBD@0@@Z;__cdecl std::_Get_unwrapped<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const & __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const & __ptr64);201159;201159;1
??$addressof@$$CBU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@YAPEBU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@0@AEBU10@@Z;struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> const * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> const >(struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> const & __ptr64);201159;201159;1
??C?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAPEAU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@XZ;struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator->(void)const __ptr64;201159;201159;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> > const & __ptr64);201159;201159;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@2@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::shared_ptr<class cxxopts::OptionDetails>,class std::_Uhash_compare<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char>;201159;201159;1
??__Es_defaultOutputPathFileCompilations@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultOutputPathFileCompilations''(void);201159;201159;1
??$addressof@PEAU?$_Sequence@D@std@@@std@@YAPEAPEAU?$_Sequence@D@0@AEAPEAU10@@Z;struct std::_Sequence<char> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_Sequence<char> * __ptr64>(struct std::_Sequence<char> * __ptr64 & __ptr64);201159;201159;1
?OnSimpleEvent@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;1005386;201077;5
??$_Unfancy@PEAVTimelineEntry@@@std@@YAPEAPEAVTimelineEntry@@PEAPEAV1@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Unfancy<class TimelineEntry * __ptr64>(class TimelineEntry * __ptr64 * __ptr64);401908;200954;2
??$forward@AEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class TimelineEntry>,void * __ptr64> * __ptr64 & __ptr64);200749;200749;1
?ThreadId@Event@BuildInsights@Cpp@Microsoft@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::ThreadId(void)const __ptr64;200749;200749;1
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::~_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >(void) __ptr64;200749;200749;1
??$addressof@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@AEAV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > * __ptr64 __cdecl std::addressof<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > >(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simp;200749;200749;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0>::operator--(void) __ptr64;200749;200749;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@0@AEAV10@@Z;200749;200749;1
??1?$_Regex_traits@D@std@@QEAA@XZ;__cdecl std::_Regex_traits<char>::~_Regex_traits<char>(void) __ptr64;200749;200749;1
??$forward@AEBVEventStack@BuildInsights@Cpp@Microsoft@@@std@@YAAEBVEventStack@BuildInsights@Cpp@Microsoft@@AEBV1234@@Z;class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64 __cdecl std::forward<class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64>(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64);601836;200612;3
?__autoclassinit2@_Node_end_group@std@@QEAAX_K@Z;void __cdecl std::_Node_end_group::__autoclassinit2(unsigned __int64) __ptr64;200338;200338;1
??$forward@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@AEAV10@@Z;200338;200338;1
??$move@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AEAV10@@Z;??$move@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AEAV10@@Z;200338;200338;1
??1KeyValue@cxxopts@@QEAA@XZ;__cdecl cxxopts::KeyValue::~KeyValue(void) __ptr64;200338;200338;1
?do_always_noconv@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBA_NXZ;virtual bool __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_always_noconv(void)const __ptr64;200338;200338;1
??$?0UHelpOptionDetails@cxxopts@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UHelpOptionDetails@cxxopts@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct cxxopts::HelpOptionDetails>(class std::allocator<struct cxxopts::HelpOptionDetails> const & __ptr64) __ptr64;200338;200338;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@AEAV10@@Z;200338;200338;1
??$move@AEAPEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@AEAPEAV12345@@Z;??$move@AEAPEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@AEAPEAV12345@@Z;200338;200338;1
??0?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@1234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal;200338;200338;1
?parse_value@values@cxxopts@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV34@@Z;void __cdecl cxxopts::values::parse_value(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);200338;200338;1
?max_size@?$_Default_allocator_traits@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@SA_KAEBV?$allocator@UHelpOptionDetails@cxxopts@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct cxxopts::HelpOptionDetails> >::max_size(class std::allocator<struct cxxopts::HelpOptionDetails> const & __ptr64);200338;200338;1
??$forward@V?$allocator@PEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$allocator@PEAVTimelineEntry@@@0@AEAV10@@Z;??$forward@V?$allocator@PEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$allocator@PEAVTimelineEntry@@@0@AEAV10@@Z;200338;200338;1
?Sign@Double@internal@rapidjson@@QEBA_NXZ;bool __cdecl rapidjson::internal::Double::Sign(void)const __ptr64;200338;200338;1
??$?0U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> > const & __ptr64) __ptr64;200338;200338;1
??$forward@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@0@AEAPEAU10@@Z;199928;199928;1
??$?0PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64>(class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> const & __ptr64) __ptr64;199928;199928;1
??0?$_Cmp_icase@V?$regex_traits@D@std@@@std@@QEAA@AEBV?$regex_traits@D@1@@Z;__cdecl std::_Cmp_icase<class std::regex_traits<char> >::_Cmp_icase<class std::regex_traits<char> >(class std::regex_traits<char> const & __ptr64) __ptr64;199928;199928;1
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > & __ptr64 __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::operator++(void) __ptr64;199928;199928;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >::__autoclassinit2(unsigned __int64) __ptr64;199928;199928;1
??1?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::~_Vb_reference<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(void) __ptr64;199928;199928;1
?do_encoding@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_encoding(void)const __ptr64;199928;199928;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@SA_KAEBV?$allocator@V?$sub_match@PEBD@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::sub_match<char const * __ptr64> > >::max_size(class std::allocator<class std::sub_match<char const * __ptr64> > const & __ptr64);199928;199928;1
??$_Destroy_range@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@YAXPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@QEAU120@AEAV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@0@@Z;void __cdecl std::_Destroy_range<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 const,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> & __ptr64);199928;199928;1
??0?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAA@AEBV?$GenericMemberIterator@$0A@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@@Z;__cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >(class rapidjson::GenericMemberIterator<0,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > const & __ptr64) __ptr64;199928;199928;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FunctionCompilationsExporter::DataPerFunction> > >(void) __ptr64;199928;199928;1
?Path@FrontEndFile@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::FrontEndFile::Path(void)const __ptr64;399445;199722;2
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z;??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z;2995632;199708;15
??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z;class std::basic_filebuf<char,struct std::char_traits<char> > * __ptr64 __cdecl std::addressof<class std::basic_filebuf<char,struct std::char_traits<char> > >(class std::basic_filebuf<char,struct std::char_traits<char> > & __ptr64);998407;199681;5
?max_size@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::max_size(class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> const & __ptr64);199517;199517;1
??0ParseResult@rapidjson@@QEAA@XZ;__cdecl rapidjson::ParseResult::ParseResult(void) __ptr64;199517;199517;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char;199517;199517;1
??$get@$0A@AEAVTimelineEntry@@@std@@YAAEAVTimelineEntry@@$$QEAV?$tuple@AEAVTimelineEntry@@@0@@Z;??$get@$0A@AEAVTimelineEntry@@@std@@YAAEAVTimelineEntry@@$$QEAV?$tuple@AEAVTimelineEntry@@@0@@Z;199517;199517;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >,bool>(void) __ptr64;199517;199517;1
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z;void __cdecl std::allocator<char>::deallocate(char * __ptr64 const,unsigned __int64) __ptr64;2790778;199341;14
??$_Refancy@PEAPEAVTimelineEntry@@$0A@@std@@YAPEAPEAVTimelineEntry@@PEAPEAV1@@Z;class TimelineEntry * __ptr64 * __ptr64 __cdecl std::_Refancy<class TimelineEntry * __ptr64 * __ptr64,0>(class TimelineEntry * __ptr64 * __ptr64);398624;199312;2
??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z;char * __ptr64 __cdecl std::_Refancy<char * __ptr64,0>(char * __ptr64);199107;199107;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >(void) __ptr64;199107;199107;1
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@1@XZ;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> const & __ptr64 __cdecl std::_Tree_unchecked_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;199107;199107;1
??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@AEAV10@@Z;??$forward@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@AEAV10@@Z;199107;199107;1
??$forward@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z;??$forward@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z;199107;199107;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > * __ptr64 const & __ptr64);199107;199107;1
??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;199107;199107;1
??$forward@AEAPEAUDataPerFile@FileInclusionTimesExporter@@@std@@YAAEAPEAUDataPerFile@FileInclusionTimesExporter@@AEAPEAU12@@Z;struct FileInclusionTimesExporter::DataPerFile * __ptr64 & __ptr64 __cdecl std::forward<struct FileInclusionTimesExporter::DataPerFile * __ptr64 & __ptr64>(struct FileInclusionTimesExporter::DataPerFile * __ptr64 & __ptr64);199107;199107;1
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_bas;199107;199107;1
?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QEAAAEAV?$allocator@K@2@XZ;class std::allocator<unsigned long> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<unsigned long>,class std::_Vector_val<struct std::_Simple_types<unsigned long> >,1>::_Get_first(void) __ptr64;199107;199107;1
??0?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t>(void) __ptr64;198696;198696;1
??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEBVSymbolName@SimpleEvents@345@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;198696;198696;1
??$_Unfancy@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@YAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@PEAU120@@Z;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Unfancy<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64);198696;198696;1
?EventName@Event@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::EventName(void)const __ptr64;198696;198696;1
?__autoclassinit2@?$_Bt_state_t@PEBD@std@@QEAAX_K@Z;void __cdecl std::_Bt_state_t<char const * __ptr64>::__autoclassinit2(unsigned __int64) __ptr64;198696;198696;1
??$move@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@0@AEAV10@@Z;??$move@AEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@0@AEAV10@@Z;198696;198696;1
?OnBeginAnalysisPass@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAn;198696;198696;1
?_Xlength@?$vector@V?$sub_match@PEBD@std@@V?$allocator@V?$sub_match@PEBD@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<class std::sub_match<char const * __ptr64>,class std::allocator<class std::sub_match<char const * __ptr64> > >::_Xlength(void);198696;198696;1
?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ;struct _Mbstatet __cdecl std::fpos<struct _Mbstatet>::state(void)const __ptr64;993070;198614;5
??$forward@AEB_N@std@@YAAEB_NAEB_N@Z;bool const & __ptr64 __cdecl std::forward<bool const & __ptr64>(bool const & __ptr64);1191355;198559;6
??$forward@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEBV10@@Z;??$forward@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEBV10@@Z;396981;198490;2
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::opera;198286;198286;1
??0Double@internal@rapidjson@@QEAA@N@Z;__cdecl rapidjson::internal::Double::Double(double) __ptr64;198286;198286;1
??$get@$0A@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YAAEBV?$shared_ptr@VOptionDetails@cxxopts@@@0@$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@@Z;??$get@$0A@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YAAEBV?$shared_ptr@VOptionDetails@cxxopts@@@0@$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@@Z;198286;198286;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base12>(void) __ptr64;198286;198286;1
?__autoclassinit2@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UHelpGroupDetails@cxxopts@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Tree_const_iterator<class std::_Tree_val<struct std::_Tree_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct cxxopts::HelpGroupDetails> > > >::__autoclassinit2(unsigned __int64) __ptr64;198286;198286;1
?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z;virtual void * __ptr64 __cdecl std::_Ref_count_base::_Get_deleter(class type_info const & __ptr64)const __ptr64;198286;198286;1
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::addressof<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);396160;198080;2
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<cl;197875;197875;1
??$_Unfancy@UDataPerFunction@FunctionCompilationsExporter@@@std@@YAPEAUDataPerFunction@FunctionCompilationsExporter@@PEAU12@@Z;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::_Unfancy<struct FunctionCompilationsExporter::DataPerFunction>(struct FunctionCompilationsExporter::DataPerFunction * __ptr64);197875;197875;1
??$forward@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@YA$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@AEAV10@@Z;??$forward@V?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@@std@@YA$$QEAV?$allocator@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@0@AEAV10@@Z;395750;197875;2
??0?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >(void) __ptr64;197875;197875;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAAPEAUDataPerFile@FileInclusionTimesExporter@@XZ;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Release(void) __ptr64;197875;197875;1
??$?0U_Grp_t@?$_Tgt_state_t@PEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>(class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64) __ptr64;197875;197875;1
??$move@AEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;197875;197875;1
??E?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator++(void) __ptr64;197875;197875;1
??$forward@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@AEAPEAV1234@@Z;??$forward@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@AEAPEAV1234@@Z;197465;197465;1
??$move@AEAV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z;197465;197465;1
??$move@AEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z;??$move@AEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z;197465;197465;1
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ;class std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0> & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0>::operator++(void) __ptr64;197465;197465;1
??$forward@AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64 __cdecl std::forward<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64;197465;197465;1
??$_Destroy_in_place@PEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64>(struct std::_List_node<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,void * __ptr64> * __ptr64 & __ptr64);394929;197464;2
??$move@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@VOptionDetails@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@VOptionDetails@cxxopts@@@0@AEAV10@@Z;197054;197054;1
??$forward@AEBV?$allocator@I@std@@@std@@YAAEBV?$allocator@I@0@AEBV10@@Z;class std::allocator<unsigned int> const & __ptr64 __cdecl std::forward<class std::allocator<unsigned int> const & __ptr64>(class std::allocator<unsigned int> const & __ptr64);197054;197054;1
??$forward@AEAV?$shared_ptr@$$CBVValue@cxxopts@@@std@@@std@@YAAEAV?$shared_ptr@$$CBVValue@cxxopts@@@0@AEAV10@@Z;class std::shared_ptr<class cxxopts::Value const > & __ptr64 __cdecl std::forward<class std::shared_ptr<class cxxopts::Value const > & __ptr64>(class std::shared_ptr<class cxxopts::Value const > & __ptr64);197054;197054;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KVTimelineEntry@@@1@XZ;struct std::pair<unsigned __int64 const ,class TimelineEntry> & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::operator*(void)const __ptr64;197054;197054;1
??1?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAA@XZ;__cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::~PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>(void) __ptr64;197054;197054;1
??__Es_defaultOutputPathBuildTimeline@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic initializer for 's_defaultOutputPathBuildTimeline''(void);197054;197054;1
??$forward@AEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > const & __ptr64>(class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > const & __ptr64);197054;197054;1
??$move@AEAV?$tuple@$$QEAU?$pair@KK@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAU?$pair@KK@std@@@0@AEAV10@@Z;??$move@AEAV?$tuple@$$QEAU?$pair@KK@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAU?$pair@KK@std@@@0@AEAV10@@Z;197054;197054;1
??1_Node_back@std@@UEAA@XZ;virtual __cdecl std::_Node_back::~_Node_back(void) __ptr64;197054;197054;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@XZ;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Release(void) __ptr64;197054;197054;1
??$?0V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > > const & __ptr64) __ptr64;197054;197054;1
?__autoclassinit2@_Node_capture@std@@QEAAX_K@Z;void __cdecl std::_Node_capture::__autoclassinit2(unsigned __int64) __ptr64;197054;197054;1
?deallocate@?$allocator@UHelpOptionDetails@cxxopts@@@std@@QEAAXQEAUHelpOptionDetails@cxxopts@@_K@Z;void __cdecl std::allocator<struct cxxopts::HelpOptionDetails>::deallocate(struct cxxopts::HelpOptionDetails * __ptr64 const,unsigned __int64) __ptr64;196643;196643;1
??$?0U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > const & __ptr64) __ptr64;196643;196643;1
??$?0$0BA@@?$GenericStringRef@D@rapidjson@@QEAA@AEAY0BA@$$CBD@Z;__cdecl rapidjson::GenericStringRef<char>::GenericStringRef<char><16>(char const (& __ptr64)[16]) __ptr64;196643;196643;1
?get@?$_Ptr_base@$$CBVValue@cxxopts@@@std@@IEBAPEBVValue@cxxopts@@XZ;class cxxopts::Value const * __ptr64 __cdecl std::_Ptr_base<class cxxopts::Value const >::get(void)const __ptr64;196643;196643;1
??$addressof@V?$standard_value@_N@values@cxxopts@@@std@@YAPEAV?$standard_value@_N@values@cxxopts@@AEAV123@@Z;class cxxopts::values::standard_value<bool> * __ptr64 __cdecl std::addressof<class cxxopts::values::standard_value<bool> >(class cxxopts::values::standard_value<bool> & __ptr64);196643;196643;1
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@0@AEAU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > * __ptr64 __cdecl std::addressof<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > >(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxx;196643;196643;1
??0?$allocator@VKeyValue@cxxopts@@@std@@QEAA@XZ;__cdecl std::allocator<class cxxopts::KeyValue>::allocator<class cxxopts::KeyValue>(void) __ptr64;196643;196643;1
??$move@AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;??$move@AEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@AEAPEAU10@@Z;196643;196643;1
??$_Unfancy@UDataPerFile@FileInclusionTimesExporter@@@std@@YAPEAUDataPerFile@FileInclusionTimesExporter@@PEAU12@@Z;struct FileInclusionTimesExporter::DataPerFile * __ptr64 __cdecl std::_Unfancy<struct FileInclusionTimesExporter::DataPerFile>(struct FileInclusionTimesExporter::DataPerFile * __ptr64);196643;196643;1
??$forward@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$forward@VActivity@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVActivity@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;196643;196643;1
??1?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::~_Vb_iter_base<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(void) __ptr64;196233;196233;1
?__autoclassinit2@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::__autoclassinit2(unsigned __int64) __ptr64;196233;196233;1
??E?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAAEAV01@XZ;class rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > & __ptr64 __cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator++(void) __ptr64;196233;196233;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >(void) __ptr64;196233;196233;1
??0?$_Cmp_icase@V?$_Regex_traits@D@std@@@std@@QEAA@AEBV?$_Regex_traits@D@1@@Z;__cdecl std::_Cmp_icase<class std::_Regex_traits<char> >::_Cmp_icase<class std::_Regex_traits<char> >(class std::_Regex_traits<char> const & __ptr64) __ptr64;196233;196233;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char;196233;196233;1
??$forward@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEBU10@@Z;struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64 __cdecl std::forward<struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64>(struct std::less<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);196233;196233;1
??1?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@QEAA@XZ;__cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::~_Parser<char const * __ptr64,char,class std::regex_traits<char> >(void) __ptr64;196233;196233;1
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@SA_KAEBV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::max_size(class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> const & __ptr64);195822;195822;1
??$addressof@D@std@@YAPEADAEAD@Z;char * __ptr64 __cdecl std::addressof<char>(char & __ptr64);195822;195822;1
??$addressof@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@0@AEAV10@@Z;class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > * __ptr64 __cdecl std::addressof<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >(class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > & __ptr64);195822;195822;1
?OnEndAnalysis@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnal;195822;195822;1
??$addressof@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@YAPEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > >(struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > & __ptr64);195822;195822;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::__autoclassinit2(unsigned __int64) __ptr64;195822;195822;1
??$forward@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@YA$$QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@AEAPEBU12@@Z;??$forward@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@YA$$QEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@AEAPEBU12@@Z;195822;195822;1
??$destroy@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@1@QEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::destroy<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > >(class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > & __ptr64,class std::sub_match<class std::_String_co;195822;195822;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 & __ptr64);195822;195822;1
??$forward@I@std@@YA$$QEAIAEAI@Z;??$forward@I@std@@YA$$QEAIAEAI@Z;391644;195822;2
?_Get_first@?$_Compressed_pair@V?$allocator@U_Loop_vals_t@std@@@std@@V?$_Vector_val@U?$_Simple_types@U_Loop_vals_t@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U_Loop_vals_t@std@@@2@XZ;class std::allocator<struct std::_Loop_vals_t> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<struct std::_Loop_vals_t>,class std::_Vector_val<struct std::_Simple_types<struct std::_Loop_vals_t> >,1>::_Get_first(void) __ptr64;195822;195822;1
?parse@?$abstract_value@_N@values@cxxopts@@UEBAXXZ;virtual void __cdecl cxxopts::values::abstract_value<bool>::parse(void)const __ptr64;195822;195822;1
??$_Unfancy@V?$sub_match@PEBD@std@@@std@@YAPEAV?$sub_match@PEBD@0@PEAV10@@Z;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::_Unfancy<class std::sub_match<char const * __ptr64> >(class std::sub_match<char const * __ptr64> * __ptr64);195822;195822;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::all;195822;195822;1
??__FLQUOTE@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic atexit destructor for 'LQUOTE''(void);195412;195412;1
?get@?$_Ptr_base@VOptionDetails@cxxopts@@@std@@IEBAPEAVOptionDetails@cxxopts@@XZ;class cxxopts::OptionDetails * __ptr64 __cdecl std::_Ptr_base<class cxxopts::OptionDetails>::get(void)const __ptr64;195412;195412;1
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ;class std::allocator<char> & __ptr64 __cdecl std::_Compressed_pair<class std::allocator<char>,class std::_Vector_val<struct std::_Simple_types<char> >,1>::_Get_first(void) __ptr64;195412;195412;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > >::max_size(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> > const & __ptr64);195412;195412;1
??$_Atomic_address_as@$$CBJ$$CCJ@std@@YAPEDJAECJ@Z;long const volatile * __ptr64 __cdecl std::_Atomic_address_as<long const ,long volatile >(long volatile & __ptr64);195412;195412;1
?deallocate@?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@QEAAXQEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@_K@Z;void __cdecl std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>::deallocate(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const,unsigned __int64) __ptr64;195412;195412;1
??$forward@V?$tuple@AEAPEBVTimelineEntry@@AEAK@std@@@std@@YA$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@0@AEAV10@@Z;??$forward@V?$tuple@AEAPEBVTimelineEntry@@AEAK@std@@@std@@YA$$QEAV?$tuple@AEAPEBVTimelineEntry@@AEAK@0@AEAV10@@Z;195412;195412;1
?OnEndAnalysisPass@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnal;195001;195001;1
??$move@AEAVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;??$move@AEAVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@AEAV12345@@Z;195001;195001;1
??0?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >(void) __ptr64;195001;195001;1
??$distance@PEBD@std@@YA_JPEBD0@Z;__int64 __cdecl std::distance<char const * __ptr64>(char const * __ptr64,char const * __ptr64);195001;195001;1
??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::forward<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64);195001;195001;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;195001;195001;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > >::max_size(class std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > > > > const & __ptr64);195001;195001;1
?WriteStartArray@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NXZ;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteStartArray(void) __ptr64;195001;195001;1
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z;char * __ptr64 const & __ptr64 __cdecl std::forward<char * __ptr64 const & __ptr64>(char * __ptr64 const & __ptr64);2532965;194843;13
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::__autoclassinit2(unsigned __int64) __ptr64;194591;194591;1
?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::max_size(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);194591;194591;1
??$?0U?$pair@$$CB_KVTimelineEntry@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@1@@Z;__cdecl std::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > >::allocator<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > ><struct std::pair<unsigned __int64 const ,class TimelineEntry> >(class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> > const & __p;194591;194591;1
?OnBeginAnalysis@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAn;194591;194591;1
?push_back@?$vector@_KV?$allocator@_K@std@@@std@@QEAAXAEB_K@Z;void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::push_back(unsigned __int64 const & __ptr64) __ptr64;194591;194591;1
??$_Unfancy@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@YAPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@@Z;struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 __cdecl std::_Unfancy<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64>(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64);194180;194180;1
??0EventStack@BuildInsights@Cpp@Microsoft@@QEAA@AEBUEVENT_COLLECTION_DATA_TAG@123@@Z;__cdecl Microsoft::Cpp::BuildInsights::EventStack::EventStack(struct Microsoft::Cpp::BuildInsights::EVENT_COLLECTION_DATA_TAG const & __ptr64) __ptr64;194180;194180;1
?_Xlength@?$vector@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@3@@std@@CAXXZ;static void __cdecl std::vector<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t,class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::_Xlength(void);194180;194180;1
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@QEAA@XZ;__cdecl std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>::~pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData>(void) __ptr64;194180;194180;1
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > & __ptr64 __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::operator*(void)const __ptr64;193770;193770;1
??$_Get_unwrapped_n@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_J@std@@YA@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@_J@Z;__cdecl std::_Get_unwrapped_n<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64,__int64>(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64,__int64);193770;193770;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >(void) __ptr64;193770;193770;1
??$_Pass_fn@V<lambda_a2eef00bb02357da46910e5eb8f40a83>@@$0A@@std@@YA?AV<lambda_a2eef00bb02357da46910e5eb8f40a83>@@V1@@Z;class <lambda_a2eef00bb02357da46910e5eb8f40a83> __cdecl std::_Pass_fn<class <lambda_a2eef00bb02357da46910e5eb8f40a83>,0>(class <lambda_a2eef00bb02357da46910e5eb8f40a83>);193770;193770;1
??$?0_N@?$allocator@I@std@@QEAA@AEBV?$allocator@_N@1@@Z;__cdecl std::allocator<unsigned int>::allocator<unsigned int><bool>(class std::allocator<bool> const & __ptr64) __ptr64;193770;193770;1
??0?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@QEAA@XZ;__cdecl std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >(void) __ptr64;193770;193770;1
??1?$_Tuple_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ;__cdecl std::_Tuple_val<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~_Tuple_val<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;193770;193770;1
??$move@AEAPEA_N@std@@YA$$QEAPEA_NAEAPEA_N@Z;??$move@AEAPEA_N@std@@YA$$QEAPEA_NAEAPEA_N@Z;193770;193770;1
?parse@?$abstract_value@_N@values@cxxopts@@UEBAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;virtual void __cdecl cxxopts::values::abstract_value<bool>::parse(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64)const __ptr64;193359;193359;1
??$addressof@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@YAPEAU?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> >(struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> & __ptr64);193359;193359;1
??$addressof@_N@std@@YAPEA_NAEA_N@Z;bool * __ptr64 __cdecl std::addressof<bool>(bool & __ptr64);193359;193359;1
??1?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,bool>::~pair<class std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >,bool>(void) __ptr64;193359;193359;1
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@PEAX@2@_K@Z;void __cdecl std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> >::deallocate(struct std::_List_node<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset>,void * __ptr64> * __ptr64 const,unsigned __int64) __ptr64;193359;193359;1
??$forward@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@AEAV10@@Z;??$forward@V?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@std@@@std@@YA$$QEAV?$tuple@AEBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@@0@AEAV10@@Z;193359;193359;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::__autoclassinit2(unsigned __int64) __ptr64;193359;193359;1
?OnStartActivity@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnStartActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64) __ptr64;966795;193359;5
??$forward@AEA_K@std@@YAAEA_KAEA_K@Z;unsigned __int64 & __ptr64 __cdecl std::forward<unsigned __int64 & __ptr64>(unsigned __int64 & __ptr64);386308;193154;2
?max_size@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SA_KAEBV?$allocator@_K@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<unsigned __int64> >::max_size(class std::allocator<unsigned __int64> const & __ptr64);192949;192949;1
??D?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEBAAEAVIAnalyzer@234@XZ;class Microsoft::Cpp::BuildInsights::IAnalyzer & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>::operator*(void)const __ptr64;192949;192949;1
??1_Node_endif@std@@UEAA@XZ;virtual __cdecl std::_Node_endif::~_Node_endif(void) __ptr64;192949;192949;1
?_Xlength@?$vector@UDataPerFunction@FunctionCompilationsExporter@@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@CAXXZ;static void __cdecl std::vector<struct FunctionCompilationsExporter::DataPerFunction,class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Xlength(void);192949;192949;1
??1?$pair@$$CB_KVTimelineEntry@@@std@@QEAA@XZ;__cdecl std::pair<unsigned __int64 const ,class TimelineEntry>::~pair<unsigned __int64 const ,class TimelineEntry>(void) __ptr64;192949;192949;1
?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ;void __cdecl std::vector<bool,class std::allocator<bool> >::_Xlen(void)const __ptr64;192949;192949;1
??$move@AEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@AEAPEAV1234@@Z;??$move@AEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YA$$QEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@AEAPEAV1234@@Z;192949;192949;1
??$iter_swap@PEAUDataPerFile@FileInclusionTimesExporter@@PEAU12@@std@@YAXPEAUDataPerFile@FileInclusionTimesExporter@@0@Z;void __cdecl std::iter_swap<struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64>(struct FileInclusionTimesExporter::DataPerFile * __ptr64,struct FileInclusionTimesExporter::DataPerFile * __ptr64);192949;192949;1
??$_Get_unwrapped@AEBQEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@YA@AEBQEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z;__cdecl std::_Get_unwrapped<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const & __ptr64>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > * __ptr64 const & __ptr64);385897;192948;2
??$forward@AEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@0@AEBV10@@Z;class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > const & __ptr64 __cdecl std::forward<class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > const & __ptr64>(class std::allocator<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > const & __ptr64);192538;192538;1
??$forward@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@@Z;??$forward@PEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@U?$pair@$$CB_KVTimelineEntry@@@std@@PEAX@0@AEAPEAU10@@Z;192538;192538;1
??$addressof@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@YAPEAU?$pair@$$CB_KVTimelineEntry@@@0@AEAU10@@Z;struct std::pair<unsigned __int64 const ,class TimelineEntry> * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,class TimelineEntry> >(struct std::pair<unsigned __int64 const ,class TimelineEntry> & __ptr64);192538;192538;1
??0DiyFp@internal@rapidjson@@QEAA@_KH@Z;__cdecl rapidjson::internal::DiyFp::DiyFp(unsigned __int64,int) __ptr64;192538;192538;1
??0?$allocator@K@std@@QEAA@XZ;__cdecl std::allocator<unsigned long>::allocator<unsigned long>(void) __ptr64;192538;192538;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Release(void) __ptr64;192538;192538;1
?do_max_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ;virtual int __cdecl std::codecvt_utf8<wchar_t,1114111,0>::do_max_length(void)const __ptr64;192538;192538;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KU?$pair@KK@std@@@1@XZ;struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;192538;192538;1
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@0@AEBV10@@Z;class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > const * __ptr64 __cdecl std::addressof<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > const >(class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > const & __ptr64);192538;192538;1
??$forward@AEBVTraceInfo@BuildInsights@Cpp@Microsoft@@@std@@YAAEBVTraceInfo@BuildInsights@Cpp@Microsoft@@AEBV1234@@Z;class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64 __cdecl std::forward<class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64>(class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64);192538;192538;1
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ;__cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::~_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >(void) __ptr64;192538;192538;1
??1invalid_option_format_error@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::invalid_option_format_error::~invalid_option_format_error(void) __ptr64;192538;192538;1
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@PEAX@0@@Z;void __cdecl std::_Destroy_in_place<struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue>,void * __ptr64> * __ptr64 & __ptr64);192538;192538;1
??$?0U_Loop_vals_t@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U_Loop_vals_t@std@@@1@@Z;__cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><struct std::_Loop_vals_t>(class std::allocator<struct std::_Loop_vals_t> const & __ptr64) __ptr64;192538;192538;1
??1?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::~_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >(void) __ptr64;192538;192538;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base12>(void) __ptr64;192128;192128;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >(void) __ptr64;192128;192128;1
??$_Unfancy@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@std@@YAPEAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@0@PEAPEBU10@@Z;struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64 __cdecl std::_Unfancy<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilationData> const * __ptr64 * __ptr64;192128;192128;1
?max_size@?$_Default_allocator_traits@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@SA_KAEBV?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::max_size(class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> const & __ptr64);192128;192128;1
?Peek@?$GenericStringStream@U?$UTF8@D@rapidjson@@@rapidjson@@QEBADXZ;char __cdecl rapidjson::GenericStringStream<struct rapidjson::UTF8<char> >::Peek(void)const __ptr64;192128;192128;1
?_Xlength@?$vector@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Xlength(void);192128;192128;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >(void) __ptr64;192128;192128;1
??$forward@AEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@@std@@YAAEAV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@AEAV120@@Z;class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > & __ptr64 __cdecl std::forward<class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > & __ptr64>(class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > & __ptr64);383845;191922;2
??$forward@W4_Node_type@std@@@std@@YA$$QEAW4_Node_type@0@AEAW410@@Z;??$forward@W4_Node_type@std@@@std@@YA$$QEAW4_Node_type@0@AEAW410@@Z;191717;191717;1
??0?$allocator@U_Loop_vals_t@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::_Loop_vals_t>::allocator<struct std::_Loop_vals_t>(void) __ptr64;191717;191717;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA?AV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@AEBV32@@Z;static class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > __cdecl std::_Default_allocator_traits<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::select_on_container_copy_construction(class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const & __ptr64);191717;191717;1
?__autoclassinit2@?$_Bt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Bt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;191717;191717;1
?_Xlength@?$vector@U_Loop_vals_t@std@@V?$allocator@U_Loop_vals_t@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<struct std::_Loop_vals_t,class std::allocator<struct std::_Loop_vals_t> >::_Xlength(void);191717;191717;1
?GetElementsPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEBAPEAV12@XZ;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetElementsPointer(void)const __ptr64;191717;191717;1
?max_size@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::max_size(class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64);191717;191717;1
??0?$tuple@$$V@std@@QEAA@XZ;??0?$tuple@$$V@std@@QEAA@XZ;191717;191717;1
??$move@AEAV?$allocator@VKeyValue@cxxopts@@@std@@@std@@YA$$QEAV?$allocator@VKeyValue@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$allocator@VKeyValue@cxxopts@@@std@@@std@@YA$$QEAV?$allocator@VKeyValue@cxxopts@@@0@AEAV10@@Z;191307;191307;1
?End@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAPEBV12@XZ;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > const * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::End(void)const __ptr64;191307;191307;1
??$iter_swap@PEAUDataPerFunction@FunctionCompilationsExporter@@PEAU12@@std@@YAXPEAUDataPerFunction@FunctionCompilationsExporter@@0@Z;void __cdecl std::iter_swap<struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64>(struct FunctionCompilationsExporter::DataPerFunction * __ptr64,struct FunctionCompilationsExporter::DataPerFunction * __ptr64);191307;191307;1
??0?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEAA@PEAVIAnalyzer@234@@Z;__cdecl Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64) __ptr64;191307;191307;1
??$forward@PEAV_Node_assert@std@@@std@@YA$$QEAPEAV_Node_assert@0@AEAPEAV10@@Z;??$forward@PEAV_Node_assert@std@@@std@@YA$$QEAPEAV_Node_assert@0@AEAPEAV10@@Z;191307;191307;1
?__autoclassinit2@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >::__autoclassinit2(unsigned __int64) __ptr64;191307;191307;1
?_Error@?$_Parser@PEBDDV?$regex_traits@D@std@@@std@@AEAAXW4error_type@regex_constants@2@@Z;void __cdecl std::_Parser<char const * __ptr64,char,class std::regex_traits<char> >::_Error(enum std::regex_constants::error_type) __ptr64;191307;191307;1
?__autoclassinit2@_Node_end_rep@std@@QEAAX_K@Z;void __cdecl std::_Node_end_rep::__autoclassinit2(unsigned __int64) __ptr64;191307;191307;1
?GetSize@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEBA_KXZ;unsigned __int64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::GetSize(void)const __ptr64;191307;191307;1
??$distance@PEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@YA_JPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@0@Z;__int64 __cdecl std::distance<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64,struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64);191307;191307;1
??1?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void) __ptr64;190896;190896;1
?_Xlength@?$vector@UDataPerFile@FileInclusionTimesExporter@@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@CAXXZ;static void __cdecl std::vector<struct FileInclusionTimesExporter::DataPerFile,class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::_Xlength(void);190896;190896;1
?Begin@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAPEBV12@XZ;class rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > const * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::Begin(void)const __ptr64;190896;190896;1
??B?$GenericStringRef@D@rapidjson@@QEBAPEBDXZ;__cdecl rapidjson::GenericStringRef<char>::operator char const * __ptr64(void)const __ptr64;190896;190896;1
??$_Unfancy@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YAPEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@PEAV12345@@Z;class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 __cdecl std::_Unfancy<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64);190896;190896;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >::__autoclassinit2(unsigned __int64) __ptr64;190896;190896;1
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ;__cdecl std::_Compressed_pair<class std::allocator<wchar_t>,class std::_String_val<struct std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<class std::allocator<wchar_t>,class std::_String_val<struct std::_Simple_types<wchar_t> >,1>(void) __ptr64;190896;190896;1
?__autoclassinit2@?$unique_ptr@V_Node_assert@std@@U?$default_delete@V_Node_assert@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::unique_ptr<class std::_Node_assert,struct std::default_delete<class std::_Node_assert> >::__autoclassinit2(unsigned __int64) __ptr64;190896;190896;1
?OnTraceInfo@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVTraceInfo@234@@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnTraceInfo(class Microsoft::Cpp::BuildInsights::TraceInfo const & __ptr64) __ptr64;953660;190732;5
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z;static class std::allocator<char> __cdecl std::_Default_allocator_traits<class std::allocator<char> >::select_on_container_copy_construction(class std::allocator<char> const & __ptr64);1143734;190622;6
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;190486;190486;1
??1?$_Bt_state_t@PEBD@std@@QEAA@XZ;__cdecl std::_Bt_state_t<char const * __ptr64>::~_Bt_state_t<char const * __ptr64>(void) __ptr64;190486;190486;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@2@XZ;class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::_Release(void) __ptr64;190486;190486;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > > >::__autoclassinit2(unsigned __i;190486;190486;1
??$move@AEAV?$shared_ptr@_N@std@@@std@@YA$$QEAV?$shared_ptr@_N@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@_N@std@@@std@@YA$$QEAV?$shared_ptr@_N@0@AEAV10@@Z;190486;190486;1
??$addressof@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@YAPEAV?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@AEAV123@@Z;class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 __cdecl std::addressof<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __ptr64);190486;190486;1
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z;char * __ptr64 * __ptr64 __cdecl std::addressof<char * __ptr64>(char * __ptr64 & __ptr64);2472616;190201;13
?stringLength@cxxopts@@YA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z;unsigned __int64 __cdecl cxxopts::stringLength(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64);190075;190075;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAPEAV?$sub_match@PEBD@2@XZ;class std::sub_match<char const * __ptr64> * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<char const * __ptr64> > >::_Release(void) __ptr64;190075;190075;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> > >(void) __ptr64;190075;190075;1
??0_Clear_guard@?$_Hash@V?$_Umap_traits@_KVTimelineEntry@@V?$_Uhash_compare@_KU?$hash@_K@std@@U?$equal_to@_K@2@@std@@V?$allocator@U?$pair@$$CB_KVTimelineEntry@@@std@@@3@$0A@@std@@@std@@QEAA@QEAV12@@Z;__cdecl std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64> >,class std::allocator<struct std::pair<unsigned __int64 const ,class TimelineEntry> >,0> >::_Clear_guard::_Clear_guard(class std::_Hash<class std::_Umap_traits<unsigned __int64,class TimelineEntry,class std::_Uhash_compare<unsigned __int64,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64;190075;190075;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > > * __ptr64 const & _;190075;190075;1
??1?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::~sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >(void) __ptr64;190075;190075;1
??$OnEndAnalysisPassImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnalysisPass;190075;190075;1
?OnSimpleEvent@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnSimpleEvent(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;949965;189993;5
??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z;??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z;569814;189938;3
??C?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBAPEBU?$GenericMember@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@1@XZ;struct rapidjson::GenericMember<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> > const * __ptr64 __cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::operator->(void)const __ptr64;189664;189664;1
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;189664;189664;1
??$_Refancy@PEAI$0A@@std@@YAPEAIPEAI@Z;unsigned int * __ptr64 __cdecl std::_Refancy<unsigned int * __ptr64,0>(unsigned int * __ptr64);189664;189664;1
??$move@AEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@0@AEAV10@@Z;189664;189664;1
??1?$unordered_map@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@U?$hash@_K@std@@U?$equal_to@_K@4@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@@std@@QEAA@XZ;__cdecl std::unordered_map<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::~unordered_map<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,struct std::hash<unsigned __int64>,struct std:;189664;189664;1
??$move@AEAV?$shared_ptr@VValue@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@VValue@cxxopts@@@0@AEAV10@@Z;??$move@AEAV?$shared_ptr@VValue@cxxopts@@@std@@@std@@YA$$QEAV?$shared_ptr@VValue@cxxopts@@@0@AEAV10@@Z;189664;189664;1
?GetCapacity@?$Stack@VCrtAllocator@rapidjson@@@internal@rapidjson@@QEBA_KXZ;unsigned __int64 __cdecl rapidjson::internal::Stack<class rapidjson::CrtAllocator>::GetCapacity(void)const __ptr64;189664;189664;1
?__autoclassinit2@?$match_results@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::match_results<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;189664;189664;1
?__autoclassinit2@?$vector@KV?$allocator@K@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<unsigned long,class std::allocator<unsigned long> >::__autoclassinit2(unsigned __int64) __ptr64;189664;189664;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@QEAAPEAVKeyValue@cxxopts@@XZ;class cxxopts::KeyValue * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<class cxxopts::KeyValue> >::_Release(void) __ptr64;189254;189254;1
??$move@AEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YA$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@AEAV10@@Z;??$move@AEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YA$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@AEAV10@@Z;189254;189254;1
??$forward@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YA$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@AEAV10@@Z;??$forward@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@YA$$QEAV?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@0@AEAV10@@Z;189254;189254;1
?get@?$_Ptr_base@VValue@cxxopts@@@std@@IEBAPEAVValue@cxxopts@@XZ;class cxxopts::Value * __ptr64 __cdecl std::_Ptr_base<class cxxopts::Value>::get(void)const __ptr64;189254;189254;1
??$_Unfancy@_K@std@@YAPEA_KPEA_K@Z;unsigned __int64 * __ptr64 __cdecl std::_Unfancy<unsigned __int64>(unsigned __int64 * __ptr64);189254;189254;1
?GetStringPointer@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@AEBAPEBDXZ;char const * __ptr64 __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetStringPointer(void)const __ptr64;188433;188433;1
??0?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@QEAA@XZ;__cdecl std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t>(void) __ptr64;188433;188433;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >(void) __ptr64;188433;188433;1
?__autoclassinit2@?$unordered_map@_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@U?$hash@_K@std@@U?$equal_to@_K@4@V?$allocator@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@4@@std@@QEAAX_K@Z;void __cdecl std::unordered_map<unsigned __int64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >::__autoclassinit2(unsigned __int64) __ptr64;188433;188433;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;188433;188433;1
??$addressof@PEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@PEAX@0@AEAPEAU10@@Z;struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64 * __ptr64 __cdecl std::addressof<struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > >,void * __ptr64> * __ptr64>(struct std::_List_node<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > ;188022;188022;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$shared_ptr@VOptionDetails@cxxopts@@@2@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,class std::shared_ptr<class cxxopts::OptionDetails> > > > >(void);188022;188022;1
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::max_size(class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >;188022;188022;1
?__autoclassinit2@?$shared_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::__autoclassinit2(unsigned __int64) __ptr64;188022;188022;1
??0?$allocator@_K@std@@QEAA@XZ;__cdecl std::allocator<unsigned __int64>::allocator<unsigned __int64>(void) __ptr64;188022;188022;1
??$addressof@$$CBU?$pair@$$CB_KU?$pair@KK@std@@@std@@@std@@YAPEBU?$pair@$$CB_KU?$pair@KK@std@@@0@AEBU10@@Z;struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > const * __ptr64 __cdecl std::addressof<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > const >(struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > const & __ptr64);188022;188022;1
??$_Get_unwrapped@AEBQEAUHelpOptionDetails@cxxopts@@@std@@YA@AEBQEAUHelpOptionDetails@cxxopts@@@Z;__cdecl std::_Get_unwrapped<struct cxxopts::HelpOptionDetails * __ptr64 const & __ptr64>(struct cxxopts::HelpOptionDetails * __ptr64 const & __ptr64);188022;188022;1
?OutputObjectPath@CompilerPass@Activities@BuildInsights@Cpp@Microsoft@@QEBAPEB_WXZ;wchar_t const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::CompilerPass::OutputObjectPath(void)const __ptr64;187612;187612;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(void) __ptr64;187612;187612;1
??1option_not_exists_exception@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::option_not_exists_exception::~option_not_exists_exception(void) __ptr64;187612;187612;1
?OnStopActivity@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@AEBVEventStack@234@PEBX@Z;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnStopActivity(class Microsoft::Cpp::BuildInsights::EventStack const & __ptr64,void const * __ptr64) __ptr64;937648;187529;5
??1_Ref_count_base@std@@UEAA@XZ;virtual __cdecl std::_Ref_count_base::~_Ref_count_base(void) __ptr64;187201;187201;1
??$_Get_unwrapped@AEBQEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YA@AEBQEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z;__cdecl std::_Get_unwrapped<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 const & __ptr64>(struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __ptr64 const & __ptr64);187201;187201;1
?ProcessorIndex@Event@BuildInsights@Cpp@Microsoft@@QEBAAEBGXZ;unsigned short const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::ProcessorIndex(void)const __ptr64;187201;187201;1
??$_Get_unwrapped@AEBQEAK@std@@YA@AEBQEAK@Z;__cdecl std::_Get_unwrapped<unsigned long * __ptr64 const & __ptr64>(unsigned long * __ptr64 const & __ptr64);187201;187201;1
?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Xlength(void);187201;187201;1
?__autoclassinit2@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::__autoclassinit2(unsigned __int64) __ptr64;187201;187201;1
?_Xlength@?$vector@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@V?$allocator@PEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@CAXXZ;static void __cdecl std::vector<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64,class std::allocator<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64> >::_Xlength(void);187201;187201;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;373992;186996;2
??$_Get_size_of_n@$00@std@@YA_K_K@Z;unsigned __int64 __cdecl std::_Get_size_of_n<1>(unsigned __int64);2429923;186917;13
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >,bool>(void) __ptr64;186791;186791;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$unordered_map@_KV?$vector@_KV?$allocator@_K@std@@@std@@U?$hash@_K@2@U?$equal_to@_K@2@V?$allocator@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::unordered_map<unsigned __int64,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> >,struct std::hash<unsigned __int64>,struct std::equal_to<unsigned __int64>,class std::allocator<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > > > > >,struct std::_Iterator_base;186791;186791;1
??$_Unfancy@VKeyValue@cxxopts@@@std@@YAPEAVKeyValue@cxxopts@@PEAV12@@Z;class cxxopts::KeyValue * __ptr64 __cdecl std::_Unfancy<class cxxopts::KeyValue>(class cxxopts::KeyValue * __ptr64);186791;186791;1
?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z;void __cdecl std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;186791;186791;1
??$_Get_unwrapped@AEAPEAU_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@YA@AEAPEAU_Grp_t@?$_Tgt_state_t@PEBD@0@@Z;__cdecl std::_Get_unwrapped<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 & __ptr64>(struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 & __ptr64);186791;186791;1
??1_Node_end_rep@std@@UEAA@XZ;virtual __cdecl std::_Node_end_rep::~_Node_end_rep(void) __ptr64;186791;186791;1
??$distance@PEAI@std@@YA_JPEAI0@Z;__int64 __cdecl std::distance<unsigned int * __ptr64>(unsigned int * __ptr64,unsigned int * __ptr64);186791;186791;1
?__autoclassinit2@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z;void __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::__autoclassinit2(unsigned __int64) __ptr64;186380;186380;1
?__autoclassinit2@?$vector@DV?$allocator@D@std@@@std@@QEAAX_K@Z;void __cdecl std::vector<char,class std::allocator<char> >::__autoclassinit2(unsigned __int64) __ptr64;186380;186380;1
?_Release@?$_Uninitialized_backout@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@QEAAPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@2@XZ;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 __cdecl std::_Uninitialized_backout<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64>::_Release(void) __ptr64;186380;186380;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned long> > >(void) __ptr64;186380;186380;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@1@XZ;struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;185970;185970;1
??$forward@UDataPerFile@FileInclusionTimesExporter@@@std@@YA$$QEAUDataPerFile@FileInclusionTimesExporter@@AEAU12@@Z;??$forward@UDataPerFile@FileInclusionTimesExporter@@@std@@YA$$QEAUDataPerFile@FileInclusionTimesExporter@@AEAU12@@Z;185970;185970;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAAPEAIXZ;unsigned int * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<unsigned int> >::_Release(void) __ptr64;185970;185970;1
??$forward@K@std@@YA$$QEAKAEAK@Z;??$forward@K@std@@YA$$QEAKAEAK@Z;185970;185970;1
??$_Refancy@PEBD$0A@@std@@YAPEBDPEBD@Z;char const * __ptr64 __cdecl std::_Refancy<char const * __ptr64,0>(char const * __ptr64);185970;185970;1
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ;__cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::operator bool(void)const __ptr64;929849;185969;5
?_Xlength@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@CAXXZ;static void __cdecl std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Xlength(void);185559;185559;1
??$_Unfancy_maybe_null@D@std@@YAPEADPEAD@Z;char * __ptr64 __cdecl std::_Unfancy_maybe_null<char>(char * __ptr64);185559;185559;1
??1?$pair@V?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@_N@std@@QEAA@XZ;__cdecl std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >,bool>::~pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >,bool>(void) __ptr64;185559;185559;1
??$forward@AEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@@std@@YAAEBV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@0@AEBV10@@Z;class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > const & __ptr64 __cdecl std::forward<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > > const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<str;185559;185559;1
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;185559;185559;1
?__autoclassinit2@?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@QEAAX_K@Z;void __cdecl Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >::__autoclassinit2(unsigned __int64) __ptr64;185559;185559;1
?__autoclassinit2@?$PrettyWriter@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::PrettyWriter<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::__autoclassinit2(unsigned __int64) __ptr64;185559;185559;1
??$move@AEAV?$tuple@AEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$tuple@AEAVTimelineEntry@@@0@AEAV10@@Z;??$move@AEAV?$tuple@AEAVTimelineEntry@@@std@@@std@@YA$$QEAV?$tuple@AEAVTimelineEntry@@@0@AEAV10@@Z;185559;185559;1
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ;__cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base12>::~_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base12>(void) __ptr64;185559;185559;1
?GetData@FileCompilationsAnalyzer@@QEBAAEBV?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UFileCompilationData@@@std@@@2@@std@@XZ;class std::unordered_map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct FileCompilationData,struct std::hash<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,struct std::equal_to<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct FileCompilat;185559;185559;1
??$_Get_unwrapped@AEBQEAUDataPerFunction@FunctionCompilationsExporter@@@std@@YA@AEBQEAUDataPerFunction@FunctionCompilationsExporter@@@Z;__cdecl std::_Get_unwrapped<struct FunctionCompilationsExporter::DataPerFunction * __ptr64 const & __ptr64>(struct FunctionCompilationsExporter::DataPerFunction * __ptr64 const & __ptr64);185559;185559;1
??$OnTraceInfoImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVTraceInfo@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnTraceInfoImpl<1;185559;185559;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::__autoclassinit2(unsigned __int64) __ptr64;185559;185559;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFileCompilationsAnalyzer@@XU?$Group@AEBVBackEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;185559;185559;1
?WriteStartObject@?$Writer@V?$BasicOStreamWrapper@V?$basic_ostream@DU?$char_traits@D@std@@@std@@@rapidjson@@U?$UTF8@D@2@U32@VCrtAllocator@2@$0A@@rapidjson@@IEAA_NXZ;bool __cdecl rapidjson::Writer<class rapidjson::BasicOStreamWrapper<class std::basic_ostream<char,struct std::char_traits<char> > >,struct rapidjson::UTF8<char>,struct rapidjson::UTF8<char>,class rapidjson::CrtAllocator,0>::WriteStartObject(void) __ptr64;185149;185149;1
??1runtime_error@std@@UEAA@XZ;virtual __cdecl std::runtime_error::~runtime_error(void) __ptr64;185149;185149;1
?Run@?$EntityCanMaterializeIdImpl@U?$Group@VThread@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@SA_NI@Z;static bool __cdecl Microsoft::Cpp::BuildInsights::Internal::EntityCanMaterializeIdImpl<struct Microsoft::Cpp::BuildInsights::Internal::Group<class Microsoft::Cpp::BuildInsights::Activities::Thread> >::Run(unsigned int);185149;185149;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::__autoclassinit2(unsigned __int64) __ptr64;185149;185149;1
?_Add_eol@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_eol(void) __ptr64;185149;185149;1
?_Size@?$_Buf@D@std@@QEBAIXZ;unsigned int __cdecl std::_Buf<char>::_Size(void)const __ptr64;185149;185149;1
?GetProcessId@TimelineEntry@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl TimelineEntry::GetProcessId(void)const __ptr64;184738;184738;1
??$move@AEAVKeyValue@cxxopts@@@std@@YA$$QEAVKeyValue@cxxopts@@AEAV12@@Z;??$move@AEAVKeyValue@cxxopts@@@std@@YA$$QEAVKeyValue@cxxopts@@AEAV12@@Z;184738;184738;1
??$move@AEAUDataPerFunction@FunctionCompilationsExporter@@@std@@YA$$QEAUDataPerFunction@FunctionCompilationsExporter@@AEAU12@@Z;??$move@AEAUDataPerFunction@FunctionCompilationsExporter@@@std@@YA$$QEAUDataPerFunction@FunctionCompilationsExporter@@AEAU12@@Z;184738;184738;1
?__autoclassinit2@?$shared_ptr@VOptionDetails@cxxopts@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class cxxopts::OptionDetails>::__autoclassinit2(unsigned __int64) __ptr64;184738;184738;1
?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ;static void __cdecl std::vector<unsigned int,class std::allocator<unsigned int> >::_Xlength(void);184738;184738;1
??1?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAA@XZ;__cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::~match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >(void) __ptr64;184328;184328;1
?_Throw_tree_length_error@std@@YAXXZ;void __cdecl std::_Throw_tree_length_error(void);184328;184328;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VFunctionCompilationsAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;184328;184328;1
??F?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ;class std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > & __ptr64 __cdecl std::_Vb_const_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > >::operator--(void) __ptr64;184328;184328;1
?__autoclassinit2@_Node_endif@std@@QEAAX_K@Z;void __cdecl std::_Node_endif::__autoclassinit2(unsigned __int64) __ptr64;184328;184328;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAAPEAU_Grp_t@?$_Tgt_state_t@PEBD@2@XZ;struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Release(void) __ptr64;184328;184328;1
?__autoclassinit2@?$shared_ptr@V?$standard_value@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@values@cxxopts@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class cxxopts::values::standard_value<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;184328;184328;1
??$move@AEAV?$sub_match@PEBD@std@@@std@@YA$$QEAV?$sub_match@PEBD@0@AEAV10@@Z;??$move@AEAV?$sub_match@PEBD@std@@@std@@YA$$QEAV?$sub_match@PEBD@0@AEAV10@@Z;184328;184328;1
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ;static int __cdecl std::_Narrow_char_traits<char,int>::eof(void);1105966;184327;6
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ;static void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void);2025963;184178;11
?_Xlength@?$vector@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@@std@@CAXXZ;static void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64> >::_Xlength(void);183917;183917;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KV?$vector@_KV?$allocator@_K@std@@@std@@@1@XZ;struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class std::vector<unsigned __int64,class std::allocator<unsigned __int64> > > > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;183507;183507;1
?Name@SymbolName@SimpleEvents@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::SimpleEvents::SymbolName::Name(void)const __ptr64;183507;183507;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;183507;183507;1
?_Add_bol@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEAAXXZ;void __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Add_bol(void) __ptr64;183507;183507;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFrontEndPass@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;183507;183507;1
?GetTimeline@BuildTimelineAnalyzer@@QEBAAEBVBuildTimeline@@XZ;class BuildTimeline const & __ptr64 __cdecl BuildTimelineAnalyzer::GetTimeline(void)const __ptr64;183507;183507;1
?StopTimestamp@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::StopTimestamp(void)const __ptr64;733204;183301;4
??$_Prev_iter@PEBD@std@@YAPEBDPEBD@Z;char const * __ptr64 __cdecl std::_Prev_iter<char const * __ptr64>(char const * __ptr64);183096;183096;1
?__autoclassinit2@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@QEAAX_K@Z;void __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::__autoclassinit2(unsigned __int64) __ptr64;183096;183096;1
??0?$allocator@_N@std@@QEAA@XZ;__cdecl std::allocator<bool>::allocator<bool>(void) __ptr64;183096;183096;1
?__autoclassinit2@_Node_back@std@@QEAAX_K@Z;void __cdecl std::_Node_back::__autoclassinit2(unsigned __int64) __ptr64;182685;182685;1
?_Xlength@?$vector@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@V?$allocator@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@@std@@CAXXZ;static void __cdecl std::vector<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer>,class std::allocator<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > >::_Xlength(void);182685;182685;1
?StartTimestamp@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEB_JXZ;__int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::StartTimestamp(void)const __ptr64;729511;182377;4
??$_Get_unwrapped@AEBQEAPEAVTimelineEntry@@@std@@YA@AEBQEAPEAVTimelineEntry@@@Z;__cdecl std::_Get_unwrapped<class TimelineEntry * __ptr64 * __ptr64 const & __ptr64>(class TimelineEntry * __ptr64 * __ptr64 const & __ptr64);364550;182275;2
??$iter_swap@PEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@PEAPEBU12@@std@@YAXPEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@0@Z;void __cdecl std::iter_swap<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64>(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64);182275;182275;1
?__autoclassinit2@?$GenericDocument@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@VCrtAllocator@2@@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::GenericDocument<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>,class rapidjson::CrtAllocator>::__autoclassinit2(unsigned __int64) __ptr64;181864;181864;1
?ThreadId@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::ThreadId(void)const __ptr64;181864;181864;1
??$_Get_unwrapped@AEBQEAUDataPerFile@FileInclusionTimesExporter@@@std@@YA@AEBQEAUDataPerFile@FileInclusionTimesExporter@@@Z;__cdecl std::_Get_unwrapped<struct FileInclusionTimesExporter::DataPerFile * __ptr64 const & __ptr64>(struct FileInclusionTimesExporter::DataPerFile * __ptr64 const & __ptr64);181864;181864;1
??1bad_weak_ptr@std@@UEAA@XZ;virtual __cdecl std::bad_weak_ptr::~bad_weak_ptr(void) __ptr64;181454;181454;1
?GetGroup@?$AnalyzerGroupCallbacks@V?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@CAPEAV?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@345@PEAX@Z;static class Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> > * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Internal::Analyze;181454;181454;1
??0?$allocator@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@QEAA@XZ;__cdecl std::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>::allocator<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64>(void) __ptr64;181454;181454;1
?_Get_ncap@?$_Matcher@PEBDDV?$regex_traits@D@std@@PEBD@std@@AEBAIXZ;unsigned int __cdecl std::_Matcher<char const * __ptr64,char,class std::regex_traits<char>,char const * __ptr64>::_Get_ncap(void)const __ptr64;181454;181454;1
?GetDigitsLut@internal@rapidjson@@YAPEBDXZ;char const * __ptr64 __cdecl rapidjson::internal::GetDigitsLut(void);181454;181454;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::__autoclassinit2(unsigned __int64) __ptr64;181043;181043;1
??0IRelogger@BuildInsights@Cpp@Microsoft@@QEAA@AEBV0123@@Z;__cdecl Microsoft::Cpp::BuildInsights::IRelogger::IRelogger(class Microsoft::Cpp::BuildInsights::IRelogger const & __ptr64) __ptr64;181043;181043;1
?_Xlength@?$vector@U_Grp_t@?$_Tgt_state_t@PEBD@std@@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@3@@std@@CAXXZ;static void __cdecl std::vector<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t,class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::_Xlength(void);181043;181043;1
??0DiyFp@internal@rapidjson@@QEAA@XZ;__cdecl rapidjson::internal::DiyFp::DiyFp(void) __ptr64;180633;180633;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct cxxopts::HelpOptionDetails> >::__autoclassinit2(unsigned __int64) __ptr64;180633;180633;1
?_Get_ncap@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@AEBAIXZ;unsigned int __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Get_ncap(void)const __ptr64;180633;180633;1
?OnEndAnalysisPass@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnEndAnalysisPass(void) __ptr64;902753;180550;5
?_Xlength@?$vector@VKeyValue@cxxopts@@V?$allocator@VKeyValue@cxxopts@@@std@@@std@@CAXXZ;static void __cdecl std::vector<class cxxopts::KeyValue,class std::allocator<class cxxopts::KeyValue> >::_Xlength(void);180222;180222;1
??$_Get_unwrapped@AEBQEAVKeyValue@cxxopts@@@std@@YA@AEBQEAVKeyValue@cxxopts@@@Z;__cdecl std::_Get_unwrapped<class cxxopts::KeyValue * __ptr64 const & __ptr64>(class cxxopts::KeyValue * __ptr64 const & __ptr64);180222;180222;1
??$_Get@D@_Cl_names@std@@QEBAPEBDXZ;char const * __ptr64 __cdecl std::_Cl_names::_Get<char>(void)const __ptr64;179812;179812;1
??1_Node_end_group@std@@UEAA@XZ;virtual __cdecl std::_Node_end_group::~_Node_end_group(void) __ptr64;179812;179812;1
?__autoclassinit2@BuildAnalyzer@@QEAAX_K@Z;void __cdecl BuildAnalyzer::__autoclassinit2(unsigned __int64) __ptr64;179812;179812;1
?OnBeginAnalysisPass@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnBeginAnalysisPass(void) __ptr64;898238;179647;5
??$addressof@VOptionDetails@cxxopts@@@std@@YAPEAVOptionDetails@cxxopts@@AEAV12@@Z;class cxxopts::OptionDetails * __ptr64 __cdecl std::addressof<class cxxopts::OptionDetails>(class cxxopts::OptionDetails & __ptr64);179401;179401;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@SA?AV?$allocator@U_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@2@AEBV32@@Z;static class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t> >::select_on_container_copy_construction(class std::allocator<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple;179401;179401;1
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<char> >::_Bxty::_Bxty(void) __ptr64;2506692;179049;14
?GetType@?$GenericValue@U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEBA?AW4Type@2@XZ;enum rapidjson::Type __cdecl rapidjson::GenericValue<struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::GetType(void)const __ptr64;178991;178991;1
??1_Root_node@std@@UEAA@XZ;virtual __cdecl std::_Root_node::~_Root_node(void) __ptr64;178991;178991;1
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::~_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >(void) __ptr64;178991;178991;1
?_Release@?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAAPEAUDataPerFunction@FunctionCompilationsExporter@@XZ;struct FunctionCompilationsExporter::DataPerFunction * __ptr64 __cdecl std::_Uninitialized_backout_al<class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::_Release(void) __ptr64;178580;178580;1
?__autoclassinit2@?$_Node_str@D@std@@QEAAX_K@Z;void __cdecl std::_Node_str<char>::__autoclassinit2(unsigned __int64) __ptr64;178580;178580;1
?SpecializationSymbolKey@TemplateInstantiation@Activities@BuildInsights@Cpp@Microsoft@@QEBAAEB_KXZ;unsigned __int64 const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Activities::TemplateInstantiation::SpecializationSymbolKey(void)const __ptr64;178580;178580;1
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ;static void __cdecl std::_String_val<struct std::_Simple_types<char> >::_Xran(void);890436;178087;5
??$forward@AEAVTimelineEntry@@@std@@YAAEAVTimelineEntry@@AEAV1@@Z;class TimelineEntry & __ptr64 __cdecl std::forward<class TimelineEntry & __ptr64>(class TimelineEntry & __ptr64);177759;177759;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@std@@@std@@SA?AV?$allocator@U_Grp_t@?$_Tgt_state_t@PEBD@std@@@2@AEBV32@@Z;static class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> >::select_on_container_copy_construction(class std::allocator<struct std::_Tgt_state_t<char const * __ptr64>::_Grp_t> const & __ptr64);177759;177759;1
?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ;static void __cdecl std::vector<unsigned __int64,class std::allocator<unsigned __int64> >::_Xlength(void);177759;177759;1
?_Get_traits@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEBAAEBV?$regex_traits@D@2@XZ;class std::regex_traits<char> const & __ptr64 __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Get_traits(void)const __ptr64;177349;177349;1
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >::~_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > >(void) __ptr64;177349;177349;1
?max_size@?$_Default_allocator_traits@V?$allocator@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@SA_KAEBV?$allocator@UDataPerFile@FileInclusionTimesExporter@@@2@@Z;static unsigned __int64 __cdecl std::_Default_allocator_traits<class std::allocator<struct FileInclusionTimesExporter::DataPerFile> >::max_size(class std::allocator<struct FileInclusionTimesExporter::DataPerFile> const & __ptr64);177349;177349;1
?__autoclassinit2@?$shared_ptr@V?$standard_value@_N@values@cxxopts@@@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<class cxxopts::values::standard_value<bool> >::__autoclassinit2(unsigned __int64) __ptr64;177349;177349;1
?__autoclassinit2@?$match_results@PEBDV?$allocator@V?$sub_match@PEBD@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::match_results<char const * __ptr64,class std::allocator<class std::sub_match<char const * __ptr64> > >::__autoclassinit2(unsigned __int64) __ptr64;177349;177349;1
?Significand@Double@internal@rapidjson@@QEBA_KXZ;unsigned __int64 __cdecl rapidjson::internal::Double::Significand(void)const __ptr64;177349;177349;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UDataPerFunction@FunctionCompilationsExporter@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct FunctionCompilationsExporter::DataPerFunction> >::__autoclassinit2(unsigned __int64) __ptr64;176938;176938;1
?__autoclassinit2@?$_Matcher@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@DV?$regex_traits@D@2@V12@@std@@QEAAX_K@Z;void __cdecl std::_Matcher<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > >,char,class std::regex_traits<char>,class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::__autoclassinit2(unsigned __int64) __ptr64;176528;176528;1
?ProcessId@Event@BuildInsights@Cpp@Microsoft@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Event::ProcessId(void)const __ptr64;176528;176528;1
??1_Node_capture@std@@UEAA@XZ;virtual __cdecl std::_Node_capture::~_Node_capture(void) __ptr64;176528;176528;1
?_Get_tmax@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEBAIXZ;unsigned int __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Get_tmax(void)const __ptr64;176528;176528;1
??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;??$RunFindId@$0A@@?$MatchEventImpl@V?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@$$V@Internal@BuildInsights@Cpp@Microsoft@@CA_NAEBVRawEvent@234@$$QEAV?$MaterializeMemberFuncHandler@VBuildTimelineAnalyzer@@XU?$Group@AEBVFunction@Activities@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@$$V@1234@@Z;176528;176528;1
?_Get_bmax@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@AEBAIXZ;unsigned int __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Get_bmax(void)const __ptr64;176117;176117;1
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::~_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(void) __ptr64;176117;176117;1
??0TraceInfo@BuildInsights@Cpp@Microsoft@@QEAA@AEBUTRACE_INFO_DATA_TAG@123@@Z;__cdecl Microsoft::Cpp::BuildInsights::TraceInfo::TraceInfo(struct Microsoft::Cpp::BuildInsights::TRACE_INFO_DATA_TAG const & __ptr64) __ptr64;176117;176117;1
??C?$RawPtrWrapper@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@QEBAPEAV?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@1234@XZ;class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> > * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPt;176117;176117;1
?_Xlength@?$vector@UHelpOptionDetails@cxxopts@@V?$allocator@UHelpOptionDetails@cxxopts@@@std@@@std@@CAXXZ;static void __cdecl std::vector<struct cxxopts::HelpOptionDetails,class std::allocator<struct cxxopts::HelpOptionDetails> >::_Xlength(void);176117;176117;1
?__autoclassinit2@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$shared_ptr@VOptionDetails@cxxopts@@@std@@VOptionValue@cxxopts@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<class std::shared_ptr<class cxxopts::OptionDetails> const ,class cxxopts::OptionValue> > > >::__autoclassinit2(unsigned __int64) __ptr64;176117;176117;1
?has_default@?$abstract_value@_N@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<bool>::has_default(void)const __ptr64;175706;175706;1
?__autoclassinit2@?$GenericMemberIterator@$00U?$UTF8@D@rapidjson@@V?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@2@@rapidjson@@QEAAX_K@Z;void __cdecl rapidjson::GenericMemberIterator<1,struct rapidjson::UTF8<char>,class rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator> >::__autoclassinit2(unsigned __int64) __ptr64;175706;175706;1
?OnBeginRelogging@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnBeginRelogging(void) __ptr64;878532;175706;5
??$_Get_unwrapped@AEBQEAD@std@@YA@AEBQEAD@Z;__cdecl std::_Get_unwrapped<char * __ptr64 const & __ptr64>(char * __ptr64 const & __ptr64);175706;175706;1
?_Str@?$_Buf@D@std@@QEBAPEBDXZ;char const * __ptr64 __cdecl std::_Buf<char>::_Str(void)const __ptr64;175706;175706;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::__autoclassinit2(unsigned __int64) __ptr64;175706;175706;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVTimelineEntry@@@std@@@std@@SA?AV?$allocator@PEAVTimelineEntry@@@2@AEBV32@@Z;static class std::allocator<class TimelineEntry * __ptr64> __cdecl std::_Default_allocator_traits<class std::allocator<class TimelineEntry * __ptr64> >::select_on_container_copy_construction(class std::allocator<class TimelineEntry * __ptr64> const & __ptr64);175296;175296;1
?__autoclassinit2@?$shared_ptr@_N@std@@QEAAX_K@Z;void __cdecl std::shared_ptr<bool>::__autoclassinit2(unsigned __int64) __ptr64;174885;174885;1
?__autoclassinit2@_Root_node@std@@QEAAX_K@Z;void __cdecl std::_Root_node::__autoclassinit2(unsigned __int64) __ptr64;174885;174885;1
??1bad_cast@std@@UEAA@XZ;virtual __cdecl std::bad_cast::~bad_cast(void) __ptr64;1048081;174680;6
??$_Get_unwrapped@AEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA@AEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64>(class std::_Vb_iterator<struct std::_Wrap_alloc<class std::allocator<unsigned int> > > const & __ptr64);174475;174475;1
??$_Pass_fn@U?$_Cmp_icase@V?$_Regex_traits@D@std@@@std@@$0A@@std@@YA?AU?$_Cmp_icase@V?$_Regex_traits@D@std@@@0@U10@@Z;struct std::_Cmp_icase<class std::_Regex_traits<char> > __cdecl std::_Pass_fn<struct std::_Cmp_icase<class std::_Regex_traits<char> >,0>(struct std::_Cmp_icase<class std::_Regex_traits<char> >);174475;174475;1
??$_Get_unwrapped@AEBQEAV?$sub_match@PEBD@std@@@std@@YA@AEBQEAV?$sub_match@PEBD@0@@Z;__cdecl std::_Get_unwrapped<class std::sub_match<char const * __ptr64> * __ptr64 const & __ptr64>(class std::sub_match<char const * __ptr64> * __ptr64 const & __ptr64);174475;174475;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDataPerFile@FileInclusionTimesExporter@@@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<struct FileInclusionTimesExporter::DataPerFile> > >(void) __ptr64;174064;174064;1
??1missing_argument_exception@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::missing_argument_exception::~missing_argument_exception(void) __ptr64;174064;174064;1
??$_Get_unwrapped@AEBQEBD@std@@YA@AEBQEBD@Z;__cdecl std::_Get_unwrapped<char const * __ptr64 const & __ptr64>(char const * __ptr64 const & __ptr64);174064;174064;1
?__autoclassinit2@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::__autoclassinit2(unsigned __int64) __ptr64;174064;174064;1
?OnEndRelogging@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnEndRelogging(void) __ptr64;869091;173818;5
??$_Get_unwrapped@AEBQEAI@std@@YA@AEBQEAI@Z;__cdecl std::_Get_unwrapped<unsigned int * __ptr64 const & __ptr64>(unsigned int * __ptr64 const & __ptr64);173654;173654;1
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@XZ;__cdecl std::_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >::~_Vector_const_iterator<class std::_Vector_val<struct std::_Simple_types<unsigned int> > >(void) __ptr64;173654;173654;1
?__autoclassinit2@Options@cxxopts@@QEAAX_K@Z;void __cdecl cxxopts::Options::__autoclassinit2(unsigned __int64) __ptr64;173654;173654;1
??$_Get_unwrapped@AEAPEAI@std@@YA@AEAPEAI@Z;__cdecl std::_Get_unwrapped<unsigned int * __ptr64 & __ptr64>(unsigned int * __ptr64 & __ptr64);173243;173243;1
?_Getmark@?$_Builder@PEBDDV?$regex_traits@D@std@@@std@@QEBAPEAV_Node_base@2@XZ;class std::_Node_base * __ptr64 __cdecl std::_Builder<char const * __ptr64,char,class std::regex_traits<char> >::_Getmark(void)const __ptr64;172833;172833;1
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ;__cdecl std::_String_val<struct std::_Simple_types<wchar_t> >::_Bxty::_Bxty(void) __ptr64;172422;172422;1
?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ;static void __cdecl std::vector<char,class std::allocator<char> >::_Xlength(void);172422;172422;1
??$_Get_unwrapped@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@std@@@std@@YA@AEBQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 const & __ptr64>(class std::_List_unchecked_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > > > * __ptr64 const & __ptr64);172422;172422;1
??$_Get_unwrapped@AEBQEAU_Loop_vals_t@std@@@std@@YA@AEBQEAU_Loop_vals_t@0@@Z;__cdecl std::_Get_unwrapped<struct std::_Loop_vals_t * __ptr64 const & __ptr64>(struct std::_Loop_vals_t * __ptr64 const & __ptr64);172422;172422;1
??$_Get_unwrapped@AEBQEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@std@@YA@AEBQEAV?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@BuildInsights@Cpp@Microsoft@@@Z;__cdecl std::_Get_unwrapped<class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 const & __ptr64>(class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> * __ptr64 const & __ptr64);172012;172012;1
??$_Pass_fn@V<lambda_add3c17bb2999790cf84673b171b0d80>@@$0A@@std@@YA?AV<lambda_add3c17bb2999790cf84673b171b0d80>@@V1@@Z;class <lambda_add3c17bb2999790cf84673b171b0d80> __cdecl std::_Pass_fn<class <lambda_add3c17bb2999790cf84673b171b0d80>,0>(class <lambda_add3c17bb2999790cf84673b171b0d80>);171191;171191;1
?has_implicit@?$abstract_value@_N@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<bool>::has_implicit(void)const __ptr64;171191;171191;1
??1OptionSpecException@cxxopts@@UEAA@XZ;virtual __cdecl cxxopts::OptionSpecException::~OptionSpecException(void) __ptr64;171191;171191;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<unsigned int> >::__autoclassinit2(unsigned __int64) __ptr64;171191;171191;1
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KVTimelineEntry@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CB_KVTimelineEntry@@@1@XZ;struct std::pair<unsigned __int64 const ,class TimelineEntry> const & __ptr64 __cdecl std::_List_unchecked_const_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,class TimelineEntry> > >,struct std::_Iterator_base0>::operator*(void)const __ptr64;171191;171191;1
??1_Node_rep@std@@UEAA@XZ;virtual __cdecl std::_Node_rep::~_Node_rep(void) __ptr64;170780;170780;1
??$destroy@U?$pair@$$CB_KU?$pair@KK@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CB_KU?$pair@KK@std@@@std@@PEAX@std@@@1@QEAU?$pair@$$CB_KU?$pair@KK@std@@@1@@Z;static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > >::destroy<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> > >(class std::allocator<struct std::_List_node<struct std::pair<unsigned __int64 const ,struct std::pair<unsigned long,unsigned long> >,void * __ptr64> > & __ptr64,struct std::pair<unsigned __int64 const ,stru;170370;170370;1
??$_Get_unwrapped@AEBQEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@YA@AEBQEAU_Grp_t@?$_Tgt_state_t@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@0@@Z;__cdecl std::_Get_unwrapped<struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const & __ptr64>(struct std::_Tgt_state_t<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > >::_Grp_t * __ptr64 const & __ptr64);169959;169959;1
??$OnStartActivityImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStartActivityIm;169959;169959;1
?GetRoots@BuildTimeline@@QEBAAEBV?$vector@PEAVTimelineEntry@@V?$allocator@PEAVTimelineEntry@@@std@@@std@@XZ;class std::vector<class TimelineEntry * __ptr64,class std::allocator<class TimelineEntry * __ptr64> > const & __ptr64 __cdecl BuildTimeline::GetRoots(void)const __ptr64;339918;169959;2
?OnBeginReloggingPass@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnBeginReloggingPass(void) __ptr64;848153;169630;5
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@U_Loop_vals_t@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<struct std::_Loop_vals_t> >::__autoclassinit2(unsigned __int64) __ptr64;169548;169548;1
?__autoclassinit2@TimelineEntry@@QEAAX_K@Z;void __cdecl TimelineEntry::__autoclassinit2(unsigned __int64) __ptr64;169548;169548;1
??$OnBeginAnalysisImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAnalysisIm;169138;169138;1
??$OnSimpleEventImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnSimpleEventImpl;168727;168727;1
??$_Get_unwrapped@AEBQEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@std@@YA@AEBQEAPEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@@Z;__cdecl std::_Get_unwrapped<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const & __ptr64>(class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64 * __ptr64 const & __ptr64);168727;168727;1
?OnEndReloggingPass@IRelogger@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IRelogger::OnEndReloggingPass(void) __ptr64;843638;168727;5
?__autoclassinit2@ProcessIdThreadIdRecalculation@@QEAAX_K@Z;void __cdecl ProcessIdThreadIdRecalculation::__autoclassinit2(unsigned __int64) __ptr64;168727;168727;1
??$OnStopActivityImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@AEBVEventStack@123@@Z;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnStopActivityImp;168727;168727;1
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@V?$sub_match@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_Uninitialized_backout_al<class std::allocator<class std::sub_match<class std::_String_const_iterator<class std::_String_val<struct std::_Simple_types<char> > > > > >::__autoclassinit2(unsigned __int64) __ptr64;167496;167496;1
?OnBeginAnalysis@IAnalyzer@BuildInsights@Cpp@Microsoft@@UEAA?AW4AnalysisControl@234@XZ;virtual enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::OnBeginAnalysis(void) __ptr64;836249;167249;5
?__autoclassinit2@_Node_if@std@@QEAAX_K@Z;void __cdecl std::_Node_if::__autoclassinit2(unsigned __int64) __ptr64;166675;166675;1
?count@OptionValue@cxxopts@@QEBA_KXZ;unsigned __int64 __cdecl cxxopts::OptionValue::count(void)const __ptr64;166675;166675;1
??$_Get_unwrapped@AEBQEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@YA@AEBQEAPEBUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@Z;__cdecl std::_Get_unwrapped<struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 const & __ptr64>(struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset const * __ptr64 * __ptr64 const & __ptr64);166675;166675;1
?_Getcoll@?$_Regex_traits@D@std@@QEBAPEBV?$collate@D@2@XZ;class std::collate<char> const * __ptr64 __cdecl std::_Regex_traits<char>::_Getcoll(void)const __ptr64;165443;165443;1
?long_name@OptionDetails@cxxopts@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ;class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64 __cdecl cxxopts::OptionDetails::long_name(void)const __ptr64;165033;165033;1
?__autoclassinit2@?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CB_KUEntryWithLocalThreadIdOffsetMaxChildOffset@ProcessIdThreadIdRecalculation@@@std@@@std@@@std@@@std@@QEAAX_K@Z;void __cdecl std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned __int64 const ,struct ProcessIdThreadIdRecalculation::EntryWithLocalThreadIdOffsetMaxChildOffset> > > >::__autoclassinit2(unsigned __int64) __ptr64;164212;164212;1
??$OnEndAnalysisImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnEndAnalysisImpl;164212;164212;1
?_Get@?$basic_regex@DV?$regex_traits@D@std@@@std@@QEBAPEAV_Root_node@2@XZ;class std::_Root_node * __ptr64 __cdecl std::basic_regex<char,class std::regex_traits<char> >::_Get(void)const __ptr64;163801;163801;1
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA?AV?$allocator@I@2@AEBV32@@Z;static class std::allocator<unsigned int> __cdecl std::_Default_allocator_traits<class std::allocator<unsigned int> >::select_on_container_copy_construction(class std::allocator<unsigned int> const & __ptr64);163801;163801;1
?EventName@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAPEBDXZ;char const * __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::EventName(void)const __ptr64;162980;162980;1
??$_Pass_fn@V<lambda_b68333ea59420deb7dec0041da4f8963>@@$0A@@std@@YA?AV<lambda_b68333ea59420deb7dec0041da4f8963>@@V1@@Z;class <lambda_b68333ea59420deb7dec0041da4f8963> __cdecl std::_Pass_fn<class <lambda_b68333ea59420deb7dec0041da4f8963>,0>(class <lambda_b68333ea59420deb7dec0041da4f8963>);162159;162159;1
?__autoclassinit2@_Node_base@std@@QEAAX_K@Z;void __cdecl std::_Node_base::__autoclassinit2(unsigned __int64) __ptr64;161338;161338;1
?Free@?$MemoryPoolAllocator@VCrtAllocator@rapidjson@@@rapidjson@@SAXPEAX@Z;static void __cdecl rapidjson::MemoryPoolAllocator<class rapidjson::CrtAllocator>::Free(void * __ptr64);160927;160927;1
?is_container@?$abstract_value@_N@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<bool>::is_container(void)const __ptr64;160517;160517;1
??$OnBeginAnalysisPassImpl@$00@?$StaticAnalyzerGroup@V?$AnalyzerSmartPtrImpl@V?$DynamicSmartPtrAnalyzerGroupImpl@PEAVIAnalyzer@BuildInsights@Cpp@Microsoft@@V?$RawPtrWrapper@VIAnalyzer@BuildInsights@Cpp@Microsoft@@@Internal@234@@Internal@BuildInsights@Cpp@Microsoft@@VRawPtrWrapper@2345@@Internal@BuildInsights@Cpp@Microsoft@@@BuildInsights@Cpp@Microsoft@@AEAA?AW4AnalysisControl@123@XZ;enum Microsoft::Cpp::BuildInsights::AnalysisControl __cdecl Microsoft::Cpp::BuildInsights::StaticAnalyzerGroup<class Microsoft::Cpp::BuildInsights::Internal::AnalyzerSmartPtrImpl<class Microsoft::Cpp::BuildInsights::Internal::DynamicSmartPtrAnalyzerGroupImpl<class Microsoft::Cpp::BuildInsights::IAnalyzer * __ptr64,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper<class Microsoft::Cpp::BuildInsights::IAnalyzer> >,class Microsoft::Cpp::BuildInsights::Internal::RawPtrWrapper> >::OnBeginAnalysisPa;160106;160106;1
??$_Unfancy_maybe_null@I@std@@YAPEAIPEAI@Z;unsigned int * __ptr64 __cdecl std::_Unfancy_maybe_null<unsigned int>(unsigned int * __ptr64);160106;160106;1
?is_boolean@?$abstract_value@_N@values@cxxopts@@UEBA_NXZ;virtual bool __cdecl cxxopts::values::abstract_value<bool>::is_boolean(void)const __ptr64;158054;158054;1
?ProcessId@RawEvent@BuildInsights@Cpp@Microsoft@@QEBAAEBKXZ;unsigned long const & __ptr64 __cdecl Microsoft::Cpp::BuildInsights::RawEvent::ProcessId(void)const __ptr64;153538;153538;1
??__Foption_specifier@?A0xe8409837@cxxopts@@YAXXZ;void __cdecl cxxopts::`anonymous namespace'::`dynamic atexit destructor for 'option_specifier''(void);144506;144506;1
??__Finteger_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic atexit destructor for 'integer_pattern''(void);143685;143685;1
??__Fs_defaultOutputPathBuildTimeline@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultOutputPathBuildTimeline''(void);139169;139169;1
??__Fs_defaultOutputPathFunctionCompilations@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultOutputPathFunctionCompilations''(void);137527;137527;1
??__Ftruthy_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic atexit destructor for 'truthy_pattern''(void);136296;136296;1
??__Ffalsy_pattern@?A0xe8409837@values@cxxopts@@YAXXZ;void __cdecl cxxopts::values::`anonymous namespace'::`dynamic atexit destructor for 'falsy_pattern''(void);135885;135885;1
??__Fs_defaultOutputPathFileInclusionGraph@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultOutputPathFileInclusionGraph''(void);135885;135885;1
??__Fs_defaultoutputPathFileInclusionTimes@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultoutputPathFileInclusionTimes''(void);135474;135474;1
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z;[thunk]:virtual void * __ptr64 __cdecl std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'`vtordisp{4294967292,0}' (unsigned int) __ptr64;662594;132518;5
??__Fs_defaultOutputPathFileCompilations@?A0xe8409837@@YAXXZ;void __cdecl `anonymous namespace'::`dynamic atexit destructor for 's_defaultOutputPathFileCompilations''(void);132190;132190;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BGA@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{96,{flat}}' }';96064;96064;1
??_9IRelogger@BuildInsights@Cpp@Microsoft@@$BBI@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IRelogger::`vcall'{24,{flat}}' }';86211;86211;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BFA@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{80,{flat}}' }';80053;80053;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BEI@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{72,{flat}}' }';78411;78411;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BHI@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{120,{flat}}' }';70200;70200;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BGI@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{104,{flat}}' }';69379;69379;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BHA@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{112,{flat}}' }';68148;68148;1
??_9IAnalyzer@BuildInsights@Cpp@Microsoft@@$BFI@AA;[thunk]: __cdecl Microsoft::Cpp::BuildInsights::IAnalyzer::`vcall'{88,{flat}}' }';64453;64453;1
